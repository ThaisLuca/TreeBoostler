Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.8236661764788199;  // std dev = 0.182, 174.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=168 */
%   else if ( follows(A, D), recursion_accounttype(D, B) )
%   | then if ( follows(D, E), recursion_accounttype(E, B) )
%   | | then if ( follows(F, A), follows(A, E) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( follows(G, D), follows(D, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.1236139828336186;  // std dev = 2.427, 329.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=6 */
%   | | | else return 0.02716301960655417;  // std dev = 4.466, 142.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=24 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.14786856126773526;  // std dev = 4.692, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.21109011157010057;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then return 0.709713494748777;  // std dev = 0.128, 120.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=118 */
%   | else return 0.6697763878305362;  // std dev = 0.231, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then if ( follows(F, A), follows(E, F) )
%   | | | then return 0.586146207341034;  // std dev = 1.318, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.7481340087996677;  // std dev = 0.110, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.37830805508736676;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return -0.10618250626968612;  // std dev = 2.423, 282.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=6 */
%   | | | else return -0.005654993674760624;  // std dev = 4.544, 172.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=24 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.11110873697770883;  // std dev = 4.751, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.18867163195006756;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then return 0.5516365132419498;  // std dev = 0.131, 171.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=168 */
%   else if ( follows(D, A) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | | then return 0.600398124099931;  // std dev = 1.375, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.11610980641859646;  // std dev = 1.74e-07, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | | else if ( follows(D, G), recursion_accounttype(G, B) )
%   | | | then return 0.7108811347795453;  // std dev = 1.642, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.14448944464154997;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.7348288464456022;  // std dev = 1.346, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.16663086778639635;  // std dev = 0.854, 88.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.20471859264417647;  // std dev = 2.798, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.1077772490971827;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, A), follows(D, C) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.42082229773688384;  // std dev = 0.101, 98.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=97 */
%   | | else return 0.37970325785808445;  // std dev = 0.220, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return 0.4367266856209069;  // std dev = 0.024, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.3982239541260487;  // std dev = 0.937, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.7260344532569948;  // std dev = 0.944, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.11161063138018394;  // std dev = 0.209, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then return 0.4224139558717752;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.0647629495546256;  // std dev = 4.051, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.130076691112138;  // std dev = 3.931, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.3202258419791147;  // std dev = 0.119, 139.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=137 */
%   | else return 0.27349912531662773;  // std dev = 0.238, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.25778941619119927;  // std dev = 1.291, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.5757638335346033;  // std dev = 0.805, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.10169163603817874;  // std dev = 0.201, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.6104977296685625;  // std dev = 1.023, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.18443112953409052;  // std dev = 0.334, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( follows(A, J), recursion_accounttype(J, B) )
%   | | | then return 0.39930499894607974;  // std dev = 0.276, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09015224434160905;  // std dev = 4.099, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(C, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( follows(E, A), follows(E, C) )
%   | | | then return 0.22320392812913836;  // std dev = 1.950, 91.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=87 */
%   | | | else return 0.26821233149352663;  // std dev = 0.019, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.10896688093154228;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2527830609135664;  // std dev = 0.138, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   else if ( follows(F, A) )
%   | then return -0.04083673069731032;  // std dev = 0.158, 444.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=48 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( recursion_accounttype(H, B) )
%   | | | then return 0.4958605974450123;  // std dev = 1.152, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.14490414257850012;  // std dev = 0.695, 83.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=1 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.01571331118643639;  // std dev = 2.823, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.060566348275887326;  // std dev = 2.589, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( tweets(D, C), recursion_accounttype(D, B) )
%   | then if ( follows(A, E), recursion_accounttype(E, B) )
%   | | then return 0.17282928121647284;  // std dev = 0.226, 137.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=129 */
%   | | else return 0.35461993662841823;  // std dev = 0.199, 86.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | else return -0.09962012407294682;  // std dev = 0.642, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( recursion_accounttype(G, B) )
%   | | then if ( recursion_accounttype(F, B) )
%   | | | then return 0.165667702523538;  // std dev = 1.302, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.46227272313634654;  // std dev = 0.579, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.10983392447456304;  // std dev = 0.076, 96.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then return 0.023926213641738275;  // std dev = 0.193, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.16053718902968517;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.17084600748334727;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(A, D) )
%   | then return 0.17806879432557252;  // std dev = 0.119, 139.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=137 */
%   | else if ( tweets(A, E), follows(A, C) )
%   | | then return 0.010077652156921645;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.12693575451954636;  // std dev = 0.974, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.22660538721740275;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(G, A) )
%   | then return -0.040485964840041445;  // std dev = 0.140, 453.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=48 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.2536365436241715;  // std dev = 1.841, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.11666838451178177;  // std dev = 0.723, 90.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.04720361396070053;  // std dev = 1.872, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.1317034844059994;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), follows(D, A) )
%   | then return 0.13793539580745284;  // std dev = 0.168, 138.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=134 */
%   | else if ( follows(E, C), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, C) )
%   | | | then return -0.11978697599948655;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.16207112619293584;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1262968064888503;  // std dev = 0.188, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( follows(G, A) )
%   | then return -0.03980872437886217;  // std dev = 0.148, 459.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=48 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.34583703650538444;  // std dev = 1.297, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return -0.15375774908624615;  // std dev = 0.700, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( tweets(A, J) )
%   | | | then return -0.04548762136288628;  // std dev = 1.288, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.0035391832683498462;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( tweets(A, F), tweets(C, F) )
%   | | | then return 0.11462930719140099;  // std dev = 2.146, 102.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=97 */
%   | | | else return 0.17325028509470353;  // std dev = 0.235, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( follows(D, C), tweets(C, G) )
%   | | | then return -0.06355701179024895;  // std dev = 0.801, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.11882025401102067;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.26672671774683654;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( follows(H, A), recursion_accounttype(H, B) )
%   | then return 0.10870463901270294;  // std dev = 0.157, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else if ( follows(I, A) )
%   | | then return -0.045570076137481486;  // std dev = 0.125, 444.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=30 */
%   | | else if ( follows(A, J) )
%   | | | then return -0.005609227451099175;  // std dev = 2.820, 160.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
%   | | | else return -0.02571375289685683;  // std dev = 2.559, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.12285481745245352;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18072958026080244;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7374506595744977;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7374506595744976;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.11879279658172243;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.10723201841692384;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15727513235797777;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.2475349020364707;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.48238639486202434;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3365230505895468;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.050808764875261044;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.800530749571274;  // std dev = 0.258, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1722287712259494;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3118376591099181;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.09971644698870555;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15171185756164488;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.45336670118470834;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.45336670118470823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.45336670118470823;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3593576766778197;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6934850870341579;  // std dev = 0.977, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.16096756357722058;  // std dev = 0.096, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10325920225989312;  // std dev = 3.714, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.16163274851405843;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3451462699351114;  // std dev = 2.11e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.28140342884285885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4936635764140085;  // std dev = 1.413, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return -0.1413098728654216;  // std dev = 0.085, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4011044733994607;  // std dev = 2.942, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | | else return -0.2318965657379719;  // std dev = 0.126, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5501803283988569;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2717840404876628;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2717840404876628;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.02653157529406366;  // std dev = 2.226, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.06239234219587002;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.09774363011550223;  // std dev = 3.255, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.3277310813017647;  // std dev = 1.520, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1105444237184771;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.1754841113061119;  // std dev = 3.804, 83.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=43 */
%   | else return -0.16761234528371646;  // std dev = 0.420, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13491743071319315;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.39071736162143533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.06951093250052146;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.20295637910590836;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.19265376193231376;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return -0.009187207998728327;  // std dev = 2.173, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6301131325490839;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04970726550758434;  // std dev = 3.155, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | else if ( location(A, J) )
%   | | | then return 0.04720600827150861;  // std dev = 1.568, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.052241368352938064;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.060131107967293894;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.3359065518751007;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then return -0.008702574099159938;  // std dev = 2.199, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5022118490372968;  // std dev = 1.569, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return -0.26665114798571526;  // std dev = 0.716, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.16369262041260887;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20782261747431607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.1960629919993592;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.018154929721574897;  // std dev = 2.080, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.028532720456384157;  // std dev = 2.983, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985283
   AUC PR    = 0.225872
   CLL	      = -0.197134
   Precision = 0.236842 at threshold = 0.5
   Recall    = 0.517241
   F1        = 0.32491


Total learning time: 2.498 seconds
Total inference time: 7.828 seconds
AUC ROC: 0.985283


Results scoring model
   AUC ROC   = 0.987764
   AUC PR    = 0.232389
   CLL	      = -0.204693
   Precision = 0.232394 at threshold = 0.5
   Recall    = 0.589286
   F1        = 0.333333


Total scoring time: 8.313 seconds
Parameter learned model CLL: -0.204693


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.953, 1, 10], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [2.572, 25, 9], 'false,false,false,true': [3.681, 42, 20], 'false,false,false,false': [2.225, 13, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [2.422, 22, 8], 'false,false,true,false': [2.572, 25, 9], 'false,false,false,true': [3.681, 42, 20], 'false,false,false,false': [2.152, 11, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.953, 1, 10], 'false,true,true,true': [1.0, 2, 2], 'false,true,true,false': [2.171, 22, 6], 'false,true,false,true': [0.258, 0, 10], 'false,true,false,false': [1.49e-08, 23, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [3.678, 47, 19], 'false,false,false,true': [2.256, 14, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.977, 1, 17], 'false,true,false': [0.096, 56, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.714, 45, 20], 'false,false,false,false': [2.191, 12, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [2.11e-08, 0, 10], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.413, 2, 17], 'false,true,false': [0.085, 55, 0], 'false,false,true,true': [2.942, 14, 24], 'false,false,true,false': [0.126, 40, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.917, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.05e-08, 0, 7], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [5.27e-09, 0, 3], 'false,true': [2.226, 52, 18], 'false,false,true,true': [0.836, 3, 1], 'false,false,true,false': [3.255, 36, 19], 'false,false,false,true': [1.52, 4, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.943, 1, 8], 'true,true,false': [3.804, 40, 43], 'true,false': [0.42, 71, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.954, 3, 2], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.0, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [3.73e-09, 0, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.173, 65, 18], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.155, 41, 19], 'false,false,false,true': [1.568, 8, 6], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.942, 1, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.001, 2, 2], 'false,true': [2.199, 61, 18], 'false,false,true,true': [1.569, 3, 28], 'false,false,true,false': [0.716, 48, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true': [0.049, 0, 3], 'false,false,true': [2.08, 49, 17], 'false,false,false,true': [2.983, 52, 28], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.0826446280991734, 0.20484375000000035], 'false': [0.0, 0.20291918832324796], 'false,false': [0.1736495844875341, 0.223544781535783], 'false,false,false': [0.2185223725286156, 0.23582766439909303], 'false,false,true': [0.15419501133786864, 0.19463667820069214], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}, {'': [8.881784197001253e-17, 0.21325811534519992], 'false': [0.18546996371782487, 0.21337699534425594], 'false,false': [0.19510068433959604, 0.22590675363968285], 'false,false,false': [0.21852237252861567, 0.24376731301939017], 'false,false,true': [0.19555555555555543, 0.19463667820069208], 'false,true': [0.0, 0.0], 'true': [-6.344131569286608e-17, -7.401486830834377e-17], 'false,true,true': [nan, 0.0]}, {'': [0.08264462809917351, 0.20601363515850113], 'false': [0.19512338162074933, 0.2138150829408657], 'false,false': [0.20761245674740547, 0.23140495867768598], 'false,false,false': [0.23140495867768598, nan], 'false,false,true': [0.25, 0.20500459136822835], 'false,true': [0.1875000000000001, 0.20187687734596238], 'false,true,false': [0.006678393364772184, 9.654113257610057e-18], 'false,true,true': [0.25, 0.16836734693877559]}, {'': [-1.7763568394002506e-16, 0.1864162255098278], 'false': [0.1467246402583109, 0.21939909545445588], 'false,false': [nan, 0.21939909545445588], 'false,false,false': [0.212258597734927, 0.23999999999999994], 'false,true': [0.055760939011939105, 0.00016624385625230165], 'false,true,true': [0.0, 0.0529829202017085], 'true': [-1.3877787807814457e-16, 0.0], 'true,true': [-9.516197353929913e-17, 0.0]}, {'': [4.4408920985006264e-17, 0.16704918880096348], 'false': [0.10353305762753964, 0.22141760293320886], 'false,false': [0.21131217807245514, 0.16819543755020838], 'false,false,true': [0.227844536859805, 0.00039833477749023904], 'false,false,false': [nan, 0.16819543755020838], 'false,true': [0.1020151776475589, 0.0001314242743889128], 'false,true,true': [0.0, 0.10513167901140012], 'true': [4.4408920985006264e-17, nan]}, {'': [-1.1102230246251566e-17, 0.13896225084527852], 'false': [0.07079320721958186, 0.20110067871370235], 'false,false': [0.1930534814509907, 0.19246398462250422], 'false,false,true': [0.1747125611998651, 0.19264882217859677], 'false,false,false': [0.19246398462250422, nan], 'true': [1.586032892321652e-17, 9.25185853854297e-18], 'true,true': [1.586032892321652e-17, nan], 'true,true,true': [1.586032892321652e-17, nan]}, {'': [0.12342105405897194, 0.2118639841647342], 'false': [0.18190090463566436, 0.229418067043112], 'false,false': [0.0, 0.24], 'false,false,false': [0.24, nan], 'false,true': [nan, 0.18190090463566436], 'true': [0.16736185683184404, 0.002480859986146455], 'true,true': [0.09881679577850898, 0.17438190525683747]}, {'': [2.2290223331405955e-05, 0.1157569700508369], 'false': [0.05690552758549375, 0.1750223175512557], 'false,false': [0.1686046615590036, 0.1945144885631496], 'false,false,false': [0.17566708917696647, 0.24000000000000005], 'false,false,true': [0.0, 0.1658922643254865], 'true': [0.0, 4.625929269271485e-18], 'true,false': [nan, 4.625929269271485e-18], 'true,false,false': [4.625929269271485e-18, nan]}, {'': [0.1786920261206713, 0.1203775750294835], 'true': [0.09858242519805555, 0.2503530549564827], 'true,false': [nan, 0.2503530549564827], 'false': [0.061197713634964415, 0.17860009193676782], 'false,false': [0.17860009193676782, nan], 'false,false,true': [0.07942004378290063, 0.01068349893579256]}, {'': [0.00021300307007287092, 0.08938507830891133], 'false': [0.000788572698618567, 0.09060836760478178], 'false,false': [0.06558190487009188, 0.11120651371928898], 'false,false,false': [0.11120651371928898, nan], 'true': [3.96508223080413e-18, 0.0], 'true,true': [3.96508223080413e-18, nan], 'true,true,true': [3.96508223080413e-18, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,false;interaction(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03658790700575088;  // std dev = 2.317, 57.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.17560925255982957;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3767019134169659;  // std dev = 0.939, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02795350474644596;  // std dev = 3.354, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else if ( location(A, I) )
%   | | | then return 0.20655022800814724;  // std dev = 3.872, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
%   | | | else return 0.4938540716492537;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.5553664367462843;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1553664367462845;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.07664447670959368;  // std dev = 1.069, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.155553229468549;  // std dev = 1.944, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.8066122318457575;  // std dev = 0.273, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15607260502942416;  // std dev = 0.139, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.44960888291061774;  // std dev = 2.899, 37.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=24 */
%   | | | else return -0.19935955319296764;  // std dev = 0.043, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.542839808681215;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.42991770335808566;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5167465377565161;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3579588002184031;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7175989507658981;  // std dev = 0.288, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.1451671228613705;  // std dev = 0.027, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(A, J), enzyme(A, K) )
%   | | | then return -0.0688052892493868;  // std dev = 1.721, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.10954128530549072;  // std dev = 3.001, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.34839171705668004;  // std dev = 1.516, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.22097882654464387;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.31801556922145563;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3963678549452612;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2804575031631157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3881081585852671;  // std dev = 1.858, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.14799007417664156;  // std dev = 0.155, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.12519392685637895;  // std dev = 0.131, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31503949501634854;  // std dev = 2.960, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | | else return -0.1922400299185115;  // std dev = 0.186, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return 0.2552225913020146;  // std dev = 1.108, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then return 0.25333156566595744;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.30643524068380246;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( location(E, G), phenotype(A, F) )
%   | | | then return -0.10310481835787733;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07225876963110343;  // std dev = 0.650, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.1060848811332054;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, J) )
%   | | | then return 0.11432414769287261;  // std dev = 2.953, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return -0.15447848059577587;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09842588814211967;  // std dev = 2.039, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.03564852536844642;  // std dev = 1.654, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(F, G), phenotype(E, H) )
%   | | | then return 0.2905729721022471;  // std dev = 1.949, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | | else return 0.11723017881930704;  // std dev = 1.898, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.22207903944811658;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.3336143307504052;  // std dev = 0.787, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then return -0.10671408897020307;  // std dev = 0.012, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.16967748932301943;  // std dev = 0.056, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(L, A), interaction(M, L) )
%   | then return 0.028115820639532788;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, N) )
%   | | then return 0.006672193348610259;  // std dev = 0.457, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.47620772425669644;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.052318141043704997;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.20057338879702166;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.11479330832322442;  // std dev = 1.587, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return -0.10717142720113658;  // std dev = 0.143, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.05272834958205469;  // std dev = 0.426, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.09941411222139857;  // std dev = 0.737, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.021671801547698724;  // std dev = 3.145, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else return 0.13314653845104454;  // std dev = 0.366, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.024466624624790507;  // std dev = 0.204, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(G, C), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.11810878610268662;  // std dev = 1.327, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.12048186014313744;  // std dev = 0.456, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(C, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5430757125878037;  // std dev = 0.218, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.28842845599181277;  // std dev = 0.416, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(A, K) )
%   | then return 0.05337565899233344;  // std dev = 0.234, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return -0.21991830552299332;  // std dev = 0.975, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.05713853656793662;  // std dev = 1.286, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.035525253121351824;  // std dev = 1.527, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.16074732367366362;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18170256309331348;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15214512010620673;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17195344519455466;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( location(I, H) )
%   | | | then return -0.008492964590165662;  // std dev = 2.821, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
%   | | | else return 0.0844882590359916;  // std dev = 1.351, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07184284746938933;  // std dev = 0.993, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.18605736758013586;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.972063
   AUC PR    = 0.226657
   CLL	      = -0.181295
   Precision = 0.26087 at threshold = 0.5
   Recall    = 0.62069
   F1        = 0.367347


Total learning time: 9.31 seconds
Total inference time: 14.501 seconds
AUC ROC: 0.972063


Results scoring model
   AUC ROC   = 0.977318
   AUC PR    = 0.184009
   CLL	      = -0.213343
   Precision = 0.135838 at threshold = 0.5
   Recall    = 0.839286
   F1        = 0.233831


Total scoring time: 17.974 seconds
Refined model CLL: -0.213343


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985283
   AUC PR    = 0.225872
   CLL	      = -0.197134
   Precision = 0.236842 at threshold = 0.5
   Recall    = 0.517241
   F1        = 0.32491


Total learning time: 38.095 seconds
Total inference time: 7.828 seconds
AUC ROC: 0.985283
Total revision time: 38.095
Best scored revision CLL: -0.204693


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:01
{'AUC ROC': 0.985283, 'AUC PR': 0.225872, 'CLL': -0.197134, 'Precision': [0.236842, 0.5], 'Recall': 0.517241, 'F1': 0.32491, 'Learning time': 38.095, 'Inference time': 7.828, 'parameter_0.2': {'AUC ROC': 0.985283, 'AUC PR': 0.225872, 'CLL': -0.197134, 'Precision': [0.236842, 0.5], 'Recall': 0.517241, 'F1': 0.32491, 'Learning time': 2.498, 'Inference time': 7.828}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.08891816586874284;  // std dev = 4.019, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | | else return 0.17633075328132966;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2265699877310913;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09998859863795041;  // std dev = 3.961, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return 0.18530054233495458;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1782720340164447;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4505389389334805;  // std dev = 1.349, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6737885280089748;  // std dev = 0.934, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.028368307280267926;  // std dev = 3.475, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7664407264457015;  // std dev = 1.422, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.19179809115086954;  // std dev = 2.02e-07, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1990529740023647;  // std dev = 2.995, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4652578253965317;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.44320584542260755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.014634416851178975;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37450373339321646;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6307797625661916;  // std dev = 2.308, 83.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=77 */
%   | | else return -0.16705452136786378;  // std dev = 0.124, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.21167224473918966;  // std dev = 0.920, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.0011491675231366202;  // std dev = 3.287, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36675834472891733;  // std dev = 0.119, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19189732669803178;  // std dev = 0.930, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.29166987046299797;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.455195244462491;  // std dev = 2.859, 86.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=77 */
%   | | else return -0.14513355706979963;  // std dev = 0.120, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6780404873769353;  // std dev = 0.376, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23196404419423255;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36710397588199195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08079113219883524;  // std dev = 2.487, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2790726262454571;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3219486111021368;  // std dev = 0.155, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.039647546672124924;  // std dev = 4.494, 257.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=80 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2866387985227342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.046386016173042374;  // std dev = 3.049, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0749398857266512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24331087801656295;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4474014785012047;  // std dev = 0.754, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1578508904181365;  // std dev = 0.813, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2504612239186934;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.42108893895137145;  // std dev = 0.280, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.014669897385814059;  // std dev = 2.791, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then return 0.058594675113951965;  // std dev = 3.137, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09318453786293582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11062618013400019;  // std dev = 0.846, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.05163403147493556;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3146744603399398;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.02039805047596189;  // std dev = 4.147, 254.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1652748391282215;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09540794500588917;  // std dev = 2.709, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0856032191605658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16527177311350097;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23209135614024573;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then return 0.02686411639777812;  // std dev = 4.032, 243.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=80 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5161517188275018;  // std dev = 1.159, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.2463137434496032;  // std dev = 0.254, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14838202996563865;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.164858572400718;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06526332129417305;  // std dev = 0.730, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15917406241101947;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.008226820233003584;  // std dev = 3.982, 270.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=77 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04979299460685473;  // std dev = 2.245, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977231
   AUC PR    = 0.263565
   CLL	      = -0.186815
   Precision = 0.154812 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.261947


Total learning time: 2.23 seconds
Total inference time: 7.124 seconds
AUC ROC: 0.977231


Results scoring model
   AUC ROC   = 0.987167
   AUC PR    = 0.288095
   CLL	      = -0.187326
   Precision = 0.170863 at threshold = 0.5
   Recall    = 0.848214
   F1        = 0.284431


Total scoring time: 5.56 seconds
Parameter learned model CLL: -0.187326


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true': [0.0, 0, 15], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 6], 'false,false,true,true': [4.019, 70, 21], 'false,false,true,false': [6.179, 120, 56], 'false,false,false,true': [2.974, 24, 14], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [3.65e-08, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [3.961, 62, 21], 'false,false,true,false': [6.033, 104, 56], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.349, 2, 15], 'false,true,true,true': [0.934, 1, 7], 'false,true,true,false': [3.475, 62, 15], 'false,true,false,true': [1.422, 2, 58], 'false,true,false,false': [2.02e-07, 143, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.995, 23, 16], 'false,false,false,true': [2.63e-09, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.035, 0, 10], 'true,true,false': [0.0, 0, 1], 'true,false': [1.309, 3, 4], 'false,true,true,true': [0.018, 0, 3], 'false,true,true,false': [2.308, 6, 77], 'false,true,false': [0.124, 205, 0], 'false,false,true': [0.92, 1, 3], 'false,false,false,true': [3.287, 46, 14], 'false,false,false,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.119, 0, 11], 'true,false': [0.93, 1, 4], 'false,true,true,true': [0.016, 0, 3], 'false,true,true,false': [2.859, 9, 77], 'false,true,false': [0.12, 183, 0], 'false,false,true,true': [0.376, 0, 7], 'false,false,true,false': [0.0, 5, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.487, 20, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [1.29e-08, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.155, 0, 9], 'false,true': [4.494, 177, 80], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.049, 34, 16], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.086, 0, 11], 'true,true,false': [0.754, 0, 33], 'true,false': [0.813, 81, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.28, 0, 8], 'false,true,false': [2.791, 57, 15], 'false,false,true': [3.137, 78, 43], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.846, 1, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.732, 1, 3], 'true,false,false,false': [0.011, 0, 2], 'false,true': [4.147, 174, 80], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.709, 26, 16], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.059, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.039, 0, 4], 'false,true': [4.032, 163, 80], 'false,false,true,true': [1.159, 1, 17], 'false,false,true,false': [0.254, 23, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 6], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.73, 1, 7], 'false,true': [0.1, 0, 6], 'false,false,true': [3.982, 193, 77], 'false,false,false,true': [2.245, 27, 14], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, 0.21386356908818127], 'false': [-1.4802973661668753e-16, 0.20855393691179833], 'false,false': [0.205221001837591, 0.2274999999999995], 'false,false,false': [0.23268698060941778, 0.0], 'false,false,true': [0.17751479289940866, 0.2169421487603315], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [nan, -1.4802973661668753e-16]}, {'': [0.05859375000000017, 0.2181706838777443], 'false': [7.401486830834377e-17, 0.21623060766305352], 'false,false': [0.21598558916195865, 0.21761452572298842], 'false,false,false': [0.22750000000000048, 0.0], 'false,false,true': [0.1889969516620697, 0.22750000000000106], 'true': [0.09876543209876552, 1.9032394707859825e-16], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.10700747945791479, 0.20096745633045643], 'false': [0.1972329026975238, 0.21814871228102392], 'false,false': [0.22735329749445396, 2.3129646346357427e-18], 'false,false,true': [0.0, 0.230008887131767], 'false,true': [0.18788211261600576, 0.20114668126170648], 'false,true,false': [0.0337201961760505, 2.8570774340004027e-16], 'false,true,true': [0.10914625595700395, 0.15685613088210512], 'false,false,false': [2.3129646346357427e-18, nan]}, {'': [0.14316020069762883, 0.1540779441937764], 'false': [0.14858854199591234, 0.1745898008749757], 'false,false': [0.2115293175947372, 0.16945728522692774], 'false,false,false': [0.18012383555371692, 0.0], 'false,true': [0.06417594198316, 7.461162277476323e-05], 'true': [0.0001507096551974482, 0.24489795918367338], 'false,true,true': [0.00010543896795665401, 0.06420067109479918], 'true,true': [0.00012157245519262005, 0.0]}, {'': [0.06147592798536376, 0.12425078396021458], 'false': [0.10827663090042217, 0.2189665936706686], 'false,false': [0.2130876206439193, 0.2088931267118082], 'false,false,true': [0.0202479608443124, 0.0], 'false,false,false': [0.0, 0.21336383649580143], 'false,true': [0.09271067885126344, 7.925225142798216e-05], 'false,true,true': [8.242928865013581e-05, 0.09504053007471176], 'true': [0.001280794889390399, 0.17288396255308175]}, {'': [0.0020427457263097804, 0.09569514292710889], 'false': [0.07860096882733647, 0.1801120594701736], 'false,false': [0.1833381827097053, 0.0], 'false,false,true': [0.0, 0.1858731542182764], 'true': [2.7755575615628914e-17, 0.0026692361795441766], 'true,true': [2.7755575615628914e-17, nan], 'true,true,true': [2.7755575615628914e-17, nan], 'false,false,false': [0.0, nan]}, {'': [0.0827182176631511, 0.09419717652635126], 'false': [0.11377466486220558, 0.08082514430350865], 'false,true': [0.012525543589404076, 0.1081651766811974], 'true': [0.020911420052326178, 0.00816823598077187], 'false,false': [0.08130429341179411, 0.0], 'true,true': [0.0006726755828537868, 0.017244424907271554], 'false,true,true': [0.0, 0.009834166059300598], 'false,false,false': [0.0, nan]}, {'': [0.08456148479720549, 0.08312191814479795], 'true': [0.06508254473509306, 0.11922941798519095], 'true,false': [nan, 0.11922941798519097], 'true,false,false': [0.13408562877475266, 6.238895560846391e-05], 'false': [0.06769572376604895, 0.16769496277546053], 'false,false': [0.1708367570033304, 0.0], 'false,false,true': [0.0, 0.1747907783043174], 'false,false,false': [nan, 0.0]}, {'': [0.0012118234116128112, 0.0833273681326079], 'false': [0.06688529326255055, 0.17753387616948432], 'false,false': [0.17753387616948432, nan], 'false,false,true': [0.07467495167919574, 0.002803763413748473], 'true': [0.00032010049611609257, 0.00038983320025887114], 'true,false': [nan, 0.00038983320025887114]}, {'': [0.03525423294192303, 0.06654274490549104], 'false': [0.0016821562007264719, 0.06739355507531976], 'false,false': [0.058740468761574106, 0.12287732106329917], 'false,false,false': [0.12287732106329917, nan], 'true': [5.090183449029881e-05, 0.06665234331202444], 'true,true': [5.090183449029881e-05, nan], 'true,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,false;interaction(G, A).;true;true
0;false,false,false;interaction(A, I), interaction(I, J).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;complex(A, F), complex(C, F).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.058148935099512224;  // std dev = 4.000, 100.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=20 */
%   | | | else return 0.22827880522938365;  // std dev = 5.992, 154.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=57 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.18373033044834958;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.2194734122109544;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.09398941735142867;  // std dev = 6.662, 233.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=60 */
%   | | | else return 0.23660627665881967;  // std dev = 3.176, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16761336227497856;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.011869805251606339;  // std dev = 2.324, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.14918787473403647;  // std dev = 3.163, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.757282160589317;  // std dev = 1.692, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.18125379833081331;  // std dev = 0.182, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.6731303773666394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13421909661174788;  // std dev = 3.191, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4175135841583098;  // std dev = 1.29e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.47037507643251364;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6607146005068775;  // std dev = 1.950, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -0.15039996406894418;  // std dev = 0.108, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.1736829628874395;  // std dev = 0.187, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5463456398063314;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.12971812915227832;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3289002137818514;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14773345701176535;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.09554942769129848;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5132325876757234;  // std dev = 1.971, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | else return -0.1418425314501196;  // std dev = 0.018, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6691770856316852;  // std dev = 0.404, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22473272364050842;  // std dev = 0.128, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.37822280582273826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13109958301893987;  // std dev = 2.384, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.2536190891207808;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19228972487951182;  // std dev = 0.288, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.08849216861719637;  // std dev = 1.301, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return 0.10021453914577239;  // std dev = 0.851, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.012459350726428111;  // std dev = 1.369, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.07164123523911256;  // std dev = 3.852, 174.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=67 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.29414828474689825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08014127065611894;  // std dev = 2.893, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else return -0.10374917516195709;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3910375927809413;  // std dev = 0.140, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1367717752959998;  // std dev = 0.035, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.251519326800256;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4815087407582853;  // std dev = 0.358, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.06673489890985453;  // std dev = 1.290, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | | else return 0.10081223925035494;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1744282356956963;  // std dev = 1.296, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.02708970813689129;  // std dev = 2.627, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | else return -0.10412006730479147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.15694253627973317;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1379084861028603;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.16894730352822385;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.059573614836160006;  // std dev = 0.869, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( enzyme(A, H), location(A, I) )
%   | | then return -0.018677637037348614;  // std dev = 0.228, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | else return 0.02222921000267247;  // std dev = 0.249, 176.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=54 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.16097678744153343;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11215910988256243;  // std dev = 2.614, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | else return -0.0876768470448186;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, A) )
%   | | | then return 0.1322738470809135;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13551486715249433;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1998396592705479;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23608271218722246;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2208432498169488;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3263439382536996;  // std dev = 0.512, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.06678718435273331;  // std dev = 1.646, 74.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.05816365580696631;  // std dev = 2.908, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return -0.007489809615332844;  // std dev = 3.400, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13757444419744613;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.18264423823203368;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.15597456914280255;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then return 0.189911780701716;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.16422187696508475;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.34151869519673606;  // std dev = 0.675, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.1502825948007278;  // std dev = 0.762, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.035953873405931015;  // std dev = 1.637, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.05352640548979532;  // std dev = 3.692, 135.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=51 */


Results
   AUC ROC   = 0.976545
   AUC PR    = 0.275863
   CLL	      = -0.182008
   Precision = 0.181614 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.30394


Total learning time: 4.653 seconds
Total inference time: 6.035 seconds
AUC ROC: 0.976545


Results scoring model
   AUC ROC   = 0.985586
   AUC PR    = 0.301874
   CLL	      = -0.191655
   Precision = 0.195777 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.322275


Total scoring time: 4.975 seconds
Refined model CLL: -0.191655


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977231
   AUC PR    = 0.263565
   CLL	      = -0.186815
   Precision = 0.154812 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.261947


Total learning time: 17.418 seconds
Total inference time: 7.124 seconds
AUC ROC: 0.977231
Total revision time: 17.418
Best scored revision CLL: -0.187326


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:01:32
{'AUC ROC': 0.977231, 'AUC PR': 0.263565, 'CLL': -0.186815, 'Precision': [0.154812, 0.5], 'Recall': 0.850575, 'F1': 0.261947, 'Learning time': 17.418, 'Inference time': 7.124, 'parameter_0.4': {'AUC ROC': 0.977231, 'AUC PR': 0.263565, 'CLL': -0.186815, 'Precision': [0.154812, 0.5], 'Recall': 0.850575, 'F1': 0.261947, 'Learning time': 2.23, 'Inference time': 7.124}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.791482268432845;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0951859721365482;  // std dev = 4.941, 135.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | | | else return 0.16010971941323865;  // std dev = 7.331, 255.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=77 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17633075328133013;  // std dev = 3.784, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.666063300077917;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.6077299667445833;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40072001237962523;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6163433124639606;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.07473385786517363;  // std dev = 4.968, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | | else return 0.13029567272685877;  // std dev = 7.379, 263.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=77 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1740102197543071;  // std dev = 3.727, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.058741135785635015;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.49573935764535443;  // std dev = 1.635, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6055572251383853;  // std dev = 1.519, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.01387485189236826;  // std dev = 4.322, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7510221413502377;  // std dev = 2.187, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   | | | else return -0.1809988800166352;  // std dev = 2.00e-07, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.42317703735469414;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11410108269502388;  // std dev = 3.835, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | else if ( interaction(A, J) )
%   | | | then return -5.099959040175239E-4;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4643170900557597;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.4762799204179571;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.47627992041795697;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3266484116593788;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6501888001489718;  // std dev = 2.748, 117.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=109 */
%   | | else return -0.15981311397816358;  // std dev = 0.082, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5722975504305947;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09530161076948691;  // std dev = 3.812, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.1995717468784147;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3565857509158329;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.2439384434543855;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3847663587049153;  // std dev = 0.183, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5014783994499594;  // std dev = 2.836, 118.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=109 */
%   | | else return -0.1383490141014594;  // std dev = 0.069, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7123968738276247;  // std dev = 0.429, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.22619750369891503;  // std dev = 0.013, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4150244968989679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09091495698912407;  // std dev = 3.085, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2740465787903022;  // std dev = 1.83e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12542265809618133;  // std dev = 1.806, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( interaction(F, A) )
%   | then return 0.024646747734686874;  // std dev = 5.588, 405.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=115 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5087729705280226;  // std dev = 0.268, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11123436290634417;  // std dev = 3.400, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.05573471150964806;  // std dev = 1.065, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24222896642247674;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4418345713469456;  // std dev = 0.893, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.1576928151722209;  // std dev = 1.232, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.30092486503278665;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34463496388285453;  // std dev = 1.020, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.010051834433891375;  // std dev = 3.481, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | else if ( interaction(H, A) )
%   | | then return 0.055921379752108404;  // std dev = 3.784, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.24069592051711997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15004638085961167;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.18846944443894614;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2258087000218068;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.004292309328308638;  // std dev = 5.106, 437.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=115 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3315360088645297;  // std dev = 0.234, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.026819383033981473;  // std dev = 3.463, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.29268357962981206;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19947739433274625;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17324213459523355;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1090134552891195;  // std dev = 0.926, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.01028876293081581;  // std dev = 5.171, 401.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=115 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5391806708787525;  // std dev = 1.218, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return -0.23245910235460573;  // std dev = 0.289, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14018529448326633;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.20066189227810483;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.6034243574237326;  // std dev = 0.217, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.18622350029033322;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.16864554574465263;  // std dev = 0.203, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008151400855421778;  // std dev = 4.954, 408.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=109 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04374425483613707;  // std dev = 2.830, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985368
   AUC PR    = 0.297985
   CLL	      = -0.180016
   Precision = 0.1678 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.280303


Total learning time: 2.719 seconds
Total inference time: 6.717 seconds
AUC ROC: 0.985368


Results scoring model
   AUC ROC   = 0.987443
   AUC PR    = 0.317698
   CLL	      = -0.178921
   Precision = 0.173219 at threshold = 0.5
   Recall    = 0.83432
   F1        = 0.286877


Total scoring time: 7.114 seconds
Parameter learned model CLL: -0.178921


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.366, 2, 28], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.943, 1, 8], 'false,false,true,true': [4.941, 103, 32], 'false,false,true,false': [7.331, 178, 77], 'false,false,false,true': [3.784, 45, 21], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.966, 1, 14], 'true,false': [1.323, 2, 14], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.808, 1, 2], 'false,true,false': [0.935, 1, 7], 'false,false,true,true': [4.968, 108, 32], 'false,false,true,false': [7.379, 186, 77], 'false,false,false,true': [3.727, 41, 21], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.635, 3, 28], 'false,true,true,true': [1.519, 3, 11], 'false,true,true,false': [4.322, 104, 23], 'false,true,false,true': [2.187, 5, 81], 'false,true,false,false': [2e-07, 167, 0], 'false,false,true,true': [0.768, 1, 2], 'false,false,true,false': [3.835, 49, 22], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.023, 0, 17], 'true,true,false': [0.0, 0, 2], 'true,false': [2.98e-08, 0, 9], 'false,true,true,true': [0.9, 1, 6], 'false,true,true,false': [2.748, 8, 109], 'false,true,false': [0.082, 273, 0], 'false,false,true': [0.019, 0, 3], 'false,false,false,true': [3.812, 48, 21], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.026, 0, 20], 'true,false': [0.937, 1, 8], 'false,true,true,true': [0.183, 0, 6], 'false,true,true,false': [2.836, 9, 109], 'false,true,false': [0.069, 295, 0], 'false,false,true,true': [0.429, 0, 11], 'false,false,true,false': [0.013, 11, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [3.085, 30, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [1.83e-08, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.806, 4, 20], 'false,true': [5.588, 290, 115], 'false,false,true,true': [0.268, 0, 2], 'false,false,true,false': [3.4, 37, 22], 'false,false,false,true': [1.065, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.082, 0, 16], 'true,true,false': [0.893, 0, 52], 'true,false': [1.232, 134, 0], 'false,true,true,true': [0.161, 0, 6], 'false,true,true,false': [1.02, 2, 12], 'false,true,false': [3.481, 76, 26], 'false,false,true': [3.784, 107, 57], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.973, 1, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.029, 0, 7], 'true,false,false,false': [1.0, 2, 2], 'false,true': [5.106, 322, 115], 'false,false,true,true': [0.234, 0, 2], 'false,false,true,false': [3.463, 46, 22], 'false,false,false,true': [0.56, 1, 2], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.092, 0, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.926, 1, 9], 'false,true': [5.171, 286, 115], 'false,false,true,true': [1.218, 1, 26], 'false,false,true,false': [0.289, 48, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.188, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.217, 2, 0], 'true,false': [0.177, 0, 12], 'false,true': [0.203, 0, 11], 'false,false,true': [4.954, 299, 109], 'false,false,false,true': [2.83, 42, 23], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06222222222222342, 0.21000000000000196], 'false': [0.08999999999999977, 0.2046124763705108], 'false,false': [0.20137409598948233, 0.22061224489796016], 'false,false,false': [0.21694214876033072, 0.25], 'false,false,true': [0.18085048010974056, 0.2107804690503655], 'false,true': [0.0, 0.09876543209876537], 'false,true,false': [nan, 0.09876543209876527], 'false,true,true': [0.0, nan]}, {'': [0.0874089490114469, 0.2040405433846501], 'false': [0.14807688697817117, 0.20095867114666377], 'false,false': [0.1970819891040983, 0.22116063412370612], 'false,false,false': [0.2239854318418311, 0.18749999999999994], 'false,false,true': [0.17632653061224435, 0.20705807514927355], 'false,true': [0.21746853161868232, 0.109375], 'false,true,true': [nan, 0.21746853161868232], 'true': [0.06222222222222188, 0.10937500000000011]}, {'': [0.0862264996669719, 0.20327197110192402], 'false': [0.2026709400024573, 0.2060886965180361], 'false,false': [0.2103925081680722, 0.16], 'false,false,true': [0.1967597235599092, 0.20709578676314655], 'false,true': [0.1801275950823722, 0.21380561263745118], 'false,true,false': [0.055599908393619155, 2.393295142904529e-16], 'false,true,true': [0.16483544131695518, 0.14705283061890434], 'false,false,false': [0.16, nan]}, {'': [5.275330442554095e-05, 0.16666847364797785], 'false': [0.15744988758213266, 0.21327619275108886], 'false,false': [0.00011674474233103194, 0.21331310538363338], 'false,false,false': [0.21064466019148767, 0.24000000000000005], 'false,true': [0.07298308237230797, 2.434514709180119e-05], 'false,true,true': [0.11558988404324358, 0.06452469393046349], 'true': [4.0916690412915924e-05, 9.868649107779169e-17], 'true,true': [3.0666280773103566e-05, 0.0]}, {'': [0.032991483820024356, 0.12092066838963322], 'false': [0.10327380155148108, 0.22326900368273708], 'false,false': [0.22862758772757877, 0.21374720608464715], 'false,false,true': [0.016760793163030516, 1.4679529910299749e-05], 'false,false,false': [0.0, 0.21627071949067947], 'false,true': [0.06576598500228217, 1.6269895316262012e-05], 'false,true,true': [0.005609657192239215, 0.0681656667934682], 'true': [3.2882873563977456e-05, 0.09748149796121408]}, {'': [0.10601986407491039, 0.09433303166504872], 'true': [4.163336342344337e-17, 0.13583755131592415], 'false': [0.07709095306080523, 0.1879925821545246], 'false,false': [0.19566840038633557, 0.1133325040072484], 'false,false,true': [0.03600435793863804, 0.19589920164272476], 'false,false,false': [0.1133325040072484, nan], 'true,true': [4.163336342344337e-17, nan], 'true,true,true': [4.163336342344337e-17, nan]}, {'': [0.08208952883325983, 0.10213887753042088], 'false': [0.12228555142453554, 0.08728643131537504], 'false,true': [0.05372191973091054, 0.11878792125794357], 'false,false': [0.08729087802827802, 0.0], 'true': [0.018991251665960586, 0.011327193725781967], 'false,true,true': [0.004325484349684809, 0.07431864878613388], 'true,true': [0.0004214531835919355, 0.015330354045613918], 'false,false,false': [0.0, nan]}, {'': [0.07978262646448774, 0.07617005142120474], 'true': [0.047305585222614056, 0.13070655256869834], 'true,false': [nan, 0.13070655256869834], 'true,false,false': [0.00011737265847646434, 0.25002082951659466], 'false': [0.05966505245526781, 0.17127846147155235], 'false,false': [0.17463506795214187, 0.12089300509681604], 'false,false,true': [0.027283907225066975, 0.1763160049903694], 'false,false,false': [0.1045993721113171, 0.0]}, {'': [0.030789163431547837, 0.08124512080610581], 'false': [0.06668357954277718, 0.1580663377986082], 'false,false': [0.1580663377986082, nan], 'false,false,true': [0.05490730333585136, 0.0017392364150823718], 'true': [0.0004422933355251808, 0.08574541862562032], 'true,false': [nan, 0.08574541862562032]}, {'': [0.04482651765860367, 0.0680227932858229], 'false': [0.003738200021277853, 0.06896750478517444], 'false,false': [0.060144748039614095, 0.12325451055899384], 'false,false,false': [0.12325451055899384, nan], 'true': [0.07069384074270466, 0.0026063671627542064], 'true,true': [0.0034074267690349775, 0.023546802611253803], 'true,true,false': [nan, 0.023546802611253803], 'true,true,true': [-3.469446951953614e-18, 0.0058607088148880755]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.10929048761092833;  // std dev = 6.418, 219.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=55 */
%   | | | else return 0.18304344986744617;  // std dev = 7.210, 237.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=77 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then return 0.4451591082926163;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.789109545154018;  // std dev = 0.058, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.15586045559715972;  // std dev = 0.174, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7319045176838227;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(K, L), phenotype(J, M) )
%   | | | then return 0.129680922602789;  // std dev = 6.362, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   | | | else return 0.02057525566593757;  // std dev = 3.567, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.7744639907355252;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1663534626856799;  // std dev = 5.315, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5017454734511898;  // std dev = 0.222, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), interaction(A, G) )
%   | | | then return -0.05526794950834537;  // std dev = 1.835, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | | else return 0.13713692654048754;  // std dev = 4.015, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7658893325780375;  // std dev = 1.974, 85.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=81 */
%   | | | else return -0.17671868056973913;  // std dev = 0.132, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.0029972174610380705;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.20213141659523745;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6381600378075776;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17387171888158187;  // std dev = 2.665, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34002579548777295;  // std dev = 0.251, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4997479871875871;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24412723569353573;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.7055773921503017;  // std dev = 0.290, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.5781292983631899;  // std dev = 2.923, 96.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=86 */
%   | | else return -0.15431771868426974;  // std dev = 0.336, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23456430244809653;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23783814145702806;  // std dev = 2.480, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.13795313453365315;  // std dev = 2.809, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3526409938526712;  // std dev = 0.095, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.23780643632860665;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26305334404368647;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4649159252703363;  // std dev = 3.041, 120.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=109 */
%   | | else return -0.1358990049737837;  // std dev = 0.339, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6326537903600588;  // std dev = 0.978, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.23461811363036153;  // std dev = 0.070, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return -0.07574673458202053;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.05769757705701345;  // std dev = 3.136, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.26976401500616665;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24362511631831354;  // std dev = 0.199, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.33498754254926083;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2689025249861734;  // std dev = 1.344, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.022572304047495266;  // std dev = 3.555, 160.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=30 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return -0.11118917699984694;  // std dev = 0.821, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.052336117226265265;  // std dev = 4.333, 238.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=80 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.10774164979760699;  // std dev = 2.039, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.4158921452465946;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38740022436911986;  // std dev = 0.139, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return -0.13140030181433468;  // std dev = 0.052, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( location(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3783784647549067;  // std dev = 1.063, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.17289917068693808;  // std dev = 0.419, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2721965658079238;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.08118416021878902;  // std dev = 3.162, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06091781466029898;  // std dev = 2.834, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
%   | | | else return 0.0015783291359963575;  // std dev = 2.352, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | else return -0.2539754468453348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14676739696217875;  // std dev = 0.181, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return 0.009579224788024676;  // std dev = 4.580, 305.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=92 */
%   | | | else return -0.08865615015884953;  // std dev = 0.935, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return 0.038630425153310506;  // std dev = 1.746, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.13204625819699708;  // std dev = 0.652, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03086487655671648;  // std dev = 2.102, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.1640116736241039;  // std dev = 2.491, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.098809952860139;  // std dev = 0.778, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.20569750311318105;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.15749512619230183;  // std dev = 0.092, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.004190065810785977;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1727600320461787;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08376297096024338;  // std dev = 0.069, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.016126198660783863;  // std dev = 2.611, 137.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | | else return 0.02713421339245858;  // std dev = 4.051, 249.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=81 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.26322439388947844;  // std dev = 1.924, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.14784335017009217;  // std dev = 2.275, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else return -0.22703351296794122;  // std dev = 0.067, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12494761478741453;  // std dev = 0.177, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), enzyme(D, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.1908694765175904;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1017109730961321;  // std dev = 0.572, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( phenotype(A, I), location(D, J) )
%   | | | then return 0.01370257052666909;  // std dev = 1.469, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.0835086498139371;  // std dev = 0.473, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), interaction(M, M) )
%   | | | then return -0.07237400778072386;  // std dev = 1.344, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.026724112037678972;  // std dev = 1.822, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.07216987114933497;  // std dev = 1.752, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.019902674737465438;  // std dev = 4.656, 253.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=83 */


Results
   AUC ROC   = 0.98346
   AUC PR    = 0.311538
   CLL	      = -0.177758
   Precision = 0.162602 at threshold = 0.5
   Recall    = 0.91954
   F1        = 0.276339


Total learning time: 14.338 seconds
Total inference time: 11.403 seconds
AUC ROC: 0.98346


Results scoring model
   AUC ROC   = 0.988052
   AUC PR    = 0.368689
   CLL	      = -0.181332
   Precision = 0.189809 at threshold = 0.5
   Recall    = 0.881657
   F1        = 0.312369


Total scoring time: 18.148 seconds
Refined model CLL: -0.181332


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985368
   AUC PR    = 0.297985
   CLL	      = -0.180016
   Precision = 0.1678 at threshold = 0.5
   Recall    = 0.850575
   F1        = 0.280303


Total learning time: 42.319 seconds
Total inference time: 6.717 seconds
AUC ROC: 0.985368
Total revision time: 42.319
Best scored revision CLL: -0.178921


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:02:33
{'AUC ROC': 0.985368, 'AUC PR': 0.297985, 'CLL': -0.180016, 'Precision': [0.1678, 0.5], 'Recall': 0.850575, 'F1': 0.280303, 'Learning time': 42.319, 'Inference time': 6.717, 'parameter_0.6': {'AUC ROC': 0.985368, 'AUC PR': 0.297985, 'CLL': -0.180016, 'Precision': [0.1678, 0.5], 'Recall': 0.850575, 'F1': 0.280303, 'Learning time': 2.719, 'Inference time': 6.717}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8331489350995117;  // std dev = 0.987, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08100607795665404;  // std dev = 5.505, 175.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=39 */
%   | | | else return 0.17814893509951255;  // std dev = 8.410, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20481560176617783;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6244914035015012;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0.6790368580469557;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.737640299498494;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7392070123615109;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0420290525042158;  // std dev = 5.606, 201.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=39 */
%   | | | else return 0.11537370623427383;  // std dev = 8.651, 371.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=104 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12023315072789585;  // std dev = 4.300, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.16066757255144135;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4440398942212105;  // std dev = 2.285, 45.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6461229379000595;  // std dev = 1.565, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 5.399261979589831E-4;  // std dev = 4.720, 169.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=27 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7520703004446777;  // std dev = 2.436, 117.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=111 */
%   | | | else return -0.18254343446273566;  // std dev = 0.243, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3769150241276617;  // std dev = 1.211, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08532538003251328;  // std dev = 4.270, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17816328223972727;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.42439629661273726;  // std dev = 0.987, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.21441757049563653;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.4610228205284213;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40377439732521364;  // std dev = 0.164, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6116848904016381;  // std dev = 3.869, 160.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=143 */
%   | | else return -0.15681931189318327;  // std dev = 0.107, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.37947497033428856;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07901335699352811;  // std dev = 4.312, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.2734718769019704;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.2756511796270261;  // std dev = 1.878, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | else return 0.37143243919850755;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.15814852571653773;  // std dev = 1.211, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.49308404610414647;  // std dev = 3.608, 157.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=143 */
%   | | else return -0.13739645485169732;  // std dev = 0.137, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35343827930837224;  // std dev = 3.456, 51.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | | else return -0.22175389114779268;  // std dev = 0.161, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.00983785521686221;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.3125671659174718;  // std dev = 0.045, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.20948820362355214;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.15102347632873606;  // std dev = 1.839, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   else if ( interaction(F, A) )
%   | then return 0.018780370770706184;  // std dev = 6.651, 550.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=153 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.33806597987412756;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06610391623753363;  // std dev = 3.928, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.022024004850336527;  // std dev = 1.329, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.16346641627497865;  // std dev = 1.840, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | else return 0.21122713564986564;  // std dev = 6.057, 300.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=180 */
%   | else return -0.1399149289475895;  // std dev = 1.146, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.25950701122900655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10611353362591866;  // std dev = 1.340, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08152744221603296;  // std dev = 0.933, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.28441082325406286;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15674899073962997;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( location(A, E), interaction(A, C) )
%   | | then return 0.3000881990513792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.09376681018077605;  // std dev = 1.320, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.01565801534622919;  // std dev = 6.004, 530.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=153 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.21753360220566292;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.07516210333281935;  // std dev = 3.641, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06289879634519036;  // std dev = 1.170, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.2302150538365052;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.20602824313995843;  // std dev = 0.101, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07389651100506352;  // std dev = 1.327, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(F, A) )
%   | then return 0.009821588567178503;  // std dev = 5.946, 548.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=153 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5885614312171612;  // std dev = 0.770, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.23738917477196622;  // std dev = 0.704, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.17882435705399582;  // std dev = 0.201, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.1583153232311335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, C), location(C, G) )
%   | | | then return 0.18198818029724634;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21123305465653963;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13545358376509672;  // std dev = 0.986, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.08606943021880498;  // std dev = 1.356, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008142042172008021;  // std dev = 5.806, 531.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=143 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.002066069979970508;  // std dev = 3.241, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980592
   AUC PR    = 0.245942
   CLL	      = -0.179473
   Precision = 0.158025 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.260163


Total learning time: 7.216 seconds
Total inference time: 9.215 seconds
AUC ROC: 0.980592


Results scoring model
   AUC ROC   = 0.985683
   AUC PR    = 0.25077
   CLL	      = -0.177118
   Precision = 0.173439 at threshold = 0.5
   Recall    = 0.777778
   F1        = 0.28363


Total scoring time: 28.361 seconds
Parameter learned model CLL: -0.177118


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.987, 1, 39], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.949, 1, 9], 'false,false,true,true': [5.505, 136, 39], 'false,false,true,false': [8.41, 221, 104], 'false,false,false,true': [4.121, 49, 26], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [1.342, 2, 18], 'true,false': [0.977, 1, 21], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.08, 0, 6], 'false,true,false': [0.0, 0, 8], 'false,false,true,true': [5.606, 162, 39], 'false,false,true,false': [8.651, 267, 104], 'false,false,false,true': [4.3, 64, 26], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [2.285, 6, 39], 'false,true,true,true': [1.565, 3, 15], 'false,true,true,false': [4.72, 142, 27], 'false,true,false,true': [2.436, 6, 111], 'false,true,false,false': [0.243, 225, 0], 'false,false,true,true': [1.211, 2, 4], 'false,false,true,false': [4.27, 68, 26], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.987, 1, 20], 'true,true,false': [1.219, 2, 6], 'true,false': [2.98e-08, 0, 13], 'false,true,true,true': [0.164, 0, 10], 'false,true,true,false': [3.869, 17, 143], 'false,true,false': [0.107, 370, 0], 'false,false,true': [0.734, 1, 4], 'false,false,false,true': [4.312, 67, 26], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.878, 4, 38], 'true,false': [0.0, 0, 1], 'false,true,true,true': [1.211, 2, 10], 'false,true,true,false': [3.608, 14, 143], 'false,true,false': [0.137, 374, 0], 'false,false,true,true': [3.456, 20, 31], 'false,false,true,false': [0.161, 49, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.045, 0, 16], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.707, 1, 1], 'true,false': [1.839, 4, 22], 'false,true': [6.651, 397, 153], 'false,false,true,true': [0.82, 1, 4], 'false,false,true,false': [3.928, 61, 26], 'false,false,false,true': [1.329, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [1.84, 5, 35], 'true,true,false': [6.057, 120, 180], 'true,false': [1.146, 347, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [1.34, 9, 4], 'false,false,true': [0.933, 8, 5], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'location(A, E), interaction(A, C)', 'true,false,false': 'location(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [1.34, 2, 25], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [1.32, 2, 13], 'true,false,false,false': [0.0, 0, 0], 'false,true': [6.004, 377, 153], 'false,false,true,true': [0.82, 1, 4], 'false,false,true,false': [3.641, 51, 26], 'false,false,false,true': [1.17, 5, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.101, 0, 26], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.327, 2, 13], 'false,true': [5.946, 395, 153], 'false,false,true,true': [0.77, 0, 33], 'false,false,true,false': [0.704, 71, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(D, C), location(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.201, 0, 18], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.041, 0, 2], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.986, 1, 13], 'false,true': [1.356, 2, 17], 'false,false,true': [5.806, 388, 143], 'false,false,false,true': [3.241, 70, 29], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.024375000000001545, 0.21409639326535024], 'false': [0.10937499999999967, 0.20798554822309717], 'false,false': [0.20420400000000255, 0.22731891421106248], 'false,false,false': [0.22648888888889013, 0.2343749999999999], 'false,false,true': [0.17319183673469507, 0.21760000000000052], 'false,true': [0.1388888888888887, 0.08999999999999986], 'false,true,true': [0.0, 0.25], 'false,true,false': [nan, 0.08999999999999977]}, {'': [0.06632653061224386, 0.19456042688018443], 'false': [0.00045616731565585004, 0.1901372747462603], 'false,false': [0.18702886075187525, 0.20709359283738826], 'false,false,false': [0.20543209876543175, 0.22222222222222232], 'false,false,true': [0.15638226776564945, 0.20174221343930382], 'true': [0.09000000000000008, 0.04338842975206622], 'false,true': [0.0010629877807997918, 0.0], 'false,true,true': [nan, 0.0010629877807997918]}, {'': [0.11599340275752693, 0.20016327839901632], 'false': [0.19926583289248204, 0.2045541079370558], 'false,false': [0.20174795539745624, 0.234375], 'false,false,false': [0.234375, nan], 'false,false,true': [0.24432690698130877, 0.19392867874459827], 'false,true': [0.1685004966263101, 0.21412522546688825], 'false,true,false': [0.05072727733946436, 0.00026224177713246713], 'false,true,true': [0.13604739865053606, 0.13183942650453226]}, {'': [0.06660314517733944, 0.16043490248395328], 'false': [0.15191362232205224, 0.204220469206515], 'false,false': [0.10777749129335694, 0.2050848855015507], 'false,false,false': [0.19989537157513174, 0.25], 'false,true': [0.09058924539705686, 3.115724456087033e-05], 'false,true,true': [0.0026864651452693567, 0.09354041780213262], 'true': [0.09369257782136674, 6.832141690000964e-17], 'true,true': [0.046426812842827674, 0.18583719799841214]}, {'': [0.08225002699997036, 0.12337458477498613], 'false': [0.10791462322057138, 0.20020167531359073], 'false,false': [0.20234936666952383, 0.17283950617283955], 'false,false,true': [0.23414283601037988, 0.0005267278959337717], 'false,false,false': [nan, 0.17283950617283955], 'false,true': [0.09309738935348576, 5.033924099503137e-05], 'false,true,true': [0.12215308106766874, 0.08291100035472275], 'true': [0.0839950109834834, 0.0]}, {'': [0.10187093361536924, 0.09640132083077387], 'true': [0.05480848062598806, 0.13006716843468047], 'false': [0.08042531811618771, 0.18066797821725666], 'false,false': [0.17883913186124378, 0.1962070211185386], 'false,false,false': [0.1962070211185386, nan], 'false,false,true': [0.13434169415633085, 0.17737670782067091], 'true,true': [0.00012711749683487483, 0.24999999999999997], 'true,true,true': [0.00012711749683487483, nan]}, {'': [0.09020990703599684, 0.10248376138023589], 'false': [0.12988870926080784, 0.07347227905621155], 'false,true': [0.0, 0.1381994656510612], 'true': [0.11811273576753595, 0.0037850606596596223], 'true,true': [0.0846808143439603, 0.12230196219477271], 'false,false': [0.06692093138528604, 0.0], 'false,true,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.08381154559523675, 0.0834562897868778], 'true': [0.06648829188287078, 0.11146929535251274], 'true,false': [0.0, 0.11624004949025352], 'true,false,false': [0.11624004949025352, nan], 'false': [0.06801476191234374, 0.16939258749232197], 'false,false': [0.17099710759979325, 0.15059271951465777], 'false,false,true': [0.13460474957638335, 0.1721242938475677], 'false,false,false': [0.17105775355965472, 0.0]}, {'': [0.047221034347888435, 0.07949796512997279], 'false': [0.06451792907476928, 0.15824539238027835], 'false,false': [0.15824539238027835, nan], 'false,false,true': [0.017984212589605884, 0.006971676448788162], 'true': [0.00039304336859449573, 0.11731812129993717], 'true,false': [nan, 0.11731812129993717]}, {'': [0.027961368034247744, 0.07114037000398778], 'false': [0.09672358320527459, 0.07018664701908381], 'false,false': [0.06347979292969708, 0.10612865737214133], 'false,false,false': [0.10612865737214133, nan], 'true': [0.001930567545361202, 0.06943524710395756], 'true,true': [0.0021400632550904655, 0.0006414470072181322], 'true,true,true': [0.0022368177387643417, 0.0], 'true,true,false': [0.0008552626762908452, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;location(A, E), interaction(A, C).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;location(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(D, C), location(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17980498605492368;  // std dev = 8.277, 314.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=101 */
%   | | | else return 0.12111189806247677;  // std dev = 7.234, 270.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=71 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, D) )
%   | | then return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.11496227290862866;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.690061647505072;  // std dev = 0.169, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.09708334413370287;  // std dev = 7.452, 289.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=75 */
%   | | | else return 0.1535185874647212;  // std dev = 8.152, 308.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=97 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.48410578133623;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.571804665292819;  // std dev = 0.206, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.08035181213551126;  // std dev = 5.477, 158.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=42 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7620360219506983;  // std dev = 2.239, 116.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=111 */
%   | | | else return -0.17968897495403335;  // std dev = 0.096, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6056883573519726;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.027892784575482128;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.2088711873526929;  // std dev = 3.766, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4261124439608791;  // std dev = 0.053, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.4491541481903865;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3717969304518231;  // std dev = 0.922, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6266351744093296;  // std dev = 3.555, 157.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=143 */
%   | | else return -0.16145867214988197;  // std dev = 0.504, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7176312776133321;  // std dev = 0.538, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2006009707981941;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.19848541241542983;  // std dev = 2.723, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.09635505444315696;  // std dev = 2.208, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.34482191097917675;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.3203480547380847;  // std dev = 0.010, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.3216656421616181;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.591556632477001;  // std dev = 1.632, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.4034503383326883;  // std dev = 4.007, 146.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=126 */
%   | | else return -0.14153233207290705;  // std dev = 0.021, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3850710590659598;  // std dev = 2.987, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | | else return -0.20671360590324736;  // std dev = 0.214, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0.08695327986773844;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23819858870766303;  // std dev = 0.160, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( complex(D, F), phenotype(A, G) )
%   | | then if ( complex(A, F), interaction(E, H) )
%   | | | then return -0.01616793935756496;  // std dev = 1.703, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.13766062624529526;  // std dev = 2.273, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | else if ( interaction(D, E), location(A, I) )
%   | | | then return -0.059913971827201075;  // std dev = 1.481, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | | else return 0.004521655877450951;  // std dev = 2.359, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(J, L), complex(J, M) )
%   | | | then return 0.24380132263584417;  // std dev = 1.400, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.046473235380913615;  // std dev = 1.589, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.0670111404943045;  // std dev = 2.170, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.02235325394242017;  // std dev = 5.634, 327.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( complex(A, D) )
%   | then return 0.024058001311862427;  // std dev = 0.261, 297.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=95 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.03723316925153381;  // std dev = 1.600, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.16574879755622499;  // std dev = 1.765, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2411807988431351;  // std dev = 0.168, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03254172030679299;  // std dev = 5.305, 299.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=89 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.2131583133687095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.002279648078282753;  // std dev = 0.790, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.23276690959605584;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.02985811119427626;  // std dev = 0.270, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15656500469470674;  // std dev = 0.221, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.09619410314728666;  // std dev = 0.982, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.006694173679833773;  // std dev = 3.394, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.058956131685261606;  // std dev = 4.159, 199.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=72 */
%   | | | else return 0.011074711361286002;  // std dev = 3.162, 157.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=42 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04163107319136553;  // std dev = 3.155, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.1712393090454445;  // std dev = 1.763, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( location(A, M) )
%   | | | then return 0.016512465153268593;  // std dev = 1.180, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.11253100632825808;  // std dev = 0.252, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(F, B), enzyme(A, G) )
%   | | | then return -0.37864818287873603;  // std dev = 0.947, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.38633259704164813;  // std dev = 1.193, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.12826060546004087;  // std dev = 0.635, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return -0.005622731297255275;  // std dev = 4.552, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return -0.13072182069256125;  // std dev = 0.780, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.036501084802043386;  // std dev = 2.148, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.2745175492083921;  // std dev = 0.728, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.048439238677005704;  // std dev = 4.315, 223.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=78 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16847700858327758;  // std dev = 0.042, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1709320986137753;  // std dev = 0.235, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), phenotype(A, G) )
%   | | then return 0.36686299306028025;  // std dev = 0.129, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return -0.05658130248949054;  // std dev = 1.980, 120.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=16 */
%   | | | else return 0.01773732211039439;  // std dev = 4.746, 298.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=96 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, I), phenotype(A, K) )
%   | | | then return 0.26441364112914373;  // std dev = 0.994, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.011194700209402653;  // std dev = 2.659, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.15383797422582896;  // std dev = 2.037, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.054871877906188686;  // std dev = 2.317, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */


Results
   AUC ROC   = 0.976207
   AUC PR    = 0.158106
   CLL	      = -0.202871
   Precision = 0.13347 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.226481


Total learning time: 13.799 seconds
Total inference time: 10.789 seconds
AUC ROC: 0.976207


Results scoring model
   AUC ROC   = 0.983231
   AUC PR    = 0.191455
   CLL	      = -0.199716
   Precision = 0.172919 at threshold = 0.5
   Recall    = 0.84
   F1        = 0.286798


Total scoring time: 13.404 seconds
Refined model CLL: -0.199716


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980592
   AUC PR    = 0.245942
   CLL	      = -0.179473
   Precision = 0.158025 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.260163


Total learning time: 62.78 seconds
Total inference time: 9.215 seconds
AUC ROC: 0.980592
Total revision time: 62.78
Best scored revision CLL: -0.177118


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:03:56
{'AUC ROC': 0.980592, 'AUC PR': 0.245942, 'CLL': -0.179473, 'Precision': [0.158025, 0.5], 'Recall': 0.735632, 'F1': 0.260163, 'Learning time': 62.78, 'Inference time': 9.215, 'parameter_0.8': {'AUC ROC': 0.980592, 'AUC PR': 0.245942, 'CLL': -0.179473, 'Precision': [0.158025, 0.5], 'Recall': 0.735632, 'F1': 0.260163, 'Learning time': 7.216, 'Inference time': 9.215}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8164822684328454;  // std dev = 1.384, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0925986958650624;  // std dev = 6.125, 209.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=49 */
%   | | | else return 0.13419060176617859;  // std dev = 6.194, 192.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=53 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16087002353488553;  // std dev = 7.878, 294.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=89 */
%   | | | else return 0.18282425977483605;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.727805653269312;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.6893441148077735;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.24198066537814542;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7558647321462059;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6743967583733896;  // std dev = 0.952, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.06922619028928663;  // std dev = 6.171, 220.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=49 */
%   | | | else return 0.13383398463918939;  // std dev = 6.122, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13507538128086863;  // std dev = 7.906, 299.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=89 */
%   | | | else return 0.19672410207048344;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5475250660938088;  // std dev = 0.986, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.531300350840312;  // std dev = 2.219, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.004650380120693794;  // std dev = 5.322, 212.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=34 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7690645680756055;  // std dev = 1.446, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | | else return -0.17770484302909367;  // std dev = 0.000, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.49987882879934387;  // std dev = 0.993, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.111859954507565;  // std dev = 8.038, 314.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=94 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.086308085663335;  // std dev = 4.240, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.35354121111824754;  // std dev = 1.349, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return 0.4343019972231844;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.37390884770309074;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.44885597773503394;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7151689498513514;  // std dev = 1.828, 105.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=102 */
%   | | else return -0.159110839674266;  // std dev = 0.196, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4419802405856109;  // std dev = 0.928, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09444381423655969;  // std dev = 7.922, 303.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=89 */
%   | | | else return 0.13399095441808742;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2647776929275093;  // std dev = 0.955, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.31655787673570396;  // std dev = 1.005, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3436630580400359;  // std dev = 0.157, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5542382899723136;  // std dev = 2.148, 106.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=102 */
%   | | else return -0.13869074804415546;  // std dev = 0.157, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6702186032239358;  // std dev = 2.002, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | | else return -0.2175912231876062;  // std dev = 0.092, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.41231426543714195;  // std dev = 0.151, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1016531053558961;  // std dev = 6.951, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2804780265550043;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29068943695958194;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18594364049023318;  // std dev = 1.905, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   else if ( interaction(A, F) )
%   | then return 0.02268952688369355;  // std dev = 5.468, 399.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=109 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.20508717429545575;  // std dev = 0.748, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.06711750604385854;  // std dev = 7.500, 303.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=94 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.10012116150774927;  // std dev = 3.767, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22641961638103725;  // std dev = 0.102, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5132189712183642;  // std dev = 1.594, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | else return -0.16715267083729152;  // std dev = 0.778, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2411912294621133;  // std dev = 0.053, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.284852538680595;  // std dev = 1.787, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | else return -0.0018777116395634014;  // std dev = 6.933, 381.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=89 */
%   | else if ( interaction(A, H) )
%   | | then return 0.05114862191402977;  // std dev = 2.726, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1254764618551655;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16718518683846456;  // std dev = 0.914, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0.1963686248862977;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.04136285611684981;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.043766968320255666;  // std dev = 1.597, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(A, G) )
%   | then return 0.003680594019082234;  // std dev = 4.772, 431.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=109 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20030897027887537;  // std dev = 0.202, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0644220598941327;  // std dev = 7.033, 285.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=94 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11705085663511262;  // std dev = 1.550, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.024224870269934643;  // std dev = 3.348, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18322124864808095;  // std dev = 0.147, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16516886745722925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20551826759994013;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, G) )
%   | then return 0.011026358575729962;  // std dev = 4.731, 404.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=109 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5329828805878359;  // std dev = 3.365, 137.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=127 */
%   | | | else return -0.2294111911996422;  // std dev = 0.654, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.14154005445577875;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15502882429676657;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0.18716209392587568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.13986056833406174;  // std dev = 0.999, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.019098998444490114;  // std dev = 1.912, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.17681484265653494;  // std dev = 0.133, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, I) )
%   | | then return 0.007298290266325942;  // std dev = 4.769, 376.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=102 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023192195085262112;  // std dev = 6.632, 369.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=114 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.988379
   AUC PR    = 0.27116
   CLL	      = -0.198273
   Precision = 0.298507 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.416667


Total learning time: 3.649 seconds
Total inference time: 5.503 seconds
AUC ROC: 0.988379


Results scoring model
   AUC ROC   = 0.988971
   AUC PR    = 0.280613
   CLL	      = -0.196435
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.680851
   F1        = 0.389452


Total scoring time: 9.818 seconds
Parameter learned model CLL: -0.196435


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.384, 2, 46], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.913, 1, 5], 'false,true,false,true': [0.894, 1, 4], 'false,true,false,false': [0.953, 1, 10], 'false,false,true,true': [6.125, 160, 49], 'false,false,true,false': [6.194, 139, 53], 'false,false,false,true': [7.878, 205, 89], 'false,false,false,false': [4.109, 52, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 21], 'true,false': [0.981, 1, 25], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.059, 0, 7], 'false,true,false': [0.952, 1, 13], 'false,false,true,true': [6.171, 171, 49], 'false,false,true,false': [6.122, 128, 53], 'false,false,false,true': [7.906, 210, 89], 'false,false,false,false': [3.993, 44, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.986, 1, 46], 'false,true,true,true': [2.219, 7, 16], 'false,true,true,false': [5.322, 178, 34], 'false,true,false,true': [1.446, 2, 59], 'false,true,false,false': [0.0, 146, 0], 'false,false,true,true': [0.993, 1, 8], 'false,false,true,false': [8.038, 220, 94], 'false,false,false,true': [4.24, 64, 25], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [1.349, 2, 24], 'true,true,false': [0.011, 0, 7], 'true,false': [0.968, 1, 15], 'false,true,true,true': [0.166, 0, 7], 'false,true,true,false': [1.828, 3, 102], 'false,true,false': [0.196, 314, 0], 'false,false,true': [0.928, 1, 13], 'false,false,false,true': [7.922, 214, 89], 'false,false,false,false': [4.054, 48, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.955, 1, 12], 'true,false': [1.005, 1, 34], 'false,true,true,true': [0.157, 0, 7], 'false,true,true,false': [2.148, 4, 102], 'false,true,false': [0.157, 294, 0], 'false,false,true,true': [2.002, 4, 47], 'false,false,true,false': [0.092, 107, 0], 'false,false,false,true': [0.151, 0, 9], 'false,false,false,false': [6.951, 151, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.018, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.905, 4, 39], 'false,true': [5.468, 290, 109], 'false,false,true,true': [0.748, 1, 8], 'false,false,true,false': [7.5, 209, 94], 'false,false,false,true': [3.767, 45, 25], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.102, 0, 14], 'true,true,false': [1.594, 3, 85], 'true,false': [0.778, 184, 0], 'false,true,true,true': [0.053, 0, 20], 'false,true,true,false': [1.787, 4, 26], 'false,true,false': [6.933, 292, 89], 'false,false,true': [2.726, 70, 33], 'false,false,false,true': [3.013, 23, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.914, 1, 28], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.772, 1, 3], 'true,false,false,false': [1.597, 3, 13], 'false,true': [4.772, 322, 109], 'false,false,true,true': [0.202, 0, 8], 'false,false,true,false': [7.033, 191, 94], 'false,false,false,true': [1.55, 12, 10], 'false,false,false,false': [3.348, 39, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.147, 0, 31], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.108, 0, 14], 'false,true': [4.731, 295, 109], 'false,false,true,true': [3.365, 10, 127], 'false,false,true,false': [0.654, 249, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.011, 0, 7], 'true,true,true,false': [0.087, 0, 16], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.999, 2, 5], 'true,false': [1.912, 5, 17], 'false,true': [0.133, 0, 20], 'false,false,true': [4.769, 274, 102], 'false,false,false,true': [6.632, 255, 114], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.03993055555555639, 0.20858059139920918], 'false': [0.13888888888888906, 0.20150876533598455], 'false,false': [0.18966299960821267, 0.21285808734316305], 'false,false,false': [0.21108103105187745, 0.2192612582222983], 'false,false,true': [0.17948307044252748, 0.19984266493055644], 'false,true': [0.1874999999999999, 0.109375], 'false,true,true': [0.25, 0.1388888888888887], 'false,true,false': [0.15999999999999986, 0.0826446280991734]}, {'': [0.020823902218198666, 0.2061358939239687], 'false': [0.08135566906047656, 0.20167966655057215], 'false,false': [0.18948012144258844, 0.21375940041363764], 'false,false,false': [0.2090580642274685, 0.23104389834068537], 'false,false,true': [0.17311983471074663, 0.20707548609627335], 'false,true': [0.10934649556748066, 0.06468030695076614], 'false,true,true': [0.0, 0.0005054938356257667], 'true': [-3.383536836952858e-16, 0.03698224852071]}, {'': [0.020666506826256304, 0.1938447326718794], 'false': [0.18140414867449262, 0.2062798930677017], 'false,false': [0.20717499950991144, 0.20199469763918718], 'false,false,true': [0.10951880616101316, 0.20577892980303938], 'false,false,false': [0.20199469763918718, nan], 'false,true': [0.1668503324690899, 0.19640535484084978], 'false,true,false': [0.034266348872828874, -1.5816875967262503e-16], 'false,true,true': [0.21405864196266897, 0.13361551336361469]}, {'': [0.05700254448050362, 0.17987589022148598], 'false': [0.15163218912355747, 0.20952632458924988], 'false,false': [0.061472669153359805, 0.21089267309454335], 'false,false,false': [0.2071461540789205, 0.22518296115593975], 'false,true': [0.03424361314553145, 0.00012234211703552139], 'true': [0.05626085206120807, 0.058525230284282165], 'true,true': [0.07001959039457527, 1.8181402397462625e-05], 'false,true,true': [0.0039266285963124314, 0.03183208300397335]}, {'': [0.04056789419441922, 0.15540572396593835], 'false': [0.10488260964337268, 0.20720829140027036], 'false,false': [0.19771854522365637, 0.21288477028807018], 'false,false,false': [0.0025293846140550524, 0.2176525475737259], 'false,false,true': [0.0785868798145558, 7.991083019741888e-05], 'false,true': [0.04364025285816406, 8.359939709979782e-05], 'false,true,true': [0.003535162410377784, 0.043541857111221195], 'true': [0.07008239359720263, 0.02887921091444444]}, {'': [0.07374700314290511, 0.13019581050037668], 'false': [0.07493683053707997, 0.18643928323648695], 'false,false': [0.18262589751671962, 0.2027480720368818], 'false,false,false': [0.2027480720368818, nan], 'false,false,true': [0.06215940238895818, 0.18565500555028328], 'true': [6.647595208426298e-05, 0.0844119445051179], 'true,true': [6.327407507494831e-05, 0.0], 'true,true,true': [6.327407507494831e-05, nan]}, {'': [0.10878676081287439, 0.12473023196498523], 'false': [0.1264419982520234, 0.11817997273659121], 'false,true': [0.06437762702814502, 0.12617578830905538], 'false,false': [0.07214632416563453, 0.23891966759002733], 'false,false,false': [0.23891966759002733, nan], 'true': [0.034748677989035956, 0.0032884202131505426], 'false,true,true': [0.00014000509484500822, 0.10644018434794293], 'true,true': [0.0007374401639005616, 0.028869809880106064]}, {'': [0.0833946199260658, 0.10884973747147011], 'false': [0.052841919418546206, 0.17270565516994796], 'false,false': [0.16943371074416066, 0.1832170185146899], 'false,false,false': [0.10926952205567719, 0.20756621998558697], 'false,false,true': [0.005080682625494312, 0.1735429583629432], 'true': [0.028793533823274462, 0.14648063530204933], 'true,false': [0.0, 0.15851292338134887], 'true,false,false': [0.14897188364007902, 0.15944876591492782]}, {'': [0.000842732164413078, 0.10846058462053335], 'false': [0.05540701064465209, 0.16352319689133019], 'false,false': [0.16352319689133019, nan], 'false,false,true': [0.08266286224573427, 0.0017159165742289919], 'true': [0.0006967099302876118, 0.0008854345010674021], 'true,false': [0.0, 0.0008401415497804519], 'true,false,true': [nan, 0.0]}, {'': [0.09943843614584759, 0.08797467565688567], 'true': [0.04741818536487271, 0.16622577518540382], 'false': [0.0008787712343918119, 0.08962971303465578], 'false,false': [0.060500043623535046, 0.11918448290769672], 'false,false,false': [0.11918448290769672, nan], 'true,true': [0.00037632259290793673, 0.1363273329045113], 'true,true,false': [0.0, 0.1424346884726372], 'true,true,true': [1.680764603394423e-05, 0.00047823523508869203]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
1;false,true,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, E), interaction(C, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;true,true,false;interaction(C, D), enzyme(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return 0.6706489350995122;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( complex(F, G), phenotype(F, H) )
%   | | | then return 0.06745126068090773;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.18282425977483702;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(A, K), enzyme(I, K) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.17621509286032652;  // std dev = 9.233, 393.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=125 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.15323090231262712;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.26822087754555596;  // std dev = 5.799, 139.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.05280674554428788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6244715048012528;  // std dev = 1.305, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return 0.7511884069981043;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7863877504842743;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return -0.013782072406841683;  // std dev = 3.313, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   | | | else return 0.10169008048446572;  // std dev = 6.220, 201.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=53 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.12664172898711393;  // std dev = 7.933, 304.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=89 */
%   | | | else return 0.1903708916490052;  // std dev = 6.243, 169.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.48309543564469587;  // std dev = 0.291, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1281635922774298;  // std dev = 0.034, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.09643501848565784;  // std dev = 5.981, 180.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=50 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.786028993510953;  // std dev = 1.023, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return -0.18391505923077386;  // std dev = 0.159, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4346046760969851;  // std dev = 6.636, 192.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=121 */
%   | | | else return -0.1869859955900396;  // std dev = 0.108, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.15048133805646532;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.016060521616480253;  // std dev = 1.941, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3894916444422238;  // std dev = 0.220, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(E, A) )
%   | | then return 0.4144596712647425;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.005445815756887851;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.672244119934885;  // std dev = 0.216, 115.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=109 */
%   | | else return -0.16708426238443735;  // std dev = 0.513, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7029266154793354;  // std dev = 1.015, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return -0.17640342127211564;  // std dev = 0.380, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.20060053516026083;  // std dev = 3.272, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.1218827028056322;  // std dev = 5.787, 181.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), phenotype(D, G) )
%   | | then return -0.11506251304862583;  // std dev = 0.474, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.36677103619575774;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.31283363791401503;  // std dev = 0.229, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5514142258175931;  // std dev = 0.163, 112.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=109 */
%   | | else return -0.14704869562987566;  // std dev = 0.467, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5763119896763746;  // std dev = 0.451, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.165749093213035;  // std dev = 0.428, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.1397609654875539;  // std dev = 2.527, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.06365993631643696;  // std dev = 6.290, 219.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=67 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.285975747007583;  // std dev = 0.134, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( phenotype(A, F), interaction(E, A) )
%   | | | then return -0.47028134536383703;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.16431001929239147;  // std dev = 1.056, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.0040432686894420105;  // std dev = 0.589, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.42556534099830806;  // std dev = 0.464, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then if ( enzyme(I, J), location(A, K) )
%   | | | then return -0.002007990458130857;  // std dev = 3.366, 154.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=34 */
%   | | | else return 0.03258131162834767;  // std dev = 4.008, 236.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=68 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08108352907597446;  // std dev = 6.177, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
%   | | | else return 0.019089688090258922;  // std dev = 3.686, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3675121441451976;  // std dev = 0.209, 104.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=99 */
%   | else return -0.14709122532464247;  // std dev = 0.054, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.3235656367705121;  // std dev = 0.248, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11210809754214614;  // std dev = 0.217, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return 0.04492219284900869;  // std dev = 6.193, 279.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(H, J), recursion_proteinclass(H, B) )
%   | | | then return -0.4013341163112198;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.029210422042232842;  // std dev = 2.569, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.19301280373086327;  // std dev = 2.298, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.10502345065435639;  // std dev = 1.510, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18881980205248647;  // std dev = 0.149, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), enzyme(A, E) )
%   | | then if ( complex(D, G), phenotype(A, H) )
%   | | | then return -0.03456348317722404;  // std dev = 0.846, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return -0.11835069645749634;  // std dev = 0.274, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.3548337064287327;  // std dev = 0.367, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.009904992103400477;  // std dev = 4.106, 178.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=44 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), complex(A, M) )
%   | | | then return -0.017752415070317256;  // std dev = 2.417, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | | else return 0.025737536244309713;  // std dev = 4.418, 166.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=53 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.4255999709915504;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.029812955252951193;  // std dev = 5.408, 319.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.06301570755424313;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.164620020165861;  // std dev = 0.181, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.21152880715457797;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1894114105960886;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08715020745470313;  // std dev = 0.291, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.019847833009515935;  // std dev = 4.551, 345.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=102 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.0928442720283287;  // std dev = 2.385, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | | | else return 0.30467007535004115;  // std dev = 5.066, 126.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=82 */
%   | | else return -0.17632833740796722;  // std dev = 0.055, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1520921698096389;  // std dev = 0.062, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.7840113238718956;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2135240655276989;  // std dev = 0.085, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.404608361166762;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.16519320923582598;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.03521417247511213;  // std dev = 1.253, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07266118557691882;  // std dev = 0.034, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.057028847938522365;  // std dev = 3.103, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | | else return -0.00955301617927172;  // std dev = 7.632, 648.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=184 */


Results
   AUC ROC   = 0.983207
   AUC PR    = 0.351048
   CLL	      = -0.194204
   Precision = 0.333333 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.449438


Total learning time: 32.157 seconds
Total inference time: 16.918 seconds
AUC ROC: 0.983207


Results scoring model
   AUC ROC   = 0.984098
   AUC PR    = 0.332027
   CLL	      = -0.200564
   Precision = 0.305598 at threshold = 0.5
   Recall    = 0.716312
   F1        = 0.42842


Total scoring time: 61.402 seconds
Refined model CLL: -0.200564


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988379
   AUC PR    = 0.27116
   CLL	      = -0.198273
   Precision = 0.298507 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.416667


Total learning time: 107.026 seconds
Total inference time: 5.503 seconds
AUC ROC: 0.988379
Total revision time: 107.026
Best scored revision CLL: -0.196435


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:06:06
{'AUC ROC': 0.988379, 'AUC PR': 0.27116, 'CLL': -0.198273, 'Precision': [0.298507, 0.5], 'Recall': 0.689655, 'F1': 0.416667, 'Learning time': 107.026, 'Inference time': 5.503, 'parameter_1.0': {'AUC ROC': 0.988379, 'AUC PR': 0.27116, 'CLL': -0.198273, 'Precision': [0.298507, 0.5], 'Recall': 0.689655, 'F1': 0.416667, 'Learning time': 3.649, 'Inference time': 5.503}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.07689893509951237;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.17393840878372288;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.20508771060971645;  // std dev = 3.332, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return -0.019396686295736848;  // std dev = 2.465, 53.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=7 */
%   | | | else return 0.18857057816923628;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.20908388352914248;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.2105717177991725;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44425532563517345;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return -0.1489959515348381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.045448492909606425;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7886274056461164;  // std dev = 0.243, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19193418027889775;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3850724367400988;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1636243989356315;  // std dev = 3.286, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12691702504431454;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4447570289458411;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4447570289458411;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.362102624328727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6821121833311713;  // std dev = 0.946, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.15906410113781771;  // std dev = 0.030, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4962613214692249;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06924963739819667;  // std dev = 3.450, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.18868567871767286;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.005917463078241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.33925079641157524;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.28325910095648354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5264924347689417;  // std dev = 1.178, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.13866548860681996;  // std dev = 0.039, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5542291207273662;  // std dev = 0.965, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.24453557710785342;  // std dev = 0.046, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3923349067557259;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16442742835228988;  // std dev = 3.073, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.33792560412765094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2778058037149728;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.05403064181563716;  // std dev = 2.213, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4111770895010602;  // std dev = 0.257, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03188779207729975;  // std dev = 3.264, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01588169625710061;  // std dev = 1.792, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.228954138676549;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4914805146575112;  // std dev = 0.551, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.18790169743238225;  // std dev = 0.745, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21692253745073786;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3511993138100452;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.02497904400789502;  // std dev = 3.143, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | else if ( interaction(A, H) )
%   | | then return 0.033177598753327;  // std dev = 1.352, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.03260843736919528;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19640095507771127;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19126081032365894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02803476988194271;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -0.010817093114229355;  // std dev = 2.061, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2535394791189687;  // std dev = 0.167, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.019349824186258444;  // std dev = 3.150, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.019684437436251964;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0408514630638804;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1771518490513555;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19588016403364283;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return -0.0037010327409046175;  // std dev = 2.050, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5331407188711715;  // std dev = 1.510, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return -0.24163273130711416;  // std dev = 0.333, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1661746378542991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13306034287268642;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14819691805342156;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.16935659965875344;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then return 0.007761206338055642;  // std dev = 2.011, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.01789354607065627;  // std dev = 3.084, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981282
   AUC PR    = 0.179264
   CLL	      = -0.210383
   Precision = 0.19708 at threshold = 0.5
   Recall    = 0.519231
   F1        = 0.285714


Total learning time: 1.55 seconds
Total inference time: 6.143 seconds
AUC ROC: 0.981282


Results scoring model
   AUC ROC   = 0.993267
   AUC PR    = 0.405922
   CLL	      = -0.186366
   Precision = 0.417722 at threshold = 0.5
   Recall    = 0.622642
   F1        = 0.5


Total scoring time: 2.734 seconds
Parameter learned model CLL: -0.186366


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 8], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [2.339, 25, 7], 'false,false,true,false': [2.865, 26, 12], 'false,false,false,true': [3.332, 32, 17], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [2.465, 46, 7], 'false,false,true,false': [2.787, 22, 12], 'false,false,false,true': [3.252, 28, 17], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.943, 1, 8], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.375, 29, 7], 'false,true,false,true': [0.243, 0, 13], 'false,true,false,false': [0.0, 20, 0], 'false,false,true,true': [0.737, 1, 2], 'false,false,true,false': [3.286, 30, 18], 'false,false,false,true': [1.826, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.946, 1, 19], 'false,true,false': [0.03, 43, 0], 'false,false,true': [0.045, 0, 3], 'false,false,false,true': [3.45, 40, 17], 'false,false,false,false': [1.708, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.816, 1, 2], 'true,false': [1.05e-08, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.178, 1, 19], 'false,true,false': [0.039, 54, 0], 'false,false,true,true': [0.965, 1, 8], 'false,false,true,false': [0.046, 25, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [3.073, 23, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.065, 0, 7], 'false,true': [2.213, 43, 20], 'false,false,true,true': [0.257, 0, 2], 'false,false,true,false': [3.264, 41, 18], 'false,false,false,true': [1.792, 12, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.083, 0, 4], 'true,true,false': [0.551, 0, 16], 'true,false': [0.745, 43, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [3.143, 54, 16], 'false,false,true': [1.352, 19, 9], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.034, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.82, 1, 4], 'false,true': [2.061, 69, 20], 'false,false,true,true': [0.167, 0, 2], 'false,false,true,false': [3.15, 45, 18], 'false,false,false,true': [0.591, 3, 1], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.046, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.037, 0, 4], 'false,true': [2.05, 65, 20], 'false,false,true,true': [1.51, 2, 25], 'false,false,true,false': [0.333, 44, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.104, 0, 4], 'false,true': [0.035, 0, 5], 'false,false,true': [2.011, 56, 19], 'false,false,false,true': [3.084, 59, 22], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.2213992214532875], 'false': [0.0, 0.21412993572084593], 'false,false': [0.1977551020408158, 0.2289281997918844], 'false,false,false': [0.22657226155768379, 0.2366863905325442], 'false,false,true': [0.17089843750000017, 0.2160664819944598], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [1.1102230246251565e-16, 0.20498637157295876], 'false': [0.0, 0.20102243766950925], 'false,false': [0.1693793948773968, 0.23542626175932685], 'false,false,false': [0.23506172839506154, 0.23668639053254428], 'false,false,true': [0.11463154147383402, 0.22837370242214566], 'true': [1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0987654320987654, 0.21071363239523805], 'false': [0.19606554295081846, 0.22483182105563432], 'false,false': [0.22503720380477488, 0.2222222222222223], 'false,false,true': [0.18116668988572004, 0.2248944501336894], 'false,false,false': [0.2222222222222223, nan], 'false,true': [0.15339663988312624, 0.23134568226078475], 'false,true,false': [0.00453422330100709, -2.2204460492503132e-17], 'false,true,true': [0.0, 0.15663580246913572]}, {'': [-5.551115123125783e-17, 0.1915660348483177], 'false': [0.16590210371582972, 0.2143666584528521], 'false,false': [0.0006787967731073744, 0.21678113925686535], 'false,false,false': [0.2087688191998845, 0.2430555555555556], 'false,true': [0.047229535831080666, 2.0412347771051635e-05], 'false,true,true': [0.0, 0.04471453082011392], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.09876543209876543, 0.15673020246695035], 'false': [0.10537644015558134, 0.20824898449864462], 'false,false': [0.15165448179530377, 0.2373788295973534], 'false,false,false': [0.0, 0.24216692078589042], 'false,false,true': [0.10354721814728965, 8.411486829144721e-05], 'false,true': [0.06871774349851387, 2.7580967485867442e-05], 'true': [0.2222222222222222, 1.850371707708594e-17], 'false,true,true': [0.0, 0.06933637092689074]}, {'': [0.0009224225504237127, 0.1356377291680736], 'false': [0.0777133930659277, 0.18230972706430362], 'false,false': [0.18030958782405296, 0.1888540673867525], 'false,false,false': [0.1888540673867525, nan], 'false,false,true': [0.03313824934555157, 0.18058171327552072], 'true': [0.0, 0.0006023984002767126], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.1023879870865873, 0.12880103902353737], 'false': [0.13859959061337848, 0.11172187553612227], 'false,true': [0.004507563167361853, 0.14109952175826102], 'false,false': [0.06530127696220674, 0.19555555555555557], 'false,false,false': [0.19555555555555557, nan], 'true': [0.02657376272329708, 0.012896545908960395], 'true,true': [0.001727689372657104, 0.01900126144381764], 'false,true,true': [0.0, 0.0]}, {'': [0.08169520340573234, 0.10230770401561802], 'false': [0.0477428986621115, 0.16153686500063316], 'false,false': [0.1547264547551083, 0.18920359286287944], 'false,false,false': [0.08739925834782988, 0.22222222222222213], 'false,false,true': [0.01393710151046354, 0.15750842589494674], 'true': [0.00039575903134044893, 0.11570270342016507], 'true,false': [nan, 0.11570270342016505], 'true,false,false': [0.0, 0.13440278739115127]}, {'': [0.0005251740409080649, 0.10744270169491929], 'false': [0.04941786854352573, 0.17515732002491377], 'false,false': [0.17515732002491377, nan], 'false,false,true': [0.0844914591265364, 0.0025200163149286274], 'true': [0.0005234544217222539, 0.00035151876905599455], 'true,false': [nan, 0.00035151876905599455]}, {'': [0.001640743078291651, 0.08527749598226661], 'false': [0.0002413231756611678, 0.08705283879530187], 'false,false': [0.05394623431739805, 0.11739067608482975], 'false,false,false': [0.11739067608482975, nan], 'true': [0.0002436792293620584, 0.0026813420310521675], 'true,true': [0.0002436792293620584, nan], 'true,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;enzyme(A, F), enzyme(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F), complex(E, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.13885068948547694;  // std dev = 4.798, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.1412001911670943;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05564869830516511;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.06628504588099723;  // std dev = 3.380, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.15881712374068066;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return -0.1320387929339707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08021336871331788;  // std dev = 2.252, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7276043892015706;  // std dev = 0.927, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.17199273153275077;  // std dev = 0.128, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.19606986701090004;  // std dev = 2.371, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.08382260606953464;  // std dev = 3.101, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3763131547955054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6778574502808635;  // std dev = 0.952, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1271237122028982;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1678640255530232;  // std dev = 0.189, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 4.28028643038339E-4;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.13999614453456657;  // std dev = 3.639, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.34322985536982936;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.00239051929993613;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35448885947466924;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5615418909219458;  // std dev = 0.099, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.14384397682418046;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6550377352750913;  // std dev = 0.547, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23369446841836414;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.133117169330519;  // std dev = 3.228, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.2509161280761282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, E) )
%   | | then return 0.3102409308803412;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.27822087395210027;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then return -0.11166897087956683;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09331573168569159;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( phenotype(A, J), complex(H, K) )
%   | | | then return -0.02333111568290441;  // std dev = 1.102, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.03038507017004792;  // std dev = 1.776, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.031088788775239375;  // std dev = 2.460, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.17336266055050265;  // std dev = 2.648, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4151006745123002;  // std dev = 0.161, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15157009749997294;  // std dev = 0.045, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.209972687584202;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.08908538049037765;  // std dev = 0.914, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return 0.05904139551580924;  // std dev = 2.910, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4041935331000448;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.22227418591221706;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1301503683339404;  // std dev = 0.874, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0330242841959927;  // std dev = 1.145, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return -0.05366850340786625;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.18988557593805228;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return -0.09179047076920092;  // std dev = 0.220, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( phenotype(A, G), location(E, H) )
%   | | | then return 0.08774777403181962;  // std dev = 1.074, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.005441641033732481;  // std dev = 1.299, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, J) )
%   | | | then return -0.06109595706964113;  // std dev = 1.630, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.17867926737269882;  // std dev = 1.660, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.06829772915941343;  // std dev = 0.598, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.4779547161292863;  // std dev = 1.509, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1713494446588093;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(D, G) )
%   | | | then return 0.04230171761407833;  // std dev = 1.069, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.5154792440990518;  // std dev = 0.323, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.06106144020001595;  // std dev = 0.497, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.17258039042571946;  // std dev = 0.158, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), complex(L, M) )
%   | | | then return 0.015017754150216188;  // std dev = 1.688, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.19945603106615245;  // std dev = 0.894, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.041332022644142055;  // std dev = 0.879, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.024543650415738152;  // std dev = 2.848, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, E) )
%   | | then return 0.13268435177431304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17616676769999806;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1276117382030869;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.14058718396139008;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return -0.046710400650578215;  // std dev = 1.906, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return 0.048042374304351876;  // std dev = 1.882, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.012183127901462565;  // std dev = 1.479, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.198653134130157;  // std dev = 1.987, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */


Results
   AUC ROC   = 0.929767
   AUC PR    = 0.134967
   CLL	      = -0.220999
   Precision = 0.167969 at threshold = 0.5
   Recall    = 0.413462
   F1        = 0.238889


Total learning time: 3.652 seconds
Total inference time: 4.936 seconds
AUC ROC: 0.929767


Results scoring model
   AUC ROC   = 0.969306
   AUC PR    = 0.364993
   CLL	      = -0.229168
   Precision = 0.4125 at threshold = 0.5
   Recall    = 0.622642
   F1        = 0.496241


Total scoring time: 2.461 seconds
Refined model CLL: -0.229168


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981282
   AUC PR    = 0.179264
   CLL	      = -0.210383
   Precision = 0.19708 at threshold = 0.5
   Recall    = 0.519231
   F1        = 0.285714


Total learning time: 10.397 seconds
Total inference time: 6.143 seconds
AUC ROC: 0.981282
Total revision time: 10.397
Best scored revision CLL: -0.186366


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:06:29
{'AUC ROC': 0.981282, 'AUC PR': 0.179264, 'CLL': -0.210383, 'Precision': [0.19708, 0.5], 'Recall': 0.519231, 'F1': 0.285714, 'Learning time': 10.397, 'Inference time': 6.143, 'parameter_0.2': {'AUC ROC': 0.981282, 'AUC PR': 0.179264, 'CLL': -0.210383, 'Precision': [0.19708, 0.5], 'Recall': 0.519231, 'F1': 0.285714, 'Learning time': 1.55, 'Inference time': 6.143}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11424649607512179;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.165841242791819;  // std dev = 5.519, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12005369700427426;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5528067455442877;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276481462555765;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6011404714876779;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09976244863530376;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.11173855063232871;  // std dev = 5.648, 160.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09871137410356695;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.014747689426266806;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5277438361521004;  // std dev = 0.960, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5261304961727077;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.036472387302221326;  // std dev = 3.895, 91.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=19 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7590382171808788;  // std dev = 1.441, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return -0.17910540812247075;  // std dev = 6.66e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5839968893606153;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19766023877938582;  // std dev = 2.697, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1537485939421502;  // std dev = 1.319, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.42424620200586943;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.5346193976021489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.4653806023978512;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.41676580147981185;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6581214836582164;  // std dev = 2.107, 70.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=65 */
%   | | else return -0.16188423984517492;  // std dev = 0.223, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5276945301121185;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17887484240789298;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.3250772483964007;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3487222841887734;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33609940406011174;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18260944830165307;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5559366461787792;  // std dev = 1.387, 67.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | | else return -0.1420406210083878;  // std dev = 0.250, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7237430731159034;  // std dev = 0.300, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2287563896513155;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.37569610966330297;  // std dev = 0.085, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.011183768042890032;  // std dev = 2.338, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2538212943157736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2783215853993304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.26866836783850584;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(F, A) )
%   | then return 0.0475346136154451;  // std dev = 4.134, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.03146002148644772;  // std dev = 0.385, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08259527062545814;  // std dev = 2.538, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04850607650951506;  // std dev = 1.143, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2590719448562169;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41709517983143574;  // std dev = 0.911, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.15539278689759112;  // std dev = 0.843, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21388269246078565;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2595188212601825;  // std dev = 0.678, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.016060755113888013;  // std dev = 2.751, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03705790737012435;  // std dev = 2.899, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09984771947932779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1728068699817676;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.18389232067431283;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16266028832299784;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22340966926441422;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.023208893935506934;  // std dev = 3.861, 226.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20161300221963208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02117235748274537;  // std dev = 2.479, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.006462502862626784;  // std dev = 0.655, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.051828244991356076;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.07391504734950502;  // std dev = 0.726, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16586911514148944;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return -0.0039621122033234;  // std dev = 3.879, 274.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=71 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.560526470258264;  // std dev = 0.785, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.23094029131901833;  // std dev = 0.123, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.13717513899246703;  // std dev = 0.000168, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14246266315662903;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19389853168254323;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.09185382257785109;  // std dev = 1.001, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.07361253628756699;  // std dev = 0.743, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then return -0.007085117540349357;  // std dev = 3.802, 269.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=65 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0648158944568696;  // std dev = 2.068, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97966
   AUC PR    = 0.171589
   CLL	      = -0.199875
   Precision = 0.104561 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.187438


Total learning time: 2.233 seconds
Total inference time: 6.805 seconds
AUC ROC: 0.97966


Results scoring model
   AUC ROC   = 0.991931
   AUC PR    = 0.514
   CLL	      = -0.171823
   Precision = 0.27044 at threshold = 0.5
   Recall    = 0.811321
   F1        = 0.40566


Total scoring time: 5.226 seconds
Parameter learned model CLL: -0.171823


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [3.952, 61, 21], 'false,false,true,false': [5.519, 99, 44], 'false,false,false,true': [2.849, 31, 11], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [1.291, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.02, 0, 3], 'false,true,false': [0.926, 1, 6], 'false,false,true,true': [3.952, 61, 21], 'false,false,true,false': [5.648, 116, 44], 'false,false,false,true': [2.861, 32, 11], 'false,false,false,false': [1.291, 10, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.96, 1, 19], 'false,true,true,true': [0.823, 1, 3], 'false,true,true,false': [3.895, 72, 19], 'false,true,false,true': [1.441, 2, 49], 'false,true,false,false': [6.66e-08, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.697, 20, 12], 'false,false,false,true': [1.319, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 10], 'false,true,true,true': [0.1, 0, 6], 'false,true,true,false': [2.107, 5, 65], 'false,true,false': [0.223, 173, 0], 'false,false,true': [0.109, 0, 3], 'false,false,false,true': [2.613, 18, 11], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.026, 0, 6], 'true,false': [0.049, 0, 13], 'false,true,true,true': [0.9, 1, 6], 'false,true,true,false': [1.387, 2, 65], 'false,true,false': [0.25, 165, 0], 'false,false,true,true': [0.3, 0, 7], 'false,false,true,false': [0.004, 4, 0], 'false,false,false,true': [0.085, 0, 2], 'false,false,false,false': [2.338, 25, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.049, 0, 17], 'false,true': [4.134, 148, 71], 'false,false,true,true': [0.385, 1, 1], 'false,false,true,false': [2.538, 24, 12], 'false,false,false,true': [1.143, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.094, 0, 4], 'true,true,false': [0.911, 1, 36], 'true,false': [0.843, 94, 0], 'false,true,true,true': [0.031, 0, 9], 'false,true,true,false': [0.678, 1, 5], 'false,true,false': [2.751, 49, 16], 'false,false,true': [2.899, 69, 35], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.013, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [0.0, 0, 5], 'false,true': [3.861, 155, 71], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.479, 31, 12], 'false,false,false,true': [0.655, 4, 2], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.726, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.069, 0, 10], 'false,true': [3.879, 203, 71], 'false,false,true,true': [0.785, 0, 16], 'false,false,true,false': [0.123, 23, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.000168, 0, 2], 'true,true,true,false': [0.0, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.001, 1, 7], 'false,true': [0.743, 1, 10], 'false,false,true': [3.802, 204, 65], 'false,false,false,true': [2.068, 23, 13], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.8047739569477637e-16, 0.2116607169054722], 'false': [0.08999999999999977, 0.20274102079395215], 'false,false': [0.20543209876543245, 0.18992695117262537], 'false,false,true': [0.19051160023795388, 0.21301775147929083], 'false,false,false': [0.19331065759637137, 0.17283950617283952], 'false,true': [0.0, 0.109375], 'false,true,false': [nan, 0.10937499999999978], 'false,true,true': [0.0, nan]}, {'': [0.08616780045351502, 0.19920949641199773], 'false': [0.08911526175309384, 0.19354192955693672], 'false,false': [0.19640383098169342, 0.18034280111868112], 'false,false,true': [0.19051160023795385, 0.19937500000000138], 'false,false,false': [0.19037317468902132, 0.13888888888888898], 'false,true': [0.00013365255340066126, 0.12244897959183687], 'true': [9.868649107779169e-17, 0.13888888888888895], 'false,true,true': [nan, 0.00013365255340066126]}, {'': [0.04607882477929728, 0.20128715501947692], 'false': [0.19706851851424567, 0.2186028756980701], 'false,false': [0.22487133703117784, 0.1931879474975607], 'false,false,true': [0.0, 0.22737565699272566], 'false,true': [0.17647123437774842, 0.20769613735419676], 'false,true,false': [0.04070561658343408, 4.2700885562506023e-17], 'false,false,false': [0.1931879474975607, nan], 'false,true,true': [0.16926195296142976, 0.16669275477035936]}, {'': [0.04606773160902387, 0.16682126838441835], 'false': [0.155411041597066, 0.22822290152677235], 'false,false': [0.003943286519947908, 0.2394764568186759], 'false,false,false': [0.235434007134364, 0.25], 'false,true': [0.06280643227583263, 0.000286609540607448], 'false,true,true': [0.0016514685955170878, 0.06344939956980074], 'true': [0.08274809143004799, -1.7763568394002506e-16], 'true,true': [-2.4671622769447922e-17, 0.0]}, {'': [0.00019729012149405953, 0.12476548722881918], 'false': [0.10925694272732937, 0.20592696880860717], 'false,false': [0.21811117014742906, 0.16927496805320502], 'false,false,true': [0.012833105195070527, 3.5487228849662156e-06], 'false,false,false': [0.003570668401854188, 0.17082701385353452], 'false,true': [0.048863485446076035, 0.0003801470637901395], 'false,true,true': [0.11571413500606266, 0.028695138186586134], 'true': [0.00010991008311631949, 0.0001873023901626418]}, {'': [0.00014044330226055464, 0.09412752773477308], 'false': [0.0780388185166055, 0.16863242120270042], 'false,false': [0.17405488013094664, 0.14509980961103752], 'false,false,true': [0.07413686075575472, 0.17892121754109713], 'false,false,false': [0.14509980961103752, nan], 'true': [0.0001500660657947489, 0.0001386013140184971], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.07776818878346212, 0.09556432694092452], 'false': [0.10981571736993445, 0.084879310949057], 'false,true': [0.031240095679750866, 0.11639814118555031], 'false,false': [0.08080695712122131, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'true': [0.02266503655364594, 0.007554727123794063], 'false,true,true': [0.00010384180184961715, 0.07669488274552563], 'true,true': [0.00220729465869636, 0.022440455760996465]}, {'': [0.0005546271299058089, 0.07952328597667574], 'false': [0.06596391939243787, 0.13520058127893647], 'false,false': [0.14044531294876791, 0.11257950616537223], 'false,false,true': [0.0, 0.1429715096929561], 'false,false,false': [0.07151796829467792, 0.16], 'true': [1.7647117473457152e-05, 0.0007965161859597355], 'true,false': [0.0, 0.0008649579573668589], 'true,false,false': [0.0, -1.1102230246251566e-17]}, {'': [0.028735374662279444, 0.07000508772995558], 'false': [0.054905672620226297, 0.1677277464386494], 'false,false': [0.1677277464386494, nan], 'false,false,true': [0.03847049091976551, 0.0006531665957772075], 'true': [0.05277262983919728, 0.000470344193615152], 'true,false': [nan, 0.000470344193615152]}, {'': [0.053824935798732834, 0.061724188168511246], 'false': [0.05020838211398397, 0.061957997520046174], 'false,false': [0.05373511220061274, 0.11884166906075297], 'false,false,false': [0.11884166906075297, nan], 'true': [0.0004157105321612781, 0.12524734241690186], 'true,true': [4.835368224400918e-06, 0.0], 'true,true,true': [1.4114509106627482e-08, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.17574550162311856;  // std dev = 7.106, 233.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=74 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7512057788947993;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7353395955528769;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 1.86e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.20758656008866413;  // std dev = 2.970, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.09452247376312559;  // std dev = 6.887, 248.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5543857185007418;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6096706105383727;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.12757588807896564;  // std dev = 3.830, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.721757708252557;  // std dev = 1.955, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | | else return -0.177824274141284;  // std dev = 0.022, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12282349601077751;  // std dev = 2.830, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else return 0.5053169363117164;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.32979856216812076;  // std dev = 0.288, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4213845669796473;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40201909203165137;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6726177635634392;  // std dev = 1.804, 69.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=65 */
%   | | else return -0.16118675310343503;  // std dev = 0.029, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5150797340565412;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.2226629539704424;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.21669686258278578;  // std dev = 2.118, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.06987368249392902;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33499628411214255;  // std dev = 0.019, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.4078859155814293;  // std dev = 1.735, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.5403889251472801;  // std dev = 0.732, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08779991421524606;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1460067880225471;  // std dev = 0.262, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6648530989302713;  // std dev = 0.403, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2074398176674863;  // std dev = 0.120, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.20942621160260588;  // std dev = 1.732, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.047015994479045656;  // std dev = 1.373, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2649947468737549;  // std dev = 0.017, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( enzyme(D, G), interaction(H, D) )
%   | | | then return 0.022977077962288414;  // std dev = 0.915, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.09648394428561204;  // std dev = 0.426, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( enzyme(D, I), phenotype(A, J) )
%   | | | then return -0.13085470192422863;  // std dev = 0.798, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.03800817668958982;  // std dev = 2.224, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6065661140439416;  // std dev = 0.237, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18251541631189638;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.2596372412026297;  // std dev = 0.242, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02950671751811855;  // std dev = 3.929, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40424292815497215;  // std dev = 0.121, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.14297508519910881;  // std dev = 0.060, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.2483856020628311;  // std dev = 0.208, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return -0.07005114332526727;  // std dev = 0.761, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.011453847021184233;  // std dev = 2.387, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( complex(I, K), complex(A, L) )
%   | | | then return 0.0802647873296718;  // std dev = 0.769, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.25828132826856653;  // std dev = 0.717, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.0932562523032153;  // std dev = 1.391, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.011443042602877077;  // std dev = 2.150, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1789050246905679;  // std dev = 0.021, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3284310938872527;  // std dev = 0.892, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.13309184292795748;  // std dev = 0.392, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.06796012341887156;  // std dev = 1.424, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.02643155987866731;  // std dev = 2.956, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2668443501618539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.015119959202032296;  // std dev = 2.404, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.03985208438101955;  // std dev = 0.675, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14181252611597983;  // std dev = 0.314, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15831557984487457;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.10077007744734884;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.15816928747613263;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.02794808936629069;  // std dev = 0.178, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.047528367579211625;  // std dev = 2.021, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.008244653132628198;  // std dev = 2.845, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.3495404263001158;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.10026379628222615;  // std dev = 1.144, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.2332454970818827;  // std dev = 0.054, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13617005741554367;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.4597371591831845;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1585704092786116;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then return -0.09735042128945494;  // std dev = 0.138, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else return -2.474827371475215E-4;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, A), phenotype(H, K) )
%   | | | then return 0.0303587014901424;  // std dev = 1.027, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.19776525182840776;  // std dev = 0.801, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.05623572501565445;  // std dev = 1.954, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return -0.0021824025125636603;  // std dev = 3.376, 140.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=43 */


Results
   AUC ROC   = 0.979807
   AUC PR    = 0.187359
   CLL	      = -0.19355
   Precision = 0.115282 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.202353


Total learning time: 9.56 seconds
Total inference time: 8.672 seconds
AUC ROC: 0.979807


Results scoring model
   AUC ROC   = 0.992042
   AUC PR    = 0.464849
   CLL	      = -0.17593
   Precision = 0.291793 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.441379


Total scoring time: 11.983 seconds
Refined model CLL: -0.17593


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97966
   AUC PR    = 0.171589
   CLL	      = -0.199875
   Precision = 0.104561 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.187438


Total learning time: 29.002 seconds
Total inference time: 6.805 seconds
AUC ROC: 0.97966
Total revision time: 29.002
Best scored revision CLL: -0.171823


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:07:14
{'AUC ROC': 0.97966, 'AUC PR': 0.171589, 'CLL': -0.199875, 'Precision': [0.104561, 0.5], 'Recall': 0.903846, 'F1': 0.187438, 'Learning time': 29.002, 'Inference time': 6.805, 'parameter_0.4': {'AUC ROC': 0.97966, 'AUC PR': 0.171589, 'CLL': -0.199875, 'Precision': [0.104561, 0.5], 'Recall': 0.903846, 'F1': 0.187438, 'Learning time': 2.233, 'Inference time': 6.805}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8236661764788221;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12705649812472108;  // std dev = 4.837, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
%   | | | else return 0.11831153672552845;  // std dev = 6.881, 246.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=64 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6638801614154416;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.5930468280821083;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.75517232473028;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.08077384205059342;  // std dev = 4.935, 134.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | | | else return 0.11546840758707305;  // std dev = 6.824, 235.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=64 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.20820549123154905;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.11970382317245226;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5194081833142474;  // std dev = 1.354, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8033656697367484;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.024226393865938042;  // std dev = 4.360, 123.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=24 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.785178061658905;  // std dev = 1.188, 73.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | | | else return -0.17275592051625926;  // std dev = 9.42e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17438402747028856;  // std dev = 1.032, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06308198906796547;  // std dev = 3.665, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09684964448320968;  // std dev = 1.592, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4495438032755278;  // std dev = 0.017, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.533977848596734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.4660221514032659;  // std dev = 3.65e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3965272282307122;  // std dev = 0.226, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5986851046915683;  // std dev = 3.394, 110.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=96 */
%   | | else return -0.1577341079078288;  // std dev = 0.301, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3307268503019144;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0452886098679832;  // std dev = 3.662, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | | else return 0.11675698298800133;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2575129536731604;  // std dev = 1.341, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else return 0.14769006862177406;  // std dev = 1.255, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23034756421935867;  // std dev = 0.845, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.544117148089625;  // std dev = 2.106, 101.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=96 */
%   | | else return -0.1367587565294363;  // std dev = 0.153, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6221113479027417;  // std dev = 1.328, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.21306222999880023;  // std dev = 0.026, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.434968717342335;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.042681818729299076;  // std dev = 2.575, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.28617970748617244;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25346907442983924;  // std dev = 0.982, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(F, A) )
%   | then return 0.034060523004961735;  // std dev = 5.215, 355.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=106 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5386926059997943;  // std dev = 0.309, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02937867465593982;  // std dev = 3.341, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03281870528499692;  // std dev = 1.367, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2539765250907352;  // std dev = 0.217, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.3426008976226763;  // std dev = 2.498, 85.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=70 */
%   | else return -0.14520508106240398;  // std dev = 0.808, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2595132433805984;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.37932718928495524;  // std dev = 0.349, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -5.121811302611037E-4;  // std dev = 3.049, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04427612967197283;  // std dev = 3.213, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.13498142994293283;  // std dev = 0.511, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14061382570969574;  // std dev = 0.909, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.18940407313708071;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24662341704625634;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.014402036573488316;  // std dev = 4.805, 371.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.1781802457366994;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0435908900690407;  // std dev = 3.126, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16651607689362688;  // std dev = 0.979, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.005096861806829815;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17421703223864954;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17282883432011342;  // std dev = 0.068, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then return 0.027115580928028484;  // std dev = 4.617, 346.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=106 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5506096968410696;  // std dev = 1.115, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.20645774646339013;  // std dev = 0.324, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.14566693579613865;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.19169143280396092;  // std dev = 0.190, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.2133366800850307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2133366800850307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.10088938970794796;  // std dev = 0.931, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1475548876322409;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then return 0.00295966858604019;  // std dev = 4.716, 357.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=96 */
%   | | else if ( interaction(A, J) )
%   | | | then return 1.0537343554080119E-4;  // std dev = 2.786, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980702
   AUC PR    = 0.160457
   CLL	      = -0.198885
   Precision = 0.095494 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.171815


Total learning time: 3.143 seconds
Total inference time: 8.154 seconds
AUC ROC: 0.980702


Results scoring model
   AUC ROC   = 0.990327
   AUC PR    = 0.399685
   CLL	      = -0.17058
   Precision = 0.245211 at threshold = 0.5
   Recall    = 0.805031
   F1        = 0.375918


Total scoring time: 7.552 seconds
Parameter learned model CLL: -0.17058


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.983, 1, 28], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 11], 'false,false,true,true': [4.837, 87, 32], 'false,false,true,false': [6.881, 182, 64], 'false,false,false,true': [3.464, 36, 18], 'false,false,false,false': [1.519, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.968, 1, 15], 'true,false': [1.317, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.041, 0, 4], 'false,true,false': [4.21e-08, 0, 10], 'false,false,true,true': [4.935, 102, 32], 'false,false,true,false': [6.824, 171, 64], 'false,false,false,true': [3.354, 30, 18], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.354, 2, 28], 'false,true,true,true': [0.261, 0, 10], 'false,true,true,false': [4.36, 99, 24], 'false,true,false,true': [1.188, 1, 72], 'false,true,false,false': [9.42e-08, 183, 0], 'false,false,true,true': [1.032, 2, 2], 'false,false,true,false': [3.665, 51, 19], 'false,false,false,true': [1.592, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.017, 0, 16], 'true,true,false': [0.0, 1, 0], 'true,false': [3.65e-08, 0, 12], 'false,true,true,true': [0.226, 0, 10], 'false,true,true,false': [3.394, 14, 96], 'false,true,false': [0.301, 267, 0], 'false,false,true': [0.885, 1, 4], 'false,false,false,true': [3.662, 53, 18], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.341, 2, 20], 'true,false': [1.255, 2, 8], 'false,true,true,true': [0.845, 1, 10], 'false,true,true,false': [2.106, 5, 96], 'false,true,false': [0.153, 260, 0], 'false,false,true,true': [1.328, 2, 14], 'false,false,true,false': [0.026, 23, 0], 'false,false,false,true': [0.02, 0, 2], 'false,false,false,false': [2.575, 26, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.982, 1, 19], 'false,true': [5.215, 249, 106], 'false,false,true,true': [0.309, 0, 2], 'false,false,true,false': [3.341, 52, 19], 'false,false,false,true': [1.367, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.217, 0, 18], 'true,true,false': [2.498, 15, 70], 'true,false': [0.808, 140, 0], 'false,true,true,true': [0.01, 0, 6], 'false,true,true,false': [0.349, 0, 5], 'false,true,false': [3.049, 58, 18], 'false,false,true': [3.213, 85, 41], 'false,false,false,true': [0.511, 6, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.909, 1, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.002, 0, 9], 'true,false,false,false': [0.032, 0, 3], 'false,true': [4.805, 265, 106], 'false,false,true,true': [1.076, 4, 2], 'false,false,true,false': [3.126, 44, 19], 'false,false,false,true': [0.979, 4, 3], 'false,false,false,false': [0.458, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.04, 0, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.068, 0, 12], 'false,true': [4.617, 240, 106], 'false,false,true,true': [1.115, 1, 25], 'false,false,true,false': [0.324, 58, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.19, 0, 7], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.931, 1, 11], 'false,true': [0.062, 0, 13], 'false,false,true': [4.716, 261, 96], 'false,false,false,true': [2.786, 62, 21], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.033293697978597984, 0.20717785485138465], 'false': [0.06222222222222188, 0.1974826388888895], 'false,false': [0.1938374929630336, 0.2151926932501672], 'false,false,false': [0.22222222222222168, 0.17751479289940816], 'false,false,true': [0.19659628557305403, 0.19247802234119962], 'false,true': [0.18750000000000006, -1.6148698540002277e-16], 'false,true,true': [0.18750000000000006, nan], 'false,true,false': [nan, -1.6148698540002277e-16]}, {'': [0.08740894901144605, 0.2037554032084696], 'false': [0.00038145675933857044, 0.19844506871518036], 'false,false': [0.19249632812359574, 0.22884598006862142], 'false,false,false': [0.23437499999999947, 0.19834710743801656], 'false,false,true': [0.18177767877032708, 0.19817111815301192], 'true': [0.05859374999999972, 0.11555555555555538], 'false,true': [0.00042480411835410514, 1.7763568394002506e-16], 'false,true,true': [nan, 0.00042480411835410514]}, {'': [0.061150585109257055, 0.1910527347927647], 'false': [0.19026486394296024, 0.19418009879556886], 'false,false': [0.1965497298178937, 0.1810072916649508], 'false,false,true': [0.26634547016425336, 0.19189177240607402], 'false,true': [0.1856344029962326, 0.19256466579202158], 'false,true,false': [0.019327824543475595, 4.853433987432378e-17], 'false,true,true': [0.00683373550709554, 0.15452758314043633], 'false,false,false': [0.1810072916649508, nan]}, {'': [0.03274384286711403, 0.15647603959717077], 'false': [0.14810394388953457, 0.19414887434467934], 'false,false': [0.15659652968778062, 0.1920183244014938], 'false,false,false': [0.18885511028780053, 0.20999999999999988], 'false,true': [0.09951231995672867, 0.00034045352925828206], 'false,true,true': [0.0050894262678404575, 0.10469056879839507], 'true': [0.05357080030188689, 1.1102230246251565e-16], 'true,true': [1.8102397134678316e-05, 0.0]}, {'': [0.10799958932125939, 0.1220343415296531], 'false': [0.10545067529523111, 0.2019675100971159], 'false,false': [0.21403054904947383, 0.18703827967308007], 'false,false,true': [0.11030312689627919, 2.8794646847236262e-05], 'false,false,false': [0.00019351096762812436, 0.18939679868973108], 'true': [0.0816973098413423, 0.15757262124638285], 'false,true': [0.05468775757132988, 9.028622776427165e-05], 'false,true,true': [0.0649650462297324, 0.04389911971464071]}, {'': [0.03346541820861868, 0.09238231668287612], 'false': [0.07660467401161532, 0.15671620471402592], 'false,false': [0.16116520436575907, 0.1334250978697142], 'false,false,true': [0.04779115514813642, 0.15725197159167464], 'false,false,false': [0.1334250978697142, nan], 'true': [-3.700743415417188e-17, 0.04819279193234137], 'true,true': [-3.700743415417188e-17, nan], 'true,true,true': [-3.700743415417188e-17, nan]}, {'': [0.0835069340889034, 0.09640775313487993], 'false': [0.11964413279109089, 0.08120032894335773], 'false,true': [0.014661746594744224, 0.12233414697086288], 'true': [0.06215186882322635, 0.004659707953301646], 'false,false': [0.08195033327112194, 0.037258203242360476], 'true,true': [0.002617697246086564, 0.07338651263953673], 'false,false,false': [0.037258203242360476, nan], 'false,true,true': [1.541545428160318e-05, 0.024407135799750977]}, {'': [0.0297505910277932, 0.07914391333161809], 'false': [0.06222766325483099, 0.15820888655002813], 'false,false': [0.16226292043790952, 0.12304680992850883], 'false,false,true': [0.19291897400812338, 0.15506656266431598], 'false,false,false': [0.13701269575322542, 0.0698440424935854], 'true': [0.04860977148161165, 0.0006997351889985829], 'true,false': [nan, 0.0006997351889985783], 'true,false,false': [6.371888781547202e-07, 0.00034148920131246707]}, {'': [0.00022407362901746434, 0.07664225869904685], 'false': [0.061613022707491236, 0.13854793623424008], 'false,false': [0.13854793623424008, nan], 'false,false,true': [0.04782433295169138, 0.0018132215569136847], 'true': [0.00010095901925251394, 0.00038712524577398194], 'true,false': [nan, 0.00038712524577398194]}, {'': [0.0316930718600538, 0.06682422624811929], 'false': [0.00029128772747391774, 0.06818549298470891], 'false,false': [0.06228798265693062, 0.09354528264808593], 'false,false,false': [0.09354528264808593, nan], 'true': [0.0026865817503248356, 0.07224641919757122], 'true,true': [0.0027713507237394908, 0.0], 'true,true,true': [0.0, 0.005142997882263023], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( complex(G, H), phenotype(F, I) )
%   | | | then return 0.16895974591032248;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.034619523334806446;  // std dev = 3.515, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | else if ( location(A, J) )
%   | | | then return 0.1509246004987529;  // std dev = 7.379, 263.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=77 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.1194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109543;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5365574888817003;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.04827372920694079;  // std dev = 5.690, 196.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=41 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.20587709397906914;  // std dev = 4.301, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | | | else return 0.1087582791361124;  // std dev = 5.409, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.530495704319785;  // std dev = 0.188, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.1437084516491551;  // std dev = 3.525, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.0034890128026502432;  // std dev = 3.369, 80.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.731783260427445;  // std dev = 2.230, 77.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=72 */
%   | | | else return -0.16997000045115485;  // std dev = 0.115, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7455536883038879;  // std dev = 0.311, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.19105056117691113;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.19169442123639438;  // std dev = 2.165, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.06822635805757411;  // std dev = 2.544, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3735084401077562;  // std dev = 0.200, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.44838793996498155;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.5933756544650796;  // std dev = 2.050, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0.6913245994111891;  // std dev = 1.416, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | else return -0.15961660319634766;  // std dev = 0.024, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.021107064127736976;  // std dev = 1.297, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11128999873875232;  // std dev = 2.193, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.23047377917079057;  // std dev = 2.105, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.07879198666397891;  // std dev = 1.622, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3455898241014265;  // std dev = 0.040, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.22435324839212;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.28683305973166096;  // std dev = 0.185, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5103295882095709;  // std dev = 2.771, 104.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=96 */
%   | | else return -0.14006293803708764;  // std dev = 0.017, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.674424389553683;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.21168053435813494;  // std dev = 0.207, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4254532859546522;  // std dev = 0.149, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08612826840545966;  // std dev = 2.463, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.27169049371194315;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22412652380988382;  // std dev = 0.226, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1380323773763365;  // std dev = 0.013, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4491666557108768;  // std dev = 0.453, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.013266461838838567;  // std dev = 4.890, 329.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=87 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), complex(J, K) )
%   | | | then return 0.11233797752560828;  // std dev = 1.562, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.06908749141687347;  // std dev = 1.091, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03185531030719035;  // std dev = 1.357, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.17817769160246144;  // std dev = 2.362, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(D, F) )
%   | | then return -0.16091709848825503;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.22859793860907893;  // std dev = 0.026, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.23844443594420028;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12497175611255654;  // std dev = 0.046, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.03919938451370436;  // std dev = 4.096, 189.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=59 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.31690802923255007;  // std dev = 0.172, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.09285189779671246;  // std dev = 1.140, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.03278417264397717;  // std dev = 2.616, 80.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=13 */
%   | else return 0.041508914326453414;  // std dev = 0.274, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18849680751783712;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.07761359724674437;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1889331577911689;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.15308826301338646;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.05368619962808611;  // std dev = 0.211, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.22286652174528573;  // std dev = 4.262, 175.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=113 */
%   | | | else return -0.1563954796889629;  // std dev = 1.135, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0789236586044539;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2101082275379775;  // std dev = 1.072, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.11535809577572745;  // std dev = 0.188, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.22974254462460997;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04660643233638273;  // std dev = 0.326, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10909994227152159;  // std dev = 0.010, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.05136729476759243;  // std dev = 1.907, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 4.6812292073283005E-4;  // std dev = 4.380, 327.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=90 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.09600103109578105;  // std dev = 1.573, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.2725104922813309;  // std dev = 2.012, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return -0.20386222001212548;  // std dev = 0.048, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15459882954964607;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.15940511302464772;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then return 0.2237042202536613;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.1572241007210071;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.073006274124141;  // std dev = 0.751, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.19384801899888618;  // std dev = 4.052, 173.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=112 */
%   | | | else return -0.12697566332461166;  // std dev = 0.731, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.42140286238769814;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0016346220355146074;  // std dev = 0.614, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Results
   AUC ROC   = 0.977233
   AUC PR    = 0.140441
   CLL	      = -0.201539
   Precision = 0.096386 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.175824


Total learning time: 17.95 seconds
Total inference time: 10.727 seconds
AUC ROC: 0.977233


Results scoring model
   AUC ROC   = 0.988999
   AUC PR    = 0.308346
   CLL	      = -0.175234
   Precision = 0.215134 at threshold = 0.5
   Recall    = 0.91195
   F1        = 0.348139


Total scoring time: 28.115 seconds
Refined model CLL: -0.175234


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980702
   AUC PR    = 0.160457
   CLL	      = -0.198885
   Precision = 0.095494 at threshold = 0.5
   Recall    = 0.855769
   F1        = 0.171815


Total learning time: 56.76 seconds
Total inference time: 8.154 seconds
AUC ROC: 0.980702
Total revision time: 56.76
Best scored revision CLL: -0.17058


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:08:30
{'AUC ROC': 0.980702, 'AUC PR': 0.160457, 'CLL': -0.198885, 'Precision': [0.095494, 0.5], 'Recall': 0.855769, 'F1': 0.171815, 'Learning time': 56.76, 'Inference time': 8.154, 'parameter_0.6': {'AUC ROC': 0.980702, 'AUC PR': 0.160457, 'CLL': -0.198885, 'Precision': [0.095494, 0.5], 'Recall': 0.855769, 'F1': 0.171815, 'Learning time': 3.143, 'Inference time': 8.154}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8025933795439559;  // std dev = 1.374, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.09624417319474932;  // std dev = 5.521, 168.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=40 */
%   | | | else return 0.11718507967782521;  // std dev = 5.645, 166.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=43 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16584124279182136;  // std dev = 6.445, 195.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=60 */
%   | | | else return 0.16117923812981516;  // std dev = 3.734, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6129013250064074;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.6805483838299367;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7482060872614772;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5844683777133646;  // std dev = 1.300, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.16602463113402116;  // std dev = 5.215, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return 0.11542881200904757;  // std dev = 5.594, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12245283634661296;  // std dev = 6.547, 210.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=60 */
%   | | | else return 0.18825160739863567;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5298365320923564;  // std dev = 1.385, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7398013324237156;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.020061412494541502;  // std dev = 4.886, 150.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=30 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8114721440871836;  // std dev = 0.412, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.17258934198768472;  // std dev = 7.30e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5566325514484876;  // std dev = 0.834, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.10326297753183185;  // std dev = 6.665, 223.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=65 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.16722886909896453;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.460199379116872;  // std dev = 0.030, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.44695578077795173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.27048519254265757;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.43966908552103307;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7304884328977342;  // std dev = 0.600, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | | else return -0.16566846066371127;  // std dev = 0.272, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5436152880286772;  // std dev = 0.187, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09258897392120459;  // std dev = 6.511, 207.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=60 */
%   | | | else return 0.16037632099333898;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3100934133116878;  // std dev = 0.955, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.3039905746507336;  // std dev = 0.981, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.17166226467384962;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5501494464521289;  // std dev = 1.459, 85.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=83 */
%   | | else return -0.14559281620532633;  // std dev = 0.307, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5646950972840882;  // std dev = 2.562, 48.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | | | else return -0.22326960589827574;  // std dev = 0.505, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3911631154924293;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09088585349751072;  // std dev = 5.682, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2858503669469803;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2244568405744054;  // std dev = 1.359, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(A, F) )
%   | then return 0.020557675834739164;  // std dev = 4.627, 322.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=87 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.11906173000710633;  // std dev = 1.174, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.08509627112423175;  // std dev = 6.073, 200.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=65 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.056544377647153796;  // std dev = 3.423, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2602483366049153;  // std dev = 0.252, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.4058839827476235;  // std dev = 2.768, 101.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=89 */
%   | else return -0.15668205046683376;  // std dev = 0.572, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.25146796785355696;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.395650208825414;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.031135855544385516;  // std dev = 5.470, 195.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=53 */
%   | else if ( interaction(A, H) )
%   | | then return 0.041862583606084545;  // std dev = 2.061, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04880175821499266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.14168088758620104;  // std dev = 0.896, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.18379524980965278;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.23529920605195404;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then return 0.0017722419142678027;  // std dev = 4.058, 342.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=87 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2900054744711162;  // std dev = 0.384, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.062203883051563234;  // std dev = 5.831, 196.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=65 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07406987970102227;  // std dev = 1.793, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.010529451044422582;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1669580025594458;  // std dev = 0.057, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1215236068340469;  // std dev = 0.939, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, F) )
%   | then return 0.01458998994801487;  // std dev = 4.042, 301.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=87 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.48394745221362145;  // std dev = 3.558, 103.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=91 */
%   | | | else return -0.2333938101542594;  // std dev = 0.775, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1454973633806056;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1600358033705215;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0.10044873001334353;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12218403393897437;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18667707798599112;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.15637704502293961;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, I) )
%   | | then return -0.002204443199239424;  // std dev = 4.055, 329.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=83 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026077409150405625;  // std dev = 5.653, 260.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=80 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979057
   AUC PR    = 0.155246
   CLL	      = -0.217641
   Precision = 0.154955 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.261002


Total learning time: 3.167 seconds
Total inference time: 6.677 seconds
AUC ROC: 0.979057


Results scoring model
   AUC ROC   = 0.989822
   AUC PR    = 0.317812
   CLL	      = -0.192877
   Precision = 0.335526 at threshold = 0.5
   Recall    = 0.721698
   F1        = 0.458084


Total scoring time: 9.044 seconds
Parameter learned model CLL: -0.192877


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.374, 2, 34], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.866, 1, 3], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.949, 1, 9], 'false,false,true,true': [5.521, 128, 40], 'false,false,true,false': [5.645, 123, 43], 'false,false,false,true': [6.445, 135, 60], 'false,false,false,false': [3.734, 46, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.328, 2, 15], 'true,false': [0.975, 1, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.04, 0, 4], 'false,true,false': [1.3, 2, 11], 'false,false,true,true': [5.215, 85, 40], 'false,false,true,false': [5.594, 115, 43], 'false,false,false,true': [6.547, 150, 60], 'false,false,false,false': [3.603, 37, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.385, 2, 34], 'false,true,true,true': [0.957, 1, 11], 'false,true,true,false': [4.886, 120, 30], 'false,true,false,true': [0.412, 0, 46], 'false,true,false,false': [7.3e-08, 106, 0], 'false,false,true,true': [0.834, 1, 6], 'false,false,true,false': [6.665, 158, 65], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.03, 0, 19], 'true,true,false': [0.0, 0, 1], 'true,false': [1.572, 3, 14], 'false,true,true,true': [0.199, 0, 4], 'false,true,true,false': [0.6, 0, 83], 'false,true,false': [0.272, 228, 0], 'false,false,true': [0.187, 0, 11], 'false,false,false,true': [6.511, 147, 60], 'false,false,false,false': [3.529, 33, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.955, 1, 19], 'true,false': [0.981, 1, 15], 'false,true,true,true': [0.775, 1, 4], 'false,true,true,false': [1.459, 2, 83], 'false,true,false': [0.307, 233, 0], 'false,false,true,true': [2.562, 7, 41], 'false,false,true,false': [0.505, 83, 0], 'false,false,false,true': [0.08, 0, 3], 'false,false,false,false': [5.682, 105, 47]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.359, 2, 25], 'false,true': [4.627, 235, 87], 'false,false,true,true': [1.174, 3, 6], 'false,false,true,false': [6.073, 135, 65], 'false,false,false,true': [3.423, 43, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.252, 0, 22], 'true,true,false': [2.768, 12, 89], 'true,false': [0.572, 201, 0], 'false,true,true,true': [0.039, 0, 11], 'false,true,true,false': [0.297, 0, 8], 'false,true,false': [5.47, 142, 53], 'false,false,true': [2.061, 43, 19], 'false,false,false,true': [2.603, 21, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.896, 1, 17], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.037, 0, 8], 'true,false,false,false': [0.067, 0, 9], 'false,true': [4.058, 255, 87], 'false,false,true,true': [0.384, 0, 6], 'false,false,true,false': [5.831, 131, 65], 'false,false,false,true': [1.793, 17, 10], 'false,false,false,false': [2.657, 24, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.057, 0, 20], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.939, 1, 14], 'false,true': [4.042, 214, 87], 'false,false,true,true': [3.558, 12, 91], 'false,false,true,false': [0.775, 175, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 9], 'true,true,true,false': [0.023, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.057, 0, 3], 'true,false': [0.243, 0, 12], 'false,true': [0.104, 0, 15], 'false,false,true': [4.055, 246, 83], 'false,false,false,true': [5.653, 180, 80], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.05246913580247073, 0.2062561408005477], 'false': [0.10380622837370206, 0.19890120754184243], 'false,false': [0.1867492559790605, 0.2125629394753458], 'false,false,false': [0.21301775147929028, 0.2112029384756653], 'false,false,true': [0.18140589569161122, 0.19193642038031683], 'false,true': [0.15999999999999986, 0.07638888888888891], 'false,true,true': [0.0, 0.18750000000000006], 'false,true,false': [0.0, 0.08999999999999977]}, {'': [0.07450693937180336, 0.21230387431059997], 'false': [0.10434754504425496, 0.20856371103943352], 'false,false': [0.20733611729868187, 0.20986402933476786], 'false,false,false': [0.20408163265306364, 0.22776238842720836], 'false,false,true': [0.21759999999999896, 0.19808524274955933], 'false,true': [0.0004045981104441321, 0.13002174613040848], 'true': [0.103806228373702, 0.047499999999999695], 'false,true,true': [nan, 0.0004045981104443541]}, {'': [0.05329381472073999, 0.20266037476711077], 'false': [0.1974073843594956, 0.208005168255857], 'false,false': [0.202256484376708, 0.229591836734694], 'false,false,false': [0.229591836734694, nan], 'false,false,true': [0.09937798411124035, 0.199230168279878], 'false,true': [0.18852491811677552, 0.20548756350125083], 'false,true,false': [0.003686838428505368, 5.02742501717052e-17], 'false,true,true': [0.07638888888888862, 0.1591235373187359]}, {'': [0.07567760036753017, 0.18305113582034221], 'false': [0.15831691042943447, 0.21066356142649365], 'false,false': [0.0031958192962747408, 0.2116821484264036], 'false,false,false': [0.20478566099075995, 0.23495906016375995], 'false,true': [0.008295886096185257, 0.0003235192345330063], 'true': [5.276402983618311e-05, 0.1453287197231834], 'false,true,true': [0.009893151276746531, 0.004330362665180964], 'true,true': [4.677143918998071e-05, 0.0]}, {'': [0.05208901491771074, 0.1504632302436961], 'false': [0.10233812458441226, 0.2039666936818532], 'false,false': [0.19620524213269167, 0.2100791403140947], 'false,false,false': [0.0021346204080361177, 0.21243815168166125], 'false,false,true': [0.13676752798380634, 0.0030777765480760207], 'false,true': [0.03784079674094324, 0.00040403032214337745], 'true': [0.0456407704246206, 0.060128629067561334], 'false,true,true': [0.12007130219209597, 0.025045233364411872]}, {'': [0.052035590900583836, 0.12113616574097409], 'false': [0.06649165152530707, 0.1839354639106367], 'false,false': [0.18309323546191394, 0.18603730963196502], 'false,false,false': [0.18603730963196502, nan], 'false,false,true': [0.153135689118492, 0.18439164623600848], 'true': [0.0, 0.06843849659733008], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.09382861450198332, 0.138465415794572], 'false': [0.14708318672482398, 0.11853635853635192], 'false,true': [0.009798568111713073, 0.15344706346458808], 'false,false': [0.06852730082546879, 0.21852237252861614], 'false,false,false': [0.21852237252861614, nan], 'true': [0.06592770110198838, 0.001625577153383407], 'true,true': [0.0028833627035256674, 0.07586651896035997], 'false,true,true': [0.00014153897652092638, 0.011041525029005711]}, {'': [0.024644783859449827, 0.10218760146372374], 'false': [0.048138570532107475, 0.17042554300364007], 'false,false': [0.1705194474165279, 0.16940867002193297], 'false,false,true': [0.024551560495948477, 0.1734464590967939], 'false,false,false': [0.11904985151286374, 0.207612456747405], 'true': [0.04462747082633932, 0.0010110040610463264], 'true,false': [nan, 0.00101100406104632], 'true,false,false': [0.0001755928003210408, 0.0005052824325417266]}, {'': [0.025776904871243546, 0.10882257316032626], 'false': [0.05428648339799531, 0.1677060447911429], 'false,false': [0.1677060447911429, nan], 'false,false,true': [0.12289087807115755, 0.0034297911667399562], 'true': [0.00016436759597090455, 0.05874736353450302], 'true,false': [nan, 0.05874736353450302]}, {'': [0.002390767947386855, 0.0808527417681895], 'false': [0.0007221085395312188, 0.08236334451893593], 'false,false': [0.04997395680245447, 0.1229015947822677], 'false,false,false': [0.1229015947822677, nan], 'true': [0.00042455683222452934, 0.004936301732657448], 'true,true': [8.245260103345586e-05, 0.0009026973558342588], 'true,true,false': [0.0, 0.0010854906152607952], 'true,true,true': [0.0, 5.922208339672546e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(C, D), phenotype(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4518989350995131;  // std dev = 4.812, 96.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=57 */
%   | | | else return -0.14185106490048796;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21850929545987188;  // std dev = 5.058, 111.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=40 */
%   | | | else return 0.1567914690361639;  // std dev = 6.804, 221.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A), interaction(H, I) )
%   | | then return 0.7244068122485936;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.7546590397890941;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.39929581231132544;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16632303979250254;  // std dev = 0.026, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10572818886111314;  // std dev = 6.148, 216.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=58 */
%   | | | else return 0.15701264576209087;  // std dev = 8.436, 326.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=105 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5376970285729751;  // std dev = 0.154, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.013410908718453653;  // std dev = 2.861, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return 0.2004903023309859;  // std dev = 4.099, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7910480113376517;  // std dev = 0.372, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.1800855313842445;  // std dev = 0.279, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(J, K) )
%   | | | then return 0.12658996809485687;  // std dev = 4.946, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0.23492497863786427;  // std dev = 3.417, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6310970070058883;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.051229316920306384;  // std dev = 4.321, 106.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.43058222410166574;  // std dev = 0.028, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.6121146351409743;  // std dev = 0.994, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.7069534869732125;  // std dev = 0.525, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.17711818642417165;  // std dev = 0.520, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | | else return -0.14385708316928342;  // std dev = 0.196, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6651547046440961;  // std dev = 0.968, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.20226200441395847;  // std dev = 0.212, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1340564957949818;  // std dev = 3.474, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.08993865139935878;  // std dev = 6.062, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.3380670320867649;  // std dev = 0.035, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.3217149766866516;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.13098114141338246;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5178976786430629;  // std dev = 0.170, 89.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=87 */
%   | | else return -0.1460927520844494;  // std dev = 0.032, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11457607740425692;  // std dev = 3.816, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.04634738872705294;  // std dev = 2.499, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2801780222740441;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08079706383304767;  // std dev = 5.625, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2705297452822873;  // std dev = 0.026, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return -0.015070042432494312;  // std dev = 1.546, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.05575443208352546;  // std dev = 2.301, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( interaction(I, D), interaction(D, I) )
%   | | | then return 0.0624023339821415;  // std dev = 3.736, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.1469853350674647;  // std dev = 4.491, 111.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=48 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( location(A, K) )
%   | | | then return -0.017469874036631264;  // std dev = 2.689, 128.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=27 */
%   | | | else return 0.10562196491404227;  // std dev = 1.600, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.015345859259183048;  // std dev = 1.066, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10739831613847055;  // std dev = 3.997, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2869548250352586;  // std dev = 0.219, 79.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=70 */
%   | | else return 0.5609421707636905;  // std dev = 0.247, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | else return -0.17756995479585905;  // std dev = 0.080, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.22403167441388436;  // std dev = 0.263, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.12264756348071386;  // std dev = 0.169, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.06327935389444156;  // std dev = 5.165, 157.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=53 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then return -0.0031537581765573156;  // std dev = 0.241, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.11553841425906841;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0896095433849843;  // std dev = 2.467, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16617339339670387;  // std dev = 0.005, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.14948619528173757;  // std dev = 0.223, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( enzyme(E, G), interaction(E, A) )
%   | | then return -0.06276685200572567;  // std dev = 0.138, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( complex(A, H), complex(E, H) )
%   | | | then return -0.037389931490206946;  // std dev = 1.567, 66.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=10 */
%   | | | else return 0.019190160668906258;  // std dev = 3.553, 236.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=72 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.36618745137304515;  // std dev = 2.200, 50.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | | else return -0.19454361860428585;  // std dev = 0.431, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.006440899970911527;  // std dev = 4.389, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | | | else return 0.06939056296874084;  // std dev = 3.587, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14774805608495822;  // std dev = 0.011, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(E, A) )
%   | | then return 0.18071979897964568;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.19364675727937358;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then return -0.030933551274156913;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.24204994315829528;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.11606084058094247;  // std dev = 3.792, 109.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=57 */
%   | | | else return -0.12473110412608523;  // std dev = 0.638, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.002106615667050673;  // std dev = 3.637, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return 0.042303776733101046;  // std dev = 5.181, 205.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=70 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.13030604475474636;  // std dev = 0.009, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.22391495556263097;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then return -0.14714936342458443;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18306143130409328;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( enzyme(A, I) )
%   | | then return -0.06448170201636463;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16376017541136242;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09735262476191364;  // std dev = 0.030, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03139630306262437;  // std dev = 3.493, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
%   | | | else return -0.002803975424224303;  // std dev = 6.637, 348.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=99 */


Results
   AUC ROC   = 0.967642
   AUC PR    = 0.148679
   CLL	      = -0.22363
   Precision = 0.190476 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.295011


Total learning time: 13.396 seconds
Total inference time: 7.382 seconds
AUC ROC: 0.967642


Results scoring model
   AUC ROC   = 0.972958
   AUC PR    = 0.351695
   CLL	      = -0.207784
   Precision = 0.328326 at threshold = 0.5
   Recall    = 0.721698
   F1        = 0.451327


Total scoring time: 16.696 seconds
Refined model CLL: -0.207784


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979057
   AUC PR    = 0.155246
   CLL	      = -0.217641
   Precision = 0.154955 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.261002


Total learning time: 42.303 seconds
Total inference time: 6.677 seconds
AUC ROC: 0.979057
Total revision time: 42.303
Best scored revision CLL: -0.192877


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:09:27
{'AUC ROC': 0.979057, 'AUC PR': 0.155246, 'CLL': -0.217641, 'Precision': [0.154955, 0.5], 'Recall': 0.826923, 'F1': 0.261002, 'Learning time': 42.303, 'Inference time': 6.677, 'parameter_0.8': {'AUC ROC': 0.979057, 'AUC PR': 0.155246, 'CLL': -0.217641, 'Precision': [0.154955, 0.5], 'Recall': 0.826923, 'F1': 0.261002, 'Learning time': 3.167, 'Inference time': 6.677}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10931172579718713;  // std dev = 6.359, 215.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=54 */
%   | | | else return 0.14910248033178522;  // std dev = 9.186, 409.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=119 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14941107102184112;  // std dev = 4.611, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | | else return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7289832469462055;  // std dev = 9.42e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.7289832469462059;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7263328500003844;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5298608081783024;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0886585445886991;  // std dev = 6.388, 221.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=54 */
%   | | | else return 0.11901231587742823;  // std dev = 9.256, 425.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=119 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14200093300205757;  // std dev = 4.573, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.13952312816831638;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5403657264739296;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.819397783440677;  // std dev = 0.174, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.019215818416734278;  // std dev = 5.815, 222.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7725770925221618;  // std dev = 2.234, 132.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=127 */
%   | | | else return -0.1777180253949737;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4701748980196383;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15583630897411244;  // std dev = 4.478, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11387537956499258;  // std dev = 2.142, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4304834751750651;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.430483475175065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.4304834751750652;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.30938673724825483;  // std dev = 1.109, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.668017639024184;  // std dev = 3.006, 182.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=173 */
%   | | else return -0.15952584200260525;  // std dev = 0.273, 413.000 (wgt'ed) examples reached here.  /* #neg=413 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2839717652330034;  // std dev = 1.261, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0934584225574834;  // std dev = 4.578, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | | else return 0.044754718475577875;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32951878210756164;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.32951878210756164;  // std dev = 2.98e-08, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37687548874339794;  // std dev = 0.151, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.49747831339446574;  // std dev = 3.597, 187.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=173 */
%   | | else return -0.13888191312844794;  // std dev = 0.154, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7482470160375854;  // std dev = 0.299, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.22146340441941906;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.24991917777174014;  // std dev = 0.800, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10605776505927238;  // std dev = 3.921, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.26117293289381793;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.26117293289381793;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1754586471795322;  // std dev = 1.656, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   else if ( interaction(F, A) )
%   | then return 0.04129575185072724;  // std dev = 6.698, 604.000 (wgt'ed) examples reached here.  /* #neg=421 #pos=183 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4208620124940426;  // std dev = 0.323, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.062415039831862994;  // std dev = 4.240, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.17439509585675345;  // std dev = 1.763, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24228358590363944;  // std dev = 0.167, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4348291790326787;  // std dev = 1.303, 90.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=88 */
%   | else return -0.1550948422974878;  // std dev = 1.215, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2350511750552947;  // std dev = 0.140, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.22057116365409063;  // std dev = 1.746, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else return -0.03736945230717501;  // std dev = 4.325, 195.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=37 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0653847032104471;  // std dev = 4.359, 240.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=87 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08740739674582963;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1511542289459059;  // std dev = 0.915, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.17605060428763453;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16663511337447076;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21942586238258155;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then return 0.030132017349096152;  // std dev = 6.118, 564.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.28990302635751497;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12940138719694597;  // std dev = 3.766, 78.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=31 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.010969260915657624;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.013651231359655317;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.06269931769938654;  // std dev = 1.533, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11155962196547356;  // std dev = 0.918, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.007888335919664625;  // std dev = 6.133, 649.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=183 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5727670875681218;  // std dev = 1.167, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.2403525222427183;  // std dev = 0.375, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1448882035999596;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1691868890408019;  // std dev = 0.145, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1322563496361468;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1369286974482103;  // std dev = 1.074, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.004748078187464095;  // std dev = 1.517, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01143129289945516;  // std dev = 6.015, 596.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=173 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.007563929262168231;  // std dev = 3.635, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980699
   AUC PR    = 0.180316
   CLL	      = -0.205008
   Precision = 0.103753 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.186139


Total learning time: 4.181 seconds
Total inference time: 7.237 seconds
AUC ROC: 0.980699


Results scoring model
   AUC ROC   = 0.990507
   AUC PR    = 0.361679
   CLL	      = -0.179462
   Precision = 0.253505 at threshold = 0.5
   Recall    = 0.818868
   F1        = 0.387154


Total scoring time: 11.199 seconds
Parameter learned model CLL: -0.179462


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.38, 2, 40], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.535, 3, 11], 'false,false,true,true': [6.359, 161, 54], 'false,false,true,false': [9.186, 290, 119], 'false,false,false,true': [4.611, 73, 30], 'false,false,false,false': [1.897, 9, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [9.42e-08, 0, 21], 'true,false': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.038, 0, 6], 'false,true,false': [1.519, 3, 10], 'false,false,true,true': [6.388, 167, 54], 'false,false,true,false': [9.256, 306, 119], 'false,false,false,true': [4.573, 69, 30], 'false,false,false,false': [2.026, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.988, 1, 40], 'false,true,true,true': [0.174, 0, 14], 'false,true,true,false': [5.815, 180, 42], 'false,true,false,true': [2.234, 5, 127], 'false,true,false,false': [0.0, 270, 0], 'false,false,true,true': [0.76, 1, 4], 'false,false,true,false': [4.478, 60, 31], 'false,false,false,true': [2.142, 15, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [2.98e-08, 0, 23], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 16], 'false,true,true,true': [1.109, 2, 10], 'false,true,true,false': [3.006, 9, 173], 'false,true,false': [0.273, 413, 0], 'false,false,true': [1.261, 2, 6], 'false,false,false,true': [4.578, 70, 30], 'false,false,false,false': [2.106, 17, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 14], 'true,false': [2.98e-08, 0, 26], 'false,true,true,true': [0.151, 0, 10], 'false,true,true,false': [3.597, 14, 173], 'false,true,false': [0.154, 446, 0], 'false,false,true,true': [0.299, 0, 15], 'false,false,true,false': [0.004, 22, 0], 'false,false,false,true': [0.8, 1, 4], 'false,false,false,false': [3.921, 47, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.656, 3, 32], 'false,true': [6.698, 421, 183], 'false,false,true,true': [0.323, 0, 4], 'false,false,true,false': [4.24, 70, 31], 'false,false,false,true': [1.763, 9, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.167, 0, 12], 'true,true,false': [1.303, 2, 88], 'true,false': [1.215, 202, 0], 'false,true,true,true': [0.14, 0, 19], 'false,true,true,false': [1.746, 5, 18], 'false,true,false': [4.325, 158, 37], 'false,false,true': [4.359, 153, 87], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.915, 1, 24], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.025, 0, 5], 'true,false,false,false': [0.017, 0, 9], 'false,true': [6.118, 381, 183], 'false,false,true,true': [0.301, 0, 4], 'false,false,true,false': [3.766, 47, 31], 'false,false,false,true': [0.882, 7, 3], 'false,false,false,false': [1.664, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.533, 3, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.918, 1, 16], 'false,true': [6.133, 466, 183], 'false,false,true,true': [1.167, 0, 42], 'false,false,true,false': [0.375, 76, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.011, 0, 8], 'true,true,true,false': [0.145, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.083, 0, 4], 'true,false': [1.074, 2, 14], 'false,true': [1.517, 3, 15], 'false,false,true': [6.015, 423, 173], 'false,false,false,true': [3.635, 80, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.045351473922903854, 0.20824663584985068], 'false': [0.13296398891966726, 0.20233251720054504], 'false,false': [0.20037958168968048, 0.2120080436656147], 'false,false,false': [0.2064285041002935, 0.24000000000000007], 'false,false,true': [0.1880800432666314, 0.206299579749046], 'false,true': [0.0, 0.16836734693877536], 'false,true,false': [nan, 0.16836734693877523], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [-4.440892098500626e-16, 0.2023614381211528], 'false': [0.12987222147536281, 0.19861560738043413], 'false,false': [0.19600524692440738, 0.2119868808054719], 'false,false,false': [0.21120293847566543, 0.21606648199446005], 'false,false,true': [0.18463995413689513, 0.20159999999999972], 'false,true': [0.00023525943393528279, 0.1775147928994084], 'false,true,true': [nan, 0.00023525943393528279], 'true': [4.2294210461910723e-16, -9.349246523159212e-17]}, {'': [0.0237953599048188, 0.2037470088219513], 'false': [0.2006486489969116, 0.21821440952047041], 'false,false': [0.21978871264026187, 0.20857641877538038], 'false,false,true': [0.11562846003931124, 0.22036551445484873], 'false,false,false': [0.20857641877538038, nan], 'false,true': [0.17914536620456534, 0.21158033759618258], 'false,true,false': [0.03782492024660731, -2.1711028037114172e-16], 'false,true,true': [0.0021647030959692465, 0.15232293400747252]}, {'': [1.3322676295501878e-16, 0.16901426189343707], 'false': [0.1604651857741555, 0.20862570347702916], 'false,false': [0.1987730194228166, 0.20683304083846282], 'false,false,false': [0.20961325993134575, 0.19281663516068068], 'false,true': [0.06038294512588529, 0.0001800540884606371], 'false,true,true': [0.10242946215190686, 0.0496550107819343], 'true': [1.1102230246251565e-16, -1.3877787807814457e-16], 'true,true': [3.8616453030440226e-17, 0.0]}, {'': [1.3322676295501878e-16, 0.12273735877787006], 'false': [0.10481287076989788, 0.2202000298440596], 'false,false': [0.2290827017178661, 0.2147813967708891], 'false,false,true': [0.005949337478666787, 8.568819924523943e-07], 'false,false,false': [0.12793933563277063, 0.21960466073338908], 'false,true': [0.06647725682497235, 5.3096307415220695e-05], 'false,true,true': [0.002283014538875916, 0.06917177703580121], 'true': [-4.7580986769649563e-17, 3.416070845000482e-17]}, {'': [0.06489994591671185, 0.0922884950404154], 'false': [0.07427291757499392, 0.18031589184385372], 'false,false': [0.17692851663339085, 0.19415613494767978], 'false,false,false': [0.19415613494767978, nan], 'false,false,true': [0.02602524170971332, 0.17801024653955114], 'true': [0.0, 0.07836734693877553], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08357168208700537, 0.09454438142821985], 'false': [0.10206290553121253, 0.08587575614425291], 'false,true': [0.0730805801959353, 0.09590806812418322], 'false,false': [0.07918441275721029, 0.23140495867768604], 'false,false,false': [0.23140495867768604, nan], 'true': [0.020774601554183404, 0.0073097148054079766], 'false,true,true': [0.0010289483973518038, 0.13250664237624718], 'true,true': [0.0023330200589526395, 0.018871854918243613]}, {'': [0.021194453339529448, 0.08401878443010478], 'false': [0.06635956699911544, 0.17378635733212552], 'false,false': [0.17528932798143465, 0.15434564261426184], 'false,false,true': [0.022651340165844414, 0.1818602938722205], 'false,false,false': [0.07772928403240245, 0.21301775147928995], 'true': [0.03348389625401404, 0.0006820981070342971], 'true,false': [0.0, 0.0007043781940295994], 'true,false,false': [0.00012316541791554947, 3.196590188914161e-05]}, {'': [0.07314716089757445, 0.0745414769605844], 'false': [0.05796146659784186, 0.16429700925768437], 'false,false': [0.16429700925768437, nan], 'false,false,true': [0.03242107607508317, 0.0018464331318204124], 'true': [0.08705070133602483, 0.04960011516934671], 'true,false': [nan, 0.04960011516934671]}, {'': [0.027712145442735644, 0.07082059685045126], 'false': [0.12778707798769096, 0.0693744712886765], 'false,false': [0.06070206645655184, 0.113920169451136], 'false,false,false': [0.113920169451136, nan], 'true': [0.0012556713843150668, 0.07211653895255338], 'true,true': [0.001051155993596195, 0.0017407461063766068], 'true,true,false': [nan, 0.0017407461063766068], 'true,true,true': [1.5245196062621535e-05, 0.0013982761473579687]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8105298874804642;  // std dev = 0.213, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.11199508894566487;  // std dev = 4.962, 130.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=33 */
%   | | | else return 0.1746811931640264;  // std dev = 10.359, 496.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=157 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7289832469462055;  // std dev = 9.42e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.7289832469462059;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839127;  // std dev = 3.49e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.1164456102293981;  // std dev = 4.961, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.22218742238235323;  // std dev = 4.074, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.1293859063210804;  // std dev = 10.229, 506.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=148 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4949885285159034;  // std dev = 0.255, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8068482191412836;  // std dev = 0.203, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.03326763758822552;  // std dev = 5.649, 198.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7492137991831037;  // std dev = 2.734, 134.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=127 */
%   | | | else return -0.18081702345531345;  // std dev = 0.064, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7950791454265905;  // std dev = 0.273, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.17770599969385703;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.40868617918766403;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22417916596728663;  // std dev = 3.701, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44164177107195873;  // std dev = 1.67e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.26255436953581157;  // std dev = 1.083, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.6406370552499308;  // std dev = 3.494, 186.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=173 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.13866089159400338;  // std dev = 0.233, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.1663147073491905;  // std dev = 0.330, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6248094656583904;  // std dev = 0.328, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1492676915894363;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.02338587786489714;  // std dev = 3.135, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.08744395678204511;  // std dev = 3.393, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33712259097510444;  // std dev = 1.12e-08, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2673084115737886;  // std dev = 0.781, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.4872982759009275;  // std dev = 3.735, 188.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=173 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10222997949394944;  // std dev = 7.45e-09, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.1458682391162497;  // std dev = 0.374, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5491868974996763;  // std dev = 0.462, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.14495765519638168;  // std dev = 0.094, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4970998790755185;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04227464301465564;  // std dev = 4.103, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24195092714446145;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( phenotype(E, G), interaction(E, D) )
%   | | | then return -0.10149888582051622;  // std dev = 1.176, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return -0.01720986030455793;  // std dev = 2.061, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.47029919906959033;  // std dev = 1.350, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.15914136645771831;  // std dev = 0.297, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(I, K), enzyme(A, K) )
%   | | | then return -0.07966626506959713;  // std dev = 0.520, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.05004301670469615;  // std dev = 5.079, 348.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=116 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2925493808018584;  // std dev = 0.249, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.06287127275320513;  // std dev = 4.989, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21370601649611176;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.3961776691682764;  // std dev = 0.129, 90.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=88 */
%   | else return -0.135860446824452;  // std dev = 0.066, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.32296422120592827;  // std dev = 0.120, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.06446994281083201;  // std dev = 2.243, 121.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | | | else return 0.03448597583377428;  // std dev = 3.631, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return 0.10994014606787876;  // std dev = 1.973, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return 0.0417956179348789;  // std dev = 3.798, 181.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=64 */
%   | | else return 0.4149496216606039;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.17612264105859685;  // std dev = 0.007, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.018434834743009627;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.1871063726288834;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1970521520364223;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.08142507400624639;  // std dev = 0.008, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3860552770081866;  // std dev = 0.959, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.1420004855890357;  // std dev = 0.284, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 2.8820734720077265E-4;  // std dev = 3.206, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */
%   | | | else return 0.023776799245736245;  // std dev = 6.057, 474.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=150 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16209872963932564;  // std dev = 0.020, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(E, A), enzyme(E, F) )
%   | | | then return -0.08665890761968291;  // std dev = 0.160, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.07539801667182978;  // std dev = 0.015, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.00945239101713228;  // std dev = 3.819, 237.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=68 */
%   | | | else return 0.029502616717655833;  // std dev = 4.402, 333.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=115 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.11254837003623265;  // std dev = 1.208, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.31574144652941205;  // std dev = 3.064, 43.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=27 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.17888293949563236;  // std dev = 0.294, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.2648046061968913;  // std dev = 0.413, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14938887705392545;  // std dev = 0.042, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.03537906468344659;  // std dev = 0.446, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.11787035024935304;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21813937700655975;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.14645080107219027;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(J, A), complex(A, I) )
%   | | | then return -0.054976007410830974;  // std dev = 1.340, 80.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=9 */
%   | | | else return 0.002867247050083032;  // std dev = 3.869, 193.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.010407942733903162;  // std dev = 4.400, 368.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=108 */
%   | | | else return 0.04812921010468781;  // std dev = 3.254, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */


Results
   AUC ROC   = 0.980789
   AUC PR    = 0.175555
   CLL	      = -0.201597
   Precision = 0.101891 at threshold = 0.5
   Recall    = 0.932692
   F1        = 0.183712


Total learning time: 20.046 seconds
Total inference time: 7.868 seconds
AUC ROC: 0.980789


Results scoring model
   AUC ROC   = 0.988956
   AUC PR    = 0.349175
   CLL	      = -0.176633
   Precision = 0.229331 at threshold = 0.5
   Recall    = 0.879245
   F1        = 0.363778


Total scoring time: 30.447 seconds
Refined model CLL: -0.176633


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980789
   AUC PR    = 0.175555
   CLL	      = -0.201597
   Precision = 0.101891 at threshold = 0.5
   Recall    = 0.932692
   F1        = 0.183712


Total learning time: 65.873 seconds
Total inference time: 7.868 seconds
AUC ROC: 0.980789
Total revision time: 65.873
Best scored revision CLL: -0.176633


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:10:49
{'AUC ROC': 0.980789, 'AUC PR': 0.175555, 'CLL': -0.201597, 'Precision': [0.101891, 0.5], 'Recall': 0.932692, 'F1': 0.183712, 'Learning time': 65.873, 'Inference time': 7.868, 'parameter_1.0': {'AUC ROC': 0.980699, 'AUC PR': 0.180316, 'CLL': -0.205008, 'Precision': [0.103753, 0.5], 'Recall': 0.903846, 'F1': 0.186139, 'Learning time': 4.181, 'Inference time': 7.237}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.09727936988212106;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.06403128804068874;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.23745927992709787;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.12088973090439974;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.20017429275523962;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15507583648164927;  // std dev = 3.844, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.21666685038260994;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5753897189581848;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8294636616846143;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0038696716487190627;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7994284056248164;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17714747437076508;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8033657812824622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14449224666232813;  // std dev = 3.774, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21762334207542364;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41265219392569447;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.49508047552333734;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4393704554752106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6385979522272713;  // std dev = 1.243, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.16778984279753595;  // std dev = 0.164, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6013800736498891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15016547652760925;  // std dev = 3.694, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.17606373911837145;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.32874991148651034;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3363046796330265;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.06720555852438065;  // std dev = 0.570, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.48445216604020935;  // std dev = 1.480, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.1442288537076955;  // std dev = 0.153, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7390826204609343;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.26006928816624797;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4526024104215667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09876030521544144;  // std dev = 3.733, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.25050460946272285;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2831257081466855;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.012919019212257146;  // std dev = 2.386, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12957829218176048;  // std dev = 0.648, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12104942966590117;  // std dev = 3.459, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07319885240279404;  // std dev = 1.644, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.07229341164745522;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4020770564341767;  // std dev = 1.110, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1651703160494051;  // std dev = 0.326, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.20282914708156113;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2352697773045879;  // std dev = 0.941, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.018009776861984184;  // std dev = 3.676, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else if ( interaction(A, H) )
%   | | then return -4.985890277520132E-4;  // std dev = 1.054, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.06771882249258128;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.0484908192025867;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.17818223063076044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.25991241210834015;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G) )
%   | then return 0.015611198129358754;  // std dev = 2.214, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.08833588169180484;  // std dev = 0.579, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06321899199344634;  // std dev = 3.435, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.032316350479102196;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06188399116400445;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.05437156060848426;  // std dev = 0.815, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22210255096072679;  // std dev = 0.097, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.026689477119180176;  // std dev = 2.158, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5122123840403593;  // std dev = 1.930, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return -0.28449840119978126;  // std dev = 0.308, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.17945053847514114;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15784047294804182;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.08969828109080162;  // std dev = 0.869, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return -0.11252140796800059;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.007079591898732478;  // std dev = 2.116, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( interaction(I, A) )
%   | | | then return -2.4270119038737956E-4;  // std dev = 3.323, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997278
   AUC PR    = 0.608474
   CLL	      = -0.191007
   Precision = 0.607477 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.653266


Total learning time: 1.717 seconds
Total inference time: 2.498 seconds
AUC ROC: 0.997278


Results scoring model
   AUC ROC   = 0.984961
   AUC PR    = 0.306689
   CLL	      = -0.221396
   Precision = 0.211268 at threshold = 0.5
   Recall    = 0.545455
   F1        = 0.304569


Total scoring time: 3.375 seconds
Parameter learned model CLL: -0.221396


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 8], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.893, 35, 11], 'false,false,true,false': [2.358, 27, 7], 'false,false,false,true': [3.695, 36, 22], 'false,false,false,false': [1.491, 4, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.816, 1, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.816, 1, 2], 'false,false,true,true': [2.824, 29, 11], 'false,false,true,false': [2.133, 13, 7], 'false,false,false,true': [3.844, 45, 22], 'false,false,false,false': [1.708, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.098, 0, 8], 'false,true,true,true': [0.0, 0, 5], 'false,true,true,false': [2.236, 30, 6], 'false,true,false,true': [0.175, 0, 8], 'false,true,false,false': [0.0, 17, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.774, 42, 22], 'false,false,false,true': [1.651, 6, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.243, 2, 18], 'false,true,false': [0.164, 49, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.694, 37, 22], 'false,false,false,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.051, 0, 5], 'true,false': [0.046, 0, 3], 'false,true,true,true': [0.57, 1, 1], 'false,true,true,false': [1.48, 2, 18], 'false,true,false': [0.153, 59, 0], 'false,false,true,true': [0.061, 0, 5], 'false,false,true,false': [0.106, 16, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [3.733, 39, 22]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.001, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.041, 0, 3], 'false,true': [2.386, 57, 19], 'false,false,true,true': [0.648, 1, 1], 'false,false,true,false': [3.459, 34, 22], 'false,false,false,true': [1.644, 7, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.9, 1, 5], 'true,true,false': [1.11, 1, 12], 'true,false': [0.326, 36, 0], 'false,true,true,true': [0.004, 0, 2], 'false,true,true,false': [0.941, 2, 4], 'false,true,false': [3.676, 57, 25], 'false,false,true': [1.054, 13, 3], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.901, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.707, 1, 1], 'false,true': [2.214, 52, 19], 'false,false,true,true': [0.579, 1, 1], 'false,false,true,false': [3.435, 41, 22], 'false,false,false,true': [0.52, 2, 1], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.815, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.097, 0, 2], 'false,true': [2.158, 46, 19], 'false,false,true,true': [1.93, 3, 28], 'false,false,true,false': [0.308, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.003, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.869, 1, 2], 'false,true': [0.738, 1, 2], 'false,false,true': [2.116, 52, 18], 'false,false,false,true': [3.323, 54, 27], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.21593621908923047], 'false': [0.0, 0.2124114952103301], 'false,false': [0.17437499999999945, 0.24058810425484653], 'false,false,false': [0.2354340071343648, 0.2469135802469134], 'false,false,true': [0.1819470699432887, 0.16349480968858127], 'false,true': [nan, 0.0], 'false,true,false': [0.0, 0.0]}, {'': [0.09876543209876552, 0.2195140048506312], 'false': [0.22222222222222224, 0.21834671875424422], 'false,true': [nan, 0.22222222222222224], 'false,false': [0.21014689816619575, 0.22444801084908564], 'false,false,false': [0.2205390955669412, 0.24305555555555558], 'false,false,true': [0.1993750000000002, 0.22750000000000004], 'true': [7.401486830834377e-17, 0.22222222222222232]}, {'': [0.0012027954916121741, 0.21705001123273213], 'false': [0.20135748788278873, 0.229433118030002], 'false,false': [0.2257278574454999, 0.24793388429752072], 'false,false,false': [0.24793388429752072, nan], 'false,false,true': [0.0, 0.22257617314696526], 'false,true': [0.19631171921475288, 0.20875428203855612], 'false,true,false': [0.0038408257858695283, 0.0], 'false,true,true': [-8.881784197001253e-17, 0.13888888888888895]}, {'': [0.0012739540513387881, 0.19719357523236544], 'false': [0.1563664329270737, 0.23349091972676306], 'false,false': [0.0, 0.23401046859152977], 'false,false,false': [0.23130917866973902, 0.24793388429752075], 'false,true': [0.07540970905566717, 0.0005469199060993209], 'false,true,true': [0.0, 0.07729011853406487], 'true': [-7.401486830834377e-17, 0.0], 'true,true': [-7.401486830834377e-17, nan]}, {'': [0.0006019578465568803, 0.16299876400060573], 'false': [0.10438833388743084, 0.21844704619898733], 'false,false': [0.18180799747615944, 0.2267990991909491], 'false,false,false': [0.0, 0.22849769405859052], 'false,false,true': [0.0007365211920872028, 0.000701277502231562], 'false,true': [0.13948632066743807, 0.000395501798237774], 'false,true,true': [0.16223014001744393, 0.10954591645318494], 'true': [0.0005136706957285409, 0.0007134315218452018]}, {'': [0.0004633967766094621, 0.14500921710147777], 'false': [0.07491985571702643, 0.21588292642257284], 'false,false': [0.21354010917975597, 0.22528598924175924], 'false,false,false': [0.22528598924175924, nan], 'false,false,true': [0.2100326927327043, 0.2136628657254231], 'true': [3.2117907448059315e-07, 0.0005701043895747308], 'true,true': [3.2117907448059315e-07, nan], 'true,true,true': [3.2117907448059315e-07, nan]}, {'': [0.09565694568223493, 0.1569288959148034], 'false': [0.1635915835433772, 0.1334248397824136], 'false,true': [0.11098313655035398, 0.16483578991025577], 'false,false': [0.06949148478663263, 0.20408163265306128], 'false,false,false': [0.20408163265306128, nan], 'false,true,true': [6.95442240822991e-06, 0.1477120986373525], 'true': [0.13091631748524674, 0.0029594409463748225], 'true,true': [0.13488814831796062, 0.09473876930833613]}, {'': [0.14944492153117622, 0.1329365794101293], 'true': [0.1158760506082043, 0.2093170924437112], 'true,false': [nan, 0.2093170924437112], 'true,false,false': [0.0, 0.25], 'false': [0.06904173351463457, 0.19015763609680264], 'false,false': [0.1866990828183403, 0.20697652807691364], 'false,false,false': [0.09007236189815519, 0.24000000000000007], 'false,false,true': [0.1674818382996881, 0.18728974305295856]}, {'': [0.07978839116922515, 0.14278576794801942], 'false': [0.0716246742556929, 0.2035596129301428], 'false,false': [0.2035596129301428, nan], 'false,false,true': [0.12014175111629907, 0.0021148519257162966], 'true': [0.09499110944633342, 0.004697122102478524], 'true,false': [nan, 0.004697122102478524]}, {'': [0.0992401093983433, 0.1045534027754886], 'false': [0.18178298741943932, 0.1027583854198714], 'false,false': [0.06393526124905126, 0.1362843783804779], 'false,false,false': [0.1362843783804779, nan], 'true': [0.00010534338494395483, 0.25176602388206193], 'true,true': [0.00010534338494395483, nan], 'true,true,true': [0.0, 4.7002001081729305e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, F), interaction(F, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return -0.07518439823382113;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.16907330484741076;  // std dev = 5.049, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25814893509951226;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7350122940520396;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.10842986487926996;  // std dev = 2.241, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return -0.12162112600100812;  // std dev = 0.968, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( function(A, H), function(D, H) )
%   | | | then return 0.13357249698192322;  // std dev = 2.466, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.49877558294604923;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.836296547177021;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1614780870825766;  // std dev = 0.044, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.21284538726625876;  // std dev = 3.225, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.3576580607629925;  // std dev = 1.293, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.46719045520950087;  // std dev = 0.297, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6591427605101977;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.005223956114628366;  // std dev = 2.130, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7926370614321522;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1834591263447446;  // std dev = 0.126, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6888246474883207;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13755900961697437;  // std dev = 3.664, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.029232141094404404;  // std dev = 1.157, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1917731879233448;  // std dev = 1.146, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43527725835732406;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5182373181438895;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5039102968985588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7149354757419666;  // std dev = 0.283, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.1720180692425439;  // std dev = 0.087, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.15490384921090586;  // std dev = 0.203, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6436970096265437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.045297021498923146;  // std dev = 1.797, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.17656071595050013;  // std dev = 3.440, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3472088850793439;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.35422917048114994;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5564253943479694;  // std dev = 0.351, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return -0.13689263435783805;  // std dev = 0.181, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.16574586914360234;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7228909761368174;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18610968961244986;  // std dev = 0.107, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.48694038563163156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13092174549512772;  // std dev = 3.453, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.260602804388394;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.294627419432621;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.5322961128651789;  // std dev = 0.701, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.037856843724704735;  // std dev = 0.720, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(H, E), interaction(H, H) )
%   | | | then return -0.16268368043526182;  // std dev = 0.364, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.2673364388655109;  // std dev = 0.288, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4387839148931748;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.03838574492352792;  // std dev = 2.858, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else return 0.41035780486415135;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return -0.04918137219331275;  // std dev = 0.231, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.04848155452333822;  // std dev = 0.250, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.40507327163807;  // std dev = 0.267, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.10237326843277192;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( location(A, J) )
%   | | | then return 0.030192298661738535;  // std dev = 3.181, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | | else return -0.2858875326945091;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return -0.01559947732442966;  // std dev = 0.497, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.12738254282250938;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2729779637314586;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.21376000344909518;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14416156834725688;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21505616444088566;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( phenotype(F, H), location(G, I) )
%   | | then return 0.0017408443659546755;  // std dev = 0.205, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else return -0.1438488768447648;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.42940302251614904;  // std dev = 0.273, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1638494476719847;  // std dev = 0.172, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.01918399784939343;  // std dev = 1.846, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.11737078278584612;  // std dev = 2.694, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.1926227316974621;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.14042182973029013;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.1581454394845221;  // std dev = 0.305, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13698138938398174;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.014628201683982607;  // std dev = 1.759, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07751293289628705;  // std dev = 0.588, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.21931902530828523;  // std dev = 2.451, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.1835475061694805;  // std dev = 1.018, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return -0.20114887077063226;  // std dev = 0.068, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16447979547902417;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20975562822789412;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(F, G) )
%   | | then if ( interaction(H, F), enzyme(H, G) )
%   | | | then return 0.0315462867038924;  // std dev = 1.614, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.11137743651776148;  // std dev = 1.610, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.024335765754842587;  // std dev = 1.952, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.18119840961551073;  // std dev = 0.959, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.31333216323798013;  // std dev = 0.687, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.08050046450315972;  // std dev = 0.678, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.1173554090418298;  // std dev = 0.821, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */


Results
   AUC ROC   = 0.989998
   AUC PR    = 0.502686
   CLL	      = -0.22188
   Precision = 0.346667 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.492114


Total learning time: 9.315 seconds
Total inference time: 5.989 seconds
AUC ROC: 0.989998


Results scoring model
   AUC ROC   = 0.9803
   AUC PR    = 0.21167
   CLL	      = -0.222082
   Precision = 0.158915 at threshold = 0.5
   Recall    = 0.745455
   F1        = 0.261981


Total scoring time: 18.228 seconds
Refined model CLL: -0.222082


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997278
   AUC PR    = 0.608474
   CLL	      = -0.191007
   Precision = 0.607477 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.653266


Total learning time: 32.635000000000005 seconds
Total inference time: 2.498 seconds
AUC ROC: 0.997278
Total revision time: 32.635000000000005
Best scored revision CLL: -0.221396


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:30
{'AUC ROC': 0.997278, 'AUC PR': 0.608474, 'CLL': -0.191007, 'Precision': [0.607477, 0.5], 'Recall': 0.706522, 'F1': 0.653266, 'Learning time': 32.635000000000005, 'Inference time': 2.498, 'parameter_0.2': {'AUC ROC': 0.997278, 'AUC PR': 0.608474, 'CLL': -0.191007, 'Precision': [0.607477, 0.5], 'Recall': 0.706522, 'F1': 0.653266, 'Learning time': 1.717, 'Inference time': 2.498}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.11424649607512179;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.21814893509951233;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16907330484741004;  // std dev = 5.049, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | | else return 0.48972788246793336;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4099393538905048;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.05366488765969395;  // std dev = 4.073, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | | else return 0.1345512599393262;  // std dev = 3.537, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09870789469475146;  // std dev = 5.224, 141.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=37 */
%   | | | else return 0.23200313186909735;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4998108811907291;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6056863266393908;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.02068729973423561;  // std dev = 3.071, 77.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=11 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.783041558182804;  // std dev = 0.312, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.19041747654127875;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.15566405262230437;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12175550128603595;  // std dev = 5.118, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2679053956291304;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4310831662965584;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4310831662965582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2882260234394152;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4335522739120874;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6616594637544682;  // std dev = 1.671, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return -0.1642830178385238;  // std dev = 0.175, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6592954779260056;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1070734184464346;  // std dev = 5.077, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
%   | | | else return 0.2139261081565266;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3406975076642079;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23317665059309473;  // std dev = 0.925, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.06709654014357555;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4985079028517177;  // std dev = 1.933, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | else return -0.14237748726317592;  // std dev = 0.130, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7153677598303697;  // std dev = 0.319, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2227282264957585;  // std dev = 0.194, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5002151829362004;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14430756178302206;  // std dev = 4.801, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.262906481775103;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20468583790710349;  // std dev = 0.967, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, F) )
%   | then return 0.031659216495972003;  // std dev = 3.357, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2549471356391543;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.06651249107170083;  // std dev = 4.866, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.195413956856115;  // std dev = 2.036, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.25656836722827286;  // std dev = 0.171, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.438507959782683;  // std dev = 1.126, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.16947111323239172;  // std dev = 0.734, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23905249235893855;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3261971554644587;  // std dev = 1.029, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.07184107320884105;  // std dev = 4.641, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | else if ( interaction(A, H) )
%   | | then return 0.08383925743811431;  // std dev = 1.560, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.03617116784583938;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.11826694049267458;  // std dev = 0.903, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.168587282919377;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.254384563767207;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return -0.008206091706898205;  // std dev = 3.118, 178.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6327492778011183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.028650944455112487;  // std dev = 4.798, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.10964106747336444;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.00624456537931912;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1651218167824822;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04950868797649509;  // std dev = 0.886, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F) )
%   | then return 0.004298593898329652;  // std dev = 3.060, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4957078908265454;  // std dev = 2.641, 59.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   | | | else return -0.2632696155731618;  // std dev = 0.813, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14745517710490944;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15705853699318337;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24209199634070072;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.1604385634450983;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0036962164300511613;  // std dev = 2.961, 156.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=39 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.036293458399489525;  // std dev = 4.378, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996757
   AUC PR    = 0.551437
   CLL	      = -0.1957
   Precision = 0.541667 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.613208


Total learning time: 2.421 seconds
Total inference time: 2.599 seconds
AUC ROC: 0.996757


Results scoring model
   AUC ROC   = 0.985286
   AUC PR    = 0.216705
   CLL	      = -0.219337
   Precision = 0.236486 at threshold = 0.5
   Recall    = 0.636364
   F1        = 0.344828


Total scoring time: 5.74 seconds
Parameter learned model CLL: -0.219337


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 17], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.952, 61, 21], 'false,false,true,false': [3.394, 32, 18], 'false,false,false,true': [5.049, 82, 37], 'false,false,false,false': [2.103, 7, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 10], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [1.197, 2, 4], 'false,false,true,true': [4.073, 79, 21], 'false,false,true,false': [3.537, 41, 18], 'false,false,false,true': [5.224, 104, 37], 'false,false,false,false': [2.582, 15, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.972, 1, 17], 'false,true,true,true': [1.519, 3, 10], 'false,true,true,false': [3.071, 66, 11], 'false,true,false,true': [0.312, 0, 21], 'false,true,false,false': [2.11e-08, 44, 0], 'false,false,true,true': [0.816, 2, 1], 'false,false,true,false': [5.118, 88, 38], 'false,false,false,true': [2.396, 11, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 1], 'true,false': [0.926, 1, 6], 'false,true,true,true': [0.097, 0, 3], 'false,true,true,false': [1.671, 3, 39], 'false,true,false': [0.175, 113, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [5.077, 85, 37], 'false,false,false,false': [2.396, 11, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.046, 0, 9], 'true,false': [0.925, 1, 8], 'false,true,true,true': [0.924, 1, 3], 'false,true,true,false': [1.933, 4, 39], 'false,true,false': [0.13, 103, 0], 'false,false,true,true': [0.319, 0, 12], 'false,false,true,false': [0.194, 31, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [4.801, 63, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.019, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.967, 1, 11], 'false,true': [3.357, 109, 42], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [4.866, 86, 38], 'false,false,false,true': [2.036, 8, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.171, 0, 9], 'true,true,false': [1.126, 1, 29], 'true,false': [0.734, 83, 0], 'false,true,true,true': [0.009, 0, 5], 'false,true,true,false': [1.029, 2, 9], 'false,true,false': [4.641, 89, 42], 'false,false,true': [1.56, 16, 8], 'false,false,false,true': [2.191, 12, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.903, 1, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.016, 0, 3], 'true,false,false,false': [0.0, 0, 2], 'false,true': [3.118, 136, 42], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [4.798, 92, 38], 'false,false,false,true': [0.729, 2, 4], 'false,false,false,false': [2.152, 11, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.05, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.886, 1, 6], 'false,true': [3.06, 119, 42], 'false,false,true,true': [2.641, 8, 51], 'false,false,true,false': [0.813, 98, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.065, 0, 6], 'true,true,true,false': [0.007, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.102, 0, 5], 'false,true': [0.076, 0, 6], 'false,false,true': [2.961, 117, 39], 'false,false,false,true': [4.378, 88, 49], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.0898315757650005e-16, 0.22341682419659817], 'false': [0.1388888888888887, 0.21969821673525414], 'false,false': [0.2081611570247947, 0.2289960092417565], 'false,false,false': [0.21425040604477227, 0.2326869806094179], 'false,false,true': [0.19051160023795388, 0.23039999999999966], 'false,true': [0.0, 0.16000000000000014], 'false,true,false': [0.0, 0.18750000000000006], 'false,true,true': [0.0, nan]}, {'': [3.134747363647501e-16, 0.19811936754942835], 'false': [0.21629326660987508, 0.19513719050723105], 'false,true': [0.0, 0.23865481105528352], 'false,false': [0.18453616662428066, 0.204524248658386], 'false,false,false': [0.19355163221165958, 0.24691358024691348], 'false,false,true': [0.16590000000000052, 0.2120080436656138], 'true': [1.7763568394002506e-16, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.05246913580246895, 0.20522486481802923], 'false': [0.19212542526253887, 0.21721860828787634], 'false,false': [0.20826083455545383, 0.2495274102079398], 'false,false,false': [0.2495274102079398, nan], 'false,false,true': [0.22222222222222224, 0.20790168126446404], 'false,true': [0.1788888888888887, 0.20874117665646605], 'false,true,false': [0.004636108792202231, 1.0092936587501423e-17], 'false,true,true': [0.17751479289940847, 0.1224489795918366]}, {'': [0.05246913580246929, 0.186054242636852], 'false': [0.1527306047203565, 0.21970412877275], 'false,false': [0.0, 0.21883633738522365], 'false,false,false': [0.21123926416403987, 0.2495274102079394], 'false,true': [0.0654852258992531, 0.00027098333376429146], 'false,true,true': [0.0031053302265033147, 0.0664720733958349], 'true': [-4.0371746350005693e-17, 0.1224489795918368], 'true,true': [0.0, 0.0]}, {'': [0.050523222705295426, 0.16508095984962276], 'false': [0.1137991086296216, 0.21573664544859414], 'false,false': [0.18028458823695426, 0.22717616811773178], 'false,false,false': [0.0, 0.22818357206198753], 'false,false,true': [0.008459232307449568, 0.001209514015544488], 'false,true': [0.11218180421579696, 0.0001639115368422593], 'false,true,true': [0.213636246507877, 0.08690454219838649], 'true': [0.00023201863329096954, 0.09503405942464663]}, {'': [0.052672522242010314, 0.13521378409694598], 'false': [0.07463535322410243, 0.19632368916692725], 'false,false': [0.19241102865194393, 0.20729171553887565], 'false,false,false': [0.20729171553887565, nan], 'false,false,true': [0.25, 0.1909185613345169], 'true': [6.231862378134705e-05, 0.07784774292699005], 'true,true': [6.231862378134705e-05, nan], 'true,true,true': [6.231862378134705e-05, nan]}, {'': [0.08658371661641859, 0.16179191548111196], 'false': [0.15890197401932438, 0.167963858490008], 'false,false': [0.1013871486664533, 0.24], 'false,false,false': [0.24, nan], 'false,true': [0.06781051658786244, 0.1644129513400547], 'true': [0.03910927032852633, 0.006484629604585761], 'false,true,true': [1.7616888223259685e-05, 0.09625228590060986], 'true,true': [0.0032517359921965497, 0.042227604012764354]}, {'': [0.04720946587530975, 0.11516245817601056], 'false': [0.05460753045562819, 0.18342169494095467], 'false,false': [0.17851965267141642, 0.20899355403324477], 'false,false,false': [0.08867024585184922, 0.24376731301939072], 'false,false,true': [0.0, 0.17710711896467954], 'true': [0.06267762908475932, 0.001818383485457198], 'true,false': [nan, 0.0018183834854571923], 'true,false,false': [8.61697820760815e-05, 0.0]}, {'': [0.04691859315234464, 0.12024401070460418], 'false': [0.05814631145436834, 0.18376604930118273], 'false,false': [0.18376604930118273, nan], 'false,false,true': [0.11823518618421922, 0.0067420968877053315], 'true': [0.00022937525405986037, 0.11211901129784098], 'true,false': [nan, 0.11211901129784098]}, {'': [0.0026872422573183258, 0.09408867485077609], 'false': [0.0009561870659854227, 0.09559403689447982], 'false,false': [0.0562072459359439, 0.13987748716826498], 'false,false,false': [0.13987748716826498, nan], 'true': [0.00040850495134636173, 0.002098046208448223], 'true,true': [0.00040850495134636173, nan], 'true,true,true': [0.0006992736204167136, 9.278264201734165e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;complex(A, F), complex(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return -0.003920030417729039;  // std dev = 3.216, 87.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=12 */
%   | | | else return 0.16952618060849328;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | else if ( location(A, J) )
%   | | | then return 0.2503057978446101;  // std dev = 3.487, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5480325422264148;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), interaction(J, K) )
%   | | | then return 0.02717256850489656;  // std dev = 2.846, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.3324462115424138;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.20369943687353434;  // std dev = 5.162, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   | | | else return 0.12693281138420245;  // std dev = 4.783, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.56438564130624;  // std dev = 0.149, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.03662274728920335;  // std dev = 3.219, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return 0.2298121226268819;  // std dev = 2.144, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7786207480873569;  // std dev = 0.347, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.17937150379347022;  // std dev = 0.131, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5206839438964164;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.18813128863974948;  // std dev = 0.044, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12027467091752678;  // std dev = 4.479, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.2766073732649607;  // std dev = 2.885, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4153217952306255;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4703675922290511;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20660614297944468;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.590269473861062;  // std dev = 1.525, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.7204974438125372;  // std dev = 0.456, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.1671734611899269;  // std dev = 0.250, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.6093804928025605;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.023659680539091104;  // std dev = 3.936, 90.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=21 */
%   | | | else return 0.17209515626813238;  // std dev = 4.032, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3326404190460133;  // std dev = 0.140, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.33683617502267393;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.6866685974134411;  // std dev = 0.197, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.49358893032180007;  // std dev = 0.984, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.14868013530756655;  // std dev = 0.239, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.726080106562102;  // std dev = 0.321, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2255660200005894;  // std dev = 0.182, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.47855400583523244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11444800527062136;  // std dev = 4.860, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.2514923433871984;  // std dev = 0.000721, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14137199770237732;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then return -0.04931672268717614;  // std dev = 0.253, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
%   | | else if ( phenotype(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4983733375046547;  // std dev = 2.058, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.17605814704112654;  // std dev = 0.426, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.38761677659405547;  // std dev = 0.889, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.04978841884237521;  // std dev = 1.219, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.014221901165993221;  // std dev = 2.051, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.13847631316284556;  // std dev = 3.381, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.082674413975349;  // std dev = 0.275, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | else return -0.03103510390950364;  // std dev = 0.273, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.24229522872612505;  // std dev = 0.248, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.14131646372431367;  // std dev = 0.464, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.06901377027631647;  // std dev = 4.229, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4863068425235692;  // std dev = 0.377, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20938740215110382;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.08887319385866602;  // std dev = 0.962, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.051132433388683424;  // std dev = 1.861, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21299822296085016;  // std dev = 0.038, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.16908067809989946;  // std dev = 0.377, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.12762305916371144;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.06653526559179017;  // std dev = 1.043, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.006585354339394769;  // std dev = 2.537, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.12874589077668874;  // std dev = 0.535, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.03075090671055972;  // std dev = 4.428, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | else if ( location(A, L) )
%   | | | then return 0.08012799536897953;  // std dev = 1.835, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.3824509958991129;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1275422393401984;  // std dev = 0.218, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), location(D, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2783970320891586;  // std dev = 1.278, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.06984294851520836;  // std dev = 0.904, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | else if ( interaction(I, D), complex(I, J) )
%   | | | then return -0.11248475818782082;  // std dev = 1.689, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.03962103055683525;  // std dev = 1.516, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.47694080241389714;  // std dev = 0.305, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0398416379805003;  // std dev = 3.429, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.06397225997180533;  // std dev = 1.461, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.039320430270246884;  // std dev = 3.285, 98.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, E) )
%   | | then return 0.14490599215017622;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.38165690144995434;  // std dev = 1.030, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.13962913681069156;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08807061055642289;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.06316262314175698;  // std dev = 0.307, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.03481297137519861;  // std dev = 4.904, 248.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=57 */
%   | | | else return 0.20051413397793844;  // std dev = 1.641, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.20459042759987275;  // std dev = 0.960, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.021482593867305624;  // std dev = 2.370, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */


Results
   AUC ROC   = 0.978569
   AUC PR    = 0.458228
   CLL	      = -0.228397
   Precision = 0.492308 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.576577


Total learning time: 7.151 seconds
Total inference time: 2.611 seconds
AUC ROC: 0.978569


Results scoring model
   AUC ROC   = 0.972899
   AUC PR    = 0.208406
   CLL	      = -0.223537
   Precision = 0.247232 at threshold = 0.5
   Recall    = 0.609091
   F1        = 0.351706


Total scoring time: 5.729 seconds
Refined model CLL: -0.223537


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996757
   AUC PR    = 0.551437
   CLL	      = -0.1957
   Precision = 0.541667 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.613208


Total learning time: 21.041 seconds
Total inference time: 2.599 seconds
AUC ROC: 0.996757
Total revision time: 21.041
Best scored revision CLL: -0.219337


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:11:57
{'AUC ROC': 0.996757, 'AUC PR': 0.551437, 'CLL': -0.1957, 'Precision': [0.541667, 0.5], 'Recall': 0.706522, 'F1': 0.613208, 'Learning time': 21.041, 'Inference time': 2.599, 'parameter_0.4': {'AUC ROC': 0.996757, 'AUC PR': 0.551437, 'CLL': -0.1957, 'Precision': [0.541667, 0.5], 'Recall': 0.706522, 'F1': 0.613208, 'Learning time': 2.421, 'Inference time': 2.599}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.0928428126505323;  // std dev = 5.933, 196.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=46 */
%   | | | else return 0.20677278831052254;  // std dev = 7.036, 218.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=76 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.17243464938522662;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7281643902400934;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6281643902400933;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11236314846712044;  // std dev = 5.811, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | | else return 0.14127374643873283;  // std dev = 7.240, 245.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=76 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1795858431888912;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.05874113578563506;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.45468172373099824;  // std dev = 1.616, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7742891055470064;  // std dev = 0.997, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.006613563750188584;  // std dev = 4.714, 165.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=27 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.742452992113827;  // std dev = 2.185, 84.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=79 */
%   | | | else return -0.18970110786089378;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.19348382076527523;  // std dev = 0.543, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.262287017073602;  // std dev = 2.503, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.4291217297629723;  // std dev = 1.107, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4507807145150285;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4706682262166181;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.30897343747534883;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28627402491134296;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.593732753730362;  // std dev = 3.808, 138.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=122 */
%   | | else return -0.1672018436212231;  // std dev = 0.389, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5041626526708629;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1890467076310907;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.02808347060561811;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3534849308096535;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2846829623107724;  // std dev = 0.929, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.09173870319541803;  // std dev = 1.152, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.49843423913713125;  // std dev = 3.159, 133.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=122 */
%   | | else return -0.14506130185743735;  // std dev = 0.280, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6577924772051976;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.27017731162379527;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return -0.003020553114560315;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.039607430931744333;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2705524489102408;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2988404227295061;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then return 0.024753890815207773;  // std dev = 5.988, 444.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=127 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.40540183675380326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12564336562352363;  // std dev = 2.254, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.15652448622962084;  // std dev = 1.237, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2529889693871076;  // std dev = 0.260, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4458603141771334;  // std dev = 0.704, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.16633572287876133;  // std dev = 1.019, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22611723677570483;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38705981422987024;  // std dev = 0.847, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.04254135953081198;  // std dev = 2.740, 99.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then return 0.044840756163221404;  // std dev = 4.303, 194.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=66 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.04626352515041919;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18181904708404364;  // std dev = 0.071, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return -0.6441997643625137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18172916621763913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27076876177705955;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.01178333545566694;  // std dev = 5.638, 435.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=127 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.23586791255779105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.031382676194077024;  // std dev = 2.302, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03639763568727084;  // std dev = 0.550, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21329027034174497;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1563627807186603;  // std dev = 0.063, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20783636799364133;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then return 0.018620099326503745;  // std dev = 5.479, 425.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=127 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4515168843534232;  // std dev = 1.042, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.24866725577475954;  // std dev = 0.263, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.1342949594832038;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.142503655878495;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055874865732311825;  // std dev = 1.296, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.04383734310585504;  // std dev = 0.935, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then return 0.017472854875709543;  // std dev = 5.344, 410.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=122 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0070210420663156395;  // std dev = 2.095, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996945
   AUC PR    = 0.59181
   CLL	      = -0.167246
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 3.601 seconds
Total inference time: 2.519 seconds
AUC ROC: 0.996945


Results scoring model
   AUC ROC   = 0.98467
   AUC PR    = 0.239176
   CLL	      = -0.188702
   Precision = 0.145985 at threshold = 0.5
   Recall    = 0.843373
   F1        = 0.248889


Total scoring time: 9.146 seconds
Parameter learned model CLL: -0.188702


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true': [0.978, 1, 22], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.943, 1, 8], 'false,false,true,true': [5.933, 150, 46], 'false,false,true,false': [7.036, 142, 76], 'false,false,false,true': [2.746, 24, 11], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 13], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 0, 6], 'false,false,true,true': [5.811, 127, 46], 'false,false,true,false': [7.24, 169, 76], 'false,false,false,true': [2.687, 21, 11], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.616, 3, 22], 'false,true,true,true': [0.997, 1, 21], 'false,true,true,false': [4.714, 138, 27], 'false,true,false,true': [2.185, 5, 79], 'false,true,false,false': [0.0, 147, 0], 'false,false,true,true': [0.543, 1, 1], 'false,false,true,false': [2.503, 14, 12], 'false,false,false,true': [1.107, 2, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [4.21e-08, 0, 12], 'true,true,false': [0.022, 0, 5], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.802, 1, 5], 'false,true,true,false': [3.808, 16, 122], 'false,true,false': [0.389, 293, 0], 'false,false,true': [0.043, 0, 3], 'false,false,false,true': [2.519, 15, 11], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.055, 0, 11], 'true,false': [0.929, 1, 11], 'false,true,true,true': [1.152, 2, 5], 'false,true,true,false': [3.159, 11, 122], 'false,true,false': [0.28, 278, 0], 'false,false,true,true': [0.458, 0, 10], 'false,false,true,false': [0.004, 10, 0], 'false,false,false,true': [0.577, 1, 1], 'false,false,false,false': [2.148, 20, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.013, 0, 7], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.091, 0, 15], 'false,true': [5.988, 317, 127], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.254, 16, 12], 'false,false,false,true': [1.237, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.26, 0, 12], 'true,true,false': [0.704, 0, 46], 'true,false': [1.019, 130, 0], 'false,true,true,true': [0.006, 0, 6], 'false,true,true,false': [0.847, 1, 14], 'false,true,false': [2.74, 79, 20], 'false,false,true': [4.303, 128, 66], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.071, 0, 17], 'true,false,true': [0.0, 1, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.017, 0, 4], 'false,true': [5.638, 308, 127], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.302, 31, 12], 'false,false,false,true': [0.55, 2, 2], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.063, 0, 17], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.06, 0, 5], 'false,true': [5.479, 298, 127], 'false,false,true,true': [1.042, 1, 17], 'false,false,true,false': [0.263, 30, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [5.27e-09, 0, 6], 'true,true,true,false': [0.004, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [1.296, 2, 10], 'false,true': [0.935, 1, 8], 'false,false,true': [5.344, 288, 122], 'false,false,false,true': [2.095, 30, 14], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.04158790170132359, 0.21403091557669668], 'false': [0.09876543209876527, 0.20955923197681492], 'false,false': [0.20784615743658197, 0.2248661511005349], 'false,false,false': [0.21551020408163216, 0.24999999999999992], 'false,false,true': [0.17961266139108814, 0.22708526218331798], 'false,true': [nan, 0.09876543209876537], 'false,true,false': [nan, 0.09876543209876527]}, {'': [0.04158790170132266, 0.21024680486510447], 'false': [0.0, 0.2075458184225068], 'false,false': [0.20640676541249844, 0.21809541437501717], 'false,false,false': [0.22558593749999986, 0.18749999999999992], 'false,false,true': [0.1951952955327591, 0.21397750937109683], 'true': [-2.049642507000289e-16, 0.08999999999999994], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.10441871259867472, 0.2113153936301692], 'false': [0.20741253477872482, 0.2334904613870163], 'false,false': [0.2345207390114553, 0.2043901958300186], 'false,false,true': [0.14729978206852903, 0.24089190911866346], 'false,true': [0.18744154958147566, 0.22174671915451155], 'false,true,false': [0.05685994470237897, -1.7521887191363015e-16], 'false,false,false': [0.2043901958300186, nan], 'false,true,true': [0.0451382550315411, 0.13467308937454725]}, {'': [0.040517947963213174, 0.1662187472096985], 'false': [0.15990501531626897, 0.22913166609587907], 'false,false': [0.0006104087670742627, 0.23640114031564444], 'false,false,false': [0.2440828402366864, 0.1875], 'false,true': [0.10895794567914684, 0.0005153553663083882], 'false,true,true': [0.10709581224713394, 0.10510012175531919], 'true': [0.00011119529805059258, 0.13888888888888892], 'true,true': [1.4802973661668753e-16, 9.887828042027813e-05]}, {'': [0.03879896923707721, 0.1260247161597978], 'false': [0.11636807671014543, 0.21009995190766195], 'false,false': [0.22575968309306313, 0.1767188426705195], 'false,false,true': [0.020954075052196153, 1.3266442672521527e-06], 'false,false,false': [0.1662147975805216, 0.17743123187980872], 'false,true': [0.0886132131860775, 0.00028288839562072516], 'false,true,true': [0.18972459741895992, 0.07502149843660079], 'true': [0.00027789352175158007, 0.07184600663282723]}, {'': [0.0005586004612846116, 0.08939975132039892], 'false': [0.08076865411396482, 0.18073813835884608], 'false,false': [0.17777025257554696, 0.19114332051807975], 'false,false,false': [0.19114332051807975, nan], 'false,false,true': [0.0, 0.18142040388583588], 'true': [2.3080912869590164e-05, 0.0005538974820784877], 'true,true': [2.3080912869590164e-05, nan], 'true,true,true': [2.3080912869590164e-05, nan]}, {'': [0.08027088379425232, 0.09621839267222661], 'false': [0.09071098659950941, 0.09938691861331939], 'false,false': [0.09542467700580655, 0.1875], 'false,false,false': [0.1875, nan], 'false,true': [0.039452129981469575, 0.07583064902522217], 'true': [0.015816970460759132, 0.00798455064928224], 'false,true,true': [6.069432806556548e-06, 0.04782983613305195], 'true,true': [0.00562520742032412, 0.010779272845409964]}, {'': [0.030858332991848998, 0.07943439588055387], 'false': [0.07308197567178305, 0.1323999695401484], 'false,false': [0.12198983599937163, 0.17057844717615184], 'false,false,false': [0.07551139225480301, 0.25000000000000006], 'false,false,true': [0.0, 0.12320356172076641], 'true': [0.0003003435415532764, 0.11289793501897973], 'true,false': [0.0, 0.0013279962223937236], 'true,false,false': [0.0, 7.438536251511141e-05]}, {'': [0.0008100515010958805, 0.07755897229097031], 'false': [0.07062237273024907, 0.13895677770687612], 'false,false': [0.13895677770687612, nan], 'false,false,true': [0.060287719514685714, 0.0023115263395493265], 'true': [0.00023717567419057062, 0.000710465077199457], 'true,false': [nan, 0.000710465077199457]}, {'': [0.07171685872163136, 0.07307025187630334], 'false': [0.09705749429171422, 0.07258016427036088], 'false,false': [0.06965281386355038, 0.09975909439000542], 'false,false,false': [0.09975909439000542, nan], 'true': [1.8327623719692487e-05, 0.14001024806008425], 'true,true': [1.8327623719692487e-05, nan], 'true,true,true': [4.625929269271485e-18, 2.9638991843536355e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;true,false,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.035109491866779814;  // std dev = 4.120, 178.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=19 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.19148226843284694;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | | | else return 0.2604477856742247;  // std dev = 4.574, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14228222665049256;  // std dev = 0.133, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.09180134905976142;  // std dev = 6.175, 225.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=57 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.11622435915607605;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.2128572392062157;  // std dev = 6.287, 167.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5276976176760427;  // std dev = 0.209, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 9.312550768187387E-4;  // std dev = 2.512, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return 0.09009298637999301;  // std dev = 4.982, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7155550330124132;  // std dev = 2.548, 86.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=79 */
%   | | | else return -0.17895675299339822;  // std dev = 0.316, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7587949262306385;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19034795139827296;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1486316477549096;  // std dev = 2.428, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.008529769580091133;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3385292722988995;  // std dev = 0.315, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.4242574914333098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.24240917523335684;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.5267857817760423;  // std dev = 4.305, 132.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=109 */
%   | | | else return 0.6750949979789548;  // std dev = 0.127, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.16193223664934617;  // std dev = 0.531, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4686259030370323;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2698394616041636;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.05337144968392111;  // std dev = 2.274, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3712491016523232;  // std dev = 0.144, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.28252498836145584;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1442344574490415;  // std dev = 0.975, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4742406261074563;  // std dev = 3.616, 137.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=122 */
%   | | else return -0.1423990502508436;  // std dev = 0.540, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6189833039155795;  // std dev = 0.520, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20937675267351386;  // std dev = 0.039, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.05608678802984824;  // std dev = 1.272, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.2428742590629355;  // std dev = 1.474, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.27815970371699794;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23263741939037777;  // std dev = 0.257, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1017799422704077;  // std dev = 0.176, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.01412831703998424;  // std dev = 3.335, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | | | else return 0.07761238187856567;  // std dev = 4.661, 250.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=90 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.04610571180807277;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07909513933517218;  // std dev = 2.325, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.00918261554005278;  // std dev = 0.584, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2613390610392596;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A) )
%   | then return 0.00794907840298105;  // std dev = 0.282, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.057370523468785434;  // std dev = 0.337, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return 0.4457097232140527;  // std dev = 0.271, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.3146418291127415;  // std dev = 0.231, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.01117826997422142;  // std dev = 0.277, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return -0.045360277619221595;  // std dev = 1.706, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.062146777331757226;  // std dev = 3.416, 122.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=46 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.18899253134880253;  // std dev = 0.823, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07336664552965912;  // std dev = 1.340, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.2220600016426737;  // std dev = 0.120, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.07551935529583247;  // std dev = 0.382, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12581437128107112;  // std dev = 0.107, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.01615373295410358;  // std dev = 2.457, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.03847982671807855;  // std dev = 5.337, 307.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.28775956127692326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04535767574590383;  // std dev = 2.288, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.26643725246166433;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.013230794144210179;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1862250843644056;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.03492524019924215;  // std dev = 0.426, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.45901351100415566;  // std dev = 0.456, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.16125838425074243;  // std dev = 0.803, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.039581799361189135;  // std dev = 2.053, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.0036680559960345182;  // std dev = 4.584, 282.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=80 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.05523899003792699;  // std dev = 1.962, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.44071239809145196;  // std dev = 0.815, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.2533963733185524;  // std dev = 0.053, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18000688078011573;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.005318954421475895;  // std dev = 0.748, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.0901544720782603;  // std dev = 2.031, 61.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07881571339836875;  // std dev = 0.000396, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.13393778137375792;  // std dev = 1.057, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, J) )
%   | | | then return -0.007258580246077566;  // std dev = 3.294, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
%   | | | else return 0.06113803710136097;  // std dev = 3.496, 173.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=70 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.03080837051082905;  // std dev = 2.063, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.0732167582222729;  // std dev = 1.862, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */


Results
   AUC ROC   = 0.991472
   AUC PR    = 0.494003
   CLL	      = -0.187123
   Precision = 0.507463 at threshold = 0.5
   Recall    = 0.73913
   F1        = 0.60177


Total learning time: 15.941 seconds
Total inference time: 4.412 seconds
AUC ROC: 0.991472


Results scoring model
   AUC ROC   = 0.981284
   AUC PR    = 0.202956
   CLL	      = -0.201448
   Precision = 0.146838 at threshold = 0.5
   Recall    = 0.825301
   F1        = 0.249318


Total scoring time: 17.929 seconds
Refined model CLL: -0.201448


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996945
   AUC PR    = 0.59181
   CLL	      = -0.167246
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 46.617000000000004 seconds
Total inference time: 2.519 seconds
AUC ROC: 0.996945
Total revision time: 46.617000000000004
Best scored revision CLL: -0.188702


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:12:52
{'AUC ROC': 0.996945, 'AUC PR': 0.59181, 'CLL': -0.167246, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 46.617000000000004, 'Inference time': 2.519, 'parameter_0.6': {'AUC ROC': 0.996945, 'AUC PR': 0.59181, 'CLL': -0.167246, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 3.601, 'Inference time': 2.519}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.797542874493451;  // std dev = 1.371, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08342366037423664;  // std dev = 5.636, 182.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=41 */
%   | | | else return 0.13373948628061422;  // std dev = 5.035, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17615659793476124;  // std dev = 7.524, 261.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=83 */
%   | | | else return 0.21985106275908683;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6789098255162723;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.5440414044636405;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49545942050131575;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.5162251047394235;  // std dev = 1.478, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.057943731729705454;  // std dev = 5.690, 195.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=41 */
%   | | | else return 0.14280075142854087;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.17135688876849578;  // std dev = 7.424, 247.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=83 */
%   | | | else return 0.1561486870116993;  // std dev = 3.383, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5631352829710975;  // std dev = 0.970, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7491452706189634;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.014294848113765486;  // std dev = 4.305, 150.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=22 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8030100027449697;  // std dev = 0.311, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.17895261669998763;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4249690068604701;  // std dev = 1.548, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.12775360335601324;  // std dev = 7.492, 260.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=83 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.26542422302730057;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4423558953721762;  // std dev = 0.032, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.45711594806091227;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30717734110814665;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5193396118919668;  // std dev = 0.205, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7185176991718201;  // std dev = 1.078, 77.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=76 */
%   | | else return -0.16027477180584956;  // std dev = 0.351, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5856311756774916;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10355088391307603;  // std dev = 7.532, 264.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | | | else return 0.19697131118256728;  // std dev = 3.097, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3004425905459091;  // std dev = 0.936, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.2451884923186442;  // std dev = 1.307, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.39488765049840585;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.537317510832834;  // std dev = 1.841, 79.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=76 */
%   | | else return -0.1365518164848425;  // std dev = 0.026, 247.000 (wgt'ed) examples reached here.  /* #neg=247 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7159206457309238;  // std dev = 0.623, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.23637351791335048;  // std dev = 0.329, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4453958259662363;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09575120703418365;  // std dev = 7.067, 227.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=75 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.18251745311605735;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.265097164230399;  // std dev = 0.983, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, F) )
%   | then return 0.0101790951052161;  // std dev = 4.588, 336.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=82 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.06242961368442697;  // std dev = 1.672, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.07818737105181624;  // std dev = 7.086, 254.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=83 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06437555242746783;  // std dev = 3.141, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.25328645864661015;  // std dev = 0.150, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4906146875309787;  // std dev = 0.981, 65.000 (wgt'ed) examples reached here.  /* #pos=65 */
%   | else return -0.1548064121151323;  // std dev = 0.829, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2360583466906842;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.26789418919205765;  // std dev = 1.500, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | else return 0.01854531346680594;  // std dev = 6.912, 308.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=82 */
%   | else if ( interaction(A, H) )
%   | | then return 0.02564074055333192;  // std dev = 2.127, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06171911299581487;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19831601984175287;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.17687272597287026;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2798950063406712;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.01044747700303722;  // std dev = 4.035, 300.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=82 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0972711242540914;  // std dev = 1.193, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.03324266552577791;  // std dev = 6.996, 273.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=83 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.002986771969091029;  // std dev = 1.044, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08564709560756835;  // std dev = 2.816, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16210084976123734;  // std dev = 0.039, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.051452125341483836;  // std dev = 1.202, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.002114508992898602;  // std dev = 4.101, 317.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=82 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5307855018678106;  // std dev = 3.424, 120.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=108 */
%   | | | else return -0.25430803524840506;  // std dev = 0.715, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14758151009313192;  // std dev = 0.029, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14399069114368868;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.09762453186553333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1118480383870788;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16707592330304755;  // std dev = 0.891, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.03188814904941701;  // std dev = 1.217, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(A, I) )
%   | | then return 0.010264437937915474;  // std dev = 3.841, 289.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=76 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.039751573054745824;  // std dev = 6.252, 289.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=100 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997248
   AUC PR    = 0.593058
   CLL	      = -0.182945
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.631068


Total learning time: 3.588 seconds
Total inference time: 2.6 seconds
AUC ROC: 0.997248


Results scoring model
   AUC ROC   = 0.986442
   AUC PR    = 0.242047
   CLL	      = -0.210559
   Precision = 0.212733 at threshold = 0.5
   Recall    = 0.61991
   F1        = 0.316763


Total scoring time: 10.316 seconds
Parameter learned model CLL: -0.210559


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.371, 2, 31], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [1.095, 2, 3], 'false,true,false,false': [1.595, 4, 7], 'false,false,true,true': [5.636, 141, 41], 'false,false,true,false': [5.035, 92, 35], 'false,false,false,true': [7.524, 178, 83], 'false,false,false,false': [3.294, 30, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.973, 1, 18], 'true,false': [1.561, 3, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.211, 2, 6], 'false,true,false': [1.478, 3, 8], 'false,false,true,true': [5.69, 154, 41], 'false,false,true,false': [4.944, 81, 35], 'false,false,false,true': [7.424, 164, 83], 'false,false,false,false': [3.383, 35, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.97, 1, 31], 'false,true,true,true': [1.348, 2, 20], 'false,true,true,false': [4.305, 128, 22], 'false,true,false,true': [0.311, 0, 40], 'false,true,false,false': [0.0, 94, 0], 'false,false,true,true': [1.548, 3, 8], 'false,false,true,false': [7.492, 177, 83], 'false,false,false,true': [3.031, 20, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.032, 0, 17], 'true,true,false': [0.033, 0, 4], 'true,false': [1.291, 2, 10], 'false,true,true,true': [0.205, 0, 6], 'false,true,true,false': [1.078, 1, 76], 'false,true,false': [0.351, 245, 0], 'false,false,true': [0.19, 0, 8], 'false,false,false,true': [7.532, 181, 83], 'false,false,false,false': [3.097, 22, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.936, 1, 16], 'true,false': [1.307, 2, 15], 'false,true,true,true': [0.206, 0, 6], 'false,true,true,false': [1.841, 3, 76], 'false,true,false': [0.026, 247, 0], 'false,false,true,true': [0.623, 0, 29], 'false,false,true,false': [0.329, 71, 0], 'false,false,false,true': [0.111, 0, 4], 'false,false,false,false': [7.067, 152, 75]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.955, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.983, 1, 21], 'false,true': [4.588, 254, 82], 'false,false,true,true': [1.672, 5, 8], 'false,false,true,false': [7.086, 171, 83], 'false,false,false,true': [3.141, 30, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.15, 0, 18], 'true,true,false': [0.981, 0, 65], 'true,false': [0.829, 164, 0], 'false,true,true,true': [0.025, 0, 10], 'false,true,true,false': [1.5, 4, 18], 'false,true,false': [6.912, 226, 82], 'false,false,true': [2.127, 35, 15], 'false,false,false,true': [2.859, 22, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.096, 0, 22], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.021, 0, 4], 'true,false,false,false': [0.002, 0, 5], 'false,true': [4.035, 218, 82], 'false,false,true,true': [1.193, 4, 8], 'false,false,true,false': [6.996, 190, 83], 'false,false,false,true': [1.044, 8, 4], 'false,false,false,false': [2.816, 18, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.039, 0, 21], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.202, 2, 10], 'false,true': [4.101, 235, 82], 'false,false,true,true': [3.424, 12, 108], 'false,false,true,false': [0.715, 194, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.029, 0, 10], 'true,true,true,false': [0.01, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.02, 0, 2], 'true,false': [0.891, 1, 12], 'false,true': [1.217, 2, 11], 'false,false,true': [3.841, 213, 76], 'false,false,false,true': [6.252, 189, 100], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.05693296602387652, 0.2093062801741891], 'false': [0.2099999999999996, 0.2038829595811828], 'false,true': [0.0, 0.23437499999999994], 'false,true,false': [0.23999999999999994, 0.23140495867768587], 'false,false': [0.18546098176600628, 0.2192612582222989], 'false,false,false': [0.21687878921331222, 0.23087369850611084], 'false,false,true': [0.1745260234271235, 0.19964039928079894], 'false,true,true': [0.0, 1.4802973661668753e-16]}, {'': [0.10122448979591786, 0.20851861075066422], 'false': [0.19217559147022048, 0.20468629761771148], 'false,false': [0.18438222741100746, 0.22261389572362916], 'false,false,false': [0.2231146224327562, 0.22004437869822435], 'false,true': [0.18329130292050458, 0.19845532859496523], 'false,false,true': [0.16604865220249834, 0.21068668252080905], 'false,true,true': [nan, 0.18329130292050452], 'true': [0.04986149584487499, 0.1523437500000001]}, {'': [0.029391759093855385, 0.2091944302617202], 'false': [0.1920319779783803, 0.22456557960624307], 'false,false': [0.21942208871991545, 0.2483564645726809], 'false,false,false': [0.2483564645726809, nan], 'false,false,true': [0.21796448628919488, 0.21589812198781605], 'false,true': [0.1833542273510266, 0.20263680373029508], 'false,true,false': [0.002418702326359501, -1.6535236536970416e-16], 'false,true,true': [0.08264462809917437, 0.12357556201885245]}, {'': [0.05499850653951632, 0.1831143918072825], 'false': [0.1459483818115231, 0.21985342040088254], 'false,false': [0.004490678689292593, 0.21985589901364155], 'false,false,false': [0.2148864993896215, 0.24589086127547688], 'false,true': [0.017172396500794395, 0.0005022824348478834], 'true': [0.00013705860332658388, 0.1388888888888888], 'false,true,true': [0.007004404368954924, 0.015096858627631894], 'true,true': [6.196882641753293e-05, 0.0002798279817918248]}, {'': [0.07676949135113507, 0.15338124208092996], 'false': [0.09461410951551635, 0.21109053290347837], 'false,false': [0.19168099094142638, 0.21833108306553584], 'false,false,false': [0.0030784979224968423, 0.22000717350172508], 'false,false,true': [0.01337425597310128, 0.001519891915188064], 'false,true': [0.04170968592129657, 2.82188694496587e-06], 'true': [0.05150004318949658, 0.1005124318273195], 'false,true,true': [0.0070827900810633655, 0.04290760508943691]}, {'': [0.05840221816379496, 0.13019585004321518], 'false': [0.0626358965678567, 0.20028587250393817], 'false,false': [0.19857089051122095, 0.20988373852790618], 'false,false,false': [0.20988373852790618, nan], 'false,false,true': [0.21514824329923726, 0.19771035347137966], 'true': [0.08283806777389119, 0.04391115712950413], 'true,true': [0.08283806777389119, nan], 'true,true,true': [0.08283806777389119, nan]}, {'': [0.08869807160578606, 0.1515811756061015], 'false': [0.1520607247905984, 0.1496627092340668], 'false,true': [0.07057378131231819, 0.1551327883822278], 'false,false': [0.0904620611689485, 0.23346938775510204], 'false,false,false': [0.23346938775510204, nan], 'true': [0.021434035818360318, 0.004194942732553335], 'false,true,true': [6.29696364425003e-05, 0.10230742498471924], 'true,true': [0.0012508723817187262, 0.014808226912082964]}, {'': [0.0013351808657298984, 0.12092138346484577], 'false': [0.05425898830300382, 0.18149781723183886], 'false,false': [0.17690865941506426, 0.21137241664616224], 'false,false,false': [0.09085342985363459, 0.2558325660398535], 'false,false,true': [0.11855398619836477, 0.17930108342645493], 'true': [0.00041765802595992367, 0.002668905203012618], 'true,false': [nan, 0.0026689052030126306], 'true,false,false': [0.00010798373189477295, 4.911567150100992e-07]}, {'': [0.04665832185021818, 0.11894238139257264], 'false': [0.05305988445378584, 0.18449875156658074], 'false,false': [0.18449875156658074, nan], 'false,false,true': [0.09769279309573715, 0.002637033254764972], 'true': [7.298653330602871e-05, 0.12039156942662989], 'true,false': [nan, 0.12039156942662989]}, {'': [0.022988641224756343, 0.09381863366057665], 'false': [0.11390391605814564, 0.09336584731468263], 'false,false': [0.05105723590840959, 0.13523971315225658], 'false,false,false': [0.13523971315225658, nan], 'true': [0.00024883517838460536, 0.061030553321239904], 'true,true': [5.472147537208114e-05, 0.00017982945579417495], 'true,true,false': [0.0, 0.0002023081377684477], 'true,true,true': [8.684270331797417e-05, 1.2244916452707693e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.12519438964496674;  // std dev = 5.869, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */
%   | | | else return 0.19148226843284227;  // std dev = 9.274, 387.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=129 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return 0.12776684555152962;  // std dev = 0.435, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( recursion_proteinclass(D, B), interaction(H, F) )
%   | | | then return 0.5829925353234315;  // std dev = 1.322, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.15441947526576497;  // std dev = 8.823, 362.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=116 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3266603607494622;  // std dev = 2.789, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return 0.1573991625995172;  // std dev = 3.090, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L), interaction(J, M) )
%   | | | then return 0.19684185486791242;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.42399239560044844;  // std dev = 1.871, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.010459075427429965;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2617769198029774;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6888066558710233;  // std dev = 0.024, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14014523499804898;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.06503643032424125;  // std dev = 5.587, 167.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=42 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7529388391196872;  // std dev = 1.102, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.19543698743903132;  // std dev = 0.179, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, H) )
%   | | | then return 0.25543075486717987;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6253032938483936;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.12539200587684546;  // std dev = 7.171, 239.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=75 */
%   | | | else return 0.20103282253646435;  // std dev = 3.885, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.44009425291984233;  // std dev = 0.283, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.13760224874604163;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5269342607354657;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6839750358665002;  // std dev = 0.199, 85.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   | | else return -0.1728625791277401;  // std dev = 0.032, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), phenotype(A, J) )
%   | | | then return 0.14290795192822028;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4928572414147278;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.13928379464293097;  // std dev = 6.990, 216.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=75 */
%   | | | else return 0.06867867537121213;  // std dev = 4.190, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.42954193335448526;  // std dev = 0.031, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.39840619426080287;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.5978155199410197;  // std dev = 1.445, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.4726342880176437;  // std dev = 1.866, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.15235893615760507;  // std dev = 0.026, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7136259843165697;  // std dev = 0.714, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.23098594900294062;  // std dev = 0.057, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0902367657537061;  // std dev = 5.212, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.16179479612179176;  // std dev = 4.680, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.029845012106251942;  // std dev = 0.282, 287.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=91 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6619228105158148;  // std dev = 0.449, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23767413228206705;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, E), interaction(E, J) )
%   | | | then return 0.18187244081997392;  // std dev = 2.599, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.018933477451468724;  // std dev = 2.131, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6155352408452982;  // std dev = 1.724, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | | else return -0.23583244599307787;  // std dev = 0.231, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.03136670449735883;  // std dev = 2.627, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.12294993723013724;  // std dev = 4.530, 113.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4177214787398243;  // std dev = 0.185, 84.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=83 */
%   | else return -0.16234398538435166;  // std dev = 0.049, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.30372369669601673;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.31075757346640037;  // std dev = 1.560, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.06806112204827214;  // std dev = 2.020, 100.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=14 */
%   | | | else return 0.0947417856164969;  // std dev = 5.804, 179.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=68 */
%   | else if ( interaction(A, I) )
%   | | then return 0.02755239034304826;  // std dev = 0.270, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.008577970048000068;  // std dev = 1.496, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.19059035927052287;  // std dev = 2.241, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13163247808769288;  // std dev = 0.310, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else return 0.16707514887595254;  // std dev = 0.285, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.2917864968922166;  // std dev = 0.285, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.12296377887358513;  // std dev = 0.159, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return 0.006694663964106404;  // std dev = 5.513, 228.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=72 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3196531254663479;  // std dev = 0.399, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0024241839709580664;  // std dev = 3.710, 144.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=37 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12335240416355082;  // std dev = 2.398, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.03094768238102983;  // std dev = 3.486, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17136027145737232;  // std dev = 0.203, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.41994139482230064;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.24908236816891438;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.45796885577604524;  // std dev = 0.174, 67.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | else return -0.1913403080648853;  // std dev = 0.078, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.19911740915916826;  // std dev = 1.425, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.039751158396645066;  // std dev = 4.613, 253.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=50 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.03469465005774909;  // std dev = 1.924, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.06077467324916677;  // std dev = 4.178, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.12761455183847267;  // std dev = 0.215, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.13460434148124029;  // std dev = 0.154, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.4074722422620913;  // std dev = 2.157, 95.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=91 */
%   | | | else return -0.10591649441214714;  // std dev = 1.961, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | else return -0.19034003531894503;  // std dev = 0.094, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2504257525668115;  // std dev = 0.957, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.05952839253117511;  // std dev = 1.977, 112.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.018595297457703754;  // std dev = 3.144, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.1000227544648207;  // std dev = 3.363, 58.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=25 */


Results
   AUC ROC   = 0.99349
   AUC PR    = 0.637839
   CLL	      = -0.19218
   Precision = 0.571429 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.66055


Total learning time: 26.456 seconds
Total inference time: 6.476 seconds
AUC ROC: 0.99349


Results scoring model
   AUC ROC   = 0.986332
   AUC PR    = 0.346249
   CLL	      = -0.207599
   Precision = 0.274611 at threshold = 0.5
   Recall    = 0.719457
   F1        = 0.3975


Total scoring time: 41.269 seconds
Refined model CLL: -0.207599


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99349
   AUC PR    = 0.637839
   CLL	      = -0.19218
   Precision = 0.571429 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.66055


Total learning time: 81.62899999999999 seconds
Total inference time: 6.476 seconds
AUC ROC: 0.99349
Total revision time: 81.62899999999999
Best scored revision CLL: -0.207599


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:14:23
{'AUC ROC': 0.99349, 'AUC PR': 0.637839, 'CLL': -0.19218, 'Precision': [0.571429, 0.5], 'Recall': 0.782609, 'F1': 0.66055, 'Learning time': 81.62899999999999, 'Inference time': 6.476, 'parameter_0.8': {'AUC ROC': 0.997248, 'AUC PR': 0.593058, 'CLL': -0.182945, 'Precision': [0.570175, 0.5], 'Recall': 0.706522, 'F1': 0.631068, 'Learning time': 3.588, 'Inference time': 2.6}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8354216623722391;  // std dev = 0.989, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1174081943587727;  // std dev = 7.552, 297.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=77 */
%   | | | else return 0.17986475279388037;  // std dev = 9.022, 373.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=120 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18423589162125148;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6823708608915621;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6331284366491374;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7322259441501944;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6285643213018633;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09324742396579898;  // std dev = 7.599, 308.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=77 */
%   | | | else return 0.14489130058724864;  // std dev = 9.099, 387.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=120 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14033256880671457;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.20584524736730803;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5528258717193981;  // std dev = 0.995, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6732188977323047;  // std dev = 2.064, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return 5.074770988602498E-4;  // std dev = 6.470, 301.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=52 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7351464780688485;  // std dev = 2.928, 136.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=127 */
%   | | | else return -0.18640686718610883;  // std dev = 0.070, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.532835636632412;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11036341781184367;  // std dev = 3.140, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10820201723203646;  // std dev = 1.979, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4346953887622273;  // std dev = 0.022, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.2412432346697933;  // std dev = 1.269, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.1591666411263775;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43347536428577754;  // std dev = 0.241, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5938787089045261;  // std dev = 4.987, 227.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=197 */
%   | | else return -0.16519328587631468;  // std dev = 0.236, 483.000 (wgt'ed) examples reached here.  /* #neg=483 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5232366583795713;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1124562743633521;  // std dev = 3.165, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.08160877470022516;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35814319412012685;  // std dev = 0.154, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.23557331191799374;  // std dev = 1.548, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26501433456221446;  // std dev = 0.883, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.4793512739984681;  // std dev = 4.817, 222.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=197 */
%   | | else return -0.14334239280077857;  // std dev = 0.145, 449.000 (wgt'ed) examples reached here.  /* #neg=449 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6968668044121485;  // std dev = 0.550, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22441009931462563;  // std dev = 0.150, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3603890313353048;  // std dev = 0.085, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13276572251732904;  // std dev = 2.497, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2588377227324743;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2756075439628415;  // std dev = 0.981, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(F, A) )
%   | then return 0.034396458540135774;  // std dev = 7.799, 706.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.45649573629823403;  // std dev = 0.423, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04294027938536995;  // std dev = 2.838, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.013716653264757387;  // std dev = 1.844, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2399166955829649;  // std dev = 0.224, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.46449593315365884;  // std dev = 1.121, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else return -0.16659316217164152;  // std dev = 1.588, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24533471152518288;  // std dev = 0.140, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3829978962539228;  // std dev = 1.478, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.04614832795058283;  // std dev = 3.297, 163.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=30 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03705468024386245;  // std dev = 5.569, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14036493112180604;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.12846779719195392;  // std dev = 1.310, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.16655687801213293;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05903321084578958;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.017509416424324683;  // std dev = 7.204, 714.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.009301303033568464;  // std dev = 1.056, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.0073709989762354685;  // std dev = 2.643, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04157446720611446;  // std dev = 0.868, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1677987496884077;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.06454570410967862;  // std dev = 1.810, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14224748056155348;  // std dev = 0.911, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.012383458498635222;  // std dev = 7.264, 720.000 (wgt'ed) examples reached here.  /* #neg=511 #pos=209 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4548470047837859;  // std dev = 1.551, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return -0.21453570580329462;  // std dev = 0.457, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.16229953374117564;  // std dev = 0.156, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17642897298508048;  // std dev = 0.144, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.09940307735453258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17825469727636334;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.10230374596097476;  // std dev = 1.201, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.17997246075786763;  // std dev = 0.227, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01595134012082869;  // std dev = 7.086, 668.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=197 */
%   | | else if ( interaction(A, J) )
%   | | | then return -1.600445473271151E-4;  // std dev = 2.701, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996542
   AUC PR    = 0.538448
   CLL	      = -0.159792
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 5.119 seconds
Total inference time: 2.598 seconds
AUC ROC: 0.996542


Results scoring model
   AUC ROC   = 0.983394
   AUC PR    = 0.242897
   CLL	      = -0.185573
   Precision = 0.145679 at threshold = 0.5
   Recall    = 0.851986
   F1        = 0.248814


Total scoring time: 15.149 seconds
Parameter learned model CLL: -0.185573


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.989, 1, 43], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 12], 'false,false,true,true': [7.552, 220, 77], 'false,false,true,false': [9.022, 253, 120], 'false,false,false,true': [3.179, 31, 15], 'false,false,false,false': [1.978, 18, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.979, 1, 23], 'true,false': [1.348, 2, 20], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.083, 0, 7], 'false,true,false': [0.953, 1, 10], 'false,false,true,true': [7.599, 231, 77], 'false,false,true,false': [9.099, 267, 120], 'false,false,false,true': [3.226, 34, 15], 'false,false,false,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.995, 1, 43], 'false,true,true,true': [2.064, 5, 30], 'false,true,true,false': [6.47, 249, 52], 'false,true,false,true': [2.928, 9, 127], 'false,true,false,false': [0.07, 268, 0], 'false,false,true,true': [0.833, 1, 4], 'false,false,true,false': [3.14, 34, 15], 'false,false,false,true': [1.979, 14, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.022, 0, 25], 'true,true,false': [1.269, 2, 8], 'true,false': [1.69, 4, 10], 'false,true,true,true': [0.241, 0, 12], 'false,true,true,false': [4.987, 30, 197], 'false,true,false': [0.236, 483, 0], 'false,false,true': [0.116, 0, 5], 'false,false,false,true': [3.165, 32, 15], 'false,false,false,false': [1.9, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.154, 0, 23], 'true,false': [1.548, 3, 20], 'false,true,true,true': [0.883, 1, 12], 'false,true,true,false': [4.817, 25, 197], 'false,true,false': [0.145, 449, 0], 'false,false,true,true': [0.55, 0, 13], 'false,false,true,false': [0.15, 26, 0], 'false,false,false,true': [0.085, 0, 2], 'false,false,false,false': [2.497, 18, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.023, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.981, 1, 32], 'false,true': [7.799, 497, 209], 'false,false,true,true': [0.423, 0, 4], 'false,false,true,false': [2.838, 33, 15], 'false,false,false,true': [1.844, 18, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.224, 0, 24], 'true,true,false': [1.121, 0, 80], 'true,false': [1.588, 198, 0], 'false,true,true,true': [0.14, 0, 13], 'false,true,true,false': [1.478, 2, 23], 'false,true,false': [3.297, 133, 30], 'false,false,true': [5.569, 219, 104], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [1.31, 2, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.047, 0, 6], 'true,false,false,false': [1.232, 2, 7], 'false,true': [7.204, 505, 209], 'false,false,true,true': [1.056, 2, 4], 'false,false,true,false': [2.643, 43, 15], 'false,false,false,true': [0.868, 6, 3], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.81, 4, 33], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.911, 1, 10], 'false,true': [7.264, 511, 209], 'false,false,true,true': [1.551, 2, 25], 'false,false,true,false': [0.457, 51, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.156, 0, 11], 'true,true,true,false': [0.144, 0, 13], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.201, 2, 16], 'false,true': [0.227, 0, 17], 'false,false,true': [7.086, 471, 197], 'false,false,false,true': [2.701, 53, 20], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.022210743801654168, 0.21356288903741444], 'false': [0.05246913580246885, 0.20741557273937639], 'false,false': [0.20757629761639806, 0.2058391094307914], 'false,false,true': [0.19204389574759992, 0.21821475033961432], 'false,false,false': [0.21975425330812803, 0.1701323251417768], 'false,true': [0.1388888888888887, -1.4802973661668753e-16], 'false,true,true': [0.0, 0.25], 'false,true,false': [nan, -1.4802973661668753e-16]}, {'': [0.06096408317580357, 0.20734228743729516], 'false': [0.05343828332462013, 0.20412898778760702], 'false,false': [0.2028749885460756, 0.21697116066920763], 'false,false,false': [0.21241149521032954, 0.22959183673469383], 'false,false,true': [0.18749999999999722, 0.2139294513550867], 'true': [0.03993055555555528, 0.08264462809917372], 'false,true': [0.000975762425168344, 0.08264462809917364], 'false,true,true': [nan, 0.000975762425168344]}, {'': [0.022495039891454335, 0.19832662778198015], 'false': [0.1973413294384212, 0.20681959890606977], 'false,false': [0.21043617960757807, 0.1958113918108543], 'false,false,true': [0.13882912915505666, 0.20121683855760203], 'false,true': [0.179512226747992, 0.21088260327299319], 'false,true,false': [0.06303894107376247, 1.804907542958803e-05], 'false,false,false': [0.1958113918108543, nan], 'false,true,true': [0.12176522929597625, 0.13908734228413103]}, {'': [0.10653242273524212, 0.16425226506451357], 'false': [0.15991357162565673, 0.2066822622704151], 'false,false': [0.0026766287380486807, 0.2098156044388922], 'false,false,false': [0.21307485427328715, 0.20061728395061734], 'false,true': [0.10553139393957245, 0.00011570312520350331], 'true': [0.053651877201001036, 0.2040816326530612], 'false,true,true': [0.0048235152481198584, 0.10956331411892886], 'true,true': [1.976098779962854e-05, 0.16100092778900194]}, {'': [0.05635208222678557, 0.12795381732556005], 'false': [0.12007423910789411, 0.20426285036577818], 'false,false': [0.19693562071655257, 0.21138118033034972], 'false,false,false': [0.0036252870732738918, 0.22276672894375318], 'false,false,true': [0.023242983728159822, 0.0008648947639515139], 'false,true': [0.1044740143597532, 4.683564559116685e-05], 'false,true,true': [0.06001815455995563, 0.10453590582532424], 'true': [0.001033811998145924, 0.10415866444390293]}, {'': [0.021922267837631678, 0.09358841434838976], 'false': [0.08616425807375865, 0.16215368611251177], 'false,false': [0.17042724963337794, 0.14167871322615158], 'false,false,true': [0.044681618760257336, 0.1677500432874912], 'false,false,false': [0.14167871322615158, nan], 'true': [4.788860620058061e-05, 0.029143420855417518], 'true,true': [4.788860620058061e-05, nan], 'true,true,true': [4.788860620058061e-05, nan]}, {'': [0.0915247267624585, 0.09536050775588893], 'false': [0.08822990524177939, 0.09962200535110868], 'false,false': [0.0960265119841835, 0.23437499999999997], 'false,false,false': [0.23437499999999997, nan], 'true': [0.0215218820485046, 0.012741715744339412], 'false,true': [0.06225072957492468, 0.0666914224266792], 'false,true,true': [0.0014993543678101411, 0.08735815569353023], 'true,true': [0.0020896630402037117, 0.015712509147648168]}, {'': [0.06987439971838305, 0.07892885241639602], 'false': [0.07269012644623311, 0.13460245037131752], 'false,false': [0.12660088351854892, 0.15818639678920393], 'false,false,false': [0.08377357133132003, 0.2448979591836735], 'false,false,true': [0.18584141256661366, 0.12044649364727862], 'true': [0.05361827613151335, 0.10407870063141285], 'true,false': [nan, 0.10407870063141282], 'true,false,false': [0.00036303519792451705, 0.16859794198671227]}, {'': [0.08661703234749724, 0.07931544977785222], 'true': [0.08855059471440592, 0.07545927448464289], 'false': [0.07328952904004095, 0.13491863003212162], 'false,false': [0.13491863003212162, nan], 'false,false,true': [0.08905003454076034, 0.004099737996700444], 'true,false': [nan, 0.07545927448464289]}, {'': [0.03423202511077157, 0.07655482448537146], 'false': [0.0030202683682585144, 0.07762675434405214], 'false,false': [0.075166606436544, 0.0999047883496768], 'false,false,false': [0.0999047883496768, nan], 'true': [0.0019007583478098246, 0.08014287590264181], 'true,true': [0.001929713982782406, 0.0013816839920659703], 'true,true,true': [0.0022231218065575124, 0.0015899436747526723], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.7528857772047755;  // std dev = 0.307, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.00814893509951235;  // std dev = 3.194, 80.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=12 */
%   | | | else return 0.1568502338008104;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.2164822684328454;  // std dev = 5.253, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | | else return 0.13895701590759377;  // std dev = 9.998, 495.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=139 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7298468890218318;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2666952853745424;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.7273236108786455;  // std dev = 0.061, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.7271760918424679;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.4220859171580173;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.732953101566103;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14284592742741364;  // std dev = 4.71e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.09903723003283232;  // std dev = 6.937, 251.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=65 */
%   | | | else return 0.14865411128809722;  // std dev = 10.243, 490.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=152 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4341567629464292;  // std dev = 0.328, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | else return 0.5620424862531952;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6223537368863108;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06649064823497211;  // std dev = 7.615, 321.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=77 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.739804501290685;  // std dev = 2.928, 136.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=127 */
%   | | | else return -0.1811304868350426;  // std dev = 0.073, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.38584479230363183;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16777271931381205;  // std dev = 3.012, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.06461769462825463;  // std dev = 2.134, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35520853730086577;  // std dev = 0.272, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.19522708126896773;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.45842003642509727;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.6701911769947306;  // std dev = 1.893, 78.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=74 */
%   | | | else return 0.5664193178869897;  // std dev = 4.556, 160.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=135 */
%   | | else return -0.1690152586502818;  // std dev = 0.800, 490.000 (wgt'ed) examples reached here.  /* #neg=490 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.34155438499823193;  // std dev = 3.003, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return -0.20060665895955526;  // std dev = 0.067, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return -0.06110018588147568;  // std dev = 1.021, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.28353993415086753;  // std dev = 0.248, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.23628582831273534;  // std dev = 0.315, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3586792918848291;  // std dev = 2.969, 49.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=39 */
%   | | | else return 0.5049163981535119;  // std dev = 3.987, 187.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=170 */
%   | | else return -0.14401221700712788;  // std dev = 0.369, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6490929111540573;  // std dev = 0.545, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19590861416918098;  // std dev = 0.216, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.11552094734682099;  // std dev = 2.161, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.3879529826949001;  // std dev = 1.041, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.29148654607664304;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return 0.30529442779204513;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19551174116394887;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.26308341937626634;  // std dev = 0.191, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(A, A) )
%   | then return -0.1294146818717943;  // std dev = 0.119, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.1534888400673766;  // std dev = 2.069, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.05932313537229616;  // std dev = 3.668, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.014404327659215545;  // std dev = 5.007, 338.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=90 */
%   | | | else return 0.05370740531931201;  // std dev = 5.393, 300.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=100 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4100867383911074;  // std dev = 0.175, 105.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=104 */
%   | else return -0.1582229167760022;  // std dev = 0.106, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2336765951650041;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.4166020285936651;  // std dev = 2.050, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return -0.03152898371909056;  // std dev = 0.259, 151.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=30 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return 0.06588263906645883;  // std dev = 2.824, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.008031670702093832;  // std dev = 3.649, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.11812433613177947;  // std dev = 2.342, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
%   | | | else return -4.036392187102019E-4;  // std dev = 1.514, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15798086151265528;  // std dev = 0.145, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( complex(A, E) )
%   | | then return 0.17540715944473484;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2754967646823478;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.038816512652205294;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.15354456122655818;  // std dev = 0.120, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H), location(A, J) )
%   | | | then return -0.04123205758622262;  // std dev = 1.822, 86.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | | else return 0.031135212677824483;  // std dev = 2.649, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.0527886302406919;  // std dev = 2.604, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.023294116802037308;  // std dev = 6.531, 524.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=155 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.003952048708371549;  // std dev = 0.360, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0.16073853648508715;  // std dev = 0.197, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, F), interaction(E, G) )
%   | | | then return 0.4386604977224515;  // std dev = 0.940, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.07301067239277051;  // std dev = 0.993, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return -0.057762439437970055;  // std dev = 0.214, 295.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=45 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.24160184273568508;  // std dev = 4.459, 199.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=142 */
%   | | | else return -0.14645120220369048;  // std dev = 0.821, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07978201142012985;  // std dev = 0.932, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.01018876687263632;  // std dev = 1.171, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.09176565160447411;  // std dev = 0.215, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), complex(E, F) )
%   | | then if ( phenotype(E, D) )
%   | | | then return 0.03293126075720568;  // std dev = 1.527, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return -0.05362710762404771;  // std dev = 2.023, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(G, E), phenotype(G, D) )
%   | | | then return 0.0545578260992606;  // std dev = 2.896, 146.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=53 */
%   | | | else return 0.022515945281126312;  // std dev = 3.053, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.282693504701671;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.05049570210974728;  // std dev = 2.701, 123.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=28 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.0203001102237134;  // std dev = 2.306, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return 0.028765951187133487;  // std dev = 3.957, 165.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */


Results
   AUC ROC   = 0.992173
   AUC PR    = 0.591682
   CLL	      = -0.157638
   Precision = 0.510204 at threshold = 0.5
   Recall    = 0.815217
   F1        = 0.627615


Total learning time: 16.858 seconds
Total inference time: 3.922 seconds
AUC ROC: 0.992173


Results scoring model
   AUC ROC   = 0.985058
   AUC PR    = 0.233773
   CLL	      = -0.18297
   Precision = 0.162095 at threshold = 0.5
   Recall    = 0.938628
   F1        = 0.276449


Total scoring time: 29.63 seconds
Refined model CLL: -0.18297


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992173
   AUC PR    = 0.591682
   CLL	      = -0.157638
   Precision = 0.510204 at threshold = 0.5
   Recall    = 0.815217
   F1        = 0.627615


Total learning time: 66.756 seconds
Total inference time: 3.922 seconds
AUC ROC: 0.992173
Total revision time: 66.756
Best scored revision CLL: -0.18297


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:15:37
{'AUC ROC': 0.992173, 'AUC PR': 0.591682, 'CLL': -0.157638, 'Precision': [0.510204, 0.5], 'Recall': 0.815217, 'F1': 0.627615, 'Learning time': 66.756, 'Inference time': 3.922, 'parameter_1.0': {'AUC ROC': 0.996542, 'AUC PR': 0.538448, 'CLL': -0.159792, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 5.119, 'Inference time': 2.598}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.17321742825019673;  // std dev = 3.969, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109543;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.28162893957529533;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.12048633002602775;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.13835998545484285;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08169126328278502;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.308741135785635;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6413507949029809;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.02361267103480727;  // std dev = 2.911, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8158413933631682;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1859718217767628;  // std dev = 0.085, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027759453355761275;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.7564123687585864;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6012611583720766;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6616641475911708;  // std dev = 1.369, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.16893095839054867;  // std dev = 0.159, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.036748947557275015;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.006923651630024064;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3207118471601497;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4526366225924209;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4043712717578556;  // std dev = 2.481, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | else return -0.14238162465595727;  // std dev = 0.081, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.713077964032877;  // std dev = 0.167, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.16859026941855626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018077536727940637;  // std dev = 1.539, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.04601328683409798;  // std dev = 3.163, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.14282755509442105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.056024716877731556;  // std dev = 1.450, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.5043772728089096;  // std dev = 0.122, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.27208860765801823;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.42650448559532056;  // std dev = 0.823, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.1586163469521474;  // std dev = 0.588, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4287486324657703;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06274248349179795;  // std dev = 1.514, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03189022891040902;  // std dev = 2.298, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.4653472430602287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.179163104748764;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.16819485340257134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14768293644392938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20452052858125103;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.021611528043992998;  // std dev = 2.906, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.10973556440781064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.04054622522373078;  // std dev = 1.406, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.22540805958712737;  // std dev = 0.547, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.14661223315017957;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16164535765052992;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1341746281986416;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.03441728594480506;  // std dev = 2.904, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5773256224634185;  // std dev = 0.507, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1877426065883751;  // std dev = 0.224, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.12786975386480698;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13273929233416415;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2101820850680045;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1326562485521946;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return -0.0024961975493181447;  // std dev = 2.958, 135.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=37 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.038890328478563774;  // std dev = 1.305, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980706
   AUC PR    = 0.314106
   CLL	      = -0.191779
   Precision = 0.11215 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.197802


Total learning time: 1.762 seconds
Total inference time: 2.925 seconds
AUC ROC: 0.980706


Results scoring model
   AUC ROC   = 0.985799
   AUC PR    = 0.262581
   CLL	      = -0.187214
   Precision = 0.154799 at threshold = 0.5
   Recall    = 0.892857
   F1        = 0.263852


Total scoring time: 3.848 seconds
Parameter learned model CLL: -0.187214


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(F, D), interaction(D, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true': [0.0, 0, 12], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [3.175, 36, 14], 'false,false,true,false': [3.969, 50, 23], 'false,false,false,true': [1.549, 12, 3], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [3.65e-08, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [3.175, 36, 14], 'false,false,true,false': [4.005, 53, 23], 'false,false,false,true': [1.519, 10, 3], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [0.9, 1, 5], 'false,true,true,false': [2.911, 43, 11], 'false,true,false,true': [0.0, 0, 23], 'false,true,false,false': [0.085, 45, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.561, 13, 3], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [2.11e-08, 0, 6], 'true,true,false': [0.0, 0, 3], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.02, 0, 2], 'false,true,true,false': [1.369, 2, 37], 'false,true,false': [0.159, 91, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.549, 12, 3], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.021, 0, 2], 'false,true,true,false': [2.481, 7, 37], 'false,true,false': [0.081, 82, 0], 'false,false,true,true': [0.167, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.539, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 10], 'false,true': [3.163, 90, 39], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.45, 10, 3], 'false,false,false,true': [0.122, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.126, 0, 4], 'true,true,false': [0.823, 1, 19], 'true,false': [0.588, 43, 0], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.045, 0, 3], 'false,true,false': [1.514, 29, 4], 'false,false,true': [2.298, 38, 21], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.049, 0, 8], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 2], 'false,true': [2.906, 91, 39], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.406, 11, 3], 'false,false,false,true': [0.547, 2, 1], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.037, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.015, 0, 3], 'false,true': [2.904, 75, 39], 'false,false,true,true': [0.507, 0, 5], 'false,false,true,false': [0.224, 9, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.003, 0, 2], 'true,true,true,false': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.112, 0, 4], 'false,true': [0.037, 0, 4], 'false,false,true': [2.958, 98, 37], 'false,false,false,true': [1.305, 10, 5], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.21136741973840778], 'false': [0.22222222222222224, 0.2082920055544537], 'false,true': [nan, 0.22222222222222224], 'false,true,false': [nan, 0.22222222222222224], 'false,false': [0.21032454226981434, 0.19390581717451505], 'false,false,true': [0.20159999999999947, 0.21580033777444252], 'false,false,false': [0.15999999999999986, 0.25]}, {'': [1.4802973661668753e-16, 0.20928664546461276], 'false': [0.2222222222222222, 0.20695601293215954], 'false,true': [0.0, 0.25], 'false,false': [0.20737387634998697, 0.20384586418738537], 'false,false,true': [0.20159999999999959, 0.2110457063711907], 'false,false,false': [0.1775147928994083, 0.25], 'true': [0.0, 1.9032394707859825e-16], 'false,true,true': [nan, 0.0]}, {'': [-2.590520390792032e-16, 0.20656801452025053], 'false': [0.20918024980463865, 0.18785469838271965], 'false,true': [0.1891128636047759, 0.22475163975780355], 'false,true,false': [-3.089316242435218e-16, 0.00016170721570751094], 'false,true,true': [0.13489761848053453, 0.15697674076167492], 'false,false': [0.15234374999999997, 0.0], 'false,false,true': [nan, 0.15234374999999997], 'false,false,false': [0.0, nan]}, {'': [1.4802973661668753e-16, 0.16408164063053352], 'false': [0.1611160060589662, 0.18028305305629155], 'false,false': [nan, 0.18028305305629155], 'false,false,false': [0.1599005800951118, 0.24], 'false,true': [0.04586151805120521, 0.0002780062613227062], 'false,true,true': [0.00019906547609721548, 0.048025205646479864], 'true': [1.2335811384723962e-16, -3.700743415417188e-17], 'true,true': [7.401486830834377e-17, -3.700743415417188e-17]}, {'': [-5.551115123125783e-17, 0.12935460699642717], 'false': [0.11753872361951417, 0.2352063880450408], 'false,false': [0.1820769099557521, 0.21521980700279963], 'false,false,false': [nan, 0.21521980700279963], 'false,false,true': [0.014002406974504389, 0.0], 'false,true': [0.13394267304872073, 7.915637973374202e-05], 'false,true,true': [0.00021260209187615176, 0.1399200281119648], 'true': [0.0, -4.163336342344337e-17]}, {'': [3.700743415417188e-17, 0.08671664209197023], 'false': [0.07755251235103157, 0.15804389654916862], 'false,false': [0.15282012482179194, 0.007396767688158834], 'false,false,true': [0.0, 0.16175107431967523], 'false,false,false': [0.007396767688158834, nan], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08860979926091932, 0.08650961351255129], 'true': [0.03216370338475751, 0.008026926400137992], 'false': [0.07882371057165814, 0.09106367049770538], 'false,false': [0.089475706154778, 0.0], 'false,true': [0.012036046352423153, 0.06950319215650662], 'true,true': [0.003970921922234749, 0.03382821578407067], 'false,true,true': [0.0, 0.0006800957811051352], 'false,false,false': [0.0, nan]}, {'': [0.00040049931782398795, 0.07650544588709664], 'false': [0.06496139681767983, 0.14961192065513915], 'false,false': [0.13314127546105262, 0.1612515571798045], 'false,false,false': [0.09960241572745487, 0.25], 'false,false,true': [0.0, 0.1411457254790896], 'true': [0.0003017981098702785, 0.0005950544907268249], 'true,false': [0.0, 0.0007178915288818996], 'true,false,false': [0.0, 0.0]}, {'': [0.00027286377898652625, 0.0832598729973026], 'false': [0.07399820715274874, 0.15635261880731186], 'false,false': [0.15635261880731186, nan], 'false,false,true': [0.051439590626782564, 0.0055914219258587205], 'true': [0.00015133255097258023, 7.147673056419566e-05], 'true,false': [nan, 7.147673056419566e-05]}, {'': [0.002767215204066109, 0.0684778505078705], 'false': [0.0003488464857425294, 0.06984878981633262], 'false,false': [0.06481705997158473, 0.11359279833607279], 'false,false,false': [0.11359279833607279, nan], 'true': [6.800474360466509e-06, 0.003156980520424256], 'true,true': [6.800474360466509e-06, nan], 'true,true,true': [4.5931531450355e-06, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;enzyme(A, F), enzyme(C, F).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( phenotype(A, G), phenotype(F, H) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.15814893509951217;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.35814893509951234;  // std dev = 2.449, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.2010060779566548;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.5631660001050113;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7319045176838227;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.8259563331837879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(I, K), phenotype(A, L) )
%   | | | then return 0.08203121171976548;  // std dev = 1.719, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.1364898722301688;  // std dev = 0.096, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.17399567926603274;  // std dev = 4.565, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | | else return 0.016619263834476334;  // std dev = 2.187, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.598034139700094;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.34224807528863255;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.004913550072243214;  // std dev = 1.455, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.30504068342715407;  // std dev = 2.476, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6882704402725035;  // std dev = 1.625, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.19258782092971477;  // std dev = 0.115, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.10309625547459675;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.32083634181833603;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8061572877697747;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4667193089417185;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.45997113443494425;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6287261539365767;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6593200706398579;  // std dev = 1.252, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.1726605901882208;  // std dev = 0.477, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.12899316480157436;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return 0.3019924465653609;  // std dev = 0.937, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.02040441992020105;  // std dev = 1.476, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.19740665039260089;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.20049835478219916;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.34032649794202907;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4761188814151278;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5025638501361666;  // std dev = 1.429, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.14568343998210348;  // std dev = 0.043, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7396831249547222;  // std dev = 0.120, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.24666632865395943;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.15521866783693342;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.07335998070477563;  // std dev = 1.321, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.3786874871107446;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.2847370107663702;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.26762316904809;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4304784749229004;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11371417389162675;  // std dev = 1.275, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else return 0.07650249310023083;  // std dev = 0.289, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return -0.15802435277792112;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.05007540682653352;  // std dev = 1.424, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.07303207748212534;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), location(A, E) )
%   | then return 0.07170411675759278;  // std dev = 0.260, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.018614315894517907;  // std dev = 0.862, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.11622088895392872;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.21517349053768842;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06751970710453861;  // std dev = 0.990, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.03863589755499397;  // std dev = 0.241, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.22377269113966186;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02711095272993447;  // std dev = 2.285, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else return 0.12083335112973903;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14464766668461987;  // std dev = 0.245, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.23990794808531535;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.21161416574238995;  // std dev = 0.582, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.132322351834675;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.002888127288022507;  // std dev = 0.265, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | else return 0.05314243321479169;  // std dev = 0.249, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1320860491385397;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.05825163681672548;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18643676058834627;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1057780201284495;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.102950426780496;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, H), interaction(H, H) )
%   | | | then return -0.11825658034793968;  // std dev = 0.101, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.023645676576395713;  // std dev = 1.239, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3181918398511943;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.004653298066647462;  // std dev = 2.491, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.057361210892915085;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2966934474818168;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(C, E) )
%   | | then return 0.23500878706149647;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.13701865751945064;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23706290608684288;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.005065862238608443;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.29609920714814625;  // std dev = 0.596, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.1800071070654533;  // std dev = 1.564, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.13815932326620595;  // std dev = 0.303, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.024968185466769773;  // std dev = 1.589, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.06468535136479811;  // std dev = 2.075, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */


Results
   AUC ROC   = 0.966591
   AUC PR    = 0.340345
   CLL	      = -0.193268
   Precision = 0.237226 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.361111


Total learning time: 4.755 seconds
Total inference time: 3.109 seconds
AUC ROC: 0.966591


Results scoring model
   AUC ROC   = 0.987533
   AUC PR    = 0.380822
   CLL	      = -0.186239
   Precision = 0.158385 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.269841


Total scoring time: 5.157 seconds
Refined model CLL: -0.186239


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.966591
   AUC PR    = 0.340345
   CLL	      = -0.193268
   Precision = 0.237226 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.361111


Total learning time: 15.521999999999998 seconds
Total inference time: 3.109 seconds
AUC ROC: 0.966591
Total revision time: 15.521999999999998
Best scored revision CLL: -0.186239


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:15:59
{'AUC ROC': 0.966591, 'AUC PR': 0.340345, 'CLL': -0.193268, 'Precision': [0.237226, 0.5], 'Recall': 0.755814, 'F1': 0.361111, 'Learning time': 15.521999999999998, 'Inference time': 3.109, 'parameter_0.2': {'AUC ROC': 0.980706, 'AUC PR': 0.314106, 'CLL': -0.191779, 'Precision': [0.11215, 0.5], 'Recall': 0.837209, 'F1': 0.197802, 'Learning time': 1.762, 'Inference time': 2.925}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08640980466472946;  // std dev = 4.026, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
%   | | | else return 0.17158177092040788;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12397171990963815;  // std dev = 5.553, 158.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=42 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7294533872440255;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6294533872440256;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5994170661572461;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.09148741593918437;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return 0.09205039775722855;  // std dev = 3.952, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12809217910220058;  // std dev = 5.477, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */
%   | | | else return 0.006995473760703991;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5767811844772268;  // std dev = 0.053, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5573071468860664;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.058995542191523836;  // std dev = 2.683, 74.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=8 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8097634347609777;  // std dev = 0.208, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1770639057116234;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3800324907932502;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1750825693757401;  // std dev = 5.305, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12092949824551867;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.42450146886825424;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.10099346391052418;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.160894171999076;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.19461691124806338;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7032695242241576;  // std dev = 1.120, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.15605857714420618;  // std dev = 0.103, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5235271050966848;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15651536666869642;  // std dev = 5.191, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
%   | | | else return 0.06273734785231665;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.25282092688105945;  // std dev = 1.299, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.3628464821099612;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.42902359139883756;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5093370676831552;  // std dev = 1.711, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | else return -0.1367238782518927;  // std dev = 0.093, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7033000987806461;  // std dev = 0.611, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.22378191922146204;  // std dev = 0.098, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.40473927279369826;  // std dev = 0.097, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0826966952010006;  // std dev = 4.698, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2679303054496313;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3479417981025924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.33070745573217736;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.025967118983865344;  // std dev = 3.374, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.22429674026101565;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06479911777871437;  // std dev = 5.142, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.02662606543838743;  // std dev = 1.520, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24445174782567822;  // std dev = 0.181, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.497677920529358;  // std dev = 0.798, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.15805074588498091;  // std dev = 0.481, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21397852131117942;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19265556169054512;  // std dev = 1.416, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return 0.01342716479395546;  // std dev = 4.788, 149.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
%   | else if ( interaction(A, H) )
%   | | then return 0.10960417224814256;  // std dev = 1.287, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01469827703792719;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19230823800188176;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.2278498526250745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.19370481275396198;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.004445472221118299;  // std dev = 2.969, 165.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=44 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.18436782234219706;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05431500302797278;  // std dev = 4.914, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05361946512969514;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.012469080661570198;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15597906453215446;  // std dev = 0.049, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19336495345552512;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then return 0.016869567872677432;  // std dev = 2.939, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.49921097693480065;  // std dev = 2.594, 58.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   | | | else return -0.23559395036790273;  // std dev = 0.407, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.13892408994419306;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13485402669103305;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.16933781435239215;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11802404255888581;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07437382166132965;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.022827780299830253;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.013177678420018048;  // std dev = 2.850, 148.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004396188200110378;  // std dev = 4.459, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991456
   AUC PR    = 0.411588
   CLL	      = -0.180122
   Precision = 0.339506 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.443548


Total learning time: 2.486 seconds
Total inference time: 2.736 seconds
AUC ROC: 0.991456


Results scoring model
   AUC ROC   = 0.989358
   AUC PR    = 0.329736
   CLL	      = -0.19486
   Precision = 0.305019 at threshold = 0.5
   Recall    = 0.699115
   F1        = 0.424731


Total scoring time: 5.518 seconds
Parameter learned model CLL: -0.19486


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.975, 1, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [4.026, 71, 21], 'false,false,true,false': [3.797, 46, 21], 'false,false,false,true': [5.553, 116, 42], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 10], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.914, 1, 5], 'false,false,true,true': [3.984, 65, 21], 'false,false,true,false': [3.952, 61, 21], 'false,false,false,true': [5.477, 105, 42], 'false,false,false,false': [1.589, 16, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.053, 0, 19], 'false,true,true,true': [1.9, 5, 13], 'false,true,true,false': [2.683, 66, 8], 'false,true,false,true': [0.208, 0, 23], 'false,true,false,false': [0.0, 52, 0], 'false,false,true,true': [0.642, 1, 3], 'false,false,true,false': [5.305, 80, 44], 'false,false,false,true': [1.477, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.023, 0, 10], 'true,true,false': [1.176, 2, 4], 'true,false': [1.195, 2, 5], 'false,true,true,true': [0.693, 1, 2], 'false,true,true,false': [1.12, 1, 42], 'false,true,false': [0.103, 121, 0], 'false,false,true': [0.147, 0, 5], 'false,false,false,true': [5.191, 75, 42], 'false,false,false,false': [1.519, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.299, 2, 15], 'true,false': [0.079, 0, 4], 'false,true,true,true': [0.043, 0, 2], 'false,true,true,false': [1.711, 3, 42], 'false,true,false': [0.093, 92, 0], 'false,false,true,true': [0.611, 0, 16], 'false,false,true,false': [0.098, 43, 0], 'false,false,false,true': [0.097, 0, 2], 'false,false,false,false': [4.698, 73, 32]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.02, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.111, 0, 10], 'false,true': [3.374, 119, 44], 'false,false,true,true': [0.037, 0, 3], 'false,false,true,false': [5.142, 97, 44], 'false,false,false,true': [1.52, 15, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.181, 0, 15], 'true,true,false': [0.798, 0, 37], 'true,false': [0.481, 81, 0], 'false,true,true,true': [0.042, 0, 4], 'false,true,true,false': [1.416, 4, 9], 'false,true,false': [4.788, 111, 38], 'false,false,true': [1.287, 10, 8], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.088, 0, 15], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.056, 0, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.969, 121, 44], 'false,false,true,true': [0.908, 3, 3], 'false,false,true,false': [4.914, 93, 44], 'false,false,false,true': [0.619, 3, 1], 'false,false,false,false': [1.265, 8, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.049, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.041, 0, 5], 'false,true': [2.939, 104, 44], 'false,false,true,true': [2.594, 8, 50], 'false,false,true,false': [0.407, 85, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.025, 0, 8], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.025, 0, 3], 'true,false': [0.922, 1, 6], 'false,true': [0.887, 1, 5], 'false,false,true': [2.85, 106, 42], 'false,false,false,true': [4.459, 115, 45], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.047499999999999785, 0.20003460207612553], 'false': [0.17283950617283939, 0.1937550770803482], 'false,false': [0.19437522249911118, 0.1931787452677134], 'false,false,true': [0.17615784499054857, 0.21519269325016677], 'false,false,false': [0.1951610318859169, 0.1683673469387754], 'false,true': [1.4802973661668753e-16, 0.22222222222222224], 'false,true,false': [0.25, 0.18750000000000006], 'false,true,true': [nan, 1.4802973661668753e-16]}, {'': [0.04750000000000041, 0.19687716833719365], 'false': [0.10712165578174243, 0.19254270165882903], 'false,false': [0.18746462825630883, 0.19742800565731886], 'false,false,false': [0.20408163265306042, 0.1329639889196675], 'false,false,true': [0.1845592212006494, 0.1905116002379534], 'false,true': [0.0, 0.13922549281871444], 'true': [-8.881784197001253e-17, 0.08999999999999986], 'false,true,true': [nan, 0.0]}, {'': [0.00014836830621380975, 0.20768782409908765], 'false': [0.19190571163286546, 0.22257722333568064], 'false,false': [0.22436928553817675, 0.1983471074380164], 'false,false,true': [0.10297357560141607, 0.22697263648476537], 'false,false,false': [0.1983471074380164, nan], 'false,true': [0.17724349657927602, 0.2076364533878737], 'false,true,false': [0.0018878395486001966, 0.0], 'false,true,true': [0.20061728395061706, 0.0972436102739672]}, {'': [0.14363211683428526, 0.18504104887535439], 'false': [0.15101613199265473, 0.22269441185329839], 'false,false': [0.004314144063794734, 0.22584664973492208], 'false,false,false': [0.23033742436866667, 0.17751479289940825], 'false,true': [0.053492899897957434, 8.818251004986645e-05], 'true': [0.11102333694660411, 0.20408163265306123], 'true,true': [5.430210619976617e-05, 0.2305608350524465], 'false,true,true': [0.16015379009827443, 0.02917791109294242]}, {'': [0.08250619968659086, 0.15948534543000648], 'false': [0.11365139434315222, 0.1977804808196197], 'false,false': [0.17636323448627222, 0.20826373340376436], 'false,false,false': [0.004725423601215195, 0.21020212234220764], 'false,false,true': [0.02333435433258163, 0.00022460145919847381], 'false,true': [0.06258652597403992, 9.461949133896578e-05], 'true': [0.09924190517263524, 0.0015796614824128141], 'false,true,true': [0.0009350187230912077, 0.06505211404923182]}, {'': [0.0016902488936162946, 0.1244326272658183], 'false': [0.06983777252720791, 0.1788628051746147], 'false,false': [0.1841745971956932, 0.12838874185439975], 'false,false,true': [0.0004606879520857495, 0.1875534143674797], 'false,false,false': [0.12838874185439975, nan], 'true': [0.0006758097717108397, 0.0012277565338164377], 'true,true': [4.897055355745916e-05, 0.0], 'true,true,true': [4.897055355745916e-05, nan]}, {'': [0.09275592933374766, 0.14850797848397948], 'false': [0.15332400952056127, 0.11834308394236194], 'false,true': [0.11807389010130077, 0.15386939382446363], 'false,false': [0.0919835210329253, 0.15999999999999998], 'false,false,false': [0.15999999999999998, nan], 'false,true,true': [0.00043608285782423956, 0.154163157635207], 'true': [0.026025149979892487, 0.0028511414169896027], 'true,true': [0.002192152668254736, 0.017190014029883415]}, {'': [0.0006385346649488158, 0.1124998882446917], 'false': [0.0534152244223921, 0.17385277086076553], 'false,false': [0.17693561002944005, 0.141996738324929], 'false,false,true': [0.13736251411688263, 0.1762784100185594], 'false,false,false': [0.09577904546448382, 0.1600000000000001], 'true': [0.0005193525607675609, 0.0010075771301768996], 'true,false': [0.0, 0.0010519652366192446], 'true,false,false': [0.0010519652366192446, nan]}, {'': [0.0004862703954464642, 0.1178709223526726], 'false': [0.05838187186927155, 0.17838389148487632], 'false,false': [0.17838389148487632, nan], 'false,false,true': [0.11601700395134917, 0.0019441744091557066], 'true': [0.00016918488034716898, 0.00034422217097350715], 'true,false': [nan, 0.00034422217097350715]}, {'': [0.03966013758959033, 0.09172471621911449], 'false': [0.13103648681466412, 0.09094001009507188], 'false,false': [0.05488722090875797, 0.1242517850390636], 'false,false,false': [0.1242517850390636, nan], 'true': [0.0002823949469648072, 0.12145517296888743], 'true,true': [0.00013655584751071597, 0.0006479124266207982], 'true,true,false': [0.0, 0.0002056074415753862], 'true,true,true': [7.761457738069549e-05, 0.00028168499339583053]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(A, F).;true;true
5;false,false;interaction(G, A), interaction(H, G).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.016851064900487694;  // std dev = 2.806, 72.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951151;  // std dev = 4.416, 104.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=26 */
%   | | | else return 0.1643989350995115;  // std dev = 5.830, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7310371889342243;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7249799725553687;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7289931222161079;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.11377319296675327;  // std dev = 0.999, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | | else return 0.06893069554860422;  // std dev = 2.838, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.07926484248214359;  // std dev = 4.183, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | | else return 0.19799756592091244;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5252281812079621;  // std dev = 0.206, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.20046770661295268;  // std dev = 2.959, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.04289277053526709;  // std dev = 2.271, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7956745292668854;  // std dev = 0.363, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1730177667633082;  // std dev = 0.322, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return 0.17098776956217923;  // std dev = 4.327, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | | else return 0.042169352702820524;  // std dev = 3.461, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21518075749734375;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11902244799572183;  // std dev = 0.978, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4320634348127797;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.11992408643543445;  // std dev = 1.169, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.4502209458550069;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6863849760441907;  // std dev = 0.206, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.16345560258544622;  // std dev = 0.035, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7604493663524472;  // std dev = 0.301, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16820873435924955;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.02005223256335027;  // std dev = 2.398, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.12039828547463763;  // std dev = 4.595, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34628066356898757;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.3847306358388085;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.21939396203657013;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5612121394065653;  // std dev = 1.049, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.14058326408581648;  // std dev = 0.021, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6643489350455491;  // std dev = 0.511, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.17542264416432793;  // std dev = 0.179, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1426105842809944;  // std dev = 3.661, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.024200471822065646;  // std dev = 2.955, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.261968337294854;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20462521414465887;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.322520112098155;  // std dev = 1.408, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.017007554063145993;  // std dev = 2.326, 98.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */
%   | | else return -0.0277335823791033;  // std dev = 0.195, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2613715012711723;  // std dev = 0.510, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07012664428986548;  // std dev = 5.012, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3021293075807477;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12486795493509326;  // std dev = 0.867, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3960655514790389;  // std dev = 0.155, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.1503702044593399;  // std dev = 0.083, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.1484911874584305;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.2776791430186366;  // std dev = 0.924, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.05305692653087581;  // std dev = 1.180, 50.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=7 */
%   | | | else return 0.07254642753223352;  // std dev = 4.503, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then return 0.04295352246728678;  // std dev = 0.256, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.18948978489867696;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.18265901691115616;  // std dev = 0.115, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.12533810809794643;  // std dev = 0.230, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.19402703521160458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.027116868741838607;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(A, H), phenotype(F, I) )
%   | | then if ( enzyme(A, J), phenotype(A, I) )
%   | | | then return -0.08611510928889461;  // std dev = 0.232, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0927523199115;  // std dev = 1.946, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else return -0.07342542196889836;  // std dev = 0.140, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return -0.004440089173220011;  // std dev = 0.227, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( location(A, M) )
%   | | | then return 0.08475273579467507;  // std dev = 4.684, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   | | | else return -0.049452177127474344;  // std dev = 0.657, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1678796077980446;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.017784150790573328;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), location(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.144251840956944;  // std dev = 0.293, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.00948591576696894;  // std dev = 2.202, 123.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=30 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.07610990810495984;  // std dev = 1.470, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return -0.05761525220419855;  // std dev = 0.571, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.13543295879303185;  // std dev = 2.238, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | | else return 0.2972928309518997;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | else return -0.22357147301556188;  // std dev = 0.067, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16844175863986988;  // std dev = 0.071, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E), complex(D, F) )
%   | | then if ( enzyme(D, G), interaction(D, D) )
%   | | | then return -0.30576020032132106;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.022527248410057397;  // std dev = 3.531, 154.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=39 */
%   | | else if ( interaction(H, D) )
%   | | | then return 0.06493155238992139;  // std dev = 3.472, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | | else return -0.12322304293959599;  // std dev = 1.264, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( enzyme(I, K), phenotype(I, J) )
%   | | | then return 0.2748945276353189;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03139378193757774;  // std dev = 0.702, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.4281167937436186;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12295153219338845;  // std dev = 1.068, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */


Results
   AUC ROC   = 0.954179
   AUC PR    = 0.323443
   CLL	      = -0.18877
   Precision = 0.331288 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.433735


Total learning time: 20.447 seconds
Total inference time: 6.585 seconds
AUC ROC: 0.954179


Results scoring model
   AUC ROC   = 0.978955
   AUC PR    = 0.344632
   CLL	      = -0.204826
   Precision = 0.311284 at threshold = 0.5
   Recall    = 0.707965
   F1        = 0.432432


Total scoring time: 41.08 seconds
Refined model CLL: -0.204826


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991456
   AUC PR    = 0.411588
   CLL	      = -0.180122
   Precision = 0.339506 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.443548


Total learning time: 69.531 seconds
Total inference time: 2.736 seconds
AUC ROC: 0.991456
Total revision time: 69.531
Best scored revision CLL: -0.19486


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:17:18
{'AUC ROC': 0.991456, 'AUC PR': 0.411588, 'CLL': -0.180122, 'Precision': [0.339506, 0.5], 'Recall': 0.639535, 'F1': 0.443548, 'Learning time': 69.531, 'Inference time': 2.736, 'parameter_0.4': {'AUC ROC': 0.991456, 'AUC PR': 0.411588, 'CLL': -0.180122, 'Precision': [0.339506, 0.5], 'Recall': 0.639535, 'F1': 0.443548, 'Learning time': 2.486, 'Inference time': 2.736}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7331489350995116;  // std dev = 1.871, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.10614893509951116;  // std dev = 4.828, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.21298764477693155;  // std dev = 4.614, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.13814893509951362;  // std dev = 6.735, 225.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=63 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6725690429162494;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7439976143448209;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5717620920477201;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10744180567580597;  // std dev = 4.781, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | | | else return 0.12223074531778028;  // std dev = 4.834, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13906452907815817;  // std dev = 6.648, 211.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=63 */
%   | | | else return 0.13491409063246496;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.520846720272143;  // std dev = 1.378, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.672215574248393;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.04168456070437386;  // std dev = 3.616, 117.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7454622393231244;  // std dev = 1.508, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.18868630271863024;  // std dev = 0.074, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2127963668825331;  // std dev = 1.001, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13124202293833076;  // std dev = 6.645, 208.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=65 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09380883784664225;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.46485334641266635;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.4536191252022383;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.32566275119949406;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.20457641154646355;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6796582868495722;  // std dev = 1.656, 67.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=64 */
%   | | else return -0.16334924821532013;  // std dev = 0.093, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5655795847366936;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08976839314924194;  // std dev = 6.693, 218.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=63 */
%   | | | else return 0.27725981059827626;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.30423877930208654;  // std dev = 0.972, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.2656702773356479;  // std dev = 0.938, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.44030492242011193;  // std dev = 0.115, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5166377417043622;  // std dev = 1.939, 68.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=64 */
%   | | else return -0.1423547508279115;  // std dev = 0.128, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6793505268871051;  // std dev = 1.793, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return -0.21880272437274534;  // std dev = 0.203, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4209737982021427;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0920643569266566;  // std dev = 5.130, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2908822481214818;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19008775185772633;  // std dev = 1.320, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, F) )
%   | then return 0.03256928324658239;  // std dev = 4.005, 237.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=66 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.06487522174794161;  // std dev = 0.684, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05565084801767572;  // std dev = 6.273, 220.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=65 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.011195296889510153;  // std dev = 2.150, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19234562106660677;  // std dev = 0.961, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.3555527357639105;  // std dev = 3.292, 92.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=74 */
%   | else return -0.1599427968218785;  // std dev = 0.646, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2752279844033323;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3317661637714879;  // std dev = 0.639, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.03821366231256357;  // std dev = 5.147, 167.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=46 */
%   | else if ( interaction(A, H) )
%   | | then return 0.09608575739484523;  // std dev = 1.600, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.015244821880529773;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15739451995177656;  // std dev = 0.918, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.19170921443556596;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22855485359696823;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.0013273540090826823;  // std dev = 3.691, 250.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=66 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14263255313744846;  // std dev = 0.371, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05915313299157776;  // std dev = 5.901, 203.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=65 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09386362316976743;  // std dev = 0.973, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.012393214048793733;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1759784312664404;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1903535626213217;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.014824397280619251;  // std dev = 3.647, 230.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=66 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5042162718962552;  // std dev = 3.112, 86.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=75 */
%   | | | else return -0.22668035344338006;  // std dev = 0.778, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.15303339918266953;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1557404308658605;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15067542301361575;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.018262239268274763;  // std dev = 1.169, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.07241658326878332;  // std dev = 0.881, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, I) )
%   | | then return -0.010720733204316853;  // std dev = 3.811, 256.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=64 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021576698764726815;  // std dev = 5.271, 231.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=70 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991938
   AUC PR    = 0.390546
   CLL	      = -0.17666
   Precision = 0.359281 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.474308


Total learning time: 3.018 seconds
Total inference time: 3.07 seconds
AUC ROC: 0.991938


Results scoring model
   AUC ROC   = 0.986091
   AUC PR    = 0.29444
   CLL	      = -0.198611
   Precision = 0.25054 at threshold = 0.5
   Recall    = 0.686391
   F1        = 0.367089


Total scoring time: 9.254 seconds
Parameter learned model CLL: -0.198611


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.871, 4, 28], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [0.816, 2, 1], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [4.828, 94, 31], 'false,false,true,false': [4.614, 60, 33], 'false,false,false,true': [6.735, 162, 63], 'false,false,false,false': [2.277, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.964, 1, 13], 'true,false': [0.0, 0, 15], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.816, 1, 2], 'false,true,false': [0.939, 1, 5], 'false,false,true,true': [4.781, 87, 31], 'false,false,true,false': [4.834, 80, 33], 'false,false,false,true': [6.648, 148, 63], 'false,false,false,false': [2.227, 17, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.378, 2, 28], 'false,true,true,true': [1.589, 3, 16], 'false,true,true,false': [3.616, 102, 15], 'false,true,false,true': [1.508, 2, 35], 'false,true,false,false': [0.074, 78, 0], 'false,false,true,true': [1.001, 3, 3], 'false,false,true,false': [6.645, 143, 65], 'false,false,false,true': [2.262, 19, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.027, 0, 15], 'true,true,false': [0.016, 0, 6], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.708, 1, 2], 'false,true,true,false': [1.656, 3, 64], 'false,true,false': [0.093, 172, 0], 'false,false,true': [0.039, 0, 5], 'false,false,false,true': [6.693, 155, 63], 'false,false,false,false': [1.932, 8, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.972, 1, 18], 'true,false': [0.938, 1, 10], 'false,true,true,true': [0.115, 0, 2], 'false,true,true,false': [1.939, 4, 64], 'false,true,false': [0.128, 168, 0], 'false,false,true,true': [1.793, 3, 34], 'false,false,true,false': [0.203, 57, 0], 'false,false,false,true': [0.032, 0, 3], 'false,false,false,false': [5.13, 85, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.008, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.32, 2, 17], 'false,true': [4.005, 171, 66], 'false,false,true,true': [0.684, 2, 3], 'false,false,true,false': [6.273, 155, 65], 'false,false,false,true': [2.15, 22, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.961, 1, 15], 'true,true,false': [3.292, 18, 74], 'true,false': [0.646, 168, 0], 'false,true,true,true': [0.07, 0, 7], 'false,true,true,false': [0.639, 1, 10], 'false,true,false': [5.147, 121, 46], 'false,false,true': [1.6, 19, 13], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.918, 1, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.021, 0, 4], 'true,false,false,false': [0.014, 0, 5], 'false,true': [3.691, 184, 66], 'false,false,true,true': [0.371, 1, 3], 'false,false,true,false': [5.901, 138, 65], 'false,false,false,true': [0.973, 5, 3], 'false,false,false,false': [1.749, 13, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.053, 0, 21], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.055, 0, 7], 'false,true': [3.647, 164, 66], 'false,false,true,true': [3.112, 11, 75], 'false,false,true,false': [0.778, 151, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.001, 0, 9], 'true,true,true,false': [0.011, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 4], 'true,false': [1.169, 2, 6], 'false,true': [0.881, 1, 11], 'false,false,true': [3.811, 192, 64], 'false,false,false,true': [5.271, 161, 70], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.10937500000000122, 0.2074609375000003], 'false': [0.20999999999999988, 0.2038207333635146], 'false,true': [0.18750000000000006, 0.22222222222222213], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'false,false': [0.20738995034088073, 0.20061728395061762], 'false,false,true': [0.18649600000000122, 0.22892819979188306], 'false,false,false': [0.20160000000000042, 0.19204389574759959], 'false,true,true': [0.0, 1.4802973661668753e-16]}, {'': [0.03329369797859713, 0.20707413142418685], 'false': [0.17973343459838473, 0.20482095949995566], 'false,false': [0.2001358822715719, 0.20914160850223423], 'false,false,false': [0.20942925810291807, 0.20659722222222235], 'false,false,true': [0.19369434070669422, 0.2067507244106835], 'false,true': [0.22222222222222224, 0.1470038635286923], 'false,true,true': [nan, 0.22222222222222224], 'true': [0.06632653061224492, 0.0]}, {'': [0.06329484466116474, 0.20144935959914187], 'false': [0.19240230842683032, 0.20980485824909909], 'false,false': [0.2112205886471096, 0.19674556213017774], 'false,false,true': [0.16694276762871788, 0.2123113537360616], 'false,false,false': [0.19674556213017774, nan], 'false,true': [0.1759839965397931, 0.21024960798610856], 'false,true,false': [0.06145909754888292, 6.93788840402672e-05], 'false,true,true': [0.13296398891966707, 0.11176857330703416]}, {'': [0.033919905549336146, 0.1829535111894769], 'false': [0.1552532945974949, 0.21043001888817978], 'false,false': [0.0003031460684519871, 0.21042120343155768], 'false,false,false': [0.20551127363549665, 0.24888888888888866], 'false,true': [0.055614115001393016, 5.060028664613461e-05], 'false,true,true': [0.1672212364636273, 0.040943804565654295], 'true': [7.420206639893867e-05, 0.10937499999999997], 'true,true': [5.0343248126190807e-05, 4.370073622050885e-05]}, {'': [0.0611881902418772, 0.16079341167459085], 'false': [0.10552536027299557, 0.21845807118029106], 'false,false': [0.22719060612972156, 0.21142498155806555], 'false,false,true': [0.08692170581751467, 0.0007196599089262133], 'false,false,false': [0.0003429825395759867, 0.21399757488896584], 'false,true': [0.054034709721240304, 9.70278354565725e-05], 'true': [0.04974446291041276, 0.08001252644203577], 'false,true,true': [0.006619571573043548, 0.055262795485098215]}, {'': [0.060409027659784655, 0.12348057125098928], 'false': [0.06769038039627212, 0.17541883697603225], 'false,false': [0.17696453039186827, 0.1594438400774424], 'false,false,true': [0.09367686846789564, 0.17885554093099312], 'false,false,false': [0.1594438400774424, nan], 'true': [5.43227366919555e-06, 0.0916543690768227], 'true,true': [5.43227366919555e-06, nan], 'true,true,true': [5.43227366919555e-06, nan]}, {'': [0.10294806654340992, 0.14477306222975145], 'false': [0.15199550779484552, 0.11746394046870298], 'false,true': [0.02368337815987344, 0.15865009766024407], 'false,false': [0.07997829163041145, 0.17993079584775104], 'false,false,false': [0.17993079584775104, nan], 'true': [0.11228640730236122, 0.002487069041592714], 'true,true': [0.05774556449302833, 0.11782561389322853], 'false,true,true': [0.0006981343706064276, 0.03706724258676835]}, {'': [0.029814123550040057, 0.11012814019503489], 'false': [0.0544851964893396, 0.16850668441277314], 'false,false': [0.16904167702671932, 0.16270887792495597], 'false,false,true': [0.034335440457703495, 0.17156132404239666], 'false,false,false': [0.11843475182914638, 0.17993079584775096], 'true': [0.04211631335256736, 0.0004060337924562211], 'true,false': [nan, 0.00040603379245619645], 'true,false,false': [0.0001072644782192933, 4.167096597361697e-05]}, {'': [0.00024832454914831625, 0.11333084740076259], 'false': [0.057818291456516464, 0.16692680352966707], 'false,false': [0.16692680352966707, nan], 'false,false,true': [0.11261109842078888, 0.004013266202675244], 'true': [0.0001335932673506925, 0.0004375350934386584], 'true,false': [nan, 0.0004375350934386584]}, {'': [0.05885470155340018, 0.08669336149452765], 'false': [0.06461167265326374, 0.08712686619949751], 'false,false': [0.05672815711185589, 0.12026714257930629], 'false,false,false': [0.12026714257930629, nan], 'true': [3.4408719316018445e-05, 0.1708324297434901], 'true,true': [1.0949136069776655e-05, 0.00010791961425979726], 'true,true,false': [nan, 0.00010791961425979726], 'true,true,true': [2.106810525666821e-07, 2.5567484757613168e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, I) )
%   | | | then return -0.03928696233638519;  // std dev = 1.895, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.13351125394009208;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.11057611956553091;  // std dev = 4.409, 103.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=26 */
%   | | | else return 0.2198510627590879;  // std dev = 7.366, 235.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=85 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7277972319421014;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7255775466804623;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.15312854515223268;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( complex(A, G), enzyme(E, H) )
%   | | | then return 0.02083568334450199;  // std dev = 1.857, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.13152032860818508;  // std dev = 7.206, 251.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=74 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10593513047354948;  // std dev = 3.815, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.20463436594162474;  // std dev = 5.105, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5354392885181293;  // std dev = 0.171, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.009652162500253804;  // std dev = 3.230, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | | else return 0.12302014743796706;  // std dev = 3.523, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8104130791507284;  // std dev = 0.122, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.17986031735421898;  // std dev = 0.152, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.44478782328830013;  // std dev = 5.144, 116.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=74 */
%   | | | else return -0.1845460643436323;  // std dev = 0.181, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.19021271421042305;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10000639748566435;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4375904401086094;  // std dev = 0.024, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.10640041510792168;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4208790694652668;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.5927093185840627;  // std dev = 1.207, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.7338745289566238;  // std dev = 0.563, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.16791774330150494;  // std dev = 0.293, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.6101616256706442;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.27536277637083395;  // std dev = 2.376, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.0954060621384341;  // std dev = 5.792, 185.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3480822201399038;  // std dev = 0.134, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.22926012638397053;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.5976194106785172;  // std dev = 1.199, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.515681192736355;  // std dev = 1.165, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.14890061996119563;  // std dev = 0.276, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5699807035748516;  // std dev = 1.973, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.21901978249448262;  // std dev = 0.525, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4799648833888586;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04244129925213486;  // std dev = 4.846, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.2710361192155553;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E), location(A, F) )
%   | | | then return -0.3539429794055649;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.26831415194351593;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2777360991614205;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4907225048883079;  // std dev = 0.088, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.17952550258998262;  // std dev = 0.104, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1327261694478031;  // std dev = 0.074, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05853410766834694;  // std dev = 6.073, 302.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=94 */
%   | | | else return -0.008095100335713654;  // std dev = 2.794, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32769390072290294;  // std dev = 0.256, 102.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=89 */
%   | else return -0.140487943477212;  // std dev = 0.060, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.30991595166531494;  // std dev = 0.191, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.05664249564262849;  // std dev = 1.904, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | | else return 0.0692129320248587;  // std dev = 4.292, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47298869604251836;  // std dev = 0.284, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1576116383494316;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.19748931969594655;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.033516806751046624;  // std dev = 1.912, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13555557111739183;  // std dev = 0.211, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.15934061064403882;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.024939857802090275;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( enzyme(A, G), enzyme(F, G) )
%   | | then return -0.06695127862173494;  // std dev = 0.133, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( enzyme(F, H) )
%   | | | then return 0.045880578012887585;  // std dev = 1.978, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return -0.00966604759599989;  // std dev = 2.829, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3593224649545483;  // std dev = 3.746, 95.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=74 */
%   | | | else return -0.16747419507346967;  // std dev = 0.400, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.14529796063333109;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16056325920498798;  // std dev = 0.133, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.034921209231601;  // std dev = 0.389, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.40444118444665295;  // std dev = 0.355, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.3625886406554916;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.124625756118877;  // std dev = 0.542, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.008150907405764182;  // std dev = 5.255, 326.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=91 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.26102797140475203;  // std dev = 1.553, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.12459569912221316;  // std dev = 0.145, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.03327772616533006;  // std dev = 0.202, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17209931582585414;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.16062803425593192;  // std dev = 1.377, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.03875360858500827;  // std dev = 2.589, 177.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=36 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.23802785391507517;  // std dev = 0.910, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.12216297652458662;  // std dev = 0.291, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.48812912006005155;  // std dev = 0.404, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14428850042405972;  // std dev = 0.474, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.0057558730901469185;  // std dev = 1.586, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.07491595064171667;  // std dev = 3.940, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */


Results
   AUC ROC   = 0.990484
   AUC PR    = 0.45624
   CLL	      = -0.172089
   Precision = 0.302521 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.444444


Total learning time: 12.479 seconds
Total inference time: 3.776 seconds
AUC ROC: 0.990484


Results scoring model
   AUC ROC   = 0.984481
   AUC PR    = 0.347423
   CLL	      = -0.194033
   Precision = 0.180556 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.292463


Total scoring time: 19.83 seconds
Refined model CLL: -0.194033


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990484
   AUC PR    = 0.45624
   CLL	      = -0.172089
   Precision = 0.302521 at threshold = 0.5
   Recall    = 0.837209
   F1        = 0.444444


Total learning time: 44.580999999999996 seconds
Total inference time: 3.776 seconds
AUC ROC: 0.990484
Total revision time: 44.580999999999996
Best scored revision CLL: -0.194033


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:18:10
{'AUC ROC': 0.990484, 'AUC PR': 0.45624, 'CLL': -0.172089, 'Precision': [0.302521, 0.5], 'Recall': 0.837209, 'F1': 0.444444, 'Learning time': 44.580999999999996, 'Inference time': 3.776, 'parameter_0.6': {'AUC ROC': 0.991938, 'AUC PR': 0.390546, 'CLL': -0.17666, 'Precision': [0.359281, 0.5], 'Recall': 0.697674, 'F1': 0.474308, 'Learning time': 3.018, 'Inference time': 3.07}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8295775065280829;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.09483532563205559;  // std dev = 5.526, 169.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=40 */
%   | | | else return 0.17666745361803005;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17754057008050061;  // std dev = 7.561, 263.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=84 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.725203701690574;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6725721227432055;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5631660001050113;  // std dev = 0.856, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.09160684096665973;  // std dev = 5.494, 163.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=40 */
%   | | | else return 0.1338653271570931;  // std dev = 5.492, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1394818621111145;  // std dev = 7.644, 276.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=84 */
%   | | | else return 0.25525206838846914;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5394403195224111;  // std dev = 0.980, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6116825368053848;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return -0.017209120667494034;  // std dev = 4.033, 126.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=19 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7568710260249556;  // std dev = 1.427, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.18400170836412985;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.40188146424120674;  // std dev = 1.448, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.13383229686517203;  // std dev = 7.490, 261.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=84 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12016537166986105;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4291246639677085;  // std dev = 0.020, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4377405888937642;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2091253393560475;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.40594660048812914;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6812046614074915;  // std dev = 2.010, 87.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=83 */
%   | | else return -0.16352419641114443;  // std dev = 0.452, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.39713308282425047;  // std dev = 0.954, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08980706026200139;  // std dev = 7.679, 283.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=84 */
%   | | | else return 0.08477386702302361;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3493326803473745;  // std dev = 0.128, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.25977243090906527;  // std dev = 0.967, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.1635526551858023;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.49512649593889174;  // std dev = 2.648, 91.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=83 */
%   | | else return -0.1424383557703272;  // std dev = 0.227, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.700981470167341;  // std dev = 0.899, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.22182134937862885;  // std dev = 0.022, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.0708487377986116;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11365403647461714;  // std dev = 6.669, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2568250205185996;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3100152580392326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20949365016636795;  // std dev = 1.357, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(A, F) )
%   | then return 0.016882149155622115;  // std dev = 4.862, 336.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=87 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2889102990615139;  // std dev = 1.021, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.057715076422557784;  // std dev = 7.203, 279.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=84 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04839842003185443;  // std dev = 2.741, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22995373599019064;  // std dev = 0.173, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.49573207423485716;  // std dev = 1.232, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.17256552817787768;  // std dev = 1.275, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.14810565622663435;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.24788042115037037;  // std dev = 1.576, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return 0.024628843822655407;  // std dev = 6.788, 285.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=78 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0243624215864919;  // std dev = 2.098, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01603739808218041;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19133813645141992;  // std dev = 0.140, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.20750726909219053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.16769571056302066;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2799968975508273;  // std dev = 3.80e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.012010758860119672;  // std dev = 4.230, 319.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=87 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.26839907867031343;  // std dev = 0.431, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.04675465525773487;  // std dev = 6.878, 275.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=84 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.12132679230253125;  // std dev = 0.992, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.05707922471688114;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11376121217943791;  // std dev = 0.925, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19263901706906142;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.007106132690488546;  // std dev = 4.283, 321.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=87 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5152276615984317;  // std dev = 3.664, 117.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=105 */
%   | | | else return -0.24102646924551502;  // std dev = 0.644, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.13585271805329552;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1607404060952498;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.12469048721496728;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09329470908339572;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13406729122268904;  // std dev = 0.691, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.06841574003422783;  // std dev = 0.874, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, I) )
%   | | then return 0.010520976392597234;  // std dev = 4.075, 316.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=83 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03815560661507795;  // std dev = 6.135, 295.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=96 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991022
   AUC PR    = 0.364195
   CLL	      = -0.192602
   Precision = 0.337423 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.441767


Total learning time: 3.707 seconds
Total inference time: 2.882 seconds
AUC ROC: 0.991022


Results scoring model
   AUC ROC   = 0.988529
   AUC PR    = 0.32791
   CLL	      = -0.20179
   Precision = 0.255814 at threshold = 0.5
   Recall    = 0.681416
   F1        = 0.371981


Total scoring time: 10.158 seconds
Parameter learned model CLL: -0.20179


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.986, 1, 34], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 6], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 5], 'false,false,true,true': [5.526, 129, 40], 'false,false,true,false': [5.413, 92, 43], 'false,false,false,true': [7.561, 179, 84], 'false,false,false,false': [2.954, 32, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 16], 'true,false': [0.973, 1, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.856, 1, 5], 'false,true,false': [0.076, 0, 8], 'false,false,true,true': [5.494, 123, 40], 'false,false,true,false': [5.492, 101, 43], 'false,false,false,true': [7.644, 192, 84], 'false,false,false,false': [2.652, 17, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.98, 1, 34], 'false,true,true,true': [2.16, 6, 21], 'false,true,true,false': [4.033, 107, 19], 'false,true,false,true': [1.427, 2, 47], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [1.448, 4, 9], 'false,false,true,false': [7.49, 177, 84], 'false,false,false,true': [2.865, 26, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.02, 0, 18], 'true,true,false': [0.012, 0, 6], 'true,false': [1.519, 3, 10], 'false,true,true,true': [0.08, 0, 4], 'false,true,true,false': [2.01, 4, 83], 'false,true,false': [0.452, 233, 0], 'false,false,true': [0.954, 1, 9], 'false,false,false,true': [7.679, 199, 84], 'false,false,false,false': [2.898, 28, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.128, 0, 23], 'true,false': [0.967, 1, 11], 'false,true,true,true': [0.674, 1, 4], 'false,true,true,false': [2.648, 8, 83], 'false,true,false': [0.227, 211, 0], 'false,false,true,true': [0.899, 0, 36], 'false,false,true,false': [0.022, 84, 0], 'false,false,false,true': [0.826, 1, 2], 'false,false,false,false': [6.669, 132, 67]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.357, 2, 24], 'false,true': [4.862, 249, 87], 'false,false,true,true': [1.021, 1, 9], 'false,false,true,false': [7.203, 195, 84], 'false,false,false,true': [2.741, 28, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.173, 0, 23], 'true,true,false': [1.232, 0, 78], 'true,false': [1.275, 172, 0], 'false,true,true,true': [0.882, 1, 9], 'false,true,true,false': [1.576, 4, 13], 'false,true,false': [6.788, 207, 78], 'false,false,true': [2.098, 46, 17], 'false,false,false,true': [2.407, 21, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.14, 0, 23], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.071, 0, 8], 'true,false,false,false': [3.8e-05, 0, 2], 'false,true': [4.23, 232, 87], 'false,false,true,true': [0.431, 0, 9], 'false,false,true,false': [6.878, 191, 84], 'false,false,false,true': [0.992, 5, 4], 'false,false,false,false': [2.332, 17, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.925, 1, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.095, 0, 10], 'false,true': [4.283, 234, 87], 'false,false,true,true': [3.664, 12, 105], 'false,false,true,false': [0.644, 217, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.014, 0, 9], 'true,true,true,false': [0.006, 0, 8], 'true,true,false,true': [0.061, 0, 2], 'true,true,false,false': [0.067, 0, 5], 'true,false': [0.691, 1, 10], 'false,true': [0.874, 1, 13], 'false,false,true': [4.075, 233, 83], 'false,false,false,true': [6.135, 199, 96], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.027755102040817953, 0.21282816000000138], 'false': [0.06632653061224467, 0.20713541429493904], 'false,false': [0.19848294667590088, 0.21492005220214677], 'false,false,false': [0.2173806184851602, 0.19834710743801603], 'false,false,true': [0.18066594306922149, 0.2170644718792873], 'false,true': [-1.4802973661668753e-16, 0.109375], 'false,true,false': [0.22222222222222224, 0.0], 'false,true,true': [nan, -1.4802973661668753e-16]}, {'': [0.027755102040815823, 0.20962650574137903], 'false': [0.060000344970349485, 0.20675610085004756], 'false,false': [0.19700425054665352, 0.21580651946558346], 'false,false,false': [0.21172022684310207, 0.2425683709869209], 'false,false,true': [0.18517821521321867, 0.20944251543209927], 'false,true': [0.12216003539628577, 0.000724370546613784], 'false,true,true': [nan, 0.12216003539628577], 'true': [-1.1102230246251565e-16, 0.04986149584487545]}, {'': [0.027459072240972607, 0.21011245386585503], 'false': [0.20374369176574517, 0.21576447027121326], 'false,false': [0.21563779837206912, 0.2160664819944598], 'false,false,false': [0.2160664819944598, nan], 'false,false,true': [0.16121235751562132, 0.21493968558266055], 'false,true': [0.1942846160581593, 0.21286851289526154], 'false,true,false': [0.04155928147838081, -6.077010240053489e-17], 'false,true,true': [0.1728395061728387, 0.12908504671746038]}, {'': [0.07364165656491638, 0.1814843410406573], 'false': [0.15404471939067718, 0.20779295919783625], 'false,false': [0.0909344499552673, 0.20856303820655414], 'false,false,false': [0.20835679684828562, 0.20999999999999983], 'false,true': [0.04766206054186786, 0.0008780121362987643], 'true': [3.711708116556819e-05, 0.1775147928994082], 'false,true,true': [0.001607182034712995, 0.04644910863349659], 'true,true': [2.3198175728649735e-05, 2.319817572856338e-05]}, {'': [0.02898607647025074, 0.16113582083117167], 'false': [0.10887219113872279, 0.21018881431250963], 'false,false': [0.1855710075957044, 0.2235596404586903], 'false,false,false': [0.22750493994739, 0.22347295130086622], 'false,false,true': [0.022460684966805644, 5.918450921212004e-06], 'false,true': [0.08317694483896003, 0.0002451000596657686], 'false,true,true': [0.09087762229188664, 0.0770277259082076], 'true': [0.0007144304922710647, 0.07790242991583374]}, {'': [0.05181194505754973, 0.1277759480587177], 'false': [0.07035483067416888, 0.18531557391057762], 'false,false': [0.18493480339728502, 0.18780323725348919], 'false,false,false': [0.18780323725348919, nan], 'false,false,true': [0.10417534158996, 0.18597988420012593], 'true': [0.00028147658813881815, 0.07086133822972936], 'true,true': [2.9831627848543442e-05, 0.0], 'true,true,true': [2.9831627848543442e-05, nan]}, {'': [0.10231826802856644, 0.1497125454176575], 'false': [0.16110109577175122, 0.11081134448863751], 'false,true': [0.12317795739246418, 0.16169032980401712], 'false,true,true': [0.07786240025189346, 0.1461471290619726], 'false,false': [0.06984387170782984, 0.1997621878715814], 'false,false,false': [0.1997621878715814, nan], 'true': [0.02773666176213836, 0.009452874634472119], 'true,true': [0.0013038783849155728, 0.019445034368332177]}, {'': [0.0013258152563226802, 0.1139548031966344], 'false': [0.056100434459983646, 0.17102426782312552], 'false,false': [0.1687400460529139, 0.18973594181289197], 'false,false,false': [0.10930066993154096, 0.21760000000000024], 'false,false,true': [0.0206420065752714, 0.17203007318595953], 'true': [0.0008508332788901334, 0.0023188537354013102], 'true,false': [0.0, 0.0025233692593948863], 'true,false,false': [0.0006319000741693698, 7.212006547518968e-10]}, {'': [0.025962206789290676, 0.11557993099419041], 'false': [0.05715495726568244, 0.1715928432727243], 'false,false': [0.1715928432727243, nan], 'false,false,true': [0.11471979078213622, 0.0019137735413718808], 'true': [0.0342072042259348, 0.0009056359803907066], 'true,false': [nan, 0.0009056359803907066]}, {'': [0.014291680111221719, 0.08823740177081044], 'false': [0.05451918306878597, 0.08896553395753135], 'false,false': [0.052540705365783924, 0.1275883563821555], 'false,false,false': [0.1275883563821555, nan], 'true': [0.0009478481868923661, 0.04340543956661769], 'true,true': [0.00016827911029434876, 0.0013875467359120927], 'true,true,false': [0.0018761785985432489, 0.0009104668810062417], 'true,true,true': [2.2577459714031207e-05, 4.277399864072856e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.11167006186007425;  // std dev = 5.184, 142.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=36 */
%   | | | else return 0.17037600933531657;  // std dev = 9.917, 458.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=143 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7397104467804845;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(I, J), interaction(H, J) )
%   | | | then return 0.0717048688636238;  // std dev = 5.170, 154.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=35 */
%   | | | else return 0.1509863972719479;  // std dev = 4.229, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.08961843930231532;  // std dev = 3.250, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.1621369315338468;  // std dev = 8.372, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4576342797844586;  // std dev = 0.311, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.06302462604085472;  // std dev = 3.801, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.1435703433223013;  // std dev = 3.760, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7970906177401651;  // std dev = 0.477, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.18243998524669947;  // std dev = 0.278, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7765616028711778;  // std dev = 0.378, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.18572794483332777;  // std dev = 0.026, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09420087054891672;  // std dev = 7.644, 293.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=83 */
%   | | | else return -0.003782230507618221;  // std dev = 1.455, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3683647377202576;  // std dev = 0.254, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return 0.37772033740879535;  // std dev = 0.299, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.08004062207931732;  // std dev = 1.031, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.6850229110598967;  // std dev = 2.069, 88.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=83 */
%   | | else return -0.16849573069330087;  // std dev = 0.316, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5426971063988959;  // std dev = 0.239, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.051639037509076474;  // std dev = 3.300, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1782925157043923;  // std dev = 6.545, 192.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=75 */
%   | | | else return 0.09124229107205584;  // std dev = 2.662, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.352865774127164;  // std dev = 0.005, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.30132911677007895;  // std dev = 0.261, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.5858057489901233;  // std dev = 1.678, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.5281612606512102;  // std dev = 0.632, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14894846303992643;  // std dev = 0.296, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6427145764867772;  // std dev = 0.780, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.19341225637859216;  // std dev = 0.192, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.09152081773765236;  // std dev = 5.381, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   | | | else return 0.18297917187220203;  // std dev = 3.906, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.18745298684691028;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.25157678013242996;  // std dev = 0.202, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.46576057345312316;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.08874470516115145;  // std dev = 0.605, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.015171245098694745;  // std dev = 0.226, 274.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=58 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(J, K), complex(J, L) )
%   | | | then return 0.02199104950145348;  // std dev = 3.359, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return 0.09998819306127812;  // std dev = 6.197, 201.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=74 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.10634329387088318;  // std dev = 1.490, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.021532925977426055;  // std dev = 2.257, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2518493827467382;  // std dev = 0.213, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4447224183621277;  // std dev = 0.121, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | else return -0.15085988349530985;  // std dev = 0.540, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(A, F), location(F, G) )
%   | then if ( interaction(F, F), recursion_proteinclass(F, B) )
%   | | then return 0.24167228985901962;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, G), interaction(F, F) )
%   | | | then return -0.09249300470346648;  // std dev = 1.265, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.024716248747942513;  // std dev = 3.159, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.45008796119716515;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.13384773556971652;  // std dev = 3.598, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.04946833301328082;  // std dev = 5.629, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16989153222760292;  // std dev = 0.161, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.03292910511818777;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3949213586326679;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.11676907732958916;  // std dev = 0.086, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.010938062708952546;  // std dev = 3.744, 151.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=35 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H) )
%   | | | then return -0.06525453537648257;  // std dev = 1.239, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return 0.05863500172819246;  // std dev = 1.646, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.03411625462909624;  // std dev = 6.845, 312.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=103 */
%   | | | else return 0.0758295759238667;  // std dev = 2.000, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.12839622406833717;  // std dev = 0.190, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.29716748567173723;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.18966993635473384;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10357613223466824;  // std dev = 0.052, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.002595907531467114;  // std dev = 2.223, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | | | else return 0.024874535787137723;  // std dev = 3.234, 190.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=60 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.37697819464464033;  // std dev = 2.136, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.21633200092855004;  // std dev = 5.466, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   | | else return -0.24137237872883566;  // std dev = 0.057, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17769892431441983;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.11821370691723807;  // std dev = 0.222, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( complex(F, E), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.07509464917913823;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.12559616729320847;  // std dev = 0.618, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(H, F), interaction(I, H) )
%   | | | then return -0.019103546813892935;  // std dev = 3.184, 218.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=58 */
%   | | | else return 0.05841101451226953;  // std dev = 1.175, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0866766623997787;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.05621546184945592;  // std dev = 2.765, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.01560674630588437;  // std dev = 6.624, 328.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=102 */


Results
   AUC ROC   = 0.978874
   AUC PR    = 0.358606
   CLL	      = -0.205031
   Precision = 0.341615 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.445344


Total learning time: 33.051 seconds
Total inference time: 5.946 seconds
AUC ROC: 0.978874


Results scoring model
   AUC ROC   = 0.974899
   AUC PR    = 0.311935
   CLL	      = -0.212427
   Precision = 0.320248 at threshold = 0.5
   Recall    = 0.685841
   F1        = 0.43662


Total scoring time: 81.231 seconds
Refined model CLL: -0.212427


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991022
   AUC PR    = 0.364195
   CLL	      = -0.192602
   Precision = 0.337423 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.441767


Total learning time: 128.147 seconds
Total inference time: 2.882 seconds
AUC ROC: 0.991022
Total revision time: 128.147
Best scored revision CLL: -0.20179


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:20:28
{'AUC ROC': 0.991022, 'AUC PR': 0.364195, 'CLL': -0.192602, 'Precision': [0.337423, 0.5], 'Recall': 0.639535, 'F1': 0.441767, 'Learning time': 128.147, 'Inference time': 2.882, 'parameter_0.8': {'AUC ROC': 0.991022, 'AUC PR': 0.364195, 'CLL': -0.192602, 'Precision': [0.337423, 0.5], 'Recall': 0.639535, 'F1': 0.441767, 'Learning time': 3.707, 'Inference time': 2.882}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.834339411289988;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08823743067473362;  // std dev = 6.327, 226.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=52 */
%   | | | else return 0.15576798271855913;  // std dev = 5.926, 168.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=50 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1501599543832561;  // std dev = 8.663, 363.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=106 */
%   | | | else return 0.15639454913460007;  // std dev = 3.454, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6290156214243275;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0.7242537166624228;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5965523559706851;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.5071813065869274;  // std dev = 1.539, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.08450768021412051;  // std dev = 6.297, 219.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=52 */
%   | | | else return 0.12382425216710695;  // std dev = 5.976, 175.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=50 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12458371667410326;  // std dev = 8.701, 371.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=106 */
%   | | | else return 0.19972706253584938;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5467980570986515;  // std dev = 1.001, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5281009313011529;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | | else return -0.03600163280141099;  // std dev = 4.668, 195.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=25 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.769626353395043;  // std dev = 1.427, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return -0.180835107995929;  // std dev = 0.213, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.516254715153911;  // std dev = 1.305, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.10702489055450949;  // std dev = 8.714, 377.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=109 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18683230148129554;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4423328412264315;  // std dev = 0.046, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.30802039836485867;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2830553909562295;  // std dev = 1.294, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4170350982267812;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.709403430781935;  // std dev = 1.811, 105.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=102 */
%   | | else return -0.15981929780271292;  // std dev = 0.321, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5326672410834598;  // std dev = 0.167, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14256522457010318;  // std dev = 8.363, 313.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=106 */
%   | | | else return 0.06185052232346389;  // std dev = 3.490, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3225792984294835;  // std dev = 0.965, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return 0.34242955730629865;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3203874757857518;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5570557382581355;  // std dev = 1.883, 105.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=102 */
%   | | else return -0.13842317143256708;  // std dev = 0.190, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3795693565206316;  // std dev = 7.008, 208.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=131 */
%   | | | else return -0.2200642794089485;  // std dev = 0.062, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.36337021646829326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.05353372529040416;  // std dev = 1.823, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2771078366750451;  // std dev = 0.037, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2867899574865048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19444355987092712;  // std dev = 1.342, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( interaction(A, F) )
%   | then return 0.020379307070212;  // std dev = 5.284, 403.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=106 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.017754402370092976;  // std dev = 1.858, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.07459482196103136;  // std dev = 7.844, 350.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=109 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03995727866854105;  // std dev = 3.257, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.18376585771940507;  // std dev = 1.711, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return 0.2681280854060521;  // std dev = 7.765, 364.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=230 */
%   | else return -0.16090114937892225;  // std dev = 0.811, 423.000 (wgt'ed) examples reached here.  /* #neg=423 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24908858724079533;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23374199521233346;  // std dev = 0.508, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.026424685381459034;  // std dev = 1.390, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then return 0.025741668484532788;  // std dev = 0.711, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.4367482651177923;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1319811018295962;  // std dev = 1.318, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.20075509359125587;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, F) )
%   | | | then return 0.1110467341659358;  // std dev = 0.976, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.007560997395944705;  // std dev = 4.715, 396.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2301376332451204;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.05561082288484481;  // std dev = 7.385, 328.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=109 */
%   | | else if ( location(A, J) )
%   | | | then return 0.13227418876292082;  // std dev = 2.553, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.017291841296533994;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1392922832979348;  // std dev = 0.995, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.042628392437082316;  // std dev = 1.311, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, F) )
%   | then return 0.012098700911268202;  // std dev = 4.647, 380.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=106 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5254166115946663;  // std dev = 3.003, 145.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=136 */
%   | | | else return -0.23188929843930794;  // std dev = 1.396, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.15660704723961275;  // std dev = 0.027, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.15319990417763707;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0.16074847708043816;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13140256529346217;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.05826380418871017;  // std dev = 1.429, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.03779190245041095;  // std dev = 1.781, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else if ( interaction(A, I) )
%   | | then return 0.007363356284812123;  // std dev = 4.586, 384.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=102 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.012314784612722654;  // std dev = 6.605, 395.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=123 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990414
   AUC PR    = 0.325003
   CLL	      = -0.185663
   Precision = 0.292181 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.431611


Total learning time: 9.134 seconds
Total inference time: 4.929 seconds
AUC ROC: 0.990414


Results scoring model
   AUC ROC   = 0.985577
   AUC PR    = 0.220641
   CLL	      = -0.203386
   Precision = 0.181299 at threshold = 0.5
   Recall    = 0.897527
   F1        = 0.301663


Total scoring time: 41.026 seconds
Parameter learned model CLL: -0.203386


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.988, 1, 41], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.926, 1, 6], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 8], 'false,false,true,true': [6.327, 174, 52], 'false,false,true,false': [5.926, 118, 50], 'false,false,false,true': [8.663, 257, 106], 'false,false,false,false': [3.454, 40, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.345, 2, 19], 'true,false': [0.0, 0, 22], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.948, 1, 6], 'false,true,false': [1.539, 3, 11], 'false,false,true,true': [6.297, 167, 52], 'false,false,true,false': [5.976, 125, 50], 'false,false,false,true': [8.701, 265, 106], 'false,false,false,false': [3.294, 30, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.001, 1, 41], 'false,true,true,true': [2.882, 12, 27], 'false,true,true,false': [4.668, 170, 25], 'false,true,false,true': [1.427, 2, 54], 'false,true,false,false': [0.213, 149, 0], 'false,false,true,true': [1.305, 2, 10], 'false,false,true,false': [8.714, 268, 109], 'false,false,false,true': [3.252, 28, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.046, 0, 22], 'true,true,false': [0.92, 1, 7], 'true,false': [1.294, 2, 12], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [1.811, 3, 102], 'false,true,false': [0.321, 285, 0], 'false,false,true': [0.167, 0, 13], 'false,false,false,true': [8.363, 207, 106], 'false,false,false,false': [3.49, 43, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.965, 1, 39], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [1.883, 3, 102], 'false,true,false': [0.19, 297, 0], 'false,false,true,true': [7.008, 77, 131], 'false,false,true,false': [0.062, 174, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.823, 19, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.037, 0, 17], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.342, 2, 22], 'false,true': [5.284, 297, 106], 'false,false,true,true': [1.858, 8, 10], 'false,false,true,false': [7.844, 241, 109], 'false,false,false,true': [3.257, 42, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [1.711, 3, 39], 'true,true,false': [7.765, 134, 230], 'true,false': [0.811, 423, 0], 'false,true,true,true': [0.038, 0, 3], 'false,true,true,false': [0.508, 1, 1], 'false,true,false': [1.39, 15, 5], 'false,false,true': [0.711, 7, 3], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [1.318, 2, 28], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.976, 1, 11], 'true,false,false,false': [0.0, 0, 0], 'false,true': [4.715, 290, 106], 'false,false,true,true': [0.917, 2, 10], 'false,false,true,false': [7.385, 219, 109], 'false,false,false,true': [2.553, 20, 15], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.995, 1, 29], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.311, 2, 12], 'false,true': [4.647, 274, 106], 'false,false,true,true': [3.003, 9, 136], 'false,false,true,false': [1.396, 266, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 19], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.043, 0, 2], 'true,true,false,false': [0.012, 0, 5], 'true,false': [1.429, 2, 14], 'false,true': [1.781, 4, 16], 'false,false,true': [4.586, 282, 102], 'false,false,false,true': [6.605, 272, 123], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.023242630385488926, 0.20626271264793106], 'false': [0.05246913580246885, 0.20000875344855906], 'false,false': [0.1918627122574674, 0.20709183673469622], 'false,false,false': [0.2067405839006157, 0.20929516774392068], 'false,false,true': [0.17714777977915355, 0.20904195011337928], 'false,true': [0.12244897959183662, -1.6148698540002277e-16], 'false,true,true': [nan, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, -2.220446049250313e-16]}, {'': [0.04434829637641861, 0.20337750298605947], 'false': [0.15739187022313536, 0.20014064934366937], 'false,false': [0.1916690747509363, 0.2076576458928756], 'false,false,false': [0.20408163265305804, 0.23087369850611106], 'false,false,true': [0.18106378098871856, 0.20408163265305992], 'false,true': [0.12830398335935328, 0.16927341883237465], 'false,true,true': [nan, 0.12830398335935328], 'true': [0.08616780045351477, 0.0]}, {'': [0.02387954544103958, 0.19523318857247263], 'false': [0.1807372525676368, 0.20815204664728632], 'false,false': [0.2045711011322951, 0.2350617283950622], 'false,false,false': [0.2350617283950622, nan], 'false,false,true': [0.14184796958395252, 0.20140145304358248], 'false,true': [0.17283950617284205, 0.18952190422584225], 'false,true,false': [0.03637536438004168, 0.0003041820551210069], 'false,true,true': [0.21301775147929036, 0.11176857330703434]}, {'': [0.06306512610878112, 0.18869101467203217], 'false': [0.1569127226616217, 0.21896249776327162], 'false,false': [0.0021517881691743503, 0.22104684576550193], 'false,false,false': [0.22344768812626822, 0.20305555555555535], 'false,true': [0.0331269542424894, 0.0003613641727974887], 'true': [0.03182373507618515, 0.11961830345600752], 'false,true,true': [0.0, 0.03125208053866077], 'true,true': [9.627866545969255e-05, 0.1058450298468889]}, {'': [0.022174037098924515, 0.1589678449906891], 'false': [0.10199193966119352, 0.21458936500893247], 'false,false': [0.21773574753831326, 0.14537659489076557], 'false,false,true': [0.23608299063086932, 2.177890944882252e-05], 'false,false,false': [0.0, 0.14445527904717456], 'false,true': [0.03451296053702819, 0.00012210182957393085], 'false,true,true': [0.0, 0.03377225864801369], 'true': [0.023263975488276613, 0.0]}, {'': [0.04364507299630653, 0.1254042491526794], 'false': [0.06929465998733426, 0.17728604796802847], 'false,false': [0.17673504654985714, 0.1798481450835819], 'false,false,false': [0.1798481450835819, nan], 'false,false,true': [0.1918688541254324, 0.17579870655633204], 'true': [7.909049834265465e-05, 0.07504049592990863], 'true,true': [7.852752986329193e-05, 0.0], 'true,true,true': [7.852752986329193e-05, nan]}, {'': [0.12151820862998643, 0.10433226355664911], 'true': [0.1563655716745877, 0.0015556878101137246], 'true,true': [0.06969644018105817, 0.16562961620248814], 'false': [0.09522905817306788, 0.1201366517381798], 'false,false': [0.05052796002156982, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.051981958216847236, 0.09666419508130601], 'false,true,true': [0.0004939223339930446, 0.12907270130899573]}, {'': [0.061427184079213146, 0.11156534149207754], 'false': [0.056145447916265336, 0.16733323684647586], 'false,false': [0.16390784660109511, 0.19316775282061857], 'false,false,false': [0.1862522148966746, 0.2222222222222222], 'false,false,true': [0.07005581732870587, 0.16626641245632678], 'true': [0.05787248062784355, 0.06899946280283652], 'true,false': [0.0, 0.07934971759129274], 'true,false,false': [0.07934971759129274, nan]}, {'': [0.06357430383732733, 0.10933983388577834], 'false': [0.056826102164898626, 0.1576343691902091], 'false,false': [0.1576343691902091, nan], 'false,false,true': [0.06220177324542768, 0.007321894624199703], 'true': [0.03299646426744567, 0.12272739954799802], 'true,false': [nan, 0.12272739954799802]}, {'': [0.04856255859791292, 0.0849451001310152], 'false': [0.158631282280366, 0.08299641332557382], 'false,false': [0.05475868821379867, 0.11043568618335524], 'false,false,false': [0.11043568618335524, nan], 'true': [0.0001923492924712817, 0.12760008352888574], 'true,true': [3.5740884772872406e-05, 0.0004580997138412971], 'true,true,false': [0.0009209149810186883, 2.6921453082062728e-05], 'true,true,true': [3.8397499946689264e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;location(A, E), interaction(C, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(C, D), location(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(D, D), complex(A, E) )
%   | | then return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.12199258330798186;  // std dev = 7.722, 307.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=81 */
%   | | | else return 0.17051336026219824;  // std dev = 9.951, 461.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=144 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6775631735245486;  // std dev = 0.220, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.607901686587676;  // std dev = 0.324, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( enzyme(A, F), complex(E, G) )
%   | | | then return 0.02059342808769588;  // std dev = 1.807, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.15659413269431127;  // std dev = 4.538, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.06344437195917096;  // std dev = 2.328, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.1326571490537616;  // std dev = 4.967, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.27815497878198703;  // std dev = 3.179, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.1600787440303339;  // std dev = 9.873, 451.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=146 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5166670854944247;  // std dev = 0.253, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.026318042588841455;  // std dev = 4.764, 146.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=29 */
%   | | | else return 0.1084254038952016;  // std dev = 3.995, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8072424143796394;  // std dev = 0.241, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.18181861102564406;  // std dev = 0.072, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8053508420003589;  // std dev = 0.185, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1783856677071339;  // std dev = 0.023, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.21733351746270552;  // std dev = 3.520, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.11437294491677356;  // std dev = 7.974, 307.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=93 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.45530867205607223;  // std dev = 0.019, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2044472372109444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.46250167557068317;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5013842704897784;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7175973413414478;  // std dev = 1.468, 104.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=102 */
%   | | else return -0.1679503237374064;  // std dev = 0.500, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6370360738918641;  // std dev = 0.067, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.16864249402704554;  // std dev = 3.335, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.11429203126116794;  // std dev = 8.195, 317.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=101 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.32408348828717304;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.10795629241608398;  // std dev = 0.411, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else return 0.3301099383859223;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5333493224684053;  // std dev = 0.205, 111.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=106 */
%   | | else return -0.14870183465034467;  // std dev = 0.436, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42568037377129586;  // std dev = 6.192, 193.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=131 */
%   | | | else return -0.2158223756802174;  // std dev = 0.319, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5144422058258553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.012078984589963303;  // std dev = 1.747, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2718024630758809;  // std dev = 0.157, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return -0.11275174034892037;  // std dev = 0.830, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return -0.0016061046165856733;  // std dev = 2.246, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | else if ( location(A, G), complex(D, H) )
%   | | | then return 0.05742207458892478;  // std dev = 3.895, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | | else return -7.906920420354244E-4;  // std dev = 2.547, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5716990802198585;  // std dev = 0.840, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.19929020431703062;  // std dev = 0.576, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.09858674502626433;  // std dev = 4.182, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.17084152342071282;  // std dev = 5.130, 134.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=57 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2754798324316453;  // std dev = 2.890, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | | else return 0.12807629254908406;  // std dev = 3.427, 142.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=74 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.25764749088922606;  // std dev = 4.083, 93.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=60 */
%   | | | else return 0.3198439005685206;  // std dev = 4.301, 100.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=71 */
%   | else return -0.15952130096178116;  // std dev = 0.796, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return 0.020489977683578752;  // std dev = 0.304, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6173554069449693;  // std dev = 0.319, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.25251492049554053;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03734409874445363;  // std dev = 0.554, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16167947273939473;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.22122692286887724;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.2892993076708694;  // std dev = 0.974, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2264908864269565;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H), phenotype(A, I) )
%   | | then return -0.2427186777260475;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.24769615795041283;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then return -0.005850103013228741;  // std dev = 0.239, 209.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=45 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.011373799662008808;  // std dev = 2.041, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return 0.027340711599111226;  // std dev = 7.655, 491.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=162 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then if ( complex(A, F), interaction(G, D) )
%   | | | then return 0.27741479472083785;  // std dev = 1.675, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return 0.45347307584282986;  // std dev = 0.996, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.2770887348088389;  // std dev = 1.154, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | | else return 0.19201354563965026;  // std dev = 5.735, 257.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=169 */
%   | else return -0.14528431153408553;  // std dev = 0.922, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.29346613457262893;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(I, K), interaction(L, I) )
%   | | | then return -0.1017360075117905;  // std dev = 1.384, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.006609062523342307;  // std dev = 1.203, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else return 0.1850385563982948;  // std dev = 0.385, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12028790722028053;  // std dev = 0.131, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.07585292072520154;  // std dev = 0.077, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.1662267966082475;  // std dev = 0.891, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, F), enzyme(D, F) )
%   | | | then return -0.08795450054100003;  // std dev = 0.607, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01998872470656303;  // std dev = 2.620, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(G, H), complex(G, I) )
%   | | | then return 0.10231027849211911;  // std dev = 1.403, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return -0.008771102123600133;  // std dev = 2.118, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.03740961141339774;  // std dev = 2.114, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.002121744554397528;  // std dev = 6.532, 514.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=156 */


Results
   AUC ROC   = 0.989895
   AUC PR    = 0.409965
   CLL	      = -0.185192
   Precision = 0.366492 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.505415


Total learning time: 59.381 seconds
Total inference time: 10.928 seconds
AUC ROC: 0.989895


Results scoring model
   AUC ROC   = 0.987147
   AUC PR    = 0.334777
   CLL	      = -0.2011
   Precision = 0.302168 at threshold = 0.5
   Recall    = 0.787986
   F1        = 0.436827


Total scoring time: 117.293 seconds
Refined model CLL: -0.2011


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989895
   AUC PR    = 0.409965
   CLL	      = -0.185192
   Precision = 0.366492 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.505415


Total learning time: 226.834 seconds
Total inference time: 10.928 seconds
AUC ROC: 0.989895
Total revision time: 226.834
Best scored revision CLL: -0.2011


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:24:31
{'AUC ROC': 0.989895, 'AUC PR': 0.409965, 'CLL': -0.185192, 'Precision': [0.366492, 0.5], 'Recall': 0.813953, 'F1': 0.505415, 'Learning time': 226.834, 'Inference time': 10.928, 'parameter_1.0': {'AUC ROC': 0.990414, 'AUC PR': 0.325003, 'CLL': -0.185663, 'Precision': [0.292181, 0.5], 'Recall': 0.825581, 'F1': 0.431611, 'Learning time': 9.134, 'Inference time': 4.929}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.13592671287729013;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.22957750652808379;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2059750220560341;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.153284035890822;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.18895494082120345;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0664757535734894;  // std dev = 3.498, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.16320361520128338;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44425532563517345;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8191781443848125;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0558218556151875;  // std dev = 2.092, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7062440727850323;  // std dev = 0.990, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.20077340778086056;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12589688953129874;  // std dev = 3.383, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13890751402997317;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4447570289458411;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.3052429710541589;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4447570289458411;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3813395430296037;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6229132411472617;  // std dev = 1.339, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.1716476575591585;  // std dev = 0.010, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.47080754101967337;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08816024394408892;  // std dev = 3.381, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.23743698689518175;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.33925079641157524;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.43004002955762305;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2962528195464563;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4752474907908837;  // std dev = 1.476, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.14843599540283323;  // std dev = 0.008, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5486554783435782;  // std dev = 0.339, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.21474146006759007;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.40749593468920664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15972124901811613;  // std dev = 3.517, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2839084389281575;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then return 0.01777772189136656;  // std dev = 2.448, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.20546982100447064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07430928115580379;  // std dev = 3.283, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.0460187568415049;  // std dev = 1.814, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21022749186684606;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3193865237496366;  // std dev = 1.287, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return -0.1753047384642988;  // std dev = 0.430, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.27414683690985214;  // std dev = 0.104, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.281149294773525;  // std dev = 0.724, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.037921333560448925;  // std dev = 3.249, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( interaction(A, H) )
%   | | then return 0.15402766719041672;  // std dev = 1.247, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.25389862086367454;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1960194464775882;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.16670242688159365;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.01057530100090842;  // std dev = 2.215, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14577265543192974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08739318720797672;  // std dev = 3.159, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.19953749420301967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09688235784828461;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16875223500717823;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15498305715728622;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1470048592336132;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.02291688843227467;  // std dev = 2.224, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5503332116679365;  // std dev = 1.846, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.2971153234710491;  // std dev = 0.765, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1682565469187841;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.07840233954009368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17339276771227213;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.07258052274942761;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 8.288070963886496E-4;  // std dev = 2.261, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.0025127636269117143;  // std dev = 3.147, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.987738
   AUC PR    = 0.26771
   CLL	      = -0.206738
   Precision = 0.265403 at threshold = 0.5
   Recall    = 0.643678
   F1        = 0.375839


Total learning time: 1.539 seconds
Total inference time: 5.412 seconds
AUC ROC: 0.987738


Results scoring model
   AUC ROC   = 0.989056
   AUC PR    = 0.27951
   CLL	      = -0.208365
   Precision = 0.264706 at threshold = 0.5
   Recall    = 0.642857
   F1        = 0.375


Total scoring time: 2.633 seconds
Parameter learned model CLL: -0.208365


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.687, 26, 10], 'false,false,true,false': [2.859, 22, 13], 'false,false,false,true': [3.23, 30, 16], 'false,false,false,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [2.622, 22, 10], 'false,false,true,false': [2.882, 23, 13], 'false,false,false,true': [3.498, 52, 16], 'false,false,false,false': [1.826, 10, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 5], 'false,true,true,false': [2.092, 35, 5], 'false,true,false,true': [0.99, 1, 15], 'false,true,false,false': [3.33e-08, 27, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.383, 38, 17], 'false,false,false,true': [1.826, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.866, 3, 1], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.339, 2, 23], 'false,true,false': [0.01, 76, 0], 'false,false,true': [0.075, 0, 2], 'false,false,false,true': [3.381, 40, 16], 'false,false,false,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.05e-08, 0, 6], 'true,false': [0.128, 0, 2], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.476, 2, 23], 'false,true,false': [0.008, 63, 0], 'false,false,true,true': [0.339, 0, 2], 'false,false,true,false': [0.047, 17, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [3.517, 32, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.14, 0, 8], 'false,true': [2.448, 69, 25], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.283, 38, 17], 'false,false,false,true': [1.814, 10, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.045, 0, 4], 'true,true,false': [1.287, 1, 12], 'true,false': [0.43, 48, 0], 'false,true,true,true': [0.104, 0, 2], 'false,true,true,false': [0.724, 1, 6], 'false,true,false': [3.249, 50, 18], 'false,false,true': [1.247, 9, 9], 'false,false,false,true': [1.491, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.105, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 3], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.215, 62, 25], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.159, 34, 17], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.094, 0, 4], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.01, 0, 3], 'false,true': [2.224, 54, 25], 'false,false,true,true': [1.846, 2, 23], 'false,false,true,false': [0.765, 47, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.072, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.075, 0, 5], 'false,true': [0.886, 1, 4], 'false,false,true': [2.261, 59, 23], 'false,false,false,true': [3.147, 51, 21], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.220446049250313e-16, 0.22913580246913692], 'false': [0.0, 0.2230639240137534], 'false,false': [0.2190041658401121, 0.22750000000000006], 'false,false,false': [0.22684310018903542, 0.2295918367346937], 'false,false,true': [0.2006172839506174, 0.23346938775510162], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [1.1102230246251565e-16, 0.21006321491819857], 'false': [0.0, 0.20646733188199345], 'false,false': [0.22356046671324184, 0.18895913532163752], 'false,false,true': [0.21484375000000003, 0.23070987654321], 'false,false,false': [0.1799307958477511, 0.22222222222222218], 'true': [1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.0987654320987654, 0.20296191886730316], 'false': [0.1957186805608134, 0.2107315538567964], 'false,false': [0.2076476683939765, 0.22222222222222204], 'false,false,false': [0.22222222222222204, nan], 'false,false,true': [0.0, 0.20812943604686127], 'false,true': [0.1728395061728397, 0.21501569506331727], 'false,true,false': [0.061287723008091544, 4.11193712824132e-17], 'false,true,true': [0.0, 0.10937500000000014]}, {'': [0.19834710743801648, 0.16789468546185732], 'true': [0.24489795918367346, 0.0], 'true,true': [0.0, 0.18749999999999997], 'false': [0.13514016837528692, 0.21181872459387982], 'false,false': [0.002840245837940847, 0.21433910063911546], 'false,false,false': [0.2040816326530616, 0.2479338842975207], 'false,true': [0.07044357534513661, 1.2305700903649914e-06], 'false,true,true': [0.0, 0.07175625754887804]}, {'': [0.0036061746241707604, 0.1495095337716198], 'false': [0.10311067157595821, 0.20607102857608467], 'false,false': [0.06103768823973456, 0.23450686613351193], 'false,false,false': [0.0, 0.23785826837312987], 'false,true': [0.0828672340198874, 9.649109986434885e-07], 'false,true,true': [0.0, 0.08712334664267107], 'false,false,true': [0.0573322051024005, 0.00012890263493634796], 'true': [1.850371707708594e-17, 0.008242684855247429]}, {'': [0.002457240633569502, 0.12242929382170648], 'false': [0.06373788083969989, 0.1985690463261869], 'false,false': [0.19279693353781477, 0.219378151772297], 'false,false,false': [0.219378151772297, nan], 'false,false,true': [0.0, 0.19599513434345794], 'true': [nan, 0.0024572406335695296]}, {'': [0.07141832831585004, 0.1508443558693645], 'false': [0.15010974088008444, 0.142072632345638], 'false,true': [0.05945406349808419, 0.15528169435206704], 'false,false': [0.08632742259913151, 0.24691358024691368], 'false,false,false': [0.24691358024691368, nan], 'true': [0.09976321189910704, 0.0038495895274731676], 'true,true': [0.0005008977255029426, 0.1275017696513355], 'false,true,true': [0.005362849743056133, 0.07489779946260237]}, {'': [0.0015724434868032502, 0.118564736423048], 'false': [0.05638701092769482, 0.19985724686493933], 'false,false': [0.1919316680214919, 0.23398461626988895], 'false,false,false': [0.0, 0.2479338842975206], 'false,false,true': [0.0, 0.1956294924782422], 'true': [0.002193601714638227, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [0.0, nan]}, {'': [0.0012124234000040618, 0.13696572816653133], 'false': [0.06259368844804614, 0.21822069410370853], 'false,false': [0.21822069410370853, nan], 'false,false,true': [0.13624637153089986, 0.01245981421976352], 'true': [0.002192341974404117, 3.7417752330251575e-05], 'true,false': [0.0, 3.397742591300842e-05], 'true,false,true': [nan, 0.0]}, {'': [0.0023182609341569314, 0.09952653107102515], 'false': [0.15699707073870756, 0.09749827751719756], 'false,false': [0.062345135242219796, 0.13752785508070195], 'false,false,false': [0.13752785508070195, nan], 'true': [0.0035340272957097574, 0.0011271231276446913], 'true,true': [0.002609781415680402, 0.0], 'true,true,true': [nan, 0.002609781415680402], 'true,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E).;true;true
5;false,false;interaction(F, A), interaction(G, F).;true;true
5;false,false,true;recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.11154803459745749;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.27194203854778803;  // std dev = 4.594, 87.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8277627816158981;  // std dev = 0.066, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.15886734160449967;  // std dev = 0.143, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.028461390695434415;  // std dev = 1.829, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.0983159830040917;  // std dev = 3.790, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4580374695326823;  // std dev = 0.323, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7425501194389963;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.020516916505432598;  // std dev = 1.780, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7099109504331318;  // std dev = 0.347, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15609184274071541;  // std dev = 0.147, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11417511634710165;  // std dev = 3.192, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.048984442298995276;  // std dev = 0.840, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.30686110983692677;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4382957913857132;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.47824529009840533;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3804748315861973;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6104798636044417;  // std dev = 0.485, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.14539604386489172;  // std dev = 0.025, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), phenotype(I, J) )
%   | | | then return -0.1098739687249283;  // std dev = 0.550, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.159097584952033;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17307740495341306;  // std dev = 3.267, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return -0.04860634589675512;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35269566567086114;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3376116805717668;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.295668937818348;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4032079211963863;  // std dev = 1.205, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.1333454058685714;  // std dev = 0.028, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5683351274812576;  // std dev = 0.175, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.13154395837379101;  // std dev = 0.067, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4837869688294083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11145442613816926;  // std dev = 3.404, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2745891924687648;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3373453990112767;  // std dev = 0.273, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07997293610518659;  // std dev = 1.067, 60.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.07942831218271613;  // std dev = 0.590, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.12198681976602037;  // std dev = 1.224, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.00214616246600291;  // std dev = 0.438, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.0991383476608795;  // std dev = 2.998, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.37964386393976834;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.005753777592812186;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.31375622127691155;  // std dev = 0.105, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.1195282429528156;  // std dev = 0.029, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.24169006880771193;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, H), interaction(H, E) )
%   | | | then return -0.1429841975194585;  // std dev = 0.816, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.0600465653337228;  // std dev = 0.736, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.44014221628508043;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.2997467885413721;  // std dev = 0.279, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.280651525369353;  // std dev = 2.292, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.10249358971801117;  // std dev = 1.600, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.01804383732678801;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.16069645609400038;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.052464464956865825;  // std dev = 0.178, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.06633141077554637;  // std dev = 0.552, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.02091307826375297;  // std dev = 1.187, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.24836482617531064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.011148513591675633;  // std dev = 2.927, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.09661275659288893;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.057558311477435724;  // std dev = 1.601, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return -0.013814522613209057;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17550780534568594;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.2329115708615448;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.09842721457662358;  // std dev = 0.058, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.006416976075566287;  // std dev = 1.599, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return -0.1155508465681846;  // std dev = 1.938, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.10999269513736967;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2775346578256024;  // std dev = 1.118, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.013184957402447926;  // std dev = 1.034, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17292190419473819;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18870075166941494;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.25599525321321803;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.08401738462961852;  // std dev = 0.062, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.1231387243337573;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.23575796572316543;  // std dev = 0.344, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1005789981023724;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.07644807981738466;  // std dev = 1.549, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.023817019529678657;  // std dev = 3.078, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */


Results
   AUC ROC   = 0.961337
   AUC PR    = 0.301685
   CLL	      = -0.209572
   Precision = 0.319767 at threshold = 0.5
   Recall    = 0.632184
   F1        = 0.42471


Total learning time: 3.763 seconds
Total inference time: 8.89 seconds
AUC ROC: 0.961337


Results scoring model
   AUC ROC   = 0.976571
   AUC PR    = 0.339948
   CLL	      = -0.207045
   Precision = 0.29771 at threshold = 0.5
   Recall    = 0.696429
   F1        = 0.417112


Total scoring time: 3.319 seconds
Refined model CLL: -0.207045


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961337
   AUC PR    = 0.301685
   CLL	      = -0.209572
   Precision = 0.319767 at threshold = 0.5
   Recall    = 0.632184
   F1        = 0.42471


Total learning time: 11.254 seconds
Total inference time: 8.89 seconds
AUC ROC: 0.961337
Total revision time: 11.254
Best scored revision CLL: -0.207045


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:24:58
{'AUC ROC': 0.961337, 'AUC PR': 0.301685, 'CLL': -0.209572, 'Precision': [0.319767, 0.5], 'Recall': 0.632184, 'F1': 0.42471, 'Learning time': 11.254, 'Inference time': 8.89, 'parameter_0.2': {'AUC ROC': 0.987738, 'AUC PR': 0.26771, 'CLL': -0.206738, 'Precision': [0.265403, 0.5], 'Recall': 0.643678, 'F1': 0.375839, 'Learning time': 1.539, 'Inference time': 5.412}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10233498161113995;  // std dev = 3.984, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return 0.1739384087837219;  // std dev = 6.078, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15602127552504427;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7302664973147039;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.05315031886968609;  // std dev = 4.078, 101.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | | else return 0.14597422928485385;  // std dev = 6.103, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14918670743456558;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.05802642175919408;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4377193779227552;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6563301357614797;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.004378806677426082;  // std dev = 3.250, 81.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7061335146471146;  // std dev = 2.339, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return -0.1854142241520546;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.25077225005693843;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16108235051066988;  // std dev = 2.976, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10080991429250286;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27970498012894823;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4463716467956149;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4463716467956149;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3005261500287495;  // std dev = 0.798, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6449111002618786;  // std dev = 2.269, 81.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | | else return -0.1598320826711842;  // std dev = 0.015, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5194723698402768;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12442524610406837;  // std dev = 3.052, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.0875563790308097;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.23398735613610266;  // std dev = 1.347, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2293883223098465;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.502275709847219;  // std dev = 2.269, 81.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=75 */
%   | | else return -0.1422560127958683;  // std dev = 0.324, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5218617330369625;  // std dev = 1.766, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return -0.22732237998202934;  // std dev = 0.054, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4368389776634129;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.31831234534217046;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2899347996959938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19702918610753795;  // std dev = 0.919, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.029014901821031235;  // std dev = 4.592, 273.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=80 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.44927235950851413;  // std dev = 0.277, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04522212951358212;  // std dev = 2.783, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08115428284583448;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2687999201041629;  // std dev = 0.221, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.1865218688963114;  // std dev = 4.267, 155.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=90 */
%   | else return -0.1372753772248328;  // std dev = 0.325, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14825824667545287;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02438347093310953;  // std dev = 0.630, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11519715191556419;  // std dev = 0.883, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( location(A, E), interaction(A, C) )
%   | | then return 0.1893198846840669;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.053681914656295814;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.008597308932853272;  // std dev = 4.241, 290.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3162540415253673;  // std dev = 0.246, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.010144726851446665;  // std dev = 2.707, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( location(A, J) )
%   | | | then return 0.2722493456775931;  // std dev = 0.580, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19657807574008673;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19424182973984555;  // std dev = 0.043, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.01764445963189613;  // std dev = 4.180, 271.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=80 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5505584537648018;  // std dev = 0.610, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1790437143520875;  // std dev = 0.011, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.15604343287964345;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, C), location(C, G) )
%   | | | then return 0.06504576027119979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20611243740069685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14399121197023368;  // std dev = 0.628, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.036602168503766026;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then return 0.0010392737205031863;  // std dev = 4.287, 273.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=75 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.03278643734126439;  // std dev = 2.343, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980181
   AUC PR    = 0.200281
   CLL	      = -0.181621
   Precision = 0.15103 at threshold = 0.5
   Recall    = 0.758621
   F1        = 0.251908


Total learning time: 4.139 seconds
Total inference time: 8.984 seconds
AUC ROC: 0.980181


Results scoring model
   AUC ROC   = 0.98474
   AUC PR    = 0.206325
   CLL	      = -0.183515
   Precision = 0.175 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.291667


Total scoring time: 14.779 seconds
Parameter learned model CLL: -0.183515


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 15], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.913, 1, 5], 'false,false,true,true': [3.984, 65, 21], 'false,false,true,false': [6.078, 117, 54], 'false,false,false,true': [3.135, 33, 14], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.98e-08, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.026, 0, 3], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [4.078, 80, 21], 'false,false,true,false': [6.103, 120, 54], 'false,false,false,true': [3.106, 31, 14], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.328, 2, 15], 'false,true,true,true': [1.279, 2, 9], 'false,true,true,false': [3.25, 68, 13], 'false,true,false,true': [2.339, 6, 58], 'false,true,false,false': [0.0, 117, 0], 'false,false,true,true': [0.888, 2, 2], 'false,false,true,false': [2.976, 26, 14], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.913, 1, 5], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.798, 1, 5], 'false,true,true,false': [2.269, 6, 75], 'false,true,false': [0.015, 202, 0], 'false,false,true': [0.041, 0, 2], 'false,false,false,true': [3.052, 28, 14], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.347, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.8, 1, 5], 'false,true,true,false': [2.269, 6, 75], 'false,true,false': [0.324, 166, 0], 'false,false,true,true': [1.766, 4, 15], 'false,false,true,false': [0.054, 22, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.032, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.919, 1, 9], 'false,true': [4.592, 193, 80], 'false,false,true,true': [0.277, 0, 2], 'false,false,true,false': [2.783, 28, 14], 'false,false,false,true': [0.803, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true': [0.221, 0, 16], 'true,true,false': [4.267, 65, 90], 'true,false': [0.325, 166, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false': [1.229, 5, 4], 'false,false,true': [0.63, 5, 2], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'location(A, E), interaction(A, C)', 'true,false,false': 'location(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.883, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.916, 1, 5], 'true,false,false,false': [0.0, 0, 0], 'false,true': [4.241, 210, 80], 'false,false,true,true': [0.246, 0, 2], 'false,false,true,false': [2.707, 30, 14], 'false,false,false,true': [0.58, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.05, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.043, 0, 8], 'false,true': [4.18, 191, 80], 'false,false,true,true': [0.61, 0, 17], 'false,false,true,false': [0.011, 31, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(D, C), location(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.028, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.628, 1, 8], 'false,true': [0.927, 1, 6], 'false,false,true': [4.287, 198, 75], 'false,false,false,true': [2.343, 40, 15], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, 0.21161348650268794], 'false': [0.10937499999999978, 0.2056430351216396], 'false,false': [0.20666474889854528, 0.20061728395061676], 'false,false,true': [0.18455922120064933, 0.21606648199446085], 'false,false,false': [0.20914440923494743, 0.12244897959183677], 'false,true': [0.0, 0.13888888888888898], 'false,true,false': [nan, 0.1388888888888887], 'false,true,true': [0.0, 0.0]}, {'': [1.7763568394002506e-16, 0.20370843349293022], 'false': [0.0002139624845941387, 0.19981885129529342], 'false,false': [0.19791152676652488, 0.20963680668048615], 'false,false,false': [0.2143209876543209, 0.15999999999999995], 'false,false,true': [0.1646897363003627, 0.21403091557669632], 'false,true': [0.00023298137211350914, 0.0], 'false,true,true': [nan, 0.00023298137211350914], 'true': [0.0, 8.881784197001253e-17]}, {'': [0.10380622837370226, 0.20409648003081582], 'false': [0.2013363705574296, 0.2174674154617788], 'false,false': [0.2198015487783695, 0.1875], 'false,false,true': [0.19705339165901942, 0.22134506648297542], 'false,true': [0.1785433821356543, 0.2118945370834126], 'false,true,false': [0.08546140699689636, -1.4423410234446479e-16], 'false,false,false': [0.1875, nan], 'false,true,true': [0.14876033057851226, 0.13039343567544728]}, {'': [0.05859374999999978, 0.16045863778727038], 'false': [0.15065606221873978, 0.21612450050965157], 'false,false': [0.000856617984594743, 0.2188754094396252], 'false,false,false': [0.22174534251029518, 0.1875], 'false,true': [0.07412119102739932, 1.1514834364647928e-06], 'false,true,true': [0.10611743795816914, 0.06357171976925528], 'true': [0.10937499999999997, -2.7755575615628914e-17], 'true,true': [0.13888888888888887, 0.0]}, {'': [0.10676559765352094, 0.13005090431298805], 'false': [0.11326678252460208, 0.22255515519114538], 'false,false': [0.21572892380494116, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222], 'false,false,true': [0.16419475346750936, 0.00013180803912838832], 'false,true': [0.07129127820724344, 0.0006342198004799957], 'true': [0.10676559765352094, nan], 'false,true,true': [0.1065675424442799, 0.06354253012971536]}, {'': [0.05611740951828143, 0.09349940588356681], 'false': [0.07725258973851859, 0.18678225233730172], 'false,false': [0.18483141533500527, 0.21510565192297784], 'false,false,false': [0.21510565192297784, nan], 'false,false,true': [0.03836312689124405, 0.1843853417207729], 'true': [0.0002796128808683629, 0.08452581214498989], 'true,true': [0.00020132127422523016, 0.0], 'true,true,true': [0.00020132127422523016, nan]}, {'': [0.08224062005804818, 0.12304335295174199], 'false': [0.16795533789405404, 0.056667832274942535], 'false,true': [nan, 0.16795533789405404], 'true': [0.10732994506960564, 0.0006356636884099594], 'true,true': [0.003061456641794899, 0.11745972373839614], 'false,false': [0.056667832274942535, nan]}, {'': [0.09663224121433628, 0.0770171038573332], 'true': [0.07799646573700343, 0.12221028146953374], 'true,false': [0.0, 0.13995042472684824], 'true,false,false': [0.13995042472684824, nan], 'false': [0.062008534079929505, 0.167148027823064], 'false,false': [0.1645357337984914, 0.16791071426232845], 'false,false,false': [0.16791071426232845, nan], 'false,false,true': [0.03035670162374572, 0.16656074104030194]}, {'': [0.00029235570877790274, 0.07473490242637251], 'false': [0.06445863294239013, 0.12951762041784448], 'false,false': [0.12951762041784448, nan], 'false,false,true': [0.021900351391875707, 3.7816572895222853e-06], 'true': [0.0003625616418273525, 0.00022837842951860948], 'true,false': [nan, 0.00022837842951860948]}, {'': [0.02391638092935516, 0.07400409751696273], 'false': [0.12286356682971243, 0.07292583594761336], 'false,false': [0.06731849129530866, 0.0998063362764673], 'false,false,false': [0.0998063362764673, nan], 'true': [0.001421697960311663, 0.04388901467866985], 'true,true': [0.00013258275542274434, 0.004974951849089446], 'true,true,false': [0.0, 0.0], 'true,true,true': [0.00013258275542274434, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;location(A, E), interaction(A, C).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,false;interaction(D, C), location(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.138522766875212;  // std dev = 4.646, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return 0.2757313526819291;  // std dev = 4.704, 91.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7410409151791921;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.00356720907874844;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.751824666663311;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7553539836582289;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.15486872229929116;  // std dev = 5.341, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | | | else return 0.3128229934213671;  // std dev = 3.642, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4764318320950695;  // std dev = 0.303, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.09835439761638604;  // std dev = 3.387, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return -0.07955518791677849;  // std dev = 1.486, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6394126016512227;  // std dev = 2.251, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | | | else return -0.16804997339181027;  // std dev = 0.558, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6129307702535642;  // std dev = 0.812, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17576124285738012;  // std dev = 0.286, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, L) )
%   | | | then return 0.16984834245969596;  // std dev = 1.866, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.43722130755532435;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4776652439096737;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.20297113883993845;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4578263244742414;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), complex(A, J) )
%   | | | then return 0.37316595491442506;  // std dev = 0.963, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.6677575813529595;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | else return -0.1571338708816233;  // std dev = 0.667, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5320421153448652;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.07187496412761618;  // std dev = 1.471, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.18013761425048813;  // std dev = 2.067, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3386035792634822;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4032614562910976;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), complex(A, H) )
%   | | | then return 0.27024879837400984;  // std dev = 1.044, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.4908908373112241;  // std dev = 2.052, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | | else return -0.133233498785722;  // std dev = 0.433, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.35845373914895134;  // std dev = 1.667, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.202366227093053;  // std dev = 0.279, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.6443022814360784;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1133175179028329;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.25913215440245396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.2939608595476431;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.2475505515025061;  // std dev = 1.024, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3155656245182331;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.00995653305055538;  // std dev = 0.261, 176.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=45 */
%   | else if ( location(A, K) )
%   | | then return 0.07091341578338411;  // std dev = 0.290, 118.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=48 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.17884984360815856;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.003989229577275261;  // std dev = 1.163, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(A, G), interaction(H, F) )
%   | | | then return 0.11469700733704924;  // std dev = 1.591, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | else return 0.28668992892247;  // std dev = 2.138, 64.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=49 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.04681463779888878;  // std dev = 1.713, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.20213381923588025;  // std dev = 1.793, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | else if ( complex(A, K) )
%   | | then return -0.09309177189432966;  // std dev = 0.064, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.1589104658101987;  // std dev = 0.031, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(L, A), phenotype(L, M) )
%   | then if ( interaction(L, N), enzyme(N, P) )
%   | | then return 0.21227665109660326;  // std dev = 0.660, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.02237988682343385;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.11496411076550131;  // std dev = 0.414, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then return -0.07050552756004203;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2390164375932972;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20839166987657798;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(G, I) )
%   | | | then return 0.36540274113625987;  // std dev = 0.821, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.21052362013904297;  // std dev = 1.735, 45.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=35 */
%   | | else return -0.14597384770607194;  // std dev = 0.110, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return -0.04771775719868952;  // std dev = 0.177, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.1281332953268197;  // std dev = 1.854, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return 0.05008729112874613;  // std dev = 1.879, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19295063304008017;  // std dev = 0.037, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2735997740365754;  // std dev = 0.892, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.11561488442701684;  // std dev = 0.292, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return -0.03711644207920688;  // std dev = 1.985, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.011333725005043021;  // std dev = 1.988, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.05191544006173647;  // std dev = 1.259, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.3171380430338301;  // std dev = 0.921, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.0934606708779492;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.2033284188528126;  // std dev = 0.197, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17594219832738472;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.03808088144385334;  // std dev = 0.461, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18633491501166427;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.24489259598800586;  // std dev = 0.112, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.1005850782316187;  // std dev = 0.034, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return -0.0023694485409380293;  // std dev = 1.853, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.05874724635679448;  // std dev = 0.768, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.0650037731586757;  // std dev = 2.359, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.005743970009124234;  // std dev = 1.650, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */


Results
   AUC ROC   = 0.993369
   AUC PR    = 0.451322
   CLL	      = -0.150044
   Precision = 0.23796 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.381818


Total learning time: 20.184 seconds
Total inference time: 11.3 seconds
AUC ROC: 0.993369


Results scoring model
   AUC ROC   = 0.992885
   AUC PR    = 0.387116
   CLL	      = -0.15974
   Precision = 0.201818 at threshold = 0.5
   Recall    = 0.991071
   F1        = 0.335347


Total scoring time: 29.884 seconds
Refined model CLL: -0.15974


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993369
   AUC PR    = 0.451322
   CLL	      = -0.150044
   Precision = 0.23796 at threshold = 0.5
   Recall    = 0.965517
   F1        = 0.381818


Total learning time: 68.986 seconds
Total inference time: 11.3 seconds
AUC ROC: 0.993369
Total revision time: 68.986
Best scored revision CLL: -0.15974


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:26:27
{'AUC ROC': 0.993369, 'AUC PR': 0.451322, 'CLL': -0.150044, 'Precision': [0.23796, 0.5], 'Recall': 0.965517, 'F1': 0.381818, 'Learning time': 68.986, 'Inference time': 11.3, 'parameter_0.4': {'AUC ROC': 0.980181, 'AUC PR': 0.200281, 'CLL': -0.181621, 'Precision': [0.15103, 0.5], 'Recall': 0.758621, 'F1': 0.251908, 'Learning time': 4.139, 'Inference time': 8.984}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.07554023944733745;  // std dev = 4.845, 138.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=30 */
%   | | | else return 0.18271033860828312;  // std dev = 4.999, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1537464193762419;  // std dev = 5.754, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | | else return 0.1914822684328457;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.7194734122109544;  // std dev = 4.21e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42405077188448576;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7336899220885286;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10732307987962254;  // std dev = 4.716, 116.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | | | else return 0.09683234925199018;  // std dev = 5.224, 141.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11006036863717188;  // std dev = 5.851, 173.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=47 */
%   | | | else return 0.3196919777180355;  // std dev = 3.040, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5636334285287891;  // std dev = 0.056, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7232887533289437;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.035054446149540563;  // std dev = 4.199, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.804296767258218;  // std dev = 0.383, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.17939418774154392;  // std dev = 2.98e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.47477195311389053;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10987430573354574;  // std dev = 5.866, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1669270929229664;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4284741268143624;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4229157009167217;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4179748778965966;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4093606840408846;  // std dev = 0.133, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6740841345677986;  // std dev = 1.957, 71.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | else return -0.16615818285161146;  // std dev = 0.273, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5206100841133391;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07229247906201731;  // std dev = 5.868, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */
%   | | | else return 0.1634316377864616;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.32452741613699493;  // std dev = 0.047, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.33652453599093957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.31727270293714094;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.514570054825647;  // std dev = 2.239, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else return -0.14146843854456145;  // std dev = 0.093, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41239850971946407;  // std dev = 4.770, 106.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=70 */
%   | | | else return -0.21990111397741421;  // std dev = 0.287, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.05610940139920329;  // std dev = 1.222, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.26855677062244526;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2527954958493768;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15364924641357552;  // std dev = 1.343, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, F) )
%   | then return 0.021841032929317758;  // std dev = 4.368, 262.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=70 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.21571429867636355;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06229015110603803;  // std dev = 5.323, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09922106854321575;  // std dev = 3.000, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20090826591553135;  // std dev = 0.988, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.26929411078209;  // std dev = 5.714, 213.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=138 */
%   | else return -0.15843216565451163;  // std dev = 0.561, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23703676418456576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06366615714357847;  // std dev = 0.838, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.045811518708936017;  // std dev = 0.577, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.21409478299338458;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.07613936480961161;  // std dev = 1.339, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.17690455274648575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.1816978288766134;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.010255653170597148;  // std dev = 3.796, 263.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=70 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1772140379954501;  // std dev = 0.544, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.056116807541594725;  // std dev = 4.912, 163.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=51 */
%   | | else if ( location(A, J) )
%   | | | then return 0.018377558424074705;  // std dev = 2.711, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.06846719815156752;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11477037803372499;  // std dev = 0.987, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19410630699331743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0525221868307392;  // std dev = 0.951, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, G) )
%   | then return -8.318097092419448E-5;  // std dev = 3.864, 273.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=70 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5157586228265428;  // std dev = 2.155, 77.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=72 */
%   | | | else return -0.23236367067761346;  // std dev = 1.148, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.15794710248759358;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.16840957246932897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0.13866695585947147;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17184767215087882;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.07723095640732337;  // std dev = 0.946, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, I) )
%   | | then return -0.004313955985150457;  // std dev = 4.005, 262.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=67 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.010733827774392317;  // std dev = 4.920, 227.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98592
   AUC PR    = 0.240489
   CLL	      = -0.193598
   Precision = 0.222222 at threshold = 0.5
   Recall    = 0.528736
   F1        = 0.312925


Total learning time: 5.235 seconds
Total inference time: 8.091 seconds
AUC ROC: 0.98592


Results scoring model
   AUC ROC   = 0.987468
   AUC PR    = 0.241942
   CLL	      = -0.19862
   Precision = 0.230233 at threshold = 0.5
   Recall    = 0.585799
   F1        = 0.330551


Total scoring time: 22.924 seconds
Parameter learned model CLL: -0.19862


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.58e-07, 0, 27], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.816, 2, 1], 'false,true,false,false': [0.0, 0, 8], 'false,false,true,true': [4.845, 108, 30], 'false,false,true,false': [4.999, 77, 37], 'false,false,false,true': [5.754, 112, 47], 'false,false,false,false': [3.464, 36, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.953, 1, 10], 'true,false': [4.21e-08, 0, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.724, 1, 2], 'false,true,false': [0.106, 0, 8], 'false,false,true,true': [4.716, 86, 30], 'false,false,true,false': [5.224, 104, 37], 'false,false,false,true': [5.851, 126, 47], 'false,false,false,false': [3.04, 19, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.056, 0, 27], 'false,true,true,true': [0.943, 1, 8], 'false,true,true,false': [4.199, 87, 22], 'false,true,false,true': [0.383, 0, 40], 'false,true,false,false': [2.98e-08, 69, 0], 'false,false,true,true': [0.77, 1, 3], 'false,false,true,false': [5.866, 122, 51], 'false,false,false,true': [3.333, 29, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.038, 0, 12], 'true,true,false': [0.026, 0, 6], 'true,false': [0.021, 0, 9], 'false,true,true,true': [0.133, 0, 3], 'false,true,true,false': [1.957, 4, 67], 'false,true,false': [0.273, 181, 0], 'false,false,true': [0.016, 0, 7], 'false,false,false,true': [5.868, 129, 47], 'false,false,false,false': [3.261, 26, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.047, 0, 26], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.121, 0, 3], 'false,true,true,false': [2.239, 5, 67], 'false,true,false': [0.093, 172, 0], 'false,false,true,true': [4.77, 36, 70], 'false,false,true,false': [0.287, 98, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.222, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.001, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.343, 2, 18], 'false,true': [4.368, 192, 70], 'false,false,true,true': [0.723, 1, 3], 'false,false,true,false': [5.323, 124, 51], 'false,false,false,true': [3.0, 27, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.988, 1, 23], 'true,true,false': [5.714, 75, 138], 'true,false': [0.561, 213, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.838, 6, 3], 'false,false,true': [0.577, 4, 2], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [1.339, 2, 16], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.011, 0, 10], 'true,false,false,false': [0.0, 0, 0], 'false,true': [3.796, 193, 70], 'false,false,true,true': [0.544, 1, 3], 'false,false,true,false': [4.912, 112, 51], 'false,false,false,true': [2.711, 27, 16], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.987, 1, 18], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.951, 1, 8], 'false,true': [3.864, 203, 70], 'false,false,true,true': [2.155, 5, 72], 'false,false,true,false': [1.148, 143, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.013, 0, 9], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.027, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.134, 0, 12], 'false,true': [0.946, 1, 13], 'false,false,true': [4.005, 195, 67], 'false,false,false,true': [4.92, 162, 65], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [9.210739167260557e-16, 0.20907225013075278], 'false': [0.1388888888888887, 0.20328824141519417], 'false,false': [0.19518455530360335, 0.21203905750622698], 'false,false,false': [0.20821961156599914, 0.22222222222222168], 'false,false,true': [0.17013232514177806, 0.21922129886118916], 'false,true': [0.0, 0.14876033057851235], 'false,true,false': [0.22222222222222224, -2.220446049250313e-16], 'false,true,true': [nan, 0.0]}, {'': [0.0344387755102038, 0.2056972471377949], 'false': [0.06765001919007906, 0.20255163939525428], 'false,false': [0.19275939144893875, 0.21339978624836145], 'false,false,false': [0.1978682882822679, 0.24981738495251948], 'false,false,true': [0.19173602853745458, 0.19355163221165828], 'false,true': [0.17454907283492413, 0.0014147640716941634], 'false,true,true': [nan, 0.17454907283492413], 'true': [0.08264462809917364, 1.0449157878825003e-16]}, {'': [0.00011618336032428702, 0.2091466148794263], 'false': [0.20971266795726706, 0.20856348054265497], 'false,true': [0.19029413241340778, 0.22613686769877897], 'false,true,false': [0.003675214465999854, 1.2872151010146743e-17], 'false,false': [0.20069700678214877, 0.23630602082390192], 'false,false,false': [0.23630602082390192, nan], 'false,false,true': [0.14806185578674208, 0.1989049583220938], 'false,true,true': [0.09876543209876518, 0.16172444503395142]}, {'': [0.00011527762388209418, 0.18046923659801944], 'false': [0.15789882111565734, 0.2053719477160936], 'false,false': [3.8845717689227144e-05, 0.2062011305534421], 'false,false,false': [0.19565625964368308, 0.24173553719008273], 'false,true': [0.054700018310376, 0.00041035671146571784], 'false,true,true': [0.005860630259947393, 0.05392263394171532], 'true': [0.0001235843938382312, 4.882346423230722e-05], 'true,true': [0.00012015149400942023, 0.00010985279452283929]}, {'': [8.604213180711066e-05, 0.1564752755601844], 'false': [0.10967155602773528, 0.20916825996391333], 'false,false': [0.21173726380822153, 0.13576912580988615], 'false,false,true': [0.21465432016528724, 0.0008414024727530172], 'false,false,false': [nan, 0.13576912580988615], 'false,true': [0.06853347025706492, 5.076363566314246e-05], 'false,true,true': [0.004882804517651847, 0.06962853152705176], 'true': [8.402067105818854e-05, 0.0]}, {'': [0.0649517963238856, 0.11807036469806434], 'false': [0.0728290673990976, 0.1696058124703181], 'false,false': [0.16172482960991083, 0.20005768206509703], 'false,false,false': [0.20005768206509703, nan], 'false,false,true': [0.13068510023357194, 0.161908298656777], 'true': [2.473403941661968e-05, 0.09019521311296422], 'true,true': [2.2381851347286208e-07, 0.0], 'true,true,true': [2.2381851347286208e-07, nan]}, {'': [0.11978389544513529, 0.10672984499603129], 'true': [0.14229666076889855, 0.0014757236443805229], 'true,true': [0.04063657268865276, 0.15327773642601047], 'false': [0.07286819212144376, 0.14007559906613803], 'false,false': [0.05546496229493825, 0.25], 'false,false,false': [0.25, nan], 'false,true': [0.0, 0.07795892117413923], 'false,true,true': [0.0, nan]}, {'': [0.06443545846395159, 0.09979305780122485], 'false': [0.05480100406146813, 0.15391154554082556], 'false,false': [0.14662042291788566, 0.1783039752603687], 'false,false,false': [0.17086866764445885, 0.23999999999999994], 'false,false,true': [0.07407186119551662, 0.14804950927241922], 'true': [0.0996133062101063, 1.2599977611922734e-05], 'true,false': [0.0, 1.177129391313203e-05], 'true,false,false': [1.177129391313203e-05, nan]}, {'': [0.06597382126363907, 0.09941691160779277], 'false': [0.054690480633496553, 0.15443440525995739], 'false,false': [0.15443440525995739, nan], 'false,false,true': [0.06033168798530808, 0.009214661063805194], 'true': [0.05131089973267759, 0.09231820284893708], 'true,false': [0.0, 0.10057117463504227], 'true,false,true': [nan, 0.0]}, {'': [0.0008865002571898326, 0.08199892726483274], 'false': [0.06387016579633277, 0.08231909844388509], 'false,false': [0.061214355578743364, 0.10665579421002928], 'false,false,false': [0.10665579421002928, nan], 'true': [0.0001420546370930383, 0.001499043703011978], 'true,true': [2.6182140810737664e-05, 0.00037711522029522035], 'true,true,false': [0.00037711522029522035, nan], 'true,true,true': [1.8144939755613636e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;location(A, E), interaction(C, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3196873966379726;  // std dev = 4.403, 78.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=36 */
%   | | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1690297641150577;  // std dev = 6.430, 193.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=60 */
%   | | | else return 0.24524570929306072;  // std dev = 4.697, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.22101477207259188;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.6837551285608833;  // std dev = 0.215, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6930398259522135;  // std dev = 1.611, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.03604000266476145;  // std dev = 7.241, 347.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=67 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.6255993387430037;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21091572609736003;  // std dev = 5.047, 110.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5079705525413819;  // std dev = 0.246, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.048147295846365554;  // std dev = 2.451, 68.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | | else return 0.1189366758483091;  // std dev = 3.749, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7348320347736214;  // std dev = 1.282, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.17469747736943855;  // std dev = 0.384, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7918474723498073;  // std dev = 0.320, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.16582051153785804;  // std dev = 0.189, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.00866458469059352;  // std dev = 1.823, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.15798738414457766;  // std dev = 4.939, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.44728574985994346;  // std dev = 0.041, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( complex(A, E) )
%   | | then return 0.4571179905078708;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18785436058092073;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.5337190369104395;  // std dev = 2.055, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.6590975245297341;  // std dev = 0.672, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16524110204882728;  // std dev = 0.046, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5065490292070123;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10845830876874474;  // std dev = 6.051, 206.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=63 */
%   | | | else return -0.12492981485923585;  // std dev = 1.249, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.34977263320300356;  // std dev = 0.042, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.32456334570237666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.3909711367005362;  // std dev = 1.302, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.5360503709503176;  // std dev = 1.200, 55.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | else return -0.13964129332640796;  // std dev = 0.035, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38269912845975756;  // std dev = 4.468, 106.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=70 */
%   | | | else return -0.18274275034813744;  // std dev = 0.505, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.17337809614066593;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.2101468537999336;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then return 0.25355166870508317;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2853888953658572;  // std dev = 0.041, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.1291269266994563;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.21341542359247123;  // std dev = 0.359, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1115547609169116;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.10527749831021936;  // std dev = 2.034, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.010864840532813445;  // std dev = 3.281, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.03571665885333911;  // std dev = 4.176, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | | else return 0.16540219348756022;  // std dev = 3.792, 89.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return 0.04844350298968996;  // std dev = 2.784, 83.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=39 */
%   | | | else return 0.20924353400636597;  // std dev = 1.570, 39.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=28 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.10346007044761962;  // std dev = 1.213, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.283928761737964;  // std dev = 4.569, 126.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=85 */
%   | else return -0.144242861057499;  // std dev = 0.041, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then if ( recursion_proteinclass(L, B) )
%   | | then return 0.2070449050675509;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.016451237066528786;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, M) )
%   | | then return 0.16031388259592735;  // std dev = 0.392, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.039390690141648456;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.20625991793590082;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.197985619625;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.40270463772537357;  // std dev = 0.735, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.2371418320977286;  // std dev = 0.674, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return -0.09872227092043354;  // std dev = 0.016, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.009678389442387508;  // std dev = 1.333, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.08035531412714245;  // std dev = 1.356, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.029156744167381912;  // std dev = 2.455, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | | else return 0.0835463156656265;  // std dev = 4.541, 162.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=65 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11902903437229906;  // std dev = 0.226, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.163477802471109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.19022159846822223;  // std dev = 1.310, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.18499386679979482;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then return -0.03194547713243633;  // std dev = 0.267, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.21270182008477515;  // std dev = 4.307, 166.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=119 */
%   | | | else return -0.13365769994457458;  // std dev = 0.661, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09184497444958675;  // std dev = 0.700, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.11659685160767994;  // std dev = 1.154, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16141599497446366;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.09008283239617897;  // std dev = 0.172, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.2535643217071924;  // std dev = 0.858, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.33996371466730063;  // std dev = 0.551, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.14365785047073387;  // std dev = 0.090, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.00551398017097421;  // std dev = 0.900, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return -0.07208557888496453;  // std dev = 1.235, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return -0.053227358949115115;  // std dev = 1.534, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return 0.021403596111916147;  // std dev = 4.568, 174.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=64 */


Results
   AUC ROC   = 0.987489
   AUC PR    = 0.416083
   CLL	      = -0.173177
   Precision = 0.244526 at threshold = 0.5
   Recall    = 0.770115
   F1        = 0.371191


Total learning time: 31.51 seconds
Total inference time: 11.29 seconds
AUC ROC: 0.987489


Results scoring model
   AUC ROC   = 0.988321
   AUC PR    = 0.376847
   CLL	      = -0.187507
   Precision = 0.243816 at threshold = 0.5
   Recall    = 0.816568
   F1        = 0.37551


Total scoring time: 53.302 seconds
Refined model CLL: -0.187507


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987489
   AUC PR    = 0.416083
   CLL	      = -0.173177
   Precision = 0.244526 at threshold = 0.5
   Recall    = 0.770115
   F1        = 0.371191


Total learning time: 112.971 seconds
Total inference time: 11.29 seconds
AUC ROC: 0.987489
Total revision time: 112.971
Best scored revision CLL: -0.187507


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:28:40
{'AUC ROC': 0.987489, 'AUC PR': 0.416083, 'CLL': -0.173177, 'Precision': [0.244526, 0.5], 'Recall': 0.770115, 'F1': 0.371191, 'Learning time': 112.971, 'Inference time': 11.29, 'parameter_0.6': {'AUC ROC': 0.98592, 'AUC PR': 0.240489, 'CLL': -0.193598, 'Precision': [0.222222, 0.5], 'Recall': 0.528736, 'F1': 0.312925, 'Learning time': 5.235, 'Inference time': 8.091}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.06245001036832839;  // std dev = 5.499, 186.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=38 */
%   | | | else return 0.1624967611864677;  // std dev = 5.405, 138.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=42 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17466269656740363;  // std dev = 6.867, 218.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=69 */
%   | | | else return 0.2140811384893424;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7289832469462056;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.6456499136128723;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3265124676841914;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.66691629654139;  // std dev = 0.951, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.06751845831860961;  // std dev = 5.454, 175.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=38 */
%   | | | else return 0.15298439002022038;  // std dev = 5.361, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1656734351524819;  // std dev = 6.799, 209.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=69 */
%   | | | else return 0.14347397630715408;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5759551941575769;  // std dev = 0.064, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7082466917189668;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.0018333796435398462;  // std dev = 4.657, 157.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=26 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7297989595105387;  // std dev = 1.780, 50.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=47 */
%   | | | else return -0.18474584390578389;  // std dev = 8.43e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3502387830853432;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.12590838436130763;  // std dev = 6.969, 229.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=73 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.17380508679513246;  // std dev = 3.667, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4268917741703591;  // std dev = 0.040, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2935269119144231;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3159476512144539;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4401236397424242;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7023562648287074;  // std dev = 1.780, 83.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=80 */
%   | | else return -0.15973589032171176;  // std dev = 0.166, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5702991596918803;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09914473555165053;  // std dev = 6.908, 224.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=69 */
%   | | | else return 0.148930867548183;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3467348669594651;  // std dev = 0.098, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.34512462166762947;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3386235604757872;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5444375206088895;  // std dev = 1.958, 84.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=80 */
%   | | else return -0.13991947708345556;  // std dev = 0.186, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.666617609546682;  // std dev = 1.485, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.22728528562112443;  // std dev = 0.048, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4476140162004062;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09505685208095245;  // std dev = 6.660, 203.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=66 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2517887398038034;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2901166631509542;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.24431689840511023;  // std dev = 0.997, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(A, F) )
%   | then return 0.025695881626534654;  // std dev = 4.746, 316.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=86 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.007524815412334086;  // std dev = 1.344, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.05337897607024751;  // std dev = 6.647, 239.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=73 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09429012701669891;  // std dev = 3.571, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19627132629117564;  // std dev = 0.809, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0.4733456870230247;  // std dev = 1.724, 67.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | else return -0.16034513988401297;  // std dev = 0.897, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21394860360369986;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2642335515200925;  // std dev = 1.322, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | else return -0.008879610958190298;  // std dev = 6.301, 289.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=68 */
%   | else if ( interaction(A, H) )
%   | | then return 0.077504031612012;  // std dev = 2.395, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1001274352929166;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18392737269633422;  // std dev = 0.089, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.2008154604895256;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.06579076165890878;  // std dev = 0.842, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2340121624584399;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.003137030503500626;  // std dev = 4.285, 338.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.004509430046614045;  // std dev = 1.142, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.03651256406990194;  // std dev = 6.406, 241.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=73 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.054427205699022665;  // std dev = 0.914, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.10549542390550784;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.055080093733172714;  // std dev = 1.556, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1676092723791559;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.009799916473023237;  // std dev = 1.456, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(A, G) )
%   | then return 1.5070658473364366E-4;  // std dev = 4.266, 346.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=86 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5602014640977063;  // std dev = 2.825, 107.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=99 */
%   | | | else return -0.24831184582910415;  // std dev = 0.696, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14964768075625773;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14753979221863817;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return -0.15932341337983444;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1301279605818388;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1443135068495214;  // std dev = 0.746, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.16298550200191778;  // std dev = 0.105, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then return -4.886019938983601E-4;  // std dev = 4.240, 325.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=80 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022213809177396994;  // std dev = 5.999, 291.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=90 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989635
   AUC PR    = 0.358374
   CLL	      = -0.195556
   Precision = 0.343023 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.455598


Total learning time: 2.954 seconds
Total inference time: 5.591 seconds
AUC ROC: 0.989635


Results scoring model
   AUC ROC   = 0.989993
   AUC PR    = 0.326239
   CLL	      = -0.197574
   Precision = 0.288802 at threshold = 0.5
   Recall    = 0.653333
   F1        = 0.400545


Total scoring time: 7.885 seconds
Parameter learned model CLL: -0.197574


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.38, 2, 40], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.279, 2, 9], 'false,false,true,true': [5.499, 148, 38], 'false,false,true,false': [5.405, 96, 42], 'false,false,false,true': [6.867, 149, 69], 'false,false,false,false': [3.678, 38, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [7.3e-08, 0, 18], 'true,false': [1.354, 2, 22], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.109, 2, 3], 'false,true,false': [0.951, 1, 12], 'false,false,true,true': [5.454, 137, 38], 'false,false,true,false': [5.361, 91, 42], 'false,false,false,true': [6.799, 140, 69], 'false,false,false,false': [3.797, 46, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.064, 0, 40], 'false,true,true,true': [1.317, 2, 13], 'false,true,true,false': [4.657, 131, 26], 'false,true,false,true': [1.78, 3, 47], 'false,true,false,false': [8.43e-08, 100, 0], 'false,false,true,true': [1.194, 3, 5], 'false,false,true,false': [6.969, 156, 73], 'false,false,false,true': [3.667, 36, 21], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.04, 0, 20], 'true,true,false': [0.92, 1, 6], 'true,false': [1.321, 2, 14], 'false,true,true,true': [0.194, 0, 6], 'false,true,true,false': [1.78, 3, 80], 'false,true,false': [0.166, 207, 0], 'false,false,true': [0.101, 0, 9], 'false,false,false,true': [6.908, 155, 69], 'false,false,false,false': [3.642, 36, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.098, 0, 23], 'true,false': [0.083, 0, 17], 'false,true,true,true': [0.186, 0, 6], 'false,true,true,false': [1.958, 4, 80], 'false,true,false': [0.186, 232, 0], 'false,false,true,true': [1.485, 1, 29], 'false,false,true,false': [0.048, 65, 0], 'false,false,false,true': [0.025, 0, 4], 'false,false,false,false': [6.66, 137, 66]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.997, 1, 30], 'false,true': [4.746, 230, 86], 'false,false,true,true': [1.344, 4, 5], 'false,false,true,false': [6.647, 166, 73], 'false,false,false,true': [3.571, 38, 21], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.809, 1, 22], 'true,true,false': [1.724, 1, 66], 'true,false': [0.897, 165, 0], 'false,true,true,true': [0.029, 0, 9], 'false,true,true,false': [1.322, 5, 15], 'false,true,false': [6.301, 221, 68], 'false,false,true': [2.395, 47, 27], 'false,false,false,true': [3.333, 29, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.089, 0, 24], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.842, 1, 8], 'true,false,false,false': [0.018, 0, 6], 'false,true': [4.285, 252, 86], 'false,false,true,true': [1.142, 4, 5], 'false,false,true,false': [6.406, 168, 73], 'false,false,false,true': [0.914, 5, 3], 'false,false,false,false': [3.261, 26, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [1.556, 3, 26], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.456, 3, 13], 'false,true': [4.266, 260, 86], 'false,false,true,true': [2.825, 8, 99], 'false,false,true,false': [0.696, 198, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.031, 0, 10], 'true,true,true,false': [0.021, 0, 9], 'true,true,false,true': [0.814, 1, 2], 'true,true,false,false': [0.027, 0, 2], 'true,false': [0.746, 2, 15], 'false,true': [0.105, 0, 17], 'false,false,true': [4.24, 245, 80], 'false,false,false,true': [5.999, 201, 90], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.045351473922903854, 0.2097406813921106], 'false': [0.10380622837370206, 0.2028510441554725], 'false,false': [0.18594726413656512, 0.21934340340679642], 'false,false,false': [0.21633280026933777, 0.2292444699798909], 'false,false,true': [0.16256214591282347, 0.2117202268431013], 'false,true': [1.4802973661668753e-16, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.14876033057851218], 'false,true,true': [nan, 1.4802973661668753e-16]}, {'': [0.04535147392290208, 0.209487187539252], 'false': [0.14180180018734306, 0.20574419635636162], 'false,false': [0.19167985612567184, 0.21979351235475186], 'false,false,false': [0.2211487832238271, 0.21519269325016666], 'false,false,true': [0.16999183673469453, 0.21606648199445957], 'false,true': [0.24582943758641088, 0.06960373522384802], 'false,true,true': [nan, 0.24582943758641088], 'true': [2.9605947323337506e-16, 0.07638888888888899]}, {'': [0.00010261850179267284, 0.2043323426963142], 'false': [0.1911834054545444, 0.2173491153330976], 'false,false': [0.21257359401703607, 0.2358944310990168], 'false,false,false': [0.2358944310990168, nan], 'false,false,true': [0.17809853433344558, 0.21207925817869513], 'false,true': [0.17590805585986494, 0.20698409567169263], 'false,true,false': [0.06335748871121283, 7.105427357601002e-17], 'false,true,true': [0.11555555555555562, 0.13815505254094568]}, {'': [0.06380748890765955, 0.18955784524769143], 'false': [0.16214937155445253, 0.2170969759810791], 'false,false': [0.0011366400941906403, 0.21741678880080226], 'false,false,false': [0.21302828188141346, 0.2326869806094189], 'false,true': [0.04033162049743885, 0.00013306605671977513], 'true': [0.03480923462661459, 0.10908004011009022], 'false,true,true': [0.006281523148678765, 0.0381571665992052], 'true,true': [7.837395549585846e-05, 0.1208653121640113]}, {'': [0.00041171504513399794, 0.1556734768751322], 'false': [0.1034281494254807, 0.21056953344278478], 'false,false': [0.19589251586153603, 0.21661432588529797], 'false,false,false': [0.00015522872347570327, 0.21847766399302426], 'false,false,true': [0.07352169361193184, 3.586658737721503e-05], 'false,true': [0.045612361758484515, 0.00014940173668910356], 'false,true,true': [0.005751330399272503, 0.04563561920509769], 'true': [0.00041716840920883504, 0.0004028460526344875]}, {'': [0.024327422157532703, 0.13090009210829542], 'false': [0.07128347325642441, 0.19167111798922887], 'false,false': [0.18550902726165713, 0.2161084979188009], 'false,false,false': [0.2161084979188009, nan], 'false,false,true': [0.20077505188705616, 0.18485785186223289], 'true': [0.000235044753296787, 0.03204326859236097], 'true,true': [-2.7755575615628914e-17, 0.0], 'true,true,true': [-2.7755575615628914e-17, nan]}, {'': [0.09489351246281945, 0.13786092787929996], 'false': [0.135892233384779, 0.13931218849377677], 'false,false': [0.07750919219758146, 0.23630602082390226], 'false,false,false': [0.23630602082390226, nan], 'false,true': [0.06081704759915142, 0.13737858142418072], 'true': [0.054913750622138206, 0.004875761803005337], 'false,true,true': [9.057475969783309e-05, 0.08735922989819556], 'true,true': [0.028467577707529636, 0.044373236130334025]}, {'': [0.020633845861728332, 0.11352509028363318], 'false': [0.054311473066229334, 0.1788231941986148], 'false,false': [0.1693963563659172, 0.22093377694964383], 'false,false,false': [0.1043173577796435, 0.24173553719008248], 'false,false,true': [0.14501845189228127, 0.17026986332013797], 'true': [0.0003292135017464772, 0.04822294579586082], 'true,false': [0.0, 0.05411288549487503], 'true,false,false': [0.07883271905408444, 5.407134388700959e-05]}, {'': [0.09956942754540894, 0.11101501793760539], 'false': [0.05259353851985036, 0.1766320939530743], 'false,false': [0.1766320939530743, nan], 'false,false,true': [0.07458557839348291, 0.002449808388066538], 'true': [0.08353457413535682, 0.1261060812646566], 'true,false': [0.0, 0.1325227823547854], 'true,false,true': [nan, 0.0]}, {'': [0.03612137795928464, 0.08601546112920798], 'false': [0.000644802260131524, 0.08774484938025243], 'false,false': [0.05532827571377549, 0.12367700307592008], 'false,false,false': [0.12367700307592008, nan], 'true': [0.037972677111894775, 0.032761555896592735], 'true,true': [7.527147965816363e-05, 0.15274039971458037], 'true,true,false': [0.2208101696593441, 0.00036648606445443405], 'true,true,true': [9.486940531934218e-05, 5.115748349756835e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995118;  // std dev = 1.46e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995127;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.0248156017661786;  // std dev = 4.472, 144.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=24 */
%   | | | else return 0.13612727444969416;  // std dev = 7.456, 277.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=77 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6799272074455524;  // std dev = 0.228, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.5994734122109543;  // std dev = 0.325, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1460180454853693;  // std dev = 0.010, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( location(F, G), location(E, G) )
%   | | | then return 0.11172362315684033;  // std dev = 5.835, 196.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=54 */
%   | | | else return -0.03233198062676421;  // std dev = 1.760, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7687926141436033;  // std dev = 0.306, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.13692577266037986;  // std dev = 0.075, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.07319532342766898;  // std dev = 2.176, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.17537259640921513;  // std dev = 7.572, 286.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=98 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5838676357214425;  // std dev = 0.022, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.11709446886648325;  // std dev = 2.949, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.029745667846130842;  // std dev = 4.006, 109.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7636961779283102;  // std dev = 0.539, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.15723202692841448;  // std dev = 0.251, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.462703503345644;  // std dev = 4.910, 136.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=95 */
%   | | | else return -0.16071031574638875;  // std dev = 0.359, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.02057962118113831;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.08858031616909652;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43974190895834775;  // std dev = 0.028, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.3706235881445231;  // std dev = 0.254, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5819298002625768;  // std dev = 0.560, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.6944770677522999;  // std dev = 1.374, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | else return -0.14850426104590048;  // std dev = 0.023, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.3238313813258888;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5753650780660496;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06322738485520807;  // std dev = 5.858, 246.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=69 */
%   | | | else return 0.15350591024108282;  // std dev = 3.021, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3337852156214316;  // std dev = 0.013, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.0017664427082540346;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3416391959936231;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5146594775599623;  // std dev = 0.144, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else return -0.13082630336408313;  // std dev = 0.021, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5176660135682023;  // std dev = 0.665, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1438873591901557;  // std dev = 0.287, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4637514151923023;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06135098628934148;  // std dev = 5.949, 227.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=66 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.2564136491480385;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.39152671452691284;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2682843455199746;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2859545932892549;  // std dev = 0.044, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.271015342176192;  // std dev = 0.146, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.1285789751287505;  // std dev = 3.150, 111.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=54 */
%   | | | else return -0.11397416469857265;  // std dev = 0.335, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.004834542546588543;  // std dev = 2.768, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | | | else return 0.057131424420499476;  // std dev = 6.159, 313.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=99 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.02189260145326455;  // std dev = 0.235, 269.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=88 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.24894151819346266;  // std dev = 0.177, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.25441431655090785;  // std dev = 1.432, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( interaction(A, F), location(F, G) )
%   | | | then return -0.0555822444501004;  // std dev = 2.052, 93.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | else return 0.07978413198742895;  // std dev = 4.901, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3998951699394156;  // std dev = 1.588, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return -0.17447347893751544;  // std dev = 0.169, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.12324627652659645;  // std dev = 0.774, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.031422990037124066;  // std dev = 2.305, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, E), phenotype(A, F) )
%   | | | then return 0.09037238460320295;  // std dev = 0.947, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.21986730976477978;  // std dev = 0.192, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.09071862894372866;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.21257442301700064;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.09810680896162945;  // std dev = 0.011, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4010461148070045;  // std dev = 0.801, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.009424328299771162;  // std dev = 3.344, 264.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=62 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.04987483406059431;  // std dev = 5.105, 214.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=69 */
%   | | | else return 0.13618826039931323;  // std dev = 2.931, 66.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.18190178838859566;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.06380950429556367;  // std dev = 0.454, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.17449963053833195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.19774596394921315;  // std dev = 1.064, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1953975434165941;  // std dev = 0.152, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, H) )
%   | then return -0.0021181722819539057;  // std dev = 0.216, 337.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=86 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.09271906495713059;  // std dev = 1.935, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.23316445852903556;  // std dev = 4.744, 126.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=79 */
%   | | else return -0.16558262013718722;  // std dev = 0.050, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16804187177457486;  // std dev = 0.038, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.19949602355540916;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.009542376543438036;  // std dev = 0.392, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23353978175215162;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.1772795400534768;  // std dev = 0.034, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return 0.020678105704138174;  // std dev = 3.907, 184.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=54 */
%   | | | else return -0.028533452598209875;  // std dev = 5.129, 333.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=81 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.15892760811688683;  // std dev = 1.478, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.04090435264719201;  // std dev = 2.168, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */


Results
   AUC ROC   = 0.988047
   AUC PR    = 0.320867
   CLL	      = -0.185143
   Precision = 0.347826 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.472325


Total learning time: 27.163 seconds
Total inference time: 18.688 seconds
AUC ROC: 0.988047


Results scoring model
   AUC ROC   = 0.986802
   AUC PR    = 0.313112
   CLL	      = -0.190718
   Precision = 0.307971 at threshold = 0.5
   Recall    = 0.755556
   F1        = 0.43758


Total scoring time: 56.119 seconds
Refined model CLL: -0.190718


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988047
   AUC PR    = 0.320867
   CLL	      = -0.185143
   Precision = 0.347826 at threshold = 0.5
   Recall    = 0.735632
   F1        = 0.472325


Total learning time: 94.12100000000001 seconds
Total inference time: 18.688 seconds
AUC ROC: 0.988047
Total revision time: 94.12100000000001
Best scored revision CLL: -0.190718


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:30:39
{'AUC ROC': 0.988047, 'AUC PR': 0.320867, 'CLL': -0.185143, 'Precision': [0.347826, 0.5], 'Recall': 0.735632, 'F1': 0.472325, 'Learning time': 94.12100000000001, 'Inference time': 18.688, 'parameter_0.8': {'AUC ROC': 0.989635, 'AUC PR': 0.358374, 'CLL': -0.195556, 'Precision': [0.343023, 0.5], 'Recall': 0.678161, 'F1': 0.455598, 'Learning time': 2.954, 'Inference time': 5.591}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09133279160175456;  // std dev = 6.315, 223.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=52 */
%   | | | else return 0.16074940791274941;  // std dev = 9.448, 423.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=128 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328443;  // std dev = 4.619, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.6453993381368803;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7256044627444209;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7439976143448207;  // std dev = 4.21e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0651507300801136;  // std dev = 6.375, 238.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=52 */
%   | | | else return 0.1175204669167766;  // std dev = 9.599, 457.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=128 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16310239844804397;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | | else return 0.07501284738195663;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5235626788237274;  // std dev = 1.387, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.71820396646708;  // std dev = 1.353, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.016749717994514135;  // std dev = 5.436, 204.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=37 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7618608958601363;  // std dev = 2.474, 144.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=138 */
%   | | | else return -0.17920689095593145;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5200121271490994;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08784514774990783;  // std dev = 4.773, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16269696857122085;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.38739224370129777;  // std dev = 0.965, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.21517708852331488;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.24346505647468075;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4128199430499862;  // std dev = 0.238, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6339661303216778;  // std dev = 3.882, 196.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=180 */
%   | | else return -0.15856839780756513;  // std dev = 0.298, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3435412030311346;  // std dev = 1.004, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12622212808821265;  // std dev = 4.604, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | | | else return 0.20509169541903835;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3726779113606119;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3268346588220604;  // std dev = 0.960, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.20555591166772264;  // std dev = 1.229, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.474960246787526;  // std dev = 4.338, 200.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=180 */
%   | | else return -0.13848777124191414;  // std dev = 0.098, 503.000 (wgt'ed) examples reached here.  /* #neg=503 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5302443134218265;  // std dev = 1.740, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.2454713700433635;  // std dev = 0.433, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.401058638149504;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.060065931598057266;  // std dev = 4.034, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.27076498544381;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.300849913745146;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.24029173633316983;  // std dev = 1.361, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   else if ( interaction(F, A) )
%   | then return 0.026280091537351224;  // std dev = 7.241, 686.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=194 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.241309427310745;  // std dev = 1.002, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06129551874076731;  // std dev = 4.434, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1996145863192904;  // std dev = 1.443, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2595486017417259;  // std dev = 0.201, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4548052027578949;  // std dev = 1.372, 89.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=87 */
%   | else return -0.14103928520486217;  // std dev = 0.686, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2308416872683141;  // std dev = 0.165, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.2562664960329997;  // std dev = 2.015, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | else return -0.01742046406094704;  // std dev = 4.579, 216.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=47 */
%   | else if ( interaction(H, A) )
%   | | then return 0.037735868856966684;  // std dev = 4.685, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.055182916777984405;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.10663093441726264;  // std dev = 1.575, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.1972371647383825;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1825052832292092;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1558171616035082;  // std dev = 0.935, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then return 0.015657636524923718;  // std dev = 6.617, 666.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=194 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05783660439311623;  // std dev = 1.142, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.039674549382997866;  // std dev = 4.265, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.507167300354061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13920679122572033;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15204022794018354;  // std dev = 0.929, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19320002890583932;  // std dev = 0.139, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.004697192179765291;  // std dev = 6.832, 682.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=194 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5765535053876831;  // std dev = 1.390, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.22978554223426312;  // std dev = 0.348, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.14391324176368223;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1601496257830619;  // std dev = 0.178, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1563404334988174;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13986553856530484;  // std dev = 1.094, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.021196720713465213;  // std dev = 1.957, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(I, A) )
%   | | then return 0.011538857915243563;  // std dev = 6.451, 645.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=180 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.014694865542460807;  // std dev = 3.701, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.984718
   AUC PR    = 0.309168
   CLL	      = -0.183492
   Precision = 0.151163 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.251451


Total learning time: 3.915 seconds
Total inference time: 7.446 seconds
AUC ROC: 0.984718


Results scoring model
   AUC ROC   = 0.987591
   AUC PR    = 0.298974
   CLL	      = -0.178824
   Precision = 0.173344 at threshold = 0.5
   Recall    = 0.797872
   F1        = 0.28481


Total scoring time: 11.098 seconds
Parameter learned model CLL: -0.178824


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [2.06e-07, 0, 46], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.323, 2, 14], 'false,false,true,true': [6.315, 171, 52], 'false,false,true,false': [9.448, 295, 128], 'false,false,false,true': [4.619, 64, 32], 'false,false,false,false': [1.69, 10, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [7.3e-08, 0, 21], 'true,false': [1.361, 2, 25], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.03, 0, 8], 'false,true,false': [4.21e-08, 0, 12], 'false,false,true,true': [6.375, 186, 52], 'false,false,true,false': [9.599, 329, 128], 'false,false,false,true': [4.631, 65, 32], 'false,false,false,false': [1.749, 13, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.387, 2, 46], 'false,true,true,true': [1.353, 2, 19], 'false,true,true,false': [5.436, 167, 37], 'false,true,false,true': [2.474, 6, 138], 'false,true,false,false': [0.0, 279, 0], 'false,false,true,true': [0.824, 1, 5], 'false,false,true,false': [4.773, 83, 33], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.965, 1, 23], 'true,true,false': [1.252, 2, 7], 'true,false': [1.789, 4, 16], 'false,true,true,true': [0.238, 0, 14], 'false,true,true,false': [3.882, 16, 180], 'false,true,false': [0.298, 436, 0], 'false,false,true': [1.004, 1, 6], 'false,false,false,true': [4.604, 64, 32], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.077, 0, 14], 'true,false': [0.96, 1, 32], 'false,true,true,true': [1.229, 2, 14], 'false,true,true,false': [4.338, 20, 180], 'false,true,false': [0.098, 503, 0], 'false,false,true,true': [1.74, 4, 14], 'false,false,true,false': [0.433, 31, 0], 'false,false,false,true': [0.133, 0, 5], 'false,false,false,false': [4.034, 57, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.038, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.361, 2, 39], 'false,true': [7.241, 492, 194], 'false,false,true,true': [1.002, 1, 5], 'false,false,true,false': [4.434, 74, 33], 'false,false,false,true': [1.443, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.201, 0, 12], 'true,true,false': [1.372, 2, 87], 'true,false': [0.686, 187, 0], 'false,true,true,true': [0.165, 0, 21], 'false,true,true,false': [2.015, 5, 26], 'false,true,false': [4.579, 169, 47], 'false,false,true': [4.685, 187, 86], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [1.575, 3, 28], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.027, 0, 6], 'true,false,false,false': [0.935, 1, 10], 'false,true': [6.617, 472, 194], 'false,false,true,true': [1.142, 2, 5], 'false,false,true,false': [4.265, 77, 33], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.929, 1, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.139, 0, 16], 'false,true': [6.832, 488, 194], 'false,false,true,true': [1.39, 1, 42], 'false,false,true,false': [0.348, 80, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.024, 0, 7], 'true,true,true,false': [0.178, 0, 16], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.096, 0, 5], 'true,false': [1.094, 2, 18], 'false,true': [1.957, 5, 20], 'false,false,true': [6.451, 465, 180], 'false,false,false,true': [3.701, 87, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [9.267948727305654e-16, 0.2111722840084988], 'false': [0.11342155009451807, 0.20408163265306298], 'false,false': [0.20099876352692223, 0.22016528925619977], 'false,false,false': [0.22222222222222363, 0.20408163265306106], 'false,false,true': [0.1788091455689848, 0.21103342666644445], 'false,true': [-1.4802973661668753e-16, 0.14532871972318334], 'false,true,false': [0.0, 0.10937499999999967], 'false,true,true': [0.0, 0.0]}, {'': [0.039930555555554914, 0.20003316962318152], 'false': [0.0001263016629637903, 0.1954012348675445], 'false,false': [0.19167864931362708, 0.21591549891657125], 'false,false,false': [0.221064937825487, 0.17993079584775076], 'false,false,true': [0.17075065320245505, 0.20163850437397146], 'true': [2.5376526277146434e-16, 0.06858710562414264], 'false,true': [0.00011276934193193977, 1.4802973661668753e-16], 'false,true,true': [nan, 0.00011276934193193977]}, {'': [0.040076090610929205, 0.20297343479643995], 'false': [0.20292626096796326, 0.20316332096243234], 'false,false': [0.20103141694843682, 0.22222222222222235], 'false,false,false': [0.22222222222222235, nan], 'false,true': [0.18112260637277408, 0.21331781493795912], 'false,true,false': [0.04249627370217082, -3.9474596431116675e-16], 'false,false,true': [0.11315615337941846, 0.19639136306677615], 'false,true,true': [0.08722302691822004, 0.14486518703323287]}, {'': [0.11340334467322005, 0.1670740675671014], 'false': [0.15727225761975794, 0.22077311833727198], 'false,false': [0.14409375266340965, 0.22310815056867228], 'false,false,false': [0.22076175191476896, 0.23999999999999994], 'false,true': [0.07507529011672075, 0.00020386675555918103], 'true': [0.08161535178183055, 0.16000000000000006], 'true,true': [0.038784658392008585, 0.17426103621070604], 'false,true,true': [0.004029710268089388, 0.07688959864863398]}, {'': [0.02017752624413203, 0.11919671221976545], 'false': [0.10381350740993694, 0.20119171344657635], 'false,false': [0.20546791430864642, 0.19812269488984033], 'false,false,true': [0.16821256831743636, 0.006054606030851269], 'false,false,false': [0.0035501032412096566, 0.20344371563721655], 'false,true': [0.09910356322687569, 1.9223539791258145e-05], 'false,true,true': [0.09446379691665463, 0.09409854484418403], 'true': [0.0004190347871726928, 0.027933906915665406]}, {'': [0.038854730148189465, 0.09380664619523219], 'false': [0.07642322869723976, 0.1890703886692858], 'false,false': [0.184481920788492, 0.2313248731203062], 'false,false,false': [0.2313248731203062, nan], 'false,false,true': [0.1674108992999459, 0.1837185544744028], 'true': [0.0003856740702821794, 0.04520002035246986], 'true,true': [0.0002813428667103324, 0.0], 'true,true,true': [0.0002813428667103324, nan]}, {'': [0.08438333322013766, 0.09440885663064255], 'false': [0.10436940626768641, 0.08493248290405764], 'false,true': [0.07879276980818199, 0.09706307141007216], 'false,false': [0.08039673266486214, 0.22222222222222227], 'false,false,false': [0.22222222222222227, nan], 'true': [0.023029805269643305, 0.0025199980835585484], 'false,true,true': [0.001295581693960337, 0.13102981038781025], 'true,true': [0.0033711341907562884, 0.021150692973600865]}, {'': [0.06812165983164997, 0.08266804912264931], 'false': [0.06573662132857118, 0.17188536546442362], 'false,false': [0.1666383881780036, 0.22909453544111913], 'false,false,false': [0.0, 0.24489795918367344], 'false,false,true': [0.18637028180066292, 0.16536298699203267], 'true': [0.08001790345183614, 0.04633071339185164], 'true,false': [0.0, 0.05167359159452141], 'true,false,false': [0.00012231571966420107, 0.07954108493177005]}, {'': [0.01915992819310366, 0.08340985664332504], 'false': [0.06843744402559583, 0.16452350313326974], 'false,false': [0.16452350313326974, nan], 'false,false,true': [0.04491988935151686, 0.0015108165332033741], 'true': [0.02785266716203852, 0.001200342064590132], 'true,false': [nan, 0.001200342064590132]}, {'': [0.025905104086139108, 0.07461861639121882], 'false': [0.15317011500778396, 0.07202676645998425], 'false,false': [0.0645280709697524, 0.11134082886434213], 'false,false,false': [0.11134082886434213, nan], 'true': [0.001526950845816313, 0.05989356187860244], 'true,true': [0.001459715908580116, 0.0018351783712596327], 'true,true,false': [nan, 0.001835178371259638], 'true,true,true': [8.005431502893947e-05, 0.0019830856313164426]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;enzyme(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, J), interaction(I, A) )
%   | | | then return -0.07208362304002264;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=3 */
%   | | | else return 0.11157359263375859;  // std dev = 5.256, 146.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14862512557569876;  // std dev = 9.304, 420.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=122 */
%   | | | else return 0.21341209299424801;  // std dev = 5.900, 152.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6796693692440762;  // std dev = 0.196, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.690574262574699;  // std dev = 0.183, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.31947341221095443;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.145245637339025;  // std dev = 0.014, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.08847196932037514;  // std dev = 7.048, 268.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=66 */
%   | | | else return 0.14538024650946793;  // std dev = 10.181, 486.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=150 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.49163080746613014;  // std dev = 0.269, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12900027265928718;  // std dev = 0.068, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.11102702370805377;  // std dev = 6.208, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7597648399246686;  // std dev = 2.495, 144.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=138 */
%   | | | else return -0.17853049276495395;  // std dev = 0.165, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7974330018156685;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.18580730827460323;  // std dev = 0.034, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1464719869960879;  // std dev = 2.667, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.21841108431847578;  // std dev = 3.366, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.44173565798795345;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.5580082512767061;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.40265979164223703;  // std dev = 0.210, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.7708736916628256;  // std dev = 1.024, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return 0.5938158217253954;  // std dev = 3.694, 176.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=161 */
%   | | else return -0.163029035624779;  // std dev = 0.024, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( complex(J, L), interaction(A, K) )
%   | | | then return 0.19357660586059167;  // std dev = 2.557, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.046518085135406326;  // std dev = 3.925, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | else return 0.4489167798900667;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.24576516051507777;  // std dev = 0.252, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.2961590109941421;  // std dev = 0.239, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.17497746874814368;  // std dev = 1.206, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.5016339378850955;  // std dev = 3.764, 196.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=180 */
%   | | else return -0.14162261660736286;  // std dev = 0.020, 462.000 (wgt'ed) examples reached here.  /* #neg=462 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6112255897199714;  // std dev = 0.224, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1731195414331695;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.07670804918526376;  // std dev = 3.283, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.1470240547274616;  // std dev = 2.901, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24842019374220192;  // std dev = 0.202, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( enzyme(D, F), enzyme(E, G) )
%   | | then if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.04128816252588607;  // std dev = 1.737, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.033015721128268845;  // std dev = 2.715, 93.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=18 */
%   | | else if ( enzyme(E, J), complex(E, K) )
%   | | | then return 0.07396661028265711;  // std dev = 3.177, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   | | | else return 0.03324912123173595;  // std dev = 4.790, 326.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=95 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then if ( phenotype(L, M) )
%   | | | then return 0.21499510645751027;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4789633679521293;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.1119310095908721;  // std dev = 2.576, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | | else return 0.059367321068453265;  // std dev = 4.339, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.11694548624092752;  // std dev = 0.284, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
%   | else return 0.036578288787886486;  // std dev = 0.287, 216.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=73 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24761300894487867;  // std dev = 0.225, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.2574630644899695;  // std dev = 2.520, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.13056248141671634;  // std dev = 0.765, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return 0.013993680948318262;  // std dev = 4.420, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | else if ( interaction(I, A) )
%   | | then return 0.024608074084038173;  // std dev = 0.278, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.02577985480237825;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12352079815779378;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14936957956322824;  // std dev = 0.253, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.23617287310712964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.05265244626513827;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.13857375926261184;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then return 0.023968098374871953;  // std dev = 0.282, 618.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=194 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.018528663749928963;  // std dev = 1.852, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.06626137268219506;  // std dev = 3.968, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.1758443826593351;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.05928532501870934;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1350728037739903;  // std dev = 0.211, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.2317614011915111;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21306102993407192;  // std dev = 0.022, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08852461258574504;  // std dev = 0.047, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16695106018160727;  // std dev = 0.647, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.009326581287448009;  // std dev = 6.830, 649.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=180 */
%   | else if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.2749236113455563;  // std dev = 2.859, 46.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
%   | | | else return 0.541942307550671;  // std dev = 1.352, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return -0.25988307385348863;  // std dev = 0.040, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.16731380103994106;  // std dev = 0.031, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.012215076629034797;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return -0.14272946634325143;  // std dev = 1.189, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.21724896087074905;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.08304421989660503;  // std dev = 0.044, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.009384096523657235;  // std dev = 2.086, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.048114709452500064;  // std dev = 2.908, 104.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=22 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.05564390091076786;  // std dev = 2.492, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else return 0.008770652791593779;  // std dev = 6.865, 564.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=172 */


Results
   AUC ROC   = 0.976587
   AUC PR    = 0.194759
   CLL	      = -0.201113
   Precision = 0.131799 at threshold = 0.5
   Recall    = 0.724138
   F1        = 0.223009


Total learning time: 17.299 seconds
Total inference time: 8.096 seconds
AUC ROC: 0.976587


Results scoring model
   AUC ROC   = 0.983171
   AUC PR    = 0.247252
   CLL	      = -0.198379
   Precision = 0.175566 at threshold = 0.5
   Recall    = 0.769504
   F1        = 0.285903


Total scoring time: 25.693 seconds
Refined model CLL: -0.198379


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984718
   AUC PR    = 0.309168
   CLL	      = -0.183492
   Precision = 0.151163 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.251451


Total learning time: 58.004999999999995 seconds
Total inference time: 7.446 seconds
AUC ROC: 0.984718
Total revision time: 58.004999999999995
Best scored revision CLL: -0.178824


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:31:54
{'AUC ROC': 0.984718, 'AUC PR': 0.309168, 'CLL': -0.183492, 'Precision': [0.151163, 0.5], 'Recall': 0.747126, 'F1': 0.251451, 'Learning time': 58.004999999999995, 'Inference time': 7.446, 'parameter_1.0': {'AUC ROC': 0.984718, 'AUC PR': 0.309168, 'CLL': -0.183492, 'Precision': [0.151163, 0.5], 'Recall': 0.747126, 'F1': 0.251451, 'Learning time': 3.915, 'Inference time': 7.446}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.05380110901255586;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.10814893509951233;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2010060779566543;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.11617861171827924;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.04011961174879916;  // std dev = 2.691, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.21897449908349687;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.18030988377851284;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8361724168142572;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.00757758318574275;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8391249239724561;  // std dev = 5.16e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1608750760275438;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18555085652570724;  // std dev = 3.909, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.19711923168868145;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6770160914329494;  // std dev = 1.053, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.15306689025806514;  // std dev = 0.091, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5092056586617081;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1743189719995444;  // std dev = 3.773, 59.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=24 */
%   | | | else return 0.16644419541352234;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.2789997399773952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.54003898019678;  // std dev = 0.914, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.134311553288261;  // std dev = 0.076, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7400268894379352;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.25593020539572825;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3840533535277578;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04053887620599664;  // std dev = 3.334, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11231509971234659;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then return 0.009587275355185484;  // std dev = 2.255, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11852329591043151;  // std dev = 3.545, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.07702493056181592;  // std dev = 1.405, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5100545183679389;  // std dev = 0.358, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.15835064869713117;  // std dev = 0.328, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.39345923226948853;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0266215942375504;  // std dev = 3.287, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | else if ( interaction(A, H) )
%   | | then return 0.12894071199678747;  // std dev = 1.199, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01918137617268781;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.21232894951268866;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22967435037625983;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.010695799047710643;  // std dev = 1.877, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09817964546477216;  // std dev = 3.300, 59.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.10343828571318936;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06757501450045351;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17835762624925172;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1929227619321935;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then return 0.03241730094519524;  // std dev = 1.817, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4687772475070943;  // std dev = 1.623, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.28366316423366034;  // std dev = 0.338, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14080328810621878;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17023028187182476;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.16559149323934597;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.01191933747465029;  // std dev = 1.992, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.011842622187004853;  // std dev = 3.116, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983153
   AUC PR    = 0.186298
   CLL	      = -0.230631
   Precision = 0.159036 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.254335


Total learning time: 1.78 seconds
Total inference time: 5.568 seconds
AUC ROC: 0.983153


Results scoring model
   AUC ROC   = 0.994679
   AUC PR    = 0.444228
   CLL	      = -0.198033
   Precision = 0.459459 at threshold = 0.5
   Recall    = 0.641509
   F1        = 0.535433


Total scoring time: 2.592 seconds
Parameter learned model CLL: -0.198033


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.691, 37, 9], 'false,false,true,false': [2.598, 27, 9], 'false,false,false,true': [3.971, 46, 24], 'false,false,false,false': [1.519, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [2.572, 25, 9], 'false,false,true,false': [2.691, 37, 9], 'false,false,false,true': [3.835, 38, 24], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [2.054, 27, 5], 'false,true,false,true': [5.16e-08, 0, 9], 'false,true,false,false': [2.11e-08, 29, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.909, 40, 26], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.053, 1, 18], 'false,true,false': [0.091, 67, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [3.773, 35, 24], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.914, 1, 18], 'false,true,false': [0.076, 58, 0], 'false,false,true,true': [0.035, 0, 11], 'false,false,true,false': [0.054, 16, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [3.334, 37, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.926, 1, 6], 'false,true': [2.255, 58, 18], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.545, 36, 26], 'false,false,false,true': [1.405, 14, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false': [0.358, 0, 19], 'true,false': [0.328, 38, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [3.287, 50, 23], 'false,false,true': [1.199, 9, 6], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.035, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 0, 2], 'false,true': [1.877, 52, 18], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.3, 33, 26], 'false,false,false,true': [0.721, 3, 2], 'false,false,false,false': [0.913, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.029, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.002, 0, 2], 'false,true': [1.817, 41, 18], 'false,false,true,true': [1.623, 3, 29], 'false,false,true,false': [0.338, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.005, 0, 3], 'false,true': [0.003, 0, 3], 'false,false,true': [1.992, 56, 18], 'false,false,false,true': [3.116, 58, 27], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.20223026999892463], 'false': [0.0, 0.19834710743801764], 'false,false': [0.1713265913146931, 0.21948033096240507], 'false,false,false': [0.22530612244898068, 0.17751479289940816], 'false,false,true': [0.15737240075614384, 0.18750000000000006], 'false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}, {'': [7.401486830834377e-17, 0.20987468735767828], 'false': [0.0, 0.20825049861894748], 'false,false': [0.17462342107461132, 0.23551304904903367], 'false,false,false': [0.23725286160249684, 0.2222222222222222], 'false,false,true': [0.19463667820069228, 0.1573724007561434], 'true': [0.0, 0.0], 'false,true': [nan, 0.0]}, {'': [-7.401486830834377e-17, 0.21076409822403114], 'false': [0.18405873539201606, 0.2318652665588764], 'false,false': [0.23154658862816171, 0.23437499999999994], 'false,false,false': [0.23437499999999994, nan], 'false,false,true': [nan, 0.23154658862816171], 'false,true': [0.18750000000000028, 0.18074792243767301], 'false,true,true': [0.0, 0.13183593750000003], 'false,true,false': [2.9605947323337506e-16, 1.5313421029312504e-17]}, {'': [7.401486830834377e-17, 0.18413573086979326], 'false': [0.13157641261418446, 0.2366919787363413], 'false,false': [0.0, 0.2404884327910238], 'false,false,false': [0.24130996839988503, 0.234375], 'false,true': [0.058310877954698755, 0.0001239342417364158], 'false,true,true': [nan, 0.05831087795469885], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [-3.700743415417188e-17, 0.159715234714896], 'false': [0.09545273435624281, 0.21926990634739427], 'false,false': [0.23963333639818812, 0.2061880044626221], 'false,false,true': [0.0001136346783600185, 0.000183283840028442], 'false,false,false': [0.0, 0.20967769492613716], 'false,true': [0.07365369151265719, 9.94448393131652e-05], 'false,true,true': [0.0, 0.04398898033504315], 'true': [nan, -3.700743415417188e-17]}, {'': [0.12244897959183675, 0.1310341283666614], 'false': [0.06689658904271312, 0.19054445649203838], 'false,false': [0.20271966631309601, 0.11613031020811473], 'false,false,true': [nan, 0.20271966631309601], 'true': [nan, 0.12244897959183673], 'false,false,false': [0.11613031020811473, nan]}, {'': [0.10341323783037586, 0.1399007834591703], 'false': [0.14470844770053895, 0.11710229649877336], 'false,true': [0.006323511732471629, 0.14800281346294966], 'false,false': [0.09579334150183977, 0.18749999999999997], 'false,false,false': [0.18749999999999997, nan], 'true': [0.006740871155922677, 0.002827598714507726], 'true,true': [nan, 0.006740871155922584], 'false,true,true': [0.0, 0.0]}, {'': [0.00026743371654933124, 0.11507785254140974], 'false': [0.05034042884491919, 0.1771029734826831], 'false,false': [0.18460907562960122, 0.13031271907340275], 'false,false,true': [nan, 0.18460907562960122], 'false,false,false': [0.10406919774029492, 0.13888888888888892], 'true': [0.0003008629311179803, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}, {'': [0.00018978734765969876, 0.12311154908284598], 'false': [0.05597668426170663, 0.17797339405900625], 'false,false': [0.17797339405900625, nan], 'false,false,true': [0.08233175461215475, 0.0028571175184438635], 'true': [0.00021305490323227788, 1.8234515395468276e-06], 'true,false': [nan, 1.8234515395468276e-06]}, {'': [0.00021361019618749145, 0.08499280808579657], 'false': [3.251079665899289e-06, 0.08601313395166167], 'false,false': [0.05362641010207706, 0.1142086319757891], 'false,false,false': [0.1142086319757891, nan], 'true': [0.0, 9.63780881342117e-06], 'true,true': [0.0, nan], 'true,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.15226658215833588;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.1018510649004878;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.23619771558731614;  // std dev = 4.391, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.34090385975288084;  // std dev = 1.219, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.01645890129927961;  // std dev = 2.394, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.29434500516606205;  // std dev = 2.535, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.1483108479184667;  // std dev = 3.949, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5878235196141074;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6264717564984978;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.050648799387629895;  // std dev = 2.051, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8191105810459587;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1618135518278907;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7742326967645887;  // std dev = 0.150, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21111449836870896;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12198212538632154;  // std dev = 3.165, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.07798485640722962;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2390963403614436;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4587326223932269;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.7808511460436376;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6788326142149127;  // std dev = 0.132, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1508103318499297;  // std dev = 0.155, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5261748321079953;  // std dev = 0.114, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.2571254085136148;  // std dev = 1.323, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0738492290182998;  // std dev = 3.662, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.36745281019867987;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5056265600156024;  // std dev = 1.052, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.15870016632330977;  // std dev = 0.142, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.13168443329638127;  // std dev = 0.216, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6588440716829363;  // std dev = 0.363, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.21155341104533293;  // std dev = 0.075, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.39944147342571446;  // std dev = 0.110, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09133814030105758;  // std dev = 3.065, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.359218810127113;  // std dev = 0.278, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | else return -0.15927396426994345;  // std dev = 0.051, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(G, A), interaction(E, G) )
%   | | then return 0.17055831193887475;  // std dev = 0.751, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.2425223435033072;  // std dev = 0.579, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05006042102202299;  // std dev = 0.769, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5430921996854339;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18497562603747805;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.09997316989067702;  // std dev = 0.748, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.25368645293706366;  // std dev = 2.228, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( location(D, G), complex(E, H) )
%   | | | then return 0.07428596884915628;  // std dev = 1.243, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.43326045260631557;  // std dev = 0.312, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14266904303831823;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.041265444501406304;  // std dev = 0.250, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.19225680668239184;  // std dev = 0.208, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.022071976412329386;  // std dev = 0.881, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.15813118120088607;  // std dev = 2.513, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then return -0.08191889377546858;  // std dev = 0.291, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return 0.04858725375624901;  // std dev = 0.259, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21087477815524633;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.16475969677063995;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.09891585909993139;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(E, D), complex(A, H) )
%   | | | then return 0.11031735588452857;  // std dev = 0.626, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.029533640646909824;  // std dev = 1.001, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.10282763259847322;  // std dev = 1.103, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.37322186214494435;  // std dev = 0.267, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.005278408914934742;  // std dev = 1.642, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.08590872671702496;  // std dev = 2.514, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17812786309727668;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), location(E, G) )
%   | | then if ( interaction(A, H), location(H, G) )
%   | | | then return -0.09221321328002598;  // std dev = 0.556, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.049286640770856614;  // std dev = 1.483, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(I, E), interaction(I, A) )
%   | | | then return 0.04149228509706856;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.1785857347858519;  // std dev = 0.270, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return -0.017984147874565298;  // std dev = 0.869, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.12889702958501373;  // std dev = 1.056, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.03605920180226093;  // std dev = 2.664, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.08919100473074361;  // std dev = 1.017, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.11907783041417253;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17509141865082947;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return -0.07695824858255798;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.18234762559108128;  // std dev = 2.769, 73.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=44 */
%   | | | else return -0.19490380631518872;  // std dev = 0.740, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.05156220858979185;  // std dev = 0.360, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2956867112622481;  // std dev = 0.342, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.973021
   AUC PR    = 0.198208
   CLL	      = -0.219265
   Precision = 0.163814 at threshold = 0.5
   Recall    = 0.644231
   F1        = 0.261209


Total learning time: 5.419 seconds
Total inference time: 7.308 seconds
AUC ROC: 0.973021


Results scoring model
   AUC ROC   = 0.991562
   AUC PR    = 0.508769
   CLL	      = -0.201904
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.811321
   F1        = 0.618705


Total scoring time: 4.697 seconds
Refined model CLL: -0.201904


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983153
   AUC PR    = 0.186298
   CLL	      = -0.230631
   Precision = 0.159036 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.254335


Total learning time: 14.488 seconds
Total inference time: 5.568 seconds
AUC ROC: 0.983153
Total revision time: 14.488
Best scored revision CLL: -0.198033


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:32:22
{'AUC ROC': 0.983153, 'AUC PR': 0.186298, 'CLL': -0.230631, 'Precision': [0.159036, 0.5], 'Recall': 0.634615, 'F1': 0.254335, 'Learning time': 14.488, 'Inference time': 5.568, 'parameter_0.2': {'AUC ROC': 0.983153, 'AUC PR': 0.186298, 'CLL': -0.230631, 'Precision': [0.159036, 0.5], 'Recall': 0.634615, 'F1': 0.254335, 'Learning time': 1.78, 'Inference time': 5.568}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.17957750652808258;  // std dev = 4.280, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.16117923812981436;  // std dev = 5.903, 165.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=50 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12841920536978263;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49179034310462466;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10485338858098149;  // std dev = 4.440, 100.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=27 */
%   | | | else return 0.15383011061871177;  // std dev = 5.846, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13590411538780706;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.1865471118578886;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8198850818328091;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06750745216429084;  // std dev = 4.029, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7833883712733978;  // std dev = 1.059, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.18467479403396841;  // std dev = 7.88e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7211273895025634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07924561887479623;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02827996488413014;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.29251358415830986;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4346368026978812;  // std dev = 0.190, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6608872674139514;  // std dev = 1.904, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | else return -0.1703084684798167;  // std dev = 0.197, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5569846674335135;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -3.34546946266882E-4;  // std dev = 2.848, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | | else return 0.0742202223800205;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.33925798929049567;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.23740337507746118;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3358744303590445;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.49871695090869783;  // std dev = 2.238, 82.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | | else return -0.14571440101599187;  // std dev = 0.162, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.561579899174818;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.188094651916349;  // std dev = 0.004, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4187148387391003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10725252023247228;  // std dev = 2.527, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2516634073231826;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.22637398199454156;  // std dev = 0.710, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.2844892880539545;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.04066993072433852;  // std dev = 4.438, 252.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=81 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.32152634325725904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10937442441884036;  // std dev = 2.534, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0015657039186106564;  // std dev = 1.185, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2653165590976693;  // std dev = 0.082, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.44259374134351265;  // std dev = 0.672, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.16938313184062634;  // std dev = 1.150, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2580363457244525;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1987617902947329;  // std dev = 1.201, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.019872685517935026;  // std dev = 2.667, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10323167473292606;  // std dev = 2.697, 96.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=42 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.29661953677372743;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19119405448685245;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.2682140034440944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15553357061186934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22259167185646445;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.024492456077428545;  // std dev = 4.017, 239.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20976726271958268;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07555389344407835;  // std dev = 2.518, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.012412091134040727;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.005654339072538803;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15395170727465407;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06537375303142032;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A) )
%   | then return 0.007335763913531196;  // std dev = 3.929, 276.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=81 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6764311822237932;  // std dev = 0.588, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22110311127494872;  // std dev = 0.160, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.16615190091574034;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1816045492107632;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1455246676812713;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1752660502512917;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1671264524527557;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.0143263298286051;  // std dev = 3.893, 245.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=77 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.030996186554930104;  // std dev = 2.220, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.97991
   AUC PR    = 0.188701
   CLL	      = -0.218099
   Precision = 0.102845 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.184676


Total learning time: 2.484 seconds
Total inference time: 6.869 seconds
AUC ROC: 0.97991


Results scoring model
   AUC ROC   = 0.988382
   AUC PR    = 0.282649
   CLL	      = -0.185654
   Precision = 0.241379 at threshold = 0.5
   Recall    = 0.792453
   F1        = 0.370044


Total scoring time: 5.305 seconds
Parameter learned model CLL: -0.185654


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.28, 57, 27], 'false,false,true,false': [5.903, 115, 50], 'false,false,false,true': [2.701, 27, 10], 'false,false,false,false': [1.279, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.895, 1, 3], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [4.44, 73, 27], 'false,false,true,false': [5.846, 108, 50], 'false,false,false,true': [2.657, 24, 10], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [0.0, 0, 6], 'false,true,true,false': [4.029, 66, 22], 'false,true,false,true': [1.059, 1, 53], 'false,true,false,false': [7.88e-08, 95, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.727, 29, 10], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.19, 0, 4], 'false,true,true,false': [1.904, 4, 77], 'false,true,false': [0.197, 164, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [2.848, 43, 10], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.023, 0, 3], 'true,false': [0.938, 1, 9], 'false,true,true,true': [0.179, 0, 4], 'false,true,true,false': [2.238, 5, 77], 'false,true,false': [0.162, 154, 0], 'false,false,true,true': [0.867, 1, 3], 'false,false,true,false': [0.004, 15, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.527, 21, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.71, 1, 1], 'true,false': [0.039, 0, 10], 'false,true': [4.438, 171, 81], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.534, 23, 10], 'false,false,false,true': [1.185, 9, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.082, 0, 2], 'true,true,false': [0.672, 0, 35], 'true,false': [1.15, 85, 0], 'false,true,true,true': [0.153, 0, 6], 'false,true,true,false': [1.201, 2, 7], 'false,true,false': [2.667, 54, 13], 'false,false,true': [2.697, 54, 42], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.064, 0, 6], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 4], 'false,true': [4.017, 158, 81], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.518, 24, 10], 'false,false,false,true': [0.674, 4, 1], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.023, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.916, 1, 7], 'false,true': [3.929, 195, 81], 'false,false,true,true': [0.588, 0, 13], 'false,false,true,false': [0.16, 29, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.059, 0, 2], 'true,true,true,false': [0.169, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.066, 0, 2], 'true,false': [0.036, 0, 4], 'false,true': [0.043, 0, 5], 'false,false,true': [3.893, 168, 77], 'false,false,false,true': [2.22, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.21398773540720442], 'false': [0.1388888888888887, 0.20986520649820412], 'false,false': [0.21360945791196945, 0.18749999999999947], 'false,false,true': [0.21811224489796044, 0.2112029384756667], 'false,false,false': [0.19722425127830545, 0.14876033057851243], 'false,true': [0.18750000000000006, 0.0], 'false,true,true': [0.0, 0.25], 'false,true,false': [nan, 0.0]}, {'': [1.4802973661668753e-16, 0.21186734479347352], 'false': [0.14495497443084415, 0.20953672408311513], 'false,false': [0.2094345484639152, 0.21013092248779003], 'false,false,false': [0.20761245674740464, 0.22222222222222224], 'false,false,true': [0.1970999999999996, 0.2163114885435027], 'false,true': [0.20015260166037357, 0.0], 'false,true,true': [nan, 0.20015260166037357], 'true': [0.0, 0.0]}, {'': [-2.590520390792032e-16, 0.2136225035493699], 'false': [0.2178778940803458, 0.1894706990399174], 'false,true': [0.206479491581635, 0.22407702153563858], 'false,true,false': [0.020777215638193316, 6.544472566211448e-17], 'false,true,true': [0.0, 0.18442537718435703], 'false,false': [0.19594023345437678, 0.1600000000000001], 'false,false,true': [0.0, 0.19066403681788288], 'false,false,false': [0.1600000000000001, nan]}, {'': [0.07100591715976343, 0.16705178371541488], 'false': [0.1670300378828739, 0.16043240812554782], 'false,true': [0.04538438032184933, 0.00023669402637996532], 'false,false': [0.0, 0.15822693570442845], 'false,false,false': [0.15307938768244933, 0.18749999999999997], 'true': [4.4408920985006264e-17, 0.10937500000000008], 'false,true,true': [0.009005668867480277, 0.04477195294529056], 'true,true': [0.0, 0.0]}, {'': [0.06954298350862437, 0.1269995984986836], 'false': [0.11478722569146325, 0.18524461299005282], 'false,false': [0.13294104372816873, 0.20902662602386307], 'false,false,false': [0.0, 0.21286486487467385], 'false,false,true': [0.18777209006562967, 1.1297812507971018e-06], 'false,true': [0.05977892348645757, 0.00017073558013451525], 'true': [0.00017197969395952675, 0.08796020101383471], 'false,true,true': [0.007981245575552215, 0.061072258714718025]}, {'': [0.07258631506306643, 0.09346502078265627], 'false': [0.07814789461000364, 0.1774220166496606], 'false,false': [0.19016544566261892, 0.12765860694586412], 'false,false,true': [0.0, 0.19460425737609832], 'false,false,false': [0.12765860694586412, nan], 'true': [0.21898575064585746, 0.00015159186839072136], 'true,true': [0.0, 0.25230537744021775], 'true,true,true': [0.0, nan]}, {'': [0.09175177454476359, 0.09703481885358767], 'false': [0.11355806408927835, 0.08009207937876704], 'false,true': [0.09861053765706207, 0.10616109374930217], 'false,true,true': [0.003916010966915379, 0.16033483294860354], 'true': [0.013979606425342218, 0.015552098852771198], 'false,false': [0.07578908888586457, 0.25], 'false,false,false': [0.25, nan], 'true,true': [0.003368704357873578, 0.012887176154177104]}, {'': [0.0010750175018318746, 0.0840829617287771], 'false': [0.06750561861317804, 0.17280680532830314], 'false,false': [0.18167451457597011, 0.13384612226078824], 'false,false,true': [0.0, 0.18650321898052585], 'false,false,false': [0.0907779552247925, 0.18750000000000006], 'true': [0.0006793193204343758, 0.0010836006742040531], 'true,false': [0.0, 0.0007194862308048499], 'true,false,false': [0.0, 0.0]}, {'': [0.06638454550585952, 0.07272406475576383], 'false': [0.055923090240388725, 0.1810150471335349], 'false,false': [0.1810150471335349, nan], 'false,false,true': [0.026631797642160462, 0.0008789146244386721], 'true': [0.0001013012605938668, 0.10479386009072118], 'true,false': [nan, 0.10479386009072118]}, {'': [0.003292175529638957, 0.06871797600536542], 'false': [0.0003696835481141192, 0.0695164806777439], 'false,false': [0.061851888854046924, 0.11195874500834685], 'false,false,false': [0.11195874500834685, nan], 'true': [0.004764338448687407, 0.00031929487313831287], 'true,true': [0.005380300162277386, 0.0021990010844873953], 'true,true,true': [0.0017475790630211673, 0.007117065932128949], 'true,true,false': [nan, 0.0021990010844873953]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), complex(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5504566274072047;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.028880642416585372;  // std dev = 4.819, 164.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=28 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.20189893509951135;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4337591264966688;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6165051737132138;  // std dev = 1.193, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.006549234646461585;  // std dev = 3.700, 113.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=16 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.14913436944184857;  // std dev = 3.774, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.25521677748213667;  // std dev = 4.996, 103.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5203133939738378;  // std dev = 0.261, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6764756810678008;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.071271380364531;  // std dev = 3.864, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.795202844314162;  // std dev = 0.458, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.17939305082016632;  // std dev = 0.311, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6507591152298267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1352720182915263;  // std dev = 2.623, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.4966905753719419;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.18006567795733203;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.45978031367505295;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.03849657004818208;  // std dev = 0.657, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.4766925346026255;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.5844732091553814;  // std dev = 1.021, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.6356285635713383;  // std dev = 1.809, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | else return -0.1650121573577441;  // std dev = 0.029, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4929051106073682;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.20348523063290122;  // std dev = 2.012, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.02525165848971616;  // std dev = 2.029, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3360186414918241;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.37334804010931666;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.36938080965952186;  // std dev = 1.272, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.5052128821334312;  // std dev = 1.481, 71.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | | else return -0.14057560204303732;  // std dev = 0.026, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5251900484983052;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.21831360233890357;  // std dev = 0.142, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3725514391017152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14892228473614272;  // std dev = 2.350, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2849054683254513;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.09078940654882472;  // std dev = 0.631, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.079721309705434;  // std dev = 2.556, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.005894410226169367;  // std dev = 2.066, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return -0.007543809108188112;  // std dev = 2.885, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.29031843188744233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09933106923235485;  // std dev = 2.517, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1692879515209607;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.17188909279496756;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), location(A, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.22125156905055487;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, C), location(C, H) )
%   | | | then return -0.009017301338634855;  // std dev = 1.880, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return -0.17150817400149582;  // std dev = 0.793, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else return 0.05334186419578273;  // std dev = 0.266, 204.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=76 */
%   else if ( complex(A, I) )
%   | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.6173927558621137;  // std dev = 0.155, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2483706539873413;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.21888134574354587;  // std dev = 1.612, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.22967368087705464;  // std dev = 0.100, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.15773315979917407;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.20450287860340746;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21669395971514827;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.10244204822480321;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 4.672575708578756E-4;  // std dev = 1.558, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( location(A, H) )
%   | | | then return 0.02695779081581851;  // std dev = 3.827, 219.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=69 */
%   | | | else return 0.13357259283251724;  // std dev = 0.621, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.14166258642055685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.019588309302502938;  // std dev = 2.302, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else return 0.10440416505032715;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1812502548349576;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.16079779722710416;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.05341739616762531;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41265398469532155;  // std dev = 0.487, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.13927502404517647;  // std dev = 0.410, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.0026468651282450907;  // std dev = 0.247, 179.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=50 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K) )
%   | | | then return 0.2500211567408193;  // std dev = 1.902, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return -0.2834935958934;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1982622001084838;  // std dev = 0.054, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.11863072057806368;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20972781580903344;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16501040688742963;  // std dev = 0.091, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0010449997016458656;  // std dev = 0.705, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.024174949755443525;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(H, I), phenotype(H, J) )
%   | | | then return -0.13366740019260842;  // std dev = 0.849, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.03819717241783716;  // std dev = 0.736, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.0600110343375186;  // std dev = 2.792, 109.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=42 */
%   | | | else return -0.02035781181278234;  // std dev = 3.307, 158.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=39 */


Results
   AUC ROC   = 0.978358
   AUC PR    = 0.15698
   CLL	      = -0.209464
   Precision = 0.098396 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.177093


Total learning time: 9.704 seconds
Total inference time: 9.353 seconds
AUC ROC: 0.978358


Results scoring model
   AUC ROC   = 0.988825
   AUC PR    = 0.292341
   CLL	      = -0.180341
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.839623
   F1        = 0.385281


Total scoring time: 13.174 seconds
Refined model CLL: -0.180341


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978358
   AUC PR    = 0.15698
   CLL	      = -0.209464
   Precision = 0.098396 at threshold = 0.5
   Recall    = 0.884615
   F1        = 0.177093


Total learning time: 30.667 seconds
Total inference time: 9.353 seconds
AUC ROC: 0.978358
Total revision time: 30.667
Best scored revision CLL: -0.180341


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:33:10
{'AUC ROC': 0.978358, 'AUC PR': 0.15698, 'CLL': -0.209464, 'Precision': [0.098396, 0.5], 'Recall': 0.884615, 'F1': 0.177093, 'Learning time': 30.667, 'Inference time': 9.353, 'parameter_0.4': {'AUC ROC': 0.97991, 'AUC PR': 0.188701, 'CLL': -0.218099, 'Precision': [0.102845, 0.5], 'Recall': 0.903846, 'F1': 0.184676, 'Learning time': 2.484, 'Inference time': 6.869}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.733148935099512;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1597362366868126;  // std dev = 5.152, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | | | else return 0.1658412427918204;  // std dev = 7.060, 234.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=72 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182005;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7439976143448208;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6189976143448208;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11494308731562863;  // std dev = 5.240, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
%   | | | else return 0.12020311756146046;  // std dev = 7.183, 254.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=72 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13862534308515964;  // std dev = 3.342, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return 0.2527473884465958;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6000923350558324;  // std dev = 0.065, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7304115504604656;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06358483022552522;  // std dev = 4.659, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7973118494485297;  // std dev = 1.063, 76.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=75 */
%   | | | else return -0.18035330726896243;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6507591152298267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08998420185995507;  // std dev = 3.510, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.03629105460957235;  // std dev = 1.982, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43499117828889317;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4620136170643816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.31915647420723875;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28978442475118427;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6437487053647647;  // std dev = 2.711, 118.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=110 */
%   | | else return -0.1675819982739789;  // std dev = 0.247, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.11699210517388128;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12959360057966196;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.14968420443024438;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.29889065219130895;  // std dev = 0.951, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.3606375617425854;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3863563385954092;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.49193432820503313;  // std dev = 2.896, 119.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=110 */
%   | | else return -0.14623662362991172;  // std dev = 0.255, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5739510031358436;  // std dev = 1.634, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.21948171336607583;  // std dev = 0.014, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46372047827286766;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0015632960910741509;  // std dev = 2.503, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.26676058231980093;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19508813638049352;  // std dev = 1.327, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(F, A) )
%   | then return 0.04038039324739036;  // std dev = 5.377, 363.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=114 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3522658859651284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04269882904420468;  // std dev = 3.258, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.024785780140704268;  // std dev = 1.834, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.28660226751108453;  // std dev = 0.244, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.37326551142263725;  // std dev = 2.389, 85.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=75 */
%   | else return -0.14507849071288564;  // std dev = 0.420, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.06718169496740774;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4016561692072916;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.02951283956503671;  // std dev = 2.535, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then return 0.039421827816707423;  // std dev = 3.407, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0062465706736619725;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19927324387789164;  // std dev = 0.089, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.20543136232370052;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2543103612530485;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.024060231107371592;  // std dev = 4.899, 357.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=114 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.03119106209036379;  // std dev = 0.417, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.11190699219203214;  // std dev = 2.773, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.5666503853777697;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.022630427132225597;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16065679203817687;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18899408408975768;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then return 0.001669763517652647;  // std dev = 4.948, 412.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=114 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5345449764792936;  // std dev = 1.132, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.2312572429706962;  // std dev = 0.455, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.12737020037387847;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1923645369212783;  // std dev = 0.214, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.23080210616627617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17771651473379224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1765095256353482;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.15487676721743002;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then return 0.002558709404872182;  // std dev = 4.996, 380.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=110 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.017862369763473503;  // std dev = 2.692, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98066
   AUC PR    = 0.160706
   CLL	      = -0.208277
   Precision = 0.096623 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.176068


Total learning time: 2.979 seconds
Total inference time: 7.182 seconds
AUC ROC: 0.98066


Results scoring model
   AUC ROC   = 0.989366
   AUC PR    = 0.308499
   CLL	      = -0.179107
   Precision = 0.221154 at threshold = 0.5
   Recall    = 0.867925
   F1        = 0.35249


Total scoring time: 7.75 seconds
Parameter learned model CLL: -0.179107


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.62, 3, 21], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 4], 'false,false,true,true': [5.152, 88, 38], 'false,false,true,false': [7.06, 162, 72], 'false,false,false,true': [3.328, 36, 16], 'false,false,false,false': [1.854, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [2.98e-08, 0, 7], 'true,false': [1.323, 2, 14], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.095, 2, 3], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [5.24, 99, 38], 'false,false,true,false': [7.183, 182, 72], 'false,false,false,true': [3.342, 37, 16], 'false,false,false,false': [1.708, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.065, 0, 21], 'false,true,true,true': [0.953, 1, 10], 'false,true,true,false': [4.659, 90, 29], 'false,true,false,true': [1.063, 1, 75], 'false,true,false,false': [0.0, 172, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.51, 46, 18], 'false,false,false,true': [1.982, 15, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.029, 0, 8], 'true,true,false': [0.0, 0, 1], 'true,false': [1.309, 2, 12], 'false,true,true,true': [0.765, 1, 4], 'false,true,true,false': [2.711, 8, 110], 'false,true,false': [0.247, 240, 0], 'false,false,true': [1.104, 2, 3], 'false,false,false,true': [3.283, 33, 16], 'false,false,false,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.951, 1, 14], 'true,false': [0.072, 0, 7], 'false,true,true,true': [0.221, 0, 4], 'false,true,true,false': [2.896, 9, 110], 'false,true,false': [0.255, 235, 0], 'false,false,true,true': [1.634, 3, 15], 'false,false,true,false': [0.014, 12, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.503, 28, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.327, 2, 17], 'false,true': [5.377, 249, 114], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.258, 43, 18], 'false,false,false,true': [1.834, 18, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.244, 0, 9], 'true,true,false': [2.389, 10, 75], 'true,false': [0.42, 135, 0], 'false,true,true,true': [0.947, 1, 5], 'false,true,true,false': [0.252, 0, 6], 'false,true,false': [2.535, 60, 14], 'false,false,true': [3.407, 103, 48], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.089, 0, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.017, 0, 8], 'true,false,false,false': [0.004, 0, 3], 'false,true': [4.899, 243, 114], 'false,false,true,true': [0.417, 1, 1], 'false,false,true,false': [2.773, 29, 18], 'false,false,false,true': [1.49e-08, 0, 3], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.042, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.067, 0, 12], 'false,true': [4.948, 298, 114], 'false,false,true,true': [1.132, 1, 24], 'false,false,true,false': [0.455, 59, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [2.63e-09, 0, 3], 'true,true,true,false': [0.214, 0, 6], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.053, 0, 6], 'false,true': [0.042, 0, 11], 'false,false,true': [4.996, 270, 110], 'false,false,false,true': [2.692, 47, 21], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.10937500000000015, 0.21659928656361685], 'false': [-2.5376526277146434e-16, 0.21239300375578682], 'false,false': [0.2121913580246934, 0.21345155709342578], 'false,false,false': [0.21301775147928942, 0.2148437499999998], 'false,false,true': [0.21063240110859296, 0.21301775147929036], 'false,true': [1.4802973661668753e-16, 0.0], 'false,true,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}, {'': [0.07939508506616293, 0.20676446688887376], 'false': [0.17283950617283964, 0.2047412306537829], 'false,false': [0.2021812469812189, 0.2186755579193903], 'false,false,false': [0.2107511569953716, 0.24305555555555547], 'false,false,true': [0.20043689061750794, 0.2031124062248149], 'false,true': [0.24000000000000005, 0.0], 'false,true,true': [nan, 0.23999999999999994], 'true': [1.2688263138573217e-16, 0.10937500000000011]}, {'': [0.00020145931193461477, 0.20584116249879364], 'false': [0.207941469379974, 0.1954682875692135], 'false,true': [0.20838524091445218, 0.20770865123038296], 'false,true,true': [0.08264462809917315, 0.18238342567123322], 'false,true,false': [0.0148723537392411, -2.0138929283898187e-16], 'false,false': [0.19427280709290617, 0.19638360463510263], 'false,false,false': [0.19638360463510263, nan], 'false,false,true': [0.0, 0.19247034272734842]}, {'': [0.07796238482430533, 0.17520116734071153], 'false': [0.16596536323093208, 0.22372841388148626], 'false,false': [0.24359838814703325, 0.222130016290808], 'false,false,false': [0.21990837151187037, 0.2295918367346939], 'false,true': [0.06939076605563956, 0.00025511008117081737], 'true': [0.00016484508159436077, 0.12244897959183669], 'false,true,true': [0.1169668854810049, 0.06228171041988902], 'true,true': [0.00010431602819641062, 0.0]}, {'': [0.04218372895033349, 0.13149843195184927], 'false': [0.11473167262989813, 0.2190553036007025], 'false,false': [0.24011064043435967, 0.17498222305846098], 'false,false,true': [0.14835889362276897, 1.6975282376633743e-05], 'false,false,false': [0.0, 0.17399178656330652], 'false,true': [0.06893950718008088, 0.00027579506254645614], 'false,true,true': [0.012194672249107336, 0.07048440189391504], 'true': [0.06030836547448627, 0.0007456669952720096]}, {'': [0.07727947141066126, 0.09615751280061349], 'false': [0.07964468297515924, 0.16655442136720588], 'false,false': [0.172678770574871, 0.14621370151338212], 'false,false,true': [0.0, 0.1739638965000615], 'false,false,false': [0.14621370151338212, nan], 'true': [0.0, 0.09265545302909309], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.08917635080084693, 0.08809998803739684], 'true': [0.06200985898033345, 0.0013068873972349995], 'false': [0.09815432076813856, 0.08239076345794803], 'false,true': [0.10801378943108099, 0.08683549079046457], 'false,true,true': [0.14953423692338888, 0.01055675497974982], 'false,false': [0.07688246364540917, 0.17283950617283947], 'false,false,false': [0.17283950617283947, nan], 'true,true': [0.00663992177832895, 0.06715346607936483]}, {'': [0.0007387699535380808, 0.08283646077556313], 'false': [0.06723813391424992, 0.16809627810400127], 'false,false': [0.16126885899156074, 0.19506599305179828], 'false,false,false': [7.401486830834377e-17, 0.18750000000000003], 'false,false,true': [0.08676441534633546, 0.16360346276148163], 'true': [0.0007996701998079891, 0.0005025434491777221], 'true,false': [nan, 0.0005025434491777221], 'true,false,false': [3.711031410225801e-05, 6.130085983629963e-06]}, {'': [0.0004895091127235915, 0.07313746940128801], 'false': [0.05943588111046669, 0.1403196510775893], 'false,false': [0.1403196510775893, nan], 'false,false,true': [0.05127646942034371, 0.003510217762674988], 'true': [0.0001916934243606536, 0.0003687271129315245], 'true,false': [nan, 0.0003687271129315245]}, {'': [0.003534365062380813, 0.0707246638965366], 'false': [0.0001609015977889054, 0.07191807523546359], 'false,false': [0.06568391067945024, 0.10655740013729254], 'false,false,false': [0.10655740013729254, nan], 'true': [0.0052075652839111974, 0.000466776163710686], 'true,true': [0.006003470457083098, 0.0007045200044341546], 'true,true,true': [2.3129646346357427e-18, 0.007597117757879084], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.01027211753206666;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.12858918667183877;  // std dev = 5.601, 159.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=43 */
%   | | | else return 0.22084323561764815;  // std dev = 6.679, 193.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=70 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.4850122940520397;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.448295606241962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.16108895054798603;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.14666718044877575;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.12136752315938522;  // std dev = 6.370, 201.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=57 */
%   | | | else return 0.2244977474418149;  // std dev = 6.715, 190.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=74 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4684099150071541;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1695467061813624;  // std dev = 4.514, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.022058464119843628;  // std dev = 2.262, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7750953579701131;  // std dev = 1.394, 77.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=75 */
%   | | | else return -0.19257809804149664;  // std dev = 0.166, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.22817201318834981;  // std dev = 0.543, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.10343627571523081;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14452764542847243;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4079335050194251;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4388003342929594;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3618772573698825;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5028774339930834;  // std dev = 2.238, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.6362333147364055;  // std dev = 2.263, 96.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=91 */
%   | | else return -0.17626046869393733;  // std dev = 0.027, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( interaction(A, K), complex(K, J) )
%   | | | then return -0.08422561481372778;  // std dev = 1.256, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.1493809584847584;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.023709929980901077;  // std dev = 1.391, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.19280952435900645;  // std dev = 2.981, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2777716467107537;  // std dev = 0.252, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.22102897205333843;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.52540040062443;  // std dev = 1.506, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0.43575356035983853;  // std dev = 2.801, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | else return -0.15110188759459595;  // std dev = 0.021, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5786515017719259;  // std dev = 1.625, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.22512432867578336;  // std dev = 0.147, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5627613980102879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0063363567413577265;  // std dev = 2.428, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2891989606703009;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), location(E, F) )
%   | | then if ( complex(A, G), complex(E, G) )
%   | | | then return -0.040543224689864925;  // std dev = 1.400, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.04291186215319732;  // std dev = 5.229, 326.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=105 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05372092307551734;  // std dev = 0.620, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.12786883666218046;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.4230208382093301;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10415795832680588;  // std dev = 3.045, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.03353485439461912;  // std dev = 1.338, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.38268698783808536;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.392381249066772;  // std dev = 0.204, 91.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=84 */
%   | else return -0.16909494455941318;  // std dev = 0.099, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, G) )
%   | | then if ( interaction(F, G), complex(G, H) )
%   | | | then return -0.18891398354516642;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.003949379082855219;  // std dev = 1.042, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else return 0.026324261369685097;  // std dev = 0.265, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4474686486923299;  // std dev = 0.546, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.14684578227235698;  // std dev = 0.145, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2614686238448352;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.00897292991806506;  // std dev = 2.961, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18388362045624787;  // std dev = 0.029, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.35479375233709376;  // std dev = 0.659, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14000180945876953;  // std dev = 0.959, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.010045757065001153;  // std dev = 3.489, 207.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=59 */
%   | | | else return 0.07222675518744269;  // std dev = 1.193, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3740629075045138;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.033963738066790525;  // std dev = 2.821, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.06605754701245617;  // std dev = 1.177, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.18403014378827492;  // std dev = 1.011, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1580065869410803;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), interaction(E, D) )
%   | | then if ( interaction(D, A), interaction(D, D) )
%   | | | then return -0.11175139663280215;  // std dev = 1.110, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return -0.018895828568058017;  // std dev = 1.379, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.36396566398370495;  // std dev = 0.336, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.03068055572796508;  // std dev = 1.772, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.30818363678835375;  // std dev = 1.081, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.14479560425499793;  // std dev = 0.568, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03201831974607836;  // std dev = 2.207, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | | else return 0.0606716927379223;  // std dev = 3.176, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14661012374505844;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.3523369668363269;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.06781460222795085;  // std dev = 0.809, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.12814248248509907;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.13882687650550093;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.14264859242135391;  // std dev = 4.114, 215.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=127 */
%   | | | else return -0.1303597287463663;  // std dev = 0.644, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.1300537397181671;  // std dev = 0.659, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.04623882452719245;  // std dev = 1.061, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */


Results
   AUC ROC   = 0.983374
   AUC PR    = 0.211215
   CLL	      = -0.189778
   Precision = 0.110867 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.199015


Total learning time: 10.026 seconds
Total inference time: 8.83 seconds
AUC ROC: 0.983374


Results scoring model
   AUC ROC   = 0.991312
   AUC PR    = 0.424178
   CLL	      = -0.166967
   Precision = 0.234009 at threshold = 0.5
   Recall    = 0.943396
   F1        = 0.375


Total scoring time: 13.205 seconds
Refined model CLL: -0.166967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983374
   AUC PR    = 0.211215
   CLL	      = -0.189778
   Precision = 0.110867 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.199015


Total learning time: 33.96 seconds
Total inference time: 8.83 seconds
AUC ROC: 0.983374
Total revision time: 33.96
Best scored revision CLL: -0.166967


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:34:00
{'AUC ROC': 0.983374, 'AUC PR': 0.211215, 'CLL': -0.189778, 'Precision': [0.110867, 0.5], 'Recall': 0.971154, 'F1': 0.199015, 'Learning time': 33.96, 'Inference time': 8.83, 'parameter_0.6': {'AUC ROC': 0.98066, 'AUC PR': 0.160706, 'CLL': -0.208277, 'Precision': [0.096623, 0.5], 'Recall': 0.990385, 'F1': 0.176068, 'Learning time': 2.979, 'Inference time': 7.182}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7936328060672536;  // std dev = 1.368, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08302931787463155;  // std dev = 6.036, 209.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=47 */
%   | | | else return 0.1498156017661798;  // std dev = 8.332, 336.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=98 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15392358298683592;  // std dev = 3.846, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6553855247648586;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7323086016879355;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5243782526377279;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7439976143448207;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.13786168623364486;  // std dev = 5.776, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.146126002161938;  // std dev = 8.240, 319.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=98 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18836006162003324;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.327334239218108;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.48137648584967796;  // std dev = 1.662, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6791410403203816;  // std dev = 1.313, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.04458311272153891;  // std dev = 5.281, 166.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=36 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7880081478841163;  // std dev = 1.476, 105.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=103 */
%   | | | else return -0.18182100838633647;  // std dev = 2.65e-07, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6028783581651933;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06160173441535025;  // std dev = 4.067, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2370183611262177;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.46471997292305295;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.44835537112406776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.27188478288877366;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.42221172210219116;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6622393842377065;  // std dev = 2.707, 153.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=145 */
%   | | else return -0.164206097441302;  // std dev = 0.192, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.32047875462302206;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08023347259976593;  // std dev = 3.897, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | | else return 0.08449069937369053;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3106745779442494;  // std dev = 0.959, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.2943513014226159;  // std dev = 0.948, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3257869927177328;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5129735777329162;  // std dev = 2.845, 153.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=145 */
%   | | else return -0.14325459842365224;  // std dev = 0.165, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7397794461092477;  // std dev = 0.400, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.23081846106207254;  // std dev = 0.320, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.37615883604952904;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.045314337996654686;  // std dev = 2.936, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2878622350654567;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.7243909471820866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.22595397085899369;  // std dev = 1.347, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(F, A) )
%   | then return 0.04007099517491635;  // std dev = 6.173, 475.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=152 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.29275456979157755;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10332213670427877;  // std dev = 3.426, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04683808039082384;  // std dev = 1.810, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.17657093093090973;  // std dev = 1.007, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.3131152501795526;  // std dev = 3.228, 115.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=94 */
%   | else return -0.1567274075559684;  // std dev = 1.244, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2489169740307965;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1492508837416005;  // std dev = 1.483, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.034569237270792884;  // std dev = 3.105, 110.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=21 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07378957369109249;  // std dev = 3.592, 170.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=64 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.19547785216765348;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.20837999575043423;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.2059854201409616;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.07169921447809548;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.023102361263900237;  // std dev = 5.519, 498.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=152 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.19407989933330638;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06550712831628779;  // std dev = 3.278, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.01842854855005622;  // std dev = 0.979, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08114648159685542;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1725132276208014;  // std dev = 0.042, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13277674869308098;  // std dev = 0.913, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then return 0.019692251059763525;  // std dev = 5.467, 500.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=152 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4684933519229458;  // std dev = 1.890, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.24210156283681253;  // std dev = 0.611, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.14790652373280522;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17400425534327774;  // std dev = 0.188, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.2013351298461703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11043672263046034;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.09444897979813482;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.059369571678647926;  // std dev = 1.687, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008674069888760452;  // std dev = 5.458, 507.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=145 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.010208326724913341;  // std dev = 3.166, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980621
   AUC PR    = 0.186911
   CLL	      = -0.205464
   Precision = 0.099325 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180543


Total learning time: 3.747 seconds
Total inference time: 7.221 seconds
AUC ROC: 0.980621


Results scoring model
   AUC ROC   = 0.989693
   AUC PR    = 0.340877
   CLL	      = -0.180491
   Precision = 0.240789 at threshold = 0.5
   Recall    = 0.863208
   F1        = 0.376543


Total scoring time: 10.681 seconds
Parameter learned model CLL: -0.180491


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.368, 2, 29], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [6.036, 162, 47], 'false,false,true,false': [8.332, 238, 98], 'false,false,false,true': [3.846, 50, 21], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.872, 1, 4], 'false,true,false': [2.98e-08, 0, 7], 'false,false,true,true': [5.776, 115, 47], 'false,false,true,false': [8.24, 221, 98], 'false,false,false,true': [3.695, 39, 21], 'false,false,false,false': [1.732, 6, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.662, 3, 29], 'false,true,true,true': [1.313, 2, 13], 'false,true,true,false': [5.281, 130, 36], 'false,true,false,true': [1.476, 2, 103], 'false,true,false,false': [2.65e-07, 230, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [4.067, 67, 23], 'false,false,false,true': [1.797, 7, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.025, 0, 14], 'true,true,false': [0.0, 0, 1], 'true,false': [1.572, 3, 14], 'false,true,true,true': [0.186, 0, 7], 'false,true,true,false': [2.707, 8, 145], 'false,true,false': [0.192, 357, 0], 'false,false,true': [0.852, 1, 4], 'false,false,false,true': [3.897, 54, 21], 'false,false,false,false': [1.97, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.959, 1, 16], 'true,false': [0.948, 1, 13], 'false,true,true,true': [0.177, 0, 7], 'false,true,true,false': [2.845, 8, 145], 'false,true,false': [0.165, 325, 0], 'false,false,true,true': [0.4, 0, 17], 'false,false,true,false': [0.32, 31, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [2.936, 33, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'true,false': [1.347, 2, 24], 'false,true': [6.173, 323, 152], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [3.426, 42, 23], 'false,false,false,true': [1.81, 10, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [1.007, 1, 12], 'true,true,false': [3.228, 21, 94], 'true,false': [1.244, 199, 0], 'false,true,true,true': [0.034, 0, 11], 'false,true,true,false': [1.483, 2, 7], 'false,true,false': [3.105, 89, 21], 'false,false,true': [3.592, 106, 64], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.07, 0, 15], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.028, 0, 9], 'true,false,false,false': [0.896, 1, 5], 'false,true': [5.519, 346, 152], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [3.278, 46, 23], 'false,false,false,true': [0.979, 7, 3], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.042, 0, 15], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.913, 1, 14], 'false,true': [5.467, 348, 152], 'false,false,true,true': [1.89, 3, 31], 'false,false,true,false': [0.611, 67, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.188, 0, 11], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.896, 1, 9], 'false,true': [1.687, 4, 13], 'false,false,true': [5.458, 362, 145], 'false,false,false,true': [3.166, 63, 27], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06035379812695236, 0.2034137378959169], 'false': [0.07638888888888877, 0.1980852427495601], 'false,false': [0.1952697584378443, 0.21403091557669562], 'false,false,false': [0.20829200555445368, 0.23437500000000006], 'false,false,true': [0.17430919621803637, 0.20659722222222265], 'false,true': [0.0, 0.109375], 'false,true,false': [nan, 0.10937499999999978], 'false,true,true': [0.0, 0.0]}, {'': [0.032222222222222166, 0.21635501207528957], 'false': [0.075160085768186, 0.21410344559801417], 'false,false': [0.2105300465771569, 0.23393247528320327], 'false,false,false': [0.2275000000000004, 0.25000000000000006], 'false,false,true': [0.20595183661027103, 0.21283202798714657], 'false,true': [0.15224848515561118, 1.2688263138573217e-16], 'false,true,true': [nan, 0.15224848515561118], 'true': [0.07100591715976333, -1.0449157878825003e-16]}, {'': [0.0863630074895872, 0.20272337568643597], 'false': [0.2038948378980843, 0.19664199365854593], 'false,true': [0.19421856557340417, 0.20890395052226468], 'false,true,false': [0.02073956907047824, 3.050699789404778e-16], 'false,false': [0.18599553307641178, 0.24852071005917173], 'false,false,false': [0.24852071005917173, nan], 'false,true,true': [0.11498750566743568, 0.1680080735472852], 'false,false,true': [0.0, 0.18375962837481932]}, {'': [0.08638877729216887, 0.16516486949696194], 'false': [0.157336291648186, 0.20686888445380594], 'false,false': [0.1451796478707476, 0.20726586803765182], 'false,false,false': [0.20247807658089823, 0.22837370242214522], 'false,true': [0.04843630014293412, 0.00010353536433821778], 'true': [5.832093071086083e-05, 0.14532871972318334], 'false,true,true': [0.004927553751145127, 0.04790631544475945], 'true,true': [4.463336533994904e-05, 0.0]}, {'': [0.05871579421853985, 0.12575343492533964], 'false': [0.11012855821700791, 0.20531076013731722], 'false,false': [0.22094340177210134, 0.18789704066953902], 'false,false,true': [0.00941174310556689, 0.00329827861301133], 'false,false,false': [0.0, 0.19159022953604937], 'false,true': [0.05224374821010245, 8.409102029075163e-05], 'true': [0.054100796909541976, 0.06417360213332861], 'false,true,true': [0.0044561641456419354, 0.052897159994916135]}, {'': [0.08510991879699788, 0.09582086669244604], 'false': [0.08021455537264338, 0.1823754202334717], 'false,false': [0.1762605088441884, 0.20486471922765548], 'false,false,false': [0.20486471922765548, nan], 'false,false,true': [0.0, 0.18061272563257474], 'true': [0.1423134034680942, 0.06977042063202858], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08989340088990501, 0.09075834902273831], 'false': [0.09885229576585558, 0.0823392956938352], 'false,true': [0.11243964026918685, 0.08762073639490316], 'false,true,true': [0.00010668757002400704, 0.2442721400914975], 'true': [0.09103016838229326, 0.007777274538322661], 'true,true': [0.07799670339263699, 0.09060994968798454], 'false,false': [0.07591703962404002, 0.24999999999999992], 'false,false,false': [0.24999999999999992, nan]}, {'': [0.02987976564707914, 0.0752322942506072], 'false': [0.061172409280999394, 0.1536329833602745], 'false,false': [0.15176800048153266, 0.15967328529803848], 'false,false,false': [0.09593328967213478, 0.2448979591836735], 'false,false,true': [0.0, 0.1557014121861035], 'true': [0.0003281259800946771, 0.05785729212627489], 'true,false': [nan, 0.05785729212627486], 'true,false,false': [8.96869625906454e-05, 0.1336890288530034]}, {'': [0.028226415648648015, 0.0753188283765042], 'false': [0.05977800792232313, 0.15182927278225913], 'false,false': [0.15182927278225913, nan], 'false,false,true': [0.10506555002337414, 0.005578587286151471], 'true': [0.00011564959441703326, 0.055547687824092334], 'true,false': [nan, 0.055547687824092334]}, {'': [0.031356332208440925, 0.06960973669150237], 'false': [0.1674944662087473, 0.06669333591751303], 'false,false': [0.058763166449767576, 0.11136462484104202], 'false,false,false': [0.11136462484104202, nan], 'true': [0.0024805203944244115, 0.08034173701907701], 'true,true': [0.0024940436694603552, 0.0018361156520784485], 'true,true,true': [0.0, 0.0032193442147832848], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7581489350995123;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.07523078563331968;  // std dev = 6.911, 281.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=61 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.19510545683864408;  // std dev = 6.412, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
%   | | | else return 0.14518597213654802;  // std dev = 4.701, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.39281831804674233;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7261516513800756;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then return 0.559484984713409;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7261516513800758;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7591289600801726;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15125787813776154;  // std dev = 1.29e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.04595579077726431;  // std dev = 4.030, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.1177241722979288;  // std dev = 4.970, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | | else return 0.1671453491619186;  // std dev = 8.743, 346.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=114 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5406691770862005;  // std dev = 0.183, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14335461462833934;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.11536509274394964;  // std dev = 5.612, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7746405989473241;  // std dev = 1.761, 106.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=103 */
%   | | | else return -0.177419841412831;  // std dev = 0.203, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3275668812978328;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08220834875478403;  // std dev = 4.069, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1349917606821189;  // std dev = 1.661, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4926787953304516;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.37545571745960266;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12173320057310606;  // std dev = 0.850, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4379020059259146;  // std dev = 0.062, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.47288936669167514;  // std dev = 2.795, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return 0.6092043234805814;  // std dev = 3.102, 132.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=122 */
%   | | else return -0.16350498934311644;  // std dev = 0.416, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.48902413487939256;  // std dev = 2.835, 40.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | else return -0.18634791307479295;  // std dev = 0.176, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.4122534413097284;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.14784835808198;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.35043223348128166;  // std dev = 0.175, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.5188513557839991;  // std dev = 2.629, 135.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=128 */
%   | | | else return 0.36839118510819;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | else return -0.1417969832708791;  // std dev = 0.431, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.13436625805637673;  // std dev = 2.661, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.30227100743383345;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.42542656191185024;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0973418586287911;  // std dev = 2.653, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24683381113347239;  // std dev = 0.185, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.446973091001796;  // std dev = 0.526, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.1315315265945445;  // std dev = 0.662, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.06423917754109587;  // std dev = 2.330, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.016192225329661553;  // std dev = 4.377, 262.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=75 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.326081432681564;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.004404776850946481;  // std dev = 3.823, 104.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=23 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.033231147736431356;  // std dev = 1.283, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.30974642748378794;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.027488772922591494;  // std dev = 0.250, 262.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=85 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return 0.33551352820944913;  // std dev = 0.379, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return 0.06262967896285299;  // std dev = 0.399, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.2810078058734814;  // std dev = 0.083, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.04886022809636108;  // std dev = 1.486, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.055125910628776864;  // std dev = 2.383, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.007334279894769735;  // std dev = 0.238, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.06367558308781499;  // std dev = 3.041, 100.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
%   | | | else return 0.20151023894860604;  // std dev = 1.117, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14639308742174545;  // std dev = 0.240, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.1559616695650601;  // std dev = 0.254, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.006308810482159401;  // std dev = 0.209, 225.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=57 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.03840876522459469;  // std dev = 1.681, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.06177241568746046;  // std dev = 4.281, 223.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20865507936010053;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.005327248081110538;  // std dev = 3.709, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.034286526800621185;  // std dev = 1.061, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.16527772541721847;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18156686118058982;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return -0.17493112975044997;  // std dev = 1.066, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19795321771691646;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( interaction(A, I), enzyme(I, H) )
%   | | then return -0.11189600085936416;  // std dev = 0.165, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3713875624615778;  // std dev = 0.640, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.15219694731454103;  // std dev = 0.782, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09666431589811837;  // std dev = 0.094, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.06167666165774035;  // std dev = 2.587, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.021742659918272997;  // std dev = 5.878, 395.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=126 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1107731402527636;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2458479764930919;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17566196353241859;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3336282192133836;  // std dev = 0.175, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.12830759307589826;  // std dev = 0.053, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.16455012894659932;  // std dev = 1.380, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.028910619110808326;  // std dev = 3.585, 180.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=35 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.011339456635582636;  // std dev = 4.223, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
%   | | | else return 0.10179179194278287;  // std dev = 2.173, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */


Results
   AUC ROC   = 0.979122
   AUC PR    = 0.197279
   CLL	      = -0.20891
   Precision = 0.103795 at threshold = 0.5
   Recall    = 0.894231
   F1        = 0.186


Total learning time: 9.54 seconds
Total inference time: 7.446 seconds
AUC ROC: 0.979122


Results scoring model
   AUC ROC   = 0.987681
   AUC PR    = 0.382698
   CLL	      = -0.182742
   Precision = 0.242775 at threshold = 0.5
   Recall    = 0.792453
   F1        = 0.371681


Total scoring time: 9.816 seconds
Refined model CLL: -0.182742


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980621
   AUC PR    = 0.186911
   CLL	      = -0.205464
   Precision = 0.099325 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180543


Total learning time: 33.784 seconds
Total inference time: 7.221 seconds
AUC ROC: 0.980621
Total revision time: 33.784
Best scored revision CLL: -0.180491


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:34:49
{'AUC ROC': 0.980621, 'AUC PR': 0.186911, 'CLL': -0.205464, 'Precision': [0.099325, 0.5], 'Recall': 0.990385, 'F1': 0.180543, 'Learning time': 33.784, 'Inference time': 7.221, 'parameter_0.8': {'AUC ROC': 0.980621, 'AUC PR': 0.186911, 'CLL': -0.205464, 'Precision': [0.099325, 0.5], 'Recall': 0.990385, 'F1': 0.180543, 'Learning time': 3.747, 'Inference time': 7.221}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8337586911970727;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11286591623158822;  // std dev = 6.344, 212.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=54 */
%   | | | else return 0.149815601766178;  // std dev = 9.181, 408.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=119 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15814893509951097;  // std dev = 4.583, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | | else return 0.07243464938522666;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7243696773246421;  // std dev = 4.21e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.674369677324642;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7263328500003844;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5905336533861516;  // std dev = 1.318, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11117362476303767;  // std dev = 6.290, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
%   | | | else return 0.1424873993854024;  // std dev = 9.104, 392.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=119 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13190430184180166;  // std dev = 4.602, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | | else return 0.34910073691859894;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5417745613512432;  // std dev = 0.982, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8149971124522096;  // std dev = 0.184, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.01573946351134094;  // std dev = 5.807, 223.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7906892229587937;  // std dev = 1.495, 129.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=127 */
%   | | | else return -0.1812803486225271;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6330560249524286;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14498299114295998;  // std dev = 4.512, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14069448249423164;  // std dev = 2.089, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.426647837182291;  // std dev = 0.017, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.06215260847493387;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.37902386211330147;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3612447355847036;  // std dev = 0.812, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6516628334243716;  // std dev = 3.225, 184.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=173 */
%   | | else return -0.16293526630861405;  // std dev = 0.346, 429.000 (wgt'ed) examples reached here.  /* #neg=429 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.509248976617075;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13931496298207172;  // std dev = 4.429, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return 0.10850896817569691;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.30303343591931653;  // std dev = 0.878, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.2880500166476723;  // std dev = 0.859, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27572265643298777;  // std dev = 0.813, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.48043367622803385;  // std dev = 3.841, 190.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=173 */
%   | | else return -0.14105013277378883;  // std dev = 0.159, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6777416145971759;  // std dev = 0.707, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.23059727911286915;  // std dev = 0.044, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.0952770396072364;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09232357381777755;  // std dev = 3.935, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2634562943109728;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28252719604005483;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18627857175978219;  // std dev = 1.592, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   else if ( interaction(F, A) )
%   | then return 0.032646483678078944;  // std dev = 6.859, 615.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=183 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3247508121570934;  // std dev = 0.399, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06441920047316492;  // std dev = 4.295, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.011475447538152484;  // std dev = 1.947, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23936829221822137;  // std dev = 0.277, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4512678808701309;  // std dev = 1.103, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else return -0.16176586789205802;  // std dev = 1.242, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.1467158977365943;  // std dev = 0.958, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.33935619709823595;  // std dev = 1.244, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.005619656245671154;  // std dev = 4.301, 169.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=41 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02835314573556703;  // std dev = 4.870, 274.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=88 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03319557721181959;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19486396561521482;  // std dev = 0.119, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0.18940887670970652;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.02442797788514782;  // std dev = 1.120, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.24506903262417173;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.017254738825670298;  // std dev = 6.220, 634.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22178642122754647;  // std dev = 0.323, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.035611199531080565;  // std dev = 4.113, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.009979949058593564;  // std dev = 1.052, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.11743395008748411;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16689894558995957;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08320923084679754;  // std dev = 1.235, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.015487221098965918;  // std dev = 6.210, 623.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=183 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5793085984861575;  // std dev = 1.239, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.22706581835063747;  // std dev = 0.345, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.1501319291106216;  // std dev = 0.182, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1523607084026873;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return -0.1684114476717224;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17991918153748987;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2258541175407087;  // std dev = 0.225, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.16857978292714398;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01814473268876571;  // std dev = 6.107, 575.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=173 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.020636356634992737;  // std dev = 3.633, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980428
   AUC PR    = 0.200467
   CLL	      = -0.203228
   Precision = 0.099781 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.179134


Total learning time: 4.168 seconds
Total inference time: 7.71 seconds
AUC ROC: 0.980428


Results scoring model
   AUC ROC   = 0.990991
   AUC PR    = 0.381215
   CLL	      = -0.176628
   Precision = 0.249428 at threshold = 0.5
   Recall    = 0.822642
   F1        = 0.382792


Total scoring time: 11.026 seconds
Parameter learned model CLL: -0.176628


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.988, 1, 40], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.535, 3, 11], 'false,false,true,true': [6.344, 158, 54], 'false,false,true,false': [9.181, 289, 119], 'false,false,false,true': [4.583, 70, 30], 'false,false,false,false': [2.171, 22, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [4.21e-08, 0, 21], 'true,false': [0.975, 1, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.038, 0, 6], 'false,true,false': [1.318, 2, 10], 'false,false,true,true': [6.29, 148, 54], 'false,false,true,false': [9.104, 273, 119], 'false,false,false,true': [4.602, 72, 30], 'false,false,false,false': [1.732, 6, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.982, 1, 40], 'false,true,true,true': [0.184, 0, 14], 'false,true,true,false': [5.807, 181, 42], 'false,true,false,true': [1.495, 2, 127], 'false,true,false,false': [0.0, 297, 0], 'false,false,true,true': [0.219, 0, 4], 'false,false,true,false': [4.512, 63, 31], 'false,false,false,true': [2.089, 13, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.017, 0, 23], 'true,true,false': [0.707, 1, 1], 'true,false': [0.97, 1, 16], 'false,true,true,true': [0.812, 1, 10], 'false,true,true,false': [3.225, 11, 173], 'false,true,false': [0.346, 429, 0], 'false,false,true': [0.236, 0, 6], 'false,false,false,true': [4.429, 57, 30], 'false,false,false,false': [2.0, 12, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.878, 1, 22], 'true,false': [0.859, 1, 18], 'false,true,true,true': [0.813, 1, 10], 'false,true,true,false': [3.841, 17, 173], 'false,true,false': [0.159, 448, 0], 'false,false,true,true': [0.707, 0, 17], 'false,false,true,false': [0.044, 38, 0], 'false,false,false,true': [0.762, 1, 2], 'false,false,false,false': [3.935, 48, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.003, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.592, 3, 28], 'false,true': [6.859, 432, 183], 'false,false,true,true': [0.399, 0, 4], 'false,false,true,false': [4.295, 66, 31], 'false,false,false,true': [1.947, 18, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.277, 0, 23], 'true,true,false': [1.103, 0, 84], 'true,false': [1.242, 203, 0], 'false,true,true,true': [0.958, 1, 11], 'false,true,true,false': [1.244, 2, 15], 'false,true,false': [4.301, 128, 41], 'false,false,true': [4.87, 186, 88], 'false,false,false,true': [1.519, 10, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.119, 0, 24], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [1.12, 2, 7], 'true,false,false,false': [0.005, 0, 7], 'false,true': [6.22, 451, 183], 'false,false,true,true': [0.323, 0, 4], 'false,false,true,false': [4.113, 73, 31], 'false,false,false,true': [1.052, 9, 4], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.104, 0, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.235, 2, 16], 'false,true': [6.21, 440, 183], 'false,false,true,true': [1.239, 0, 42], 'false,false,true,false': [0.345, 67, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.182, 0, 12], 'true,true,true,false': [0.009, 0, 11], 'true,true,false,true': [0.91, 1, 3], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.225, 0, 14], 'false,true': [0.089, 0, 15], 'false,false,true': [6.107, 402, 173], 'false,false,false,true': [3.633, 80, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.023795359904820054, 0.20729607386845816], 'false': [0.13296398891966726, 0.20134083044982856], 'false,false': [0.20117325702393607, 0.20214843750000136], 'false,false,false': [0.21000000000000132, 0.16836734693877567], 'false,false,true': [0.18983624065503818, 0.2065972222222232], 'false,true': [0.0, 0.16836734693877536], 'false,true,false': [nan, 0.16836734693877523], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.02379535990481841, 0.21144418649903637], 'false': [0.10066616670182402, 0.20805554433335846], 'false,false': [0.2063469197883331, 0.21651731146081493], 'false,false,false': [0.2076124567474048, 0.24999999999999986], 'false,false,true': [0.195863150671504, 0.21141581632653134], 'false,true': [0.00023525943393528279, 0.14473447973541168], 'true': [8.458842092382145e-17, 0.04750000000000023], 'false,true,true': [nan, 0.00023525943393528279]}, {'': [0.023526230155442533, 0.1995831025521872], 'false': [0.1957023829974294, 0.21772763312951207], 'false,false': [0.21751833235883947, 0.2182664316253847], 'false,false,false': [0.2182664316253847, nan], 'false,false,true': [0.01198501946678332, 0.21654135786826864], 'false,true': [0.1779220038794752, 0.2046972029184893], 'false,true,false': [0.01733061273697992, -4.1268896268894707e-16], 'false,true,true': [0.002416711329870504, 0.15120449677842437]}, {'': [0.04480498496582194, 0.16651767577323848], 'false': [0.15620718917418555, 0.22057570066560336], 'false,false': [0.009276252567721724, 0.22503988310047174], 'false,false,false': [0.22546016010879358, 0.2222222222222222], 'false,true': [0.06121020206436462, 0.00027887258407426535], 'false,true,true': [0.05989539616945987, 0.0565310128620664], 'true': [0.03759593450833213, 0.055363321799307946], 'true,true': [1.1945715950104677e-05, 0.24999999999999997]}, {'': [0.03596180270646323, 0.12074797583946117], 'false': [0.10408400386065655, 0.20400058564254023], 'false,false': [0.18531146806939447, 0.21712894500547772], 'false,false,false': [0.1936342133876777, 0.21812132651073732], 'false,false,true': [0.029370262459464266, 5.005210835991971e-05], 'false,true': [0.07885244234099814, 5.6257730481762414e-05], 'false,true,true': [0.060115533441900945, 0.07764381464208606], 'true': [0.03349264426361431, 0.038827841940799364]}, {'': [0.060250676104353196, 0.09431181920973035], 'false': [0.07650782239192382, 0.18048841530037432], 'false,false': [0.18683014263694425, 0.1516606396865451], 'false,false,true': [0.03987622188970526, 0.19020603682308387], 'false,false,false': [0.1516606396865451, nan], 'true': [5.1151394235920966e-05, 0.08175173098702826], 'true,true': [7.651242896811184e-07, 0.0], 'true,true,true': [7.651242896811184e-07, nan]}, {'': [0.08454952658284132, 0.10088618295287426], 'false': [0.11526244533196546, 0.09084644652699984], 'false,true': [0.09402896608917398, 0.109455012281488], 'false,true,true': [0.07649056079070747, 0.09105303691368762], 'false,false': [0.08656285169928997, 0.17751479289940827], 'false,false,false': [0.17751479289940827, nan], 'true': [0.019657723201478, 0.007598012420660891], 'true,true': [0.0033294080488958052, 0.014476860926714583]}, {'': [0.03940477563941508, 0.07727177815926671], 'false': [0.061025237769100765, 0.15653027108952], 'false,false': [0.15882516759619036, 0.14466875691847275], 'false,false,true': [0.02611162003040514, 0.16264578617419503], 'false,false,false': [0.08506630079848486, 0.23437500000000003], 'true': [0.000588490141149677, 0.08645607906132358], 'true,false': [0.0, 0.09624054096228489], 'true,false,false': [0.13931644384797118, 3.6279982953571884e-06]}, {'': [0.038311159008504535, 0.07847060505591613], 'false': [0.06190714782802044, 0.16918664080490303], 'false,false': [0.16918664080490303, nan], 'false,false,true': [0.03655116583262151, 0.0017801897930488746], 'true': [0.0004472807694785215, 0.08479406236313447], 'true,false': [nan, 0.08479406236313447]}, {'': [0.03330495252601839, 0.0719967789716977], 'false': [0.0005265410555606438, 0.07307007906147851], 'false,false': [0.06485663056935599, 0.11377812756523316], 'false,false,false': [0.11377812756523316, nan], 'true': [0.043404336559664025, 0.0036196133607095155], 'true,true': [0.0014447230194892947, 0.18510260362465525], 'true,true,false': [0.2071114090817619, 0.0], 'true,true,true': [0.002759476450678306, 7.8548323363706e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.12200117784357388;  // std dev = 8.580, 379.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=100 */
%   | | | else return 0.18646218811155715;  // std dev = 8.557, 332.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=109 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6325168904718237;  // std dev = 0.282, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( complex(A, E) )
%   | | then return 0.724653039491316;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5631660001050113;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6606498827991896;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 8.63251785130359E-5;  // std dev = 3.302, 85.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=13 */
%   | | | else return 0.13347847000866273;  // std dev = 7.846, 301.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=87 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1265849127064043;  // std dev = 5.827, 164.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=48 */
%   | | | else return 0.17091856046276996;  // std dev = 6.359, 181.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5789095880348674;  // std dev = 0.025, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8053508467267515;  // std dev = 0.245, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.009579509610757228;  // std dev = 5.756, 228.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7642519142265068;  // std dev = 2.268, 132.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=127 */
%   | | | else return -0.1819225609055118;  // std dev = 0.164, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6334107365378427;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11490262734121358;  // std dev = 4.169, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.4907875575168766;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20873627546559478;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35481133787536223;  // std dev = 0.261, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.43129729713809556;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.2676389867285989;  // std dev = 0.379, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6245142879280362;  // std dev = 0.259, 197.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=183 */
%   | | else return -0.16148017823590696;  // std dev = 0.019, 431.000 (wgt'ed) examples reached here.  /* #neg=431 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7731160712802241;  // std dev = 0.353, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.18610246814058806;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.060311832918921685;  // std dev = 2.191, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.14241372870293117;  // std dev = 3.377, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.262166197883388;  // std dev = 0.289, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else return 0.33994123399557574;  // std dev = 0.021, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.4260609492979794;  // std dev = 2.778, 81.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=72 */
%   | | | else return 0.5178465762168749;  // std dev = 2.520, 117.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=111 */
%   | | else return -0.14018566760609763;  // std dev = 0.015, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6406293932174347;  // std dev = 0.655, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.18067737555702384;  // std dev = 0.147, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.13681927235522165;  // std dev = 2.613, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.015156780413198425;  // std dev = 2.870, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.2811527230276563;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.06308603112526896;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2987356082374716;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.18444904827752087;  // std dev = 1.286, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then return -0.02739248336520103;  // std dev = 0.251, 106.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=21 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(J, J), location(A, K) )
%   | | | then return 0.12698468017001224;  // std dev = 2.384, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.028325849149548644;  // std dev = 5.779, 493.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=143 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.003507182239802667;  // std dev = 2.604, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.15494688254828534;  // std dev = 3.591, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21666272244900786;  // std dev = 0.108, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.1492056352656495;  // std dev = 0.602, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.05056358630818996;  // std dev = 1.320, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.140173258951039;  // std dev = 1.678, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return -0.0012863649894129079;  // std dev = 2.870, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.25710730156714545;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.04068526970969727;  // std dev = 1.235, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.02985255314588518;  // std dev = 4.293, 241.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=69 */
%   | | | else return 0.062094764085933694;  // std dev = 5.574, 304.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=106 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19232521147648268;  // std dev = 0.150, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.023206166719812574;  // std dev = 4.228, 213.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=63 */
%   | | | else return 0.1080532566248711;  // std dev = 2.137, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | else if ( location(D, I), phenotype(A, J) )
%   | | | then return 0.026204102755313582;  // std dev = 2.203, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return -0.0185821922598651;  // std dev = 2.082, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.005595385713375441;  // std dev = 0.448, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22319128485893527;  // std dev = 0.264, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.030233183947161162;  // std dev = 2.577, 84.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=15 */
%   | | | else return 0.010489706214481523;  // std dev = 5.120, 278.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=75 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.09466703337929776;  // std dev = 0.260, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.2423750184314452;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.1628095141413867;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.04593872224427374;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.0392680494169206;  // std dev = 0.233, 121.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=21 */
%   | | else return 0.019502875254268127;  // std dev = 0.273, 524.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=162 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.3551603164477592;  // std dev = 2.012, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.15362898315775983;  // std dev = 2.839, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | else return -0.2217844873711036;  // std dev = 0.058, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15587888248506876;  // std dev = 0.030, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return -0.48849692479675233;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17574487180823115;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.1497824771744427;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2518430281124631;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, I), location(I, J) )
%   | | | then return -0.06300485709566546;  // std dev = 1.270, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   | | | else return 0.00831889317164543;  // std dev = 2.134, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.003965952751157525;  // std dev = 3.798, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | | | else return 0.027071452846009418;  // std dev = 6.249, 470.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=147 */


Results
   AUC ROC   = 0.971287
   AUC PR    = 0.120431
   CLL	      = -0.212073
   Precision = 0.096738 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.173212


Total learning time: 22.202 seconds
Total inference time: 7.075 seconds
AUC ROC: 0.971287


Results scoring model
   AUC ROC   = 0.986304
   AUC PR    = 0.273492
   CLL	      = -0.189572
   Precision = 0.237126 at threshold = 0.5
   Recall    = 0.74717
   F1        = 0.36


Total scoring time: 29.69 seconds
Refined model CLL: -0.189572


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980428
   AUC PR    = 0.200467
   CLL	      = -0.203228
   Precision = 0.099781 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.179134


Total learning time: 67.086 seconds
Total inference time: 7.71 seconds
AUC ROC: 0.980428
Total revision time: 67.086
Best scored revision CLL: -0.176628


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:36:12
{'AUC ROC': 0.980428, 'AUC PR': 0.200467, 'CLL': -0.203228, 'Precision': [0.099781, 0.5], 'Recall': 0.875, 'F1': 0.179134, 'Learning time': 67.086, 'Inference time': 7.71, 'parameter_1.0': {'AUC ROC': 0.980428, 'AUC PR': 0.200467, 'CLL': -0.203228, 'Precision': [0.099781, 0.5], 'Recall': 0.875, 'F1': 0.179134, 'Learning time': 4.168, 'Inference time': 7.71}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.09070707463439608;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.15226658215833583;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2355074256655498;  // std dev = 3.529, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.08483978901044945;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.15108448001852354;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1255045259641177;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.22540780245230174;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.83540835646892;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03540835646891998;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.792278252694082;  // std dev = 0.260, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.18292585483067925;  // std dev = 2.36e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1242817907583293;  // std dev = 3.760, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15605240869700512;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.58248641584169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.21751358415830996;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.35102552107743235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.7212477862423603;  // std dev = 0.321, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1667465273784826;  // std dev = 0.154, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4899885320668164;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.17291500206680288;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.07609856421031123;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36574786357950906;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.34322985536982936;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.27576637581053587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5127735520935157;  // std dev = 1.102, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.14390045555410097;  // std dev = 0.039, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6402136342477524;  // std dev = 0.575, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2467362615370032;  // std dev = 0.048, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11380146267469998;  // std dev = 3.382, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2756596358596779;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then return 0.03094992494174564;  // std dev = 2.212, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.1879797627671661;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.061069507236096124;  // std dev = 3.523, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.012497442882353264;  // std dev = 1.831, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22514023478263256;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5099492151125763;  // std dev = 0.502, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.16200537650787994;  // std dev = 0.261, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2027181184562492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21485403840327688;  // std dev = 0.687, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.003829594262461921;  // std dev = 3.381, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | else if ( interaction(A, H) )
%   | | then return 0.04719281920758254;  // std dev = 0.911, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.00684463322296663;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19012601075585714;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.15422261413354088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23309805214416368;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return -0.002308683846547647;  // std dev = 2.080, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.06200250368647584;  // std dev = 0.477, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0650343374328752;  // std dev = 3.310, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1323959371894021;  // std dev = 0.466, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.016547996093962715;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16038837067476786;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.15246449913228313;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F) )
%   | then return -0.0051324692594710295;  // std dev = 1.993, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5618881045698552;  // std dev = 1.275, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.2505001258633596;  // std dev = 0.288, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12756920187144882;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.08500593130770995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.381145817315939;  // std dev = 0.659, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.198006411329507;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.02032860486587531;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.001971654668266747;  // std dev = 1.965, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.007494113828129095;  // std dev = 3.120, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997273
   AUC PR    = 0.589811
   CLL	      = -0.183314
   Precision = 0.585586 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.640394


Total learning time: 1.796 seconds
Total inference time: 2.59 seconds
AUC ROC: 0.997273


Results scoring model
   AUC ROC   = 0.985919
   AUC PR    = 0.261097
   CLL	      = -0.21382
   Precision = 0.216049 at threshold = 0.5
   Recall    = 0.636364
   F1        = 0.322581


Total scoring time: 3.191 seconds
Parameter learned model CLL: -0.21382


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [2.77, 33, 10], 'false,false,true,false': [2.657, 24, 10], 'false,false,false,true': [3.529, 33, 20], 'false,false,false,false': [1.581, 5, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.063, 0, 2], 'false,false,true,true': [2.76, 32, 10], 'false,false,true,false': [2.622, 22, 10], 'false,false,false,true': [3.746, 47, 20], 'false,false,false,false': [1.708, 7, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [2.191, 24, 6], 'false,true,false,true': [0.26, 0, 11], 'false,true,false,false': [2.36e-08, 19, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [3.76, 45, 21], 'false,false,false,true': [1.754, 8, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 1, 0], 'true,false': [0.894, 1, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.321, 0, 20], 'false,true,false': [0.154, 60, 0], 'false,false,true': [0.178, 0, 3], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [1.826, 10, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.045, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.102, 1, 20], 'false,true,false': [0.039, 58, 0], 'false,false,true,true': [0.575, 0, 10], 'false,false,true,false': [0.048, 19, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.382, 32, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.043, 0, 6], 'false,true': [2.212, 53, 21], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [3.523, 43, 21], 'false,false,false,true': [1.831, 13, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.151, 0, 4], 'true,true,false': [0.502, 0, 17], 'true,false': [0.261, 42, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.687, 1, 4], 'false,true,false': [3.381, 55, 22], 'false,false,true': [0.911, 7, 3], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.023, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.006, 0, 2], 'false,true': [2.08, 59, 21], 'false,false,true,true': [0.477, 1, 2], 'false,false,true,false': [3.31, 39, 21], 'false,false,false,true': [0.466, 1, 1], 'false,false,false,false': [1.664, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.02, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.127, 2, 4], 'false,true': [1.993, 65, 21], 'false,false,true,true': [1.275, 1, 28], 'false,false,true,false': [0.288, 39, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.659, 1, 1], 'true,false': [0.028, 0, 3], 'false,true': [0.926, 1, 4], 'false,false,true': [1.965, 62, 20], 'false,false,false,true': [3.12, 55, 25], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.2237336504161719], 'false': [0.15999999999999986, 0.2181122448979602], 'false,false': [0.19227525721032165, 0.23935500125976444], 'false,false,false': [0.23495906016375898, 0.24999999999999983], 'false,false,true': [0.17847485127095739, 0.2076124567474049], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.25], 'false,true,true': [nan, 0.0]}, {'': [7.401486830834377e-17, 0.21099934993403838], 'false': [0.001494136213538555, 0.20686338416758185], 'false,false': [0.1969425636271219, 0.21579864284617192], 'false,false,false': [0.20940075740699515, 0.2430555555555555], 'false,false,true': [0.18140589569161017, 0.2148437499999999], 'false,true': [0.0, 0.0019921816180513696], 'true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [-7.401486830834377e-17, 0.2163527850699573], 'false': [0.21538072173561915, 0.21707074872723803], 'false,false': [0.2132622009394445, 0.23668639053254453], 'false,false,false': [0.23668639053254453, nan], 'false,true': [0.207612456747405, 0.22310308607183957], 'false,true,false': [0.0061483628364356465, 2.921639538487254e-17], 'false,false,true': [0.0, 0.21425898681798694], 'false,true,true': [0.0, 0.1599999999999999]}, {'': [0.18750000000000003, 0.18928030655918626], 'false': [0.14865962684192277, 0.2301594779843509], 'false,false': [0.010505236148681485, 0.235076851772624], 'false,false,false': [0.2366863905325447, 0.22222222222222232], 'true': [0.2222222222222222, 0.16], 'true,true': [0.0, 0.0], 'false,true': [0.011132713228896137, 0.00039616671549439484], 'false,true,true': [0.0, 0.005162466717776759]}, {'': [0.00045072061664993185, 0.1575210056526853], 'false': [0.099049682587705, 0.2149210303326859], 'false,false': [0.1892195713828715, 0.2287297981780835], 'false,false,false': [nan, 0.2287297981780835], 'false,false,true': [0.03309752922697155, 0.00012006117419470716], 'false,true': [0.057650897741757294, 2.595822506576513e-05], 'false,true,true': [0.0, 0.057842887604346964], 'true': [0.0, 0.0005070606937311872]}, {'': [0.00030967441263713796, 0.13154645698645853], 'false': [0.06610469833380753, 0.18905610720888286], 'false,false': [0.18855626452546667, 0.1861802913129128], 'false,false,true': [0.0, 0.19396058073252503], 'false,false,false': [0.1861802913129128, nan], 'true': [nan, 0.0003096744126371472]}, {'': [0.09440629057566796, 0.14827753752025896], 'false': [0.1465220803855119, 0.1543370652349206], 'false,false': [0.08299131052816625, 0.20408163265306137], 'false,false,false': [0.20408163265306137, nan], 'false,true': [0.07861642792932452, 0.1484200337852077], 'true': [0.02559289218180792, 0.0016263928578493475], 'false,true,true': [0.0, 0.09431516675636266], 'true,true': [0.005711450578873983, 0.014820182198163397]}, {'': [0.0008562726018141268, 0.11835482824921673], 'false': [0.05408228815064002, 0.18268167904430443], 'false,false': [0.1782686907985888, 0.2006278329521031], 'false,false,false': [0.10846204979680975, 0.21301775147928995], 'false,false,true': [0.07590630168748967, 0.1826183169683541], 'true': [0.0001770489005195839, 0.0013963812880646114], 'true,false': [nan, 0.0013963812880646114], 'true,false,false': [0.0, 2.0793691641061984e-05]}, {'': [0.17716865286787944, 0.11067803499729362], 'true': [0.00019259476353679014, 0.21169144269936677], 'true,false': [nan, 0.21169144269936677], 'false': [0.046168559261690785, 0.18655649990893675], 'false,false': [0.18655649990893675, nan], 'false,false,true': [0.056075694108506456, 0.0021209171985517947]}, {'': [0.12382456123360394, 0.08658330402979895], 'true': [0.16827300630897415, 0.0002645396418850902], 'true,true': [0.0, 0.1931532913287872], 'true,true,false': [0.0, 0.21729745274488557], 'false': [0.1713101224969199, 0.08395239716487854], 'false,false': [0.047099015152168446, 0.12168176025009994], 'false,false,false': [0.12168176025009994, nan], 'true,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, E).;true;true
5;false,false;interaction(F, A), interaction(G, F).;true;true
5;false,false,true;recursion_proteinclass(G, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.28314893509951233;  // std dev = 3.126, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.166972464511277;  // std dev = 3.810, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.13942121666176652;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.459540635715917;  // std dev = 3.936, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | | | else return -0.16340090284773576;  // std dev = 0.139, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.33788474920022965;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6270899829590186;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7663551259085661;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.026319752427211924;  // std dev = 2.084, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7432692984899638;  // std dev = 0.203, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.15877677303262264;  // std dev = 0.177, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.29150252810766214;  // std dev = 0.646, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11001250827741313;  // std dev = 3.529, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3623285621224775;  // std dev = 1.043, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10091972558558081;  // std dev = 1.134, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4848953260183406;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2880458418140335;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3726437607256573;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6500822635706005;  // std dev = 0.323, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.16558728546358645;  // std dev = 0.061, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, I) )
%   | | | then return 0.057763332119242526;  // std dev = 2.209, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.5926576989301763;  // std dev = 0.824, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.23483300993511752;  // std dev = 2.093, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.2642463714447594;  // std dev = 1.077, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return -5.223088883823668E-4;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.21981115002269408;  // std dev = 0.834, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.29038078280183677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49647448574841696;  // std dev = 0.370, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.13959847690984656;  // std dev = 0.051, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5959495465192168;  // std dev = 0.383, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2290789180899566;  // std dev = 0.270, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.0849618269556456;  // std dev = 2.307, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.01518172131763877;  // std dev = 2.286, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return -0.03225350928467977;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3877595150999781;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.05221740508514501;  // std dev = 0.184, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.13033584876921592;  // std dev = 1.241, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.04814221169400918;  // std dev = 0.709, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.14900994008323107;  // std dev = 0.390, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.033554203861526584;  // std dev = 3.246, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.14403007195992384;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.02165806925439709;  // std dev = 1.122, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40788536209879717;  // std dev = 0.109, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.14348082969931739;  // std dev = 0.080, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.28004392572070413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12340602868300793;  // std dev = 0.750, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(A, G) )
%   | | | then return 0.044110461083399784;  // std dev = 2.975, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return -0.1370726336092107;  // std dev = 0.526, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.14692640756845798;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15654816788342954;  // std dev = 1.180, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.01826815255420955;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.23465788520604988;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return -0.24258357917559786;  // std dev = 0.633, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3208513755257352;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then return -0.15220483828119677;  // std dev = 0.226, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.0026094371638495854;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4241291159646231;  // std dev = 0.432, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20793647911999963;  // std dev = 0.261, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.01695695268891108;  // std dev = 3.027, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.07293676894669271;  // std dev = 0.747, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22402717598964247;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(A, F), phenotype(E, G) )
%   | | | then return -0.042411177722230055;  // std dev = 0.499, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.1001282991368021;  // std dev = 0.350, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.006031298124329826;  // std dev = 1.168, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.0940001397285383;  // std dev = 0.857, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.19162982097998968;  // std dev = 2.595, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.36926681912125364;  // std dev = 0.777, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.1763177984868225;  // std dev = 0.223, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.2027125916523284;  // std dev = 0.269, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1666387080421354;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.04382631326924816;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), interaction(G, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.07142870401779125;  // std dev = 0.806, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.2260088271334932;  // std dev = 0.721, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return -0.017718817910184387;  // std dev = 0.834, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.14457323004137207;  // std dev = 0.557, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( location(A, K), interaction(L, A) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.37895711999678927;  // std dev = 1.521, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return -0.1839294612326779;  // std dev = 0.706, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0.30629504838032495;  // std dev = 0.533, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */


Results
   AUC ROC   = 0.996943
   AUC PR    = 0.706115
   CLL	      = -0.170537
   Precision = 0.356164 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.501608


Total learning time: 9.958 seconds
Total inference time: 7.627 seconds
AUC ROC: 0.996943


Results scoring model
   AUC ROC   = 0.990906
   AUC PR    = 0.388134
   CLL	      = -0.190782
   Precision = 0.215311 at threshold = 0.5
   Recall    = 0.818182
   F1        = 0.340909


Total scoring time: 18.048 seconds
Refined model CLL: -0.190782


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996943
   AUC PR    = 0.706115
   CLL	      = -0.170537
   Precision = 0.356164 at threshold = 0.5
   Recall    = 0.847826
   F1        = 0.501608


Total learning time: 32.992999999999995 seconds
Total inference time: 7.627 seconds
AUC ROC: 0.996943
Total revision time: 32.992999999999995
Best scored revision CLL: -0.190782


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:36:56
{'AUC ROC': 0.996943, 'AUC PR': 0.706115, 'CLL': -0.170537, 'Precision': [0.356164, 0.5], 'Recall': 0.847826, 'F1': 0.501608, 'Learning time': 32.992999999999995, 'Inference time': 7.627, 'parameter_0.2': {'AUC ROC': 0.997273, 'AUC PR': 0.589811, 'CLL': -0.183314, 'Precision': [0.585586, 0.5], 'Recall': 0.706522, 'F1': 0.640394, 'Learning time': 1.796, 'Inference time': 2.59}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08155319041866102;  // std dev = 4.038, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | | else return 0.12975387337111727;  // std dev = 4.003, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.20360348055405653;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
%   | | | else return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.6083623010998432;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7789852279274082;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.11375145222860365;  // std dev = 3.927, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | else return 0.16044921317514657;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1429895561268872;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.2819674378357557;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.46654848319825043;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5249812957366877;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return -0.03249493589684729;  // std dev = 3.222, 89.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=12 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7957543412417057;  // std dev = 0.327, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.18096889251763568;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.34961099266353496;  // std dev = 0.960, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.09007601346826816;  // std dev = 5.209, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.2704142545851766;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4696660948418509;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13575635508726913;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24494611146088552;  // std dev = 1.248, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.21069921029869354;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6097176124128314;  // std dev = 2.367, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | else return -0.1625878186114181;  // std dev = 0.164, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.480723235818991;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11756612678361648;  // std dev = 5.073, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | | | else return 0.19508220183178088;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.2822553576261501;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.2700712451033376;  // std dev = 0.895, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.15999823064263635;  // std dev = 0.770, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5174686720079742;  // std dev = 2.022, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | else return -0.14146546976172325;  // std dev = 0.122, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6742548660974834;  // std dev = 0.609, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.23258568844349076;  // std dev = 0.112, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.35252547140112156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08380067774981469;  // std dev = 4.888, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.29502707147534857;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19338078075136092;  // std dev = 1.303, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, F) )
%   | then return 0.041309953035228435;  // std dev = 3.559, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.19998908693688405;  // std dev = 0.623, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10901186334560062;  // std dev = 4.735, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.011949341374495454;  // std dev = 2.136, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.18063017847762933;  // std dev = 0.803, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5121351077608035;  // std dev = 0.611, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.1592498170313662;  // std dev = 0.378, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2817738649121837;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17578374679923517;  // std dev = 1.511, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else return 0.05531206246955051;  // std dev = 4.820, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | else if ( interaction(A, H) )
%   | | then return 0.12981371492968125;  // std dev = 1.223, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1288526043527682;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.14842341611014173;  // std dev = 0.859, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.20330298004627478;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2796563263821386;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.025883637935982043;  // std dev = 3.230, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.012296320061320849;  // std dev = 0.709, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03378684449134886;  // std dev = 4.747, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.11768546018513351;  // std dev = 0.599, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.04172614316411849;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19707344083781408;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2370707511170944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.020114216103861368;  // std dev = 1.129, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.011902011127867864;  // std dev = 3.177, 167.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=46 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.527018364138297;  // std dev = 2.334, 55.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | | else return -0.269582211218203;  // std dev = 0.321, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.17431046566293978;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17363001097412992;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.09955799762137396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09955799762137396;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.09900167825945194;  // std dev = 0.851, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.19956843946487932;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I) )
%   | | then return 0.004741972335460265;  // std dev = 3.172, 161.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=43 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036609560477630226;  // std dev = 4.234, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997101
   AUC PR    = 0.583615
   CLL	      = -0.187344
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.631068


Total learning time: 2.3 seconds
Total inference time: 2.532 seconds
AUC ROC: 0.997101


Results scoring model
   AUC ROC   = 0.986404
   AUC PR    = 0.261598
   CLL	      = -0.213301
   Precision = 0.236301 at threshold = 0.5
   Recall    = 0.627273
   F1        = 0.343284


Total scoring time: 5.703 seconds
Parameter learned model CLL: -0.213301


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 15], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [1.0, 2, 2], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.038, 73, 21], 'false,false,true,false': [4.003, 59, 22], 'false,false,false,true': [4.987, 72, 38], 'false,false,false,false': [2.291, 21, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.073, 0, 3], 'false,false,true,true': [3.927, 58, 21], 'false,false,true,false': [3.871, 47, 22], 'false,false,false,true': [5.115, 84, 38], 'false,false,false,false': [1.984, 9, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.328, 2, 15], 'false,true,true,true': [1.664, 4, 9], 'false,true,true,false': [3.222, 77, 12], 'false,true,false,true': [0.327, 0, 25], 'false,true,false,false': [0.0, 52, 0], 'false,false,true,true': [0.96, 2, 4], 'false,false,true,false': [5.209, 96, 38], 'false,false,false,true': [1.932, 8, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.003, 0, 6], 'true,true,false': [0.815, 1, 2], 'true,false': [1.248, 2, 7], 'false,true,true,true': [0.769, 1, 3], 'false,true,true,false': [2.367, 6, 43], 'false,true,false': [0.164, 112, 0], 'false,false,true': [0.043, 0, 4], 'false,false,false,true': [5.073, 80, 38], 'false,false,false,false': [1.984, 9, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.932, 1, 8], 'true,false': [0.895, 1, 7], 'false,true,true,true': [0.77, 1, 3], 'false,true,true,false': [2.022, 4, 43], 'false,true,false': [0.122, 98, 0], 'false,false,true,true': [0.609, 0, 13], 'false,false,true,false': [0.112, 30, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [4.888, 76, 35]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.303, 2, 12], 'false,true': [3.559, 115, 46], 'false,false,true,true': [0.623, 1, 4], 'false,false,true,false': [4.735, 70, 38], 'false,false,false,true': [2.136, 16, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.803, 1, 10], 'true,true,false': [0.611, 0, 29], 'true,false': [0.378, 89, 0], 'false,true,true,true': [0.056, 0, 3], 'false,true,true,false': [1.511, 5, 11], 'false,true,false': [4.82, 94, 44], 'false,false,true': [1.223, 9, 7], 'false,false,false,true': [1.852, 8, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.859, 1, 10], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.012, 0, 3], 'false,true': [3.23, 105, 46], 'false,false,true,true': [0.709, 3, 4], 'false,false,true,false': [4.747, 87, 38], 'false,false,false,true': [0.599, 6, 1], 'false,false,false,false': [2.07, 15, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.057, 0, 8], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.129, 2, 6], 'false,true': [3.177, 121, 46], 'false,false,true,true': [2.334, 6, 49], 'false,false,true,false': [0.321, 87, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.065, 0, 4], 'true,true,true,false': [0.04, 0, 3], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.851, 1, 6], 'false,true': [0.073, 0, 7], 'false,false,true': [3.172, 118, 43], 'false,false,false,true': [4.234, 92, 45], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.3684757858670006e-16, 0.20798773195478656], 'false': [0.17283950617283939, 0.20210474742010276], 'false,false': [0.18533877551020522, 0.21975425330812953], 'false,false,false': [0.2261157024793403, 0.18750000000000014], 'false,false,true': [0.17349479402444587, 0.19783569577808224], 'false,true': [1.4802973661668753e-16, 0.22222222222222213], 'false,true,false': [0.25, 0.0], 'false,true,true': [0.0, 0.0]}, {'': [0.10380622837370253, 0.21622299992220023], 'false': [0.0016262707086132724, 0.2129297011888066], 'false,false': [0.20596990269981294, 0.22010609856916719], 'false,false,false': [0.21445847890352132, 0.2460937499999997], 'false,false,true': [0.19516103188591566, 0.2171812644402433], 'true': [0.10937500000000011, 0.09876543209876548], 'false,true': [0.0, 0.001770828104934452], 'false,true,true': [nan, 0.0]}, {'': [0.10378571753673589, 0.19755620665305523], 'false': [0.18607422577013485, 0.21008087788230925], 'false,false': [0.20315186164158583, 0.24888888888888888], 'false,false,false': [0.24888888888888888, nan], 'false,false,true': [0.15344641388080058, 0.20249068990153496], 'false,true': [0.16349480968858163, 0.2105573036265574], 'false,true,false': [0.004264672845174786, -4.270088556250602e-18], 'false,true,true': [0.21301775147928995, 0.11665193788663075]}, {'': [0.13901993248794364, 0.18862500900259005], 'false': [0.16137162884982706, 0.2191665134945658], 'false,false': [0.0004679051208413554, 0.2220645043022904], 'false,false,false': [0.2180888397775084, 0.24609375000000028], 'false,true': [0.12796854328142837, 0.00023963730278173508], 'true': [0.09859671230924343, 0.1730114745739055], 'false,true,true': [0.14797312167016952, 0.11431923834394146], 'true,true': [1.6612218122954066e-06, 0.22145633828212397]}, {'': [0.09823419908180533, 0.16574975669144157], 'false': [0.12428305730658279, 0.20561108070001505], 'false,false': [0.18238484186180015, 0.2139758570768837], 'false,false,false': [0.0, 0.2152588084409736], 'false,false,true': [0.02856289257748383, 0.0004206178458792712], 'false,true': [0.10101899984583258, 0.00015095008182129015], 'false,true,true': [0.14838310761395132, 0.08696564987616912], 'true': [0.09655091942303652, 0.10004929614605451]}, {'': [0.10139625370552097, 0.1363613414339168], 'false': [0.07868509786251549, 0.2030219103389452], 'false,false': [0.20222872228372213, 0.1984282601034748], 'false,false,true': [0.07751479886732009, 0.20763628250296032], 'false,false,false': [0.1984282601034748, nan], 'true': [0.0, 0.12130073381236077], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.08781175031306018, 0.16504161880261098], 'false': [0.16469041444256485, 0.164108725807151], 'false,true': [0.12176851901096851, 0.1683216751040281], 'false,false': [0.09341771552704146, 0.24489795918367338], 'false,false,false': [0.24489795918367338, nan], 'false,true,true': [0.0010569021042916478, 0.1426281726855604], 'true': [0.04735164713515858, 0.0016064572971594942], 'true,true': [0.05861323128737637, 0.012858744278839193]}, {'': [0.04874974417857859, 0.12332441840306682], 'false': [0.06908832554860776, 0.17446521731980016], 'false,false': [0.17453266033928969, 0.16695600973408728], 'false,false,true': [0.07182468655131784, 0.18025981521624987], 'false,false,false': [0.05125177759544102, 0.20408163265306123], 'true': [0.06709056815892366, 0.001429511496258018], 'true,false': [nan, 0.0014295114962579736], 'true,false,false': [0.0, 5.0585761756224055e-05]}, {'': [0.08753398515522184, 0.12002528768334833], 'false': [0.06045322413265925, 0.1896896983536508], 'false,false': [0.1896896983536508, nan], 'false,false,true': [0.099078013193072, 0.0011878333944565162], 'true': [0.00040890606683662706, 0.14823764503246004], 'true,false': [0.0, 0.15941800539880155], 'true,false,true': [nan, 0.0]}, {'': [0.04696284930451851, 0.09274389314591992], 'false': [0.0007616315968891975, 0.09415948942951692], 'false,false': [0.06247650359250218, 0.13084411341176838], 'false,false,false': [0.13084411341176838, nan], 'true': [0.0016121093794419412, 0.10334788137189968], 'true,true': [0.0008406193083786746, 0.0], 'true,true,true': [0.0010636862817088345, 0.0005429320952240422], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I), location(A, J) )
%   | | | then return 0.06269438964496693;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.28407486102543733;  // std dev = 3.634, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.17028766342321203;  // std dev = 6.095, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, H) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then if ( interaction(J, A), interaction(I, J) )
%   | | then return 0.7660900577342101;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8096987495145024;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14426794506747473;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.10179184881175644;  // std dev = 5.857, 177.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=47 */
%   | | | else return 0.20039501551195027;  // std dev = 5.100, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.5913404493768221;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.37891922487035545;  // std dev = 0.789, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.04103043989905605;  // std dev = 1.857, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.07993876676530627;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.7900799289247874;  // std dev = 0.318, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.18915306510782576;  // std dev = 0.079, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4795253160965796;  // std dev = 3.807, 68.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | | | else return -0.18394266198031461;  // std dev = 0.113, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0.305069463633629;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.454126760446117;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.4674828354776985;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42936714674074716;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5529221425462024;  // std dev = 1.979, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.719148470338889;  // std dev = 0.318, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.16855140476907593;  // std dev = 0.028, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3184374673585739;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.00485467847642752;  // std dev = 1.844, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.08861959191963815;  // std dev = 4.879, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.38436029817985684;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.31661451964236;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.45702052835016443;  // std dev = 1.823, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return 0.5892844362250702;  // std dev = 0.388, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.14677260540596118;  // std dev = 0.028, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6499874816326608;  // std dev = 0.449, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21108945279614108;  // std dev = 0.253, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4282809135087605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.103238070828947;  // std dev = 4.422, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.24237469699935843;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.14087124309644172;  // std dev = 0.337, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( location(E, F) )
%   | | then if ( phenotype(A, G), phenotype(E, G) )
%   | | | then return -0.02721946990576154;  // std dev = 2.185, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.062243162401170414;  // std dev = 4.543, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | | else if ( interaction(H, E), location(H, F) )
%   | | | then return 0.03279514868555939;  // std dev = 1.187, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.29466077537686064;  // std dev = 1.944, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.48698648046440757;  // std dev = 0.328, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2721047183386691;  // std dev = 0.521, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.052076001868549895;  // std dev = 0.272, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41807937810913115;  // std dev = 0.152, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else return -0.15303645241835975;  // std dev = 0.090, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.32916177948594255;  // std dev = 0.245, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.010550973140379716;  // std dev = 1.860, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.10297440217667711;  // std dev = 3.874, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4896141723503108;  // std dev = 0.909, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.21328577530126502;  // std dev = 0.235, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.05348039845540933;  // std dev = 0.998, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11007930695271115;  // std dev = 0.469, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1358233704209372;  // std dev = 0.208, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( interaction(H, D), enzyme(F, E) )
%   | | | then return 0.10837210046641184;  // std dev = 1.612, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return -0.034175843547675736;  // std dev = 2.499, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( interaction(D, I), enzyme(I, J) )
%   | | | then return -0.18319431299017647;  // std dev = 0.159, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06159367983599989;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( complex(K, M), complex(A, N) )
%   | | | then return 0.0216628653565682;  // std dev = 1.503, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.1380234573038206;  // std dev = 3.213, 69.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.03617074937027902;  // std dev = 1.877, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return -0.019002684979881227;  // std dev = 1.801, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16636766167638248;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return -0.33461215608221984;  // std dev = 0.672, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.12546858739509884;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1844223102332122;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08825996004798416;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.020350036464594237;  // std dev = 0.255, 143.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.20912015740211184;  // std dev = 2.119, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.1262144607079104;  // std dev = 3.579, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | else return -0.20579607033340946;  // std dev = 0.051, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.12982276214298638;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1755794838998222;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.18080535715708962;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.04365204777470596;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.1757649939085399;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(I, J), phenotype(A, K) )
%   | | | then return 0.056169190288582305;  // std dev = 3.535, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
%   | | | else return -0.01527707909885289;  // std dev = 3.162, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.11902404024612893;  // std dev = 0.605, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.032402168373919196;  // std dev = 1.976, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */


Results
   AUC ROC   = 0.994888
   AUC PR    = 0.548048
   CLL	      = -0.178341
   Precision = 0.550388 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.642534


Total learning time: 19.593 seconds
Total inference time: 6.898 seconds
AUC ROC: 0.994888


Results scoring model
   AUC ROC   = 0.984369
   AUC PR    = 0.307261
   CLL	      = -0.212506
   Precision = 0.277992 at threshold = 0.5
   Recall    = 0.654545
   F1        = 0.390244


Total scoring time: 39.12 seconds
Refined model CLL: -0.212506


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.994888
   AUC PR    = 0.548048
   CLL	      = -0.178341
   Precision = 0.550388 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.642534


Total learning time: 66.716 seconds
Total inference time: 6.898 seconds
AUC ROC: 0.994888
Total revision time: 66.716
Best scored revision CLL: -0.212506


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:13
{'AUC ROC': 0.994888, 'AUC PR': 0.548048, 'CLL': -0.178341, 'Precision': [0.550388, 0.5], 'Recall': 0.771739, 'F1': 0.642534, 'Learning time': 66.716, 'Inference time': 6.898, 'parameter_0.4': {'AUC ROC': 0.997101, 'AUC PR': 0.583615, 'CLL': -0.187344, 'Precision': [0.570175, 0.5], 'Recall': 0.706522, 'F1': 0.631068, 'Learning time': 2.3, 'Inference time': 2.532}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7891834178581324;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08672036367093978;  // std dev = 4.968, 140.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=32 */
%   | | | else return 0.12130682983635413;  // std dev = 4.702, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16584124279182108;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | | | else return 0.15083186192878065;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7331799252676825;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.7331799252676823;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5396137021660027;  // std dev = 0.848, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7674631766032309;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.1279629388091542;  // std dev = 4.798, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | | | else return 0.19567258421988984;  // std dev = 4.406, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15857763109209738;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   | | | else return 0.2387785902107528;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.500001206666541;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6180843068800722;  // std dev = 1.906, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.025899681240738444;  // std dev = 3.700, 111.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=16 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7969279092983721;  // std dev = 0.329, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.18497161108597523;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.260625347985977;  // std dev = 1.485, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.10429515553556466;  // std dev = 6.282, 194.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=57 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1909241524811523;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4446367988141819;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.4446367988141817;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.26281861699600007;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.19708067656086506;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6961006017941082;  // std dev = 1.354, 64.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=62 */
%   | | else return -0.16533817854942928;  // std dev = 0.229, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4131372761098738;  // std dev = 0.949, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08449642457405505;  // std dev = 6.312, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | | | else return 0.13560581889672857;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.35486623807231094;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3017267132260285;  // std dev = 0.991, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.37258855820500036;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5150066674537137;  // std dev = 1.941, 66.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=62 */
%   | | else return -0.14352750200599187;  // std dev = 0.181, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7562247168971019;  // std dev = 0.421, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.23529170548064232;  // std dev = 0.355, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.2618223807574108;  // std dev = 0.835, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06065135201425583;  // std dev = 5.410, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2646637769634989;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2468541648954278;  // std dev = 0.969, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, F) )
%   | then return 0.02485186238831029;  // std dev = 4.125, 231.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=65 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.12465348124358254;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.07755902675263979;  // std dev = 5.727, 178.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=57 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12213440544729869;  // std dev = 2.528, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2442987360988153;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.49637569959878297;  // std dev = 1.126, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | else return -0.17045261977279041;  // std dev = 0.632, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24927643679942582;  // std dev = 0.147, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23607442524245031;  // std dev = 1.909, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | else return -0.013543929602560116;  // std dev = 5.321, 255.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=53 */
%   | else if ( interaction(A, H) )
%   | | then return 0.06539636168177715;  // std dev = 1.432, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09317319246910528;  // std dev = 2.283, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19258610216370586;  // std dev = 0.113, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17033155875984418;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2491578132261661;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.0026118330368926812;  // std dev = 3.668, 244.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=65 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.09604486602272994;  // std dev = 1.035, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.05638777389531742;  // std dev = 5.402, 181.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=57 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11238030547676207;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.13610640465565002;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1620920134714291;  // std dev = 0.074, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18809677327188656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07923884570897302;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, G) )
%   | then return 0.0032107006340722838;  // std dev = 3.644, 241.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=65 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4338592206230047;  // std dev = 3.553, 91.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=74 */
%   | | | else return -0.233121058282305;  // std dev = 0.570, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.13175746869491484;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14714374573039635;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19198216614817198;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0193381236629356;  // std dev = 1.293, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.0899396283848066;  // std dev = 1.645, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | else if ( interaction(A, I) )
%   | | then return 0.0054461519758966575;  // std dev = 3.541, 234.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=62 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.048777567890256925;  // std dev = 5.032, 200.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=68 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996453
   AUC PR    = 0.546922
   CLL	      = -0.184374
   Precision = 0.556522 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.618357


Total learning time: 2.932 seconds
Total inference time: 2.802 seconds
AUC ROC: 0.996453


Results scoring model
   AUC ROC   = 0.987406
   AUC PR    = 0.297734
   CLL	      = -0.203397
   Precision = 0.266515 at threshold = 0.5
   Recall    = 0.704819
   F1        = 0.386777


Total scoring time: 8.136 seconds
Parameter learned model CLL: -0.203397


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.365, 2, 27], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.894, 1, 4], 'false,false,true,true': [4.968, 108, 32], 'false,false,true,false': [4.702, 84, 30], 'false,false,false,true': [6.226, 126, 56], 'false,false,false,false': [2.913, 29, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 15], 'true,false': [2.98e-08, 0, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.848, 1, 4], 'false,true,false': [0.026, 0, 5], 'false,false,true,true': [4.798, 82, 32], 'false,false,true,false': [4.406, 55, 30], 'false,false,false,true': [6.163, 118, 56], 'false,false,false,false': [2.683, 18, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.365, 2, 27], 'false,true,true,true': [1.906, 4, 16], 'false,true,true,false': [3.7, 95, 16], 'false,true,false,true': [0.329, 0, 33], 'false,true,false,false': [0.0, 85, 0], 'false,false,true,true': [1.485, 4, 5], 'false,false,true,false': [6.282, 137, 57], 'false,false,false,true': [2.712, 19, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 3], 'true,false': [1.279, 2, 9], 'false,true,true,true': [0.771, 1, 3], 'false,true,true,false': [1.354, 2, 62], 'false,true,false': [0.229, 197, 0], 'false,false,true': [0.949, 1, 6], 'false,false,false,true': [6.312, 139, 56], 'false,false,false,false': [2.763, 21, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.057, 0, 8], 'true,false': [0.991, 1, 19], 'false,true,true,true': [0.02, 0, 3], 'false,true,true,false': [1.941, 4, 62], 'false,true,false': [0.181, 200, 0], 'false,false,true,true': [0.421, 0, 29], 'false,false,true,false': [0.355, 47, 0], 'false,false,false,true': [0.835, 1, 4], 'false,false,false,false': [5.41, 104, 41]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.969, 1, 23], 'false,true': [4.125, 166, 65], 'false,false,true,true': [1.374, 3, 5], 'false,false,true,false': [5.727, 121, 57], 'false,false,false,true': [2.528, 18, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.086, 0, 7], 'true,true,false': [1.126, 1, 56], 'true,false': [0.632, 106, 0], 'false,true,true,true': [0.147, 0, 13], 'false,true,true,false': [1.909, 6, 20], 'false,true,false': [5.321, 202, 53], 'false,false,true': [1.432, 17, 9], 'false,false,false,true': [2.283, 12, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.113, 0, 20], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.024, 0, 5], 'false,true': [3.668, 179, 65], 'false,false,true,true': [1.035, 4, 5], 'false,false,true,false': [5.402, 124, 57], 'false,false,false,true': [0.892, 4, 4], 'false,false,false,false': [2.108, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.074, 0, 18], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.931, 1, 8], 'false,true': [3.644, 176, 65], 'false,false,true,true': [3.553, 17, 74], 'false,false,true,false': [0.57, 126, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.08, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.293, 2, 8], 'false,true': [1.645, 4, 11], 'false,false,true': [3.541, 172, 62], 'false,false,false,true': [5.032, 132, 68], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06420927467300945, 0.20370448132222554], 'false': [0.14876033057851218, 0.1982604415261368], 'false,false': [0.1845123690247387, 0.2119487622916208], 'false,false,false': [0.2130177514792904, 0.20701963117192096], 'false,false,true': [0.17632653061224607, 0.19390581717451588], 'false,true': [1.4802973661668753e-16, 0.18750000000000006], 'false,true,false': [0.22222222222222224, 0.15999999999999986], 'false,true,true': [0.0, 0.0]}, {'': [0.0, 0.2208315490799483], 'false': [0.08497478201390649, 0.21839323567064534], 'false,false': [0.21433441429690905, 0.2222627450185271], 'false,false,false': [0.2182586867485822, 0.23999999999999977], 'false,false,true': [0.20190827947060772, 0.2283737024221461], 'false,true': [0.1438580933000988, 0.0001337792270537541], 'false,true,true': [nan, 0.1438580933000988], 'true': [-2.3684757858670006e-16, 7.401486830834377e-17]}, {'': [0.06420927467300856, 0.20083819542198847], 'false': [0.19036348243372428, 0.21110883503048453], 'false,false': [0.20627492136438236, 0.2372528616024972], 'false,false,false': [0.2372528616024972, nan], 'false,false,true': [0.24492282031330637, 0.20339846941327092], 'false,true': [0.18591719220114253, 0.19514381394930808], 'false,true,false': [0.0032889474377723552, -9.926699984883753e-17], 'false,true,true': [0.18167287200292206, 0.12336660985309571]}, {'': [0.06420927467300822, 0.17585212837148634], 'false': [0.14496811213196326, 0.20917396608615266], 'false,false': [0.12870162902086021, 0.20857064447912063], 'false,false,false': [0.20432829865838317, 0.23140495867768607], 'false,true': [0.049478386447652026, 0.0002655883763679038], 'true': [-1.4802973661668753e-16, 0.14876033057851232], 'false,true,true': [0.1487361306374101, 0.02862649003698098], 'true,true': [-1.7763568394002506e-16, 0.0]}, {'': [0.03578204986916424, 0.1508131457872271], 'false': [0.09549676948342692, 0.21406631826504863], 'false,false': [0.23597551796813301, 0.20103894427898947], 'false,false,true': [0.0061091451563182264, 0.0026758599840417964], 'false,false,false': [0.1394708435649529, 0.20181298947445991], 'false,true': [0.05542960716533901, 0.000163944713235753], 'false,true,true': [0.00013382482376996427, 0.057061185824098686], 'true': [0.000410692344184338, 0.049123790278902166]}, {'': [0.03359054537302368, 0.13100858356637707], 'false': [0.07364352749401153, 0.19045686894792635], 'false,false': [0.18657394648597292, 0.21297195826020401], 'false,false,false': [0.21297195826020401, nan], 'false,false,true': [0.2359854922018116, 0.1842578098413567], 'true': [0.0, 0.039143657847287315], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.10810360578325277, 0.12223244097260681], 'false': [0.11618399810503469, 0.15804874112231715], 'false,false': [0.0788650500347357, 0.26055144474175385], 'false,false,false': [0.26055144474175385, nan], 'false,true': [0.09401984027261315, 0.1110142834568604], 'true': [0.026109519375581286, 0.0037647538457190725], 'false,true,true': [0.001661416643433299, 0.14014095438415292], 'true,true': [0.0010622304217727569, 0.022235508968752316]}, {'': [0.0010423148473743403, 0.10772187923188829], 'false': [0.05514963028431311, 0.1649265095563794], 'false,false': [0.1592994727191388, 0.20167024666100172], 'false,false,false': [0.09948302685883678, 0.24691358024691365], 'false,false,true': [0.11912430767234843, 0.1612226372564079], 'true': [0.0006338261652792943, 0.0013506125311166398], 'true,false': [nan, 0.0013506125311166478], 'true,false,false': [0.0, 0.00011554943122349393]}, {'': [0.032705326791652965, 0.10905806984246133], 'false': [0.055092643963697556, 0.16800227697158437], 'false,false': [0.16800227697158437, nan], 'false,false,true': [0.13873721274392178, 0.002582834051824335], 'true': [0.0003006272874749336, 0.08770423392863762], 'true,false': [0.0, 0.09626414397026811], 'true,false,true': [nan, 0.0]}, {'': [0.06628184642055662, 0.09122606142207541], 'false': [0.18035011226993672, 0.08770119636101664], 'false,false': [0.053585592518185725, 0.12660410005619904], 'false,false,false': [0.12660410005619904, nan], 'true': [0.000668590984004373, 0.16727178624235498], 'true,true': [0.0004759407616921507, 0.0], 'true,true,true': [0.0, 0.0005858801239768345], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.10490218185275908;  // std dev = 3.783, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1430951716586527;  // std dev = 6.156, 186.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=53 */
%   | | | else return 0.22994380689438437;  // std dev = 6.036, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.5537238463344909;  // std dev = 0.371, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0.734605575249311;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2763394517212514;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.08848314032177451;  // std dev = 3.791, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.11443347437419758;  // std dev = 6.200, 193.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=53 */
%   | | | else return 0.17509700811160378;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5155375605683741;  // std dev = 0.254, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.011681202761425731;  // std dev = 2.571, 61.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | | | else return 0.09805036624206107;  // std dev = 4.138, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7975971471195156;  // std dev = 0.360, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.1845039613619794;  // std dev = 0.086, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.09121578482690555;  // std dev = 5.281, 141.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=39 */
%   | | | else return 0.21834422616235635;  // std dev = 2.766, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.36882344568506775;  // std dev = 1.250, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.2559569157914283;  // std dev = 2.975, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4628139590371087;  // std dev = 0.010, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.4444106870300372;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.7049792945959809;  // std dev = 1.424, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return 0.6054427325356103;  // std dev = 1.287, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.1698251956662878;  // std dev = 0.411, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6891317412463044;  // std dev = 1.325, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.20333332910455856;  // std dev = 0.317, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.20102805269497354;  // std dev = 3.692, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.10918792366615686;  // std dev = 4.549, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.005304718218127539;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.34991672434886895;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2960630806700756;  // std dev = 0.225, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5422224139282911;  // std dev = 0.209, 68.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=65 */
%   | | else return -0.14456909378719085;  // std dev = 0.027, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.20057706018976384;  // std dev = 2.515, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.048316999756377446;  // std dev = 5.037, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return -0.08404326616021465;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.20343879984652696;  // std dev = 3.146, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.28087185699254236;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2439421164272002;  // std dev = 0.206, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), enzyme(E, G) )
%   | | then return -0.15810825326972777;  // std dev = 0.103, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(A, H), complex(E, H) )
%   | | | then return -0.10586390286390021;  // std dev = 0.801, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.043302662929412074;  // std dev = 3.070, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), location(K, I) )
%   | | | then return 0.032024984003260086;  // std dev = 5.775, 245.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=74 */
%   | | | else return 0.15252136115907006;  // std dev = 3.641, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07124040786796848;  // std dev = 1.784, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.059998573948952943;  // std dev = 1.463, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2947645796649109;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5093219181048644;  // std dev = 0.228, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return -0.20754804606503016;  // std dev = 0.089, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.38001951281840035;  // std dev = 0.214, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.13392943287458484;  // std dev = 0.741, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return 0.025474686372700027;  // std dev = 4.972, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2298117231404062;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.024187946307619963;  // std dev = 1.833, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.06474419439652813;  // std dev = 1.960, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.18162082316133293;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.4388107377193271;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19639935060898833;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19444731096942144;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then return -0.010481446924072603;  // std dev = 0.236, 262.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=65 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5790168798672736;  // std dev = 0.541, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.22444167869526;  // std dev = 0.266, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return -0.0043192725164671215;  // std dev = 3.927, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return 0.0643533660721812;  // std dev = 3.817, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11134431721421785;  // std dev = 0.228, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.15600676735818686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.2761654772230717;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1611839276109362;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.06912423267042073;  // std dev = 0.007, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3785335608532278;  // std dev = 1.444, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.16740048985489894;  // std dev = 0.646, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.03429235302071491;  // std dev = 1.980, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return -4.5016563309702997E-4;  // std dev = 5.633, 252.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=67 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17856272003818036;  // std dev = 0.071, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), location(A, G) )
%   | | then if ( interaction(H, E), enzyme(H, I) )
%   | | | then return -0.00205876404465817;  // std dev = 2.558, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | | else return -0.05975743559503104;  // std dev = 1.398, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3726497044665724;  // std dev = 0.289, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1985293222624931;  // std dev = 0.315, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.31315789899322066;  // std dev = 0.377, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12755716196686148;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.031081649968269138;  // std dev = 4.151, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | | else return -0.016641840288796853;  // std dev = 4.280, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */


Results
   AUC ROC   = 0.981706
   AUC PR    = 0.504446
   CLL	      = -0.19698
   Precision = 0.544 at threshold = 0.5
   Recall    = 0.73913
   F1        = 0.626728


Total learning time: 9.295 seconds
Total inference time: 2.75 seconds
AUC ROC: 0.981706


Results scoring model
   AUC ROC   = 0.975992
   AUC PR    = 0.298896
   CLL	      = -0.202809
   Precision = 0.278571 at threshold = 0.5
   Recall    = 0.704819
   F1        = 0.399317


Total scoring time: 6.73 seconds
Refined model CLL: -0.202809


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981706
   AUC PR    = 0.504446
   CLL	      = -0.19698
   Precision = 0.544 at threshold = 0.5
   Recall    = 0.73913
   F1        = 0.626728


Total learning time: 27.093 seconds
Total inference time: 2.75 seconds
AUC ROC: 0.981706
Total revision time: 27.093
Best scored revision CLL: -0.202809


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:38:46
{'AUC ROC': 0.981706, 'AUC PR': 0.504446, 'CLL': -0.19698, 'Precision': [0.544, 0.5], 'Recall': 0.73913, 'F1': 0.626728, 'Learning time': 27.093, 'Inference time': 2.75, 'parameter_0.6': {'AUC ROC': 0.996453, 'AUC PR': 0.546922, 'CLL': -0.184374, 'Precision': [0.556522, 0.5], 'Recall': 0.695652, 'F1': 0.618357, 'Learning time': 2.932, 'Inference time': 2.802}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8040948810454575;  // std dev = 1.375, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08972788246793273;  // std dev = 5.815, 190.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=44 */
%   | | | else return 0.14721143509951196;  // std dev = 5.129, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15893018509951332;  // std dev = 7.338, 256.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=77 */
%   | | | else return 0.12600607795665522;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7302527148033087;  // std dev = 9.42e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.730252714803309;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7536146464791394;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5532903421032209;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.08730873426727095;  // std dev = 5.781, 183.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=44 */
%   | | | else return 0.1555068931041223;  // std dev = 5.030, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1519661690359637;  // std dev = 7.266, 245.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=77 */
%   | | | else return 0.14823003746052754;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4870778983611381;  // std dev = 1.662, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.719818795827165;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.02754168682743477;  // std dev = 4.256, 153.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=21 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.794649054629374;  // std dev = 0.408, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.1847430880782634;  // std dev = 0.186, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3884993841892791;  // std dev = 1.509, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.12251306247410378;  // std dev = 7.278, 252.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=78 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14053461048687513;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.39941415101007993;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.27820202979795866;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2630505146464434;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4341236774877689;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6353751609719879;  // std dev = 2.771, 89.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=81 */
%   | | else return -0.16194900634904238;  // std dev = 0.257, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.43763113737010845;  // std dev = 0.991, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08779154880526695;  // std dev = 7.374, 264.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=77 */
%   | | | else return 0.1123295316231867;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.33405453288707976;  // std dev = 0.971, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0.349590511324258;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.1728561456998249;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5507923008317145;  // std dev = 1.913, 84.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=81 */
%   | | else return -0.13975992983192354;  // std dev = 0.168, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.39392007322331246;  // std dev = 5.851, 149.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=94 */
%   | | | else return -0.2178687988265243;  // std dev = 0.004, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.40422435512418486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16647352838403334;  // std dev = 1.753, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.28067556837438234;  // std dev = 0.033, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14839553114534665;  // std dev = 1.583, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else if ( interaction(A, F) )
%   | then return 0.019271683646164526;  // std dev = 4.725, 335.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=86 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.36934186526733986;  // std dev = 0.779, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04866479469233636;  // std dev = 6.826, 270.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=78 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11844006370587137;  // std dev = 2.903, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19009559354204314;  // std dev = 1.422, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | else return 0.25218980089572257;  // std dev = 7.026, 285.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=178 */
%   | else return -0.16081041228032084;  // std dev = 1.013, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24231560471157754;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.04968044978454137;  // std dev = 1.441, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.019833981628881565;  // std dev = 0.597, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.4786899658807605;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.20379307968978758;  // std dev = 0.076, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return 0.12089158204319102;  // std dev = 0.966, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.01731206811283736;  // std dev = 4.225, 303.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07981164589160192;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.05889486365289767;  // std dev = 6.250, 240.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=78 */
%   | | else if ( location(A, J) )
%   | | | then return -0.03700496807416138;  // std dev = 2.737, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return -0.1253585308014732;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1356127864779906;  // std dev = 0.960, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20410791660033956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20542085847520722;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G) )
%   | then return 0.00441663522808163;  // std dev = 4.372, 314.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=86 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4574983182930089;  // std dev = 3.853, 117.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=100 */
%   | | | else return -0.22362275041875598;  // std dev = 1.350, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.1501702123360522;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.15439381653993656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0.1325541785829798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12904139346499888;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.054160337583340774;  // std dev = 1.291, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.17061662976140726;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then return -0.010556714267973635;  // std dev = 4.427, 331.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=81 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021916952721915177;  // std dev = 5.904, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996587
   AUC PR    = 0.513954
   CLL	      = -0.174711
   Precision = 0.488636 at threshold = 0.5
   Recall    = 0.467391
   F1        = 0.477778


Total learning time: 7.458 seconds
Total inference time: 5.97 seconds
AUC ROC: 0.996587


Results scoring model
   AUC ROC   = 0.982675
   AUC PR    = 0.205785
   CLL	      = -0.205736
   Precision = 0.170769 at threshold = 0.5
   Recall    = 0.502262
   F1        = 0.254879


Total scoring time: 31.313 seconds
Parameter learned model CLL: -0.205736


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.375, 2, 35], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.866, 1, 3], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.926, 1, 6], 'false,false,true,true': [5.815, 146, 44], 'false,false,true,false': [5.129, 91, 37], 'false,false,false,true': [7.338, 179, 77], 'false,false,false,false': [3.314, 41, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [9.42e-08, 0, 20], 'true,false': [0.0, 0, 15], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.042, 0, 5], 'false,true,false': [1.275, 2, 8], 'false,false,true,true': [5.781, 139, 44], 'false,false,true,false': [5.03, 80, 37], 'false,false,false,true': [7.266, 168, 77], 'false,false,false,false': [3.226, 34, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.662, 3, 35], 'false,true,true,true': [1.629, 3, 23], 'false,true,true,false': [4.256, 132, 21], 'false,true,false,true': [0.408, 0, 42], 'false,true,false,false': [0.186, 98, 0], 'false,false,true,true': [1.509, 3, 7], 'false,false,true,false': [7.278, 174, 78], 'false,false,false,true': [3.196, 32, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.977, 1, 21], 'true,true,false': [0.913, 1, 5], 'true,false': [1.279, 2, 9], 'false,true,true,true': [0.094, 0, 5], 'false,true,true,false': [2.771, 8, 81], 'false,true,false': [0.257, 213, 0], 'false,false,true': [0.991, 1, 8], 'false,false,false,true': [7.374, 187, 77], 'false,false,false,false': [3.211, 33, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.971, 1, 34], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.879, 1, 5], 'false,true,true,false': [1.913, 3, 81], 'false,true,false': [0.168, 241, 0], 'false,false,true,true': [5.851, 55, 94], 'false,false,true,false': [0.004, 150, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.753, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.033, 0, 18], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.583, 3, 17], 'false,true': [4.725, 249, 86], 'false,false,true,true': [0.779, 1, 7], 'false,false,true,false': [6.826, 192, 78], 'false,false,false,true': [2.903, 27, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [1.422, 3, 32], 'true,true,false': [7.026, 107, 178], 'true,false': [1.013, 295, 0], 'false,true,true,true': [0.006, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [1.441, 15, 4], 'false,false,true': [0.597, 5, 2], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.076, 0, 26], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.966, 1, 9], 'true,false,false,false': [0.0, 0, 0], 'false,true': [4.225, 217, 86], 'false,false,true,true': [1.264, 3, 7], 'false,false,true,false': [6.25, 162, 78], 'false,false,false,true': [2.737, 36, 12], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.96, 1, 26], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.012, 0, 8], 'false,true': [4.372, 228, 86], 'false,false,true,true': [3.853, 17, 100], 'false,false,true,false': [1.35, 190, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.047, 0, 19], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.005, 0, 2], 'true,false': [1.291, 3, 11], 'false,true': [0.03, 0, 14], 'false,false,true': [4.427, 250, 81], 'false,false,false,true': [5.904, 200, 92], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.051132213294377164, 0.20502448983504215], 'false': [0.15234374999999972, 0.19919627110103522], 'false,false': [0.18983624065503796, 0.20792241946088205], 'false,false,false': [0.21031188964843783, 0.19610969387755048], 'false,false,true': [0.17795013850415628, 0.20550537109375028], 'false,true': [0.15999999999999986, 0.14876033057851235], 'false,true,true': [0.0, 0.18750000000000006], 'false,true,false': [0.18750000000000006, 0.12244897959183662]}, {'': [-5.075305255429287e-16, 0.2097003866766678], 'false': [0.11733023111767042, 0.20617625526007502], 'false,false': [0.196839504673434, 0.21499569130852192], 'false,false,false': [0.21551020408163188, 0.21241149521032937], 'false,false,true': [0.18262713129684563, 0.21623201110380552], 'false,true': [0.00034954874081982723, 0.1624439633315303], 'false,true,true': [nan, 0.0003495487408196496], 'true': [4.440892098500626e-16, -2.3684757858670006e-16]}, {'': [0.07271468144044275, 0.2038910109730855], 'false': [0.19325389732645948, 0.21403780463500985], 'false,false': [0.21344445723869862, 0.21729289271163424], 'false,false,false': [0.21729289271163424, nan], 'false,false,true': [0.22765896376810657, 0.21018005656738561], 'false,true': [0.18538747230111516, 0.20286983718051854], 'false,true,false': [0.003959281322061988, 0.00035452750347772115], 'false,true,true': [0.10207100591716009, 0.1184159938485204]}, {'': [0.09204470742932262, 0.1833169627731403], 'false': [0.15732423220102798, 0.20793154909541742], 'false,false': [0.10906829891662355, 0.20742559844090722], 'false,false,false': [0.2059842109041725, 0.21484374999999978], 'false,true': [0.08380224711817813, 0.000310056052134746], 'true': [0.06632653061224478, 0.14876033057851246], 'false,true,true': [0.001755453891113179, 0.08625724733245947], 'true,true': [0.043388429752066075, 0.13888888888888892]}, {'': [0.026180439997767327, 0.15549588808485795], 'false': [0.10353505881519073, 0.209151495689495], 'false,false': [0.20806940696244397, 0.223374726838131], 'false,false,false': [0.0, 0.2365198655893986], 'false,false,true': [0.22976644273180308, 1.0180845311088168e-07], 'false,true': [0.05813744040070393, 0.00011712769296638431], 'false,true,true': [0.12879670400073043, 0.04356796765316718], 'true': [0.026921747940632124, 0.0]}, {'': [0.07036322590892362, 0.120976810569609], 'false': [0.06663754793795162, 0.17675410377779166], 'false,false': [0.1726714836966362, 0.20059235984031917], 'false,false,false': [0.20059235984031917, nan], 'false,false,true': [0.07578819183983451, 0.17258285418064345], 'true': [6.155790942688168e-05, 0.1253461968851111], 'true,true': [6.155790942688168e-05, nan], 'true,true,true': [6.155790942688168e-05, nan]}, {'': [0.1265968917732231, 0.1308945093096615], 'false': [0.10627276062394173, 0.14935403127418082], 'false,false': [0.05099312966533217, 0.18750000000000003], 'false,false,false': [0.18750000000000003, nan], 'true': [0.1609496822655415, 0.0034763406118726715], 'true,true': [0.057797273340452766, 0.17319580580015623], 'false,true': [1.5316004141271988e-05, 0.10933759328575177], 'false,true,true': [1.5316004141271988e-05, nan]}, {'': [0.027455232770370215, 0.1126008105059485], 'false': [0.0589156014125607, 0.16487055947179266], 'false,false': [0.16263928323420165, 0.16361188978487495], 'false,false,false': [0.15607859182177217, 0.1874999999999999], 'false,false,true': [0.1597343155719692, 0.16274282308229243], 'true': [0.00022421797341309037, 0.09329228468375692], 'true,false': [nan, 0.09329228468375692], 'true,false,false': [0.09329228468375692, nan]}, {'': [0.02650253867869851, 0.11196629803113745], 'false': [0.060873283616653194, 0.16372127683320295], 'false,false': [0.16372127683320295, nan], 'false,false,true': [0.1268852285572309, 0.00959888755361063], 'true': [0.034117765373108885, 1.7243104049818265e-05], 'true,false': [0.0, 1.9206956904174732e-05], 'true,false,true': [nan, 0.0]}, {'': [0.04719584883465912, 0.08634470902672806], 'false': [6.3833195578507e-05, 0.08767832206226359], 'false,false': [0.05922129243617023, 0.1193758425785486], 'false,false,false': [0.1193758425785486, nan], 'true': [0.0001435155924649586, 0.11905123636538238], 'true,true': [0.00011033789387594472, 1.0968586031207447e-05], 'true,true,true': [0.00011525320982481479, 0.0], 'true,true,false': [0.0, 1.2339659285109245e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(C, D), location(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.643863220813798;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.10814893509951214;  // std dev = 4.743, 120.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=30 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.23461952333480512;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.14796616747549224;  // std dev = 8.879, 383.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=111 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7379938942424149;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6090892875174094;  // std dev = 0.318, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5694856335551262;  // std dev = 0.935, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.7845635549164761;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6877382381450722;  // std dev = 1.833, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.01308618111353158;  // std dev = 5.111, 211.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1555325621642444;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16686308889677876;  // std dev = 8.976, 365.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=120 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5281192054939562;  // std dev = 0.221, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13469853953351507;  // std dev = 0.099, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.11765661698393443;  // std dev = 5.294, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7254816835818347;  // std dev = 1.781, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1746510534217455;  // std dev = 0.140, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.4879384780792741;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06751342067839769;  // std dev = 3.073, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1426879601130029;  // std dev = 5.293, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   | | | else return 0.22252450116340605;  // std dev = 4.883, 101.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.4416959589594472;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.5060008472733556;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.45413157309839236;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.688930083711074;  // std dev = 0.169, 88.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=86 */
%   | | else return -0.16544089444397309;  // std dev = 0.539, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, J) )
%   | | | then return 0.08413827274915155;  // std dev = 5.272, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return 0.2614297638318968;  // std dev = 2.820, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5950624685941712;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07890024972861948;  // std dev = 5.291, 133.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.27813329159300765;  // std dev = 0.220, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else return 0.36259750620873576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.4603953982287297;  // std dev = 1.978, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return 0.5926049249662226;  // std dev = 0.499, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else return -0.14508592153296135;  // std dev = 0.420, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.41260212471488894;  // std dev = 5.617, 143.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=94 */
%   | | | else return -0.23212482141924537;  // std dev = 0.273, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3904974869125476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.01565408573411974;  // std dev = 1.980, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then return 0.2756722647854861;  // std dev = 0.087, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( complex(A, E) )
%   | | then return 0.29031553130591736;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.45076852092233594;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.29249827848965754;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.0909555142807126;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), complex(G, J) )
%   | | | then return -0.006907884902498485;  // std dev = 3.191, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.04335462898772926;  // std dev = 3.406, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.014990641775197872;  // std dev = 2.486, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.08726082640982831;  // std dev = 6.892, 310.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=114 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return -0.002867681475068368;  // std dev = 0.344, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.24562277626387694;  // std dev = 2.188, 49.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=41 */
%   | | | else return 0.007973035726939746;  // std dev = 5.924, 301.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=75 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), interaction(L, J) )
%   | | | then return 0.35981155558427375;  // std dev = 0.619, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14694838943630173;  // std dev = 2.009, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else return 0.041277703995700694;  // std dev = 0.338, 138.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=49 */
%   else if ( interaction(M, A), interaction(N, M) )
%   | then return -0.005357297017309384;  // std dev = 0.321, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | else if ( interaction(A, P) )
%   | | then return 0.061684428755468666;  // std dev = 0.531, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.26061340997140575;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21723058712452645;  // std dev = 0.040, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3984315979066103;  // std dev = 0.611, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6002650958995518;  // std dev = 0.513, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.1333372438422145;  // std dev = 0.429, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.24188701512182667;  // std dev = 0.351, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08833660839649343;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.05410042807900111;  // std dev = 7.145, 364.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=123 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.1650278853553036;  // std dev = 1.114, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.046190633671341054;  // std dev = 2.311, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14314611403923727;  // std dev = 0.192, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return -0.4531323406866807;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.38015881107990324;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1938596186268199;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.07710126485902002;  // std dev = 0.070, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(A, G), complex(G, I) )
%   | | | then return 0.03599637076307021;  // std dev = 1.093, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.01814255691303075;  // std dev = 3.956, 172.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.011417278440090314;  // std dev = 3.427, 171.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=45 */
%   | | | else return 0.03374332204705487;  // std dev = 6.511, 262.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=84 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.14377174921162963;  // std dev = 0.166, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.27072487751596586;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.15871493689517424;  // std dev = 0.241, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.17725240581161453;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 9.764037789998792E-4;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return -0.04527686662462374;  // std dev = 2.221, 131.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=23 */
%   | | | else return 0.001164439301699354;  // std dev = 5.867, 260.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=72 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.08668479562346552;  // std dev = 2.288, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   | | | else return 0.014291090232304779;  // std dev = 4.881, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */


Results
   AUC ROC   = 0.987047
   AUC PR    = 0.402476
   CLL	      = -0.215184
   Precision = 0.470588 at threshold = 0.5
   Recall    = 0.521739
   F1        = 0.494845


Total learning time: 12.296 seconds
Total inference time: 3.285 seconds
AUC ROC: 0.987047


Results scoring model
   AUC ROC   = 0.972224
   AUC PR    = 0.2648
   CLL	      = -0.225525
   Precision = 0.237094 at threshold = 0.5
   Recall    = 0.561086
   F1        = 0.333333


Total scoring time: 14.451 seconds
Refined model CLL: -0.225525


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996587
   AUC PR    = 0.513954
   CLL	      = -0.174711
   Precision = 0.488636 at threshold = 0.5
   Recall    = 0.467391
   F1        = 0.477778


Total learning time: 65.518 seconds
Total inference time: 5.97 seconds
AUC ROC: 0.996587
Total revision time: 65.518
Best scored revision CLL: -0.205736


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:40:01
{'AUC ROC': 0.996587, 'AUC PR': 0.513954, 'CLL': -0.174711, 'Precision': [0.488636, 0.5], 'Recall': 0.467391, 'F1': 0.477778, 'Learning time': 65.518, 'Inference time': 5.97, 'parameter_0.8': {'AUC ROC': 0.996587, 'AUC PR': 0.513954, 'CLL': -0.174711, 'Precision': [0.488636, 0.5], 'Recall': 0.467391, 'F1': 0.477778, 'Learning time': 7.458, 'Inference time': 5.97}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8137044906550676;  // std dev = 1.382, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08228686613399509;  // std dev = 6.352, 232.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=52 */
%   | | | else return 0.16533847758317166;  // std dev = 5.706, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14593963277392893;  // std dev = 8.397, 344.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=99 */
%   | | | else return 0.21663950113724814;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6866889287612685;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.7283555954279352;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7330729979326023;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.676162871327631;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.07997689612366188;  // std dev = 6.319, 224.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=52 */
%   | | | else return 0.08680722032660101;  // std dev = 5.937, 188.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=47 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1650969605528332;  // std dev = 8.171, 304.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=99 */
%   | | | else return 0.12655492018274295;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5467429956777606;  // std dev = 0.995, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6251054593778692;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.03145513095795339;  // std dev = 4.807, 204.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=27 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7856138665347466;  // std dev = 1.073, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1770926686644932;  // std dev = 0.198, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.44408394404931667;  // std dev = 1.305, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.1270170209529509;  // std dev = 8.261, 321.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=101 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1764282254742489;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43648214353097536;  // std dev = 0.020, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.43170742845639726;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.35216088171212334;  // std dev = 0.962, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3062636653144422;  // std dev = 0.980, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7099315479387338;  // std dev = 1.721, 102.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=99 */
%   | | else return -0.15669148233022684;  // std dev = 0.200, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.44574145115917313;  // std dev = 0.917, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10893209682167188;  // std dev = 8.237, 315.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=99 */
%   | | | else return 0.09918067010759474;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.33694793827794994;  // std dev = 0.030, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.28892576863617886;  // std dev = 0.968, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.38195098522388715;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5489947142994708;  // std dev = 1.996, 103.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=99 */
%   | | else return -0.13837170459671713;  // std dev = 0.281, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5787407174142173;  // std dev = 3.408, 82.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=68 */
%   | | | else return -0.22405409206604654;  // std dev = 0.074, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.377539067647754;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09742663256437593;  // std dev = 6.155, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.265787706187718;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24003500432076696;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(A, F) )
%   | then return 0.024400748950098968;  // std dev = 5.237, 389.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=105 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2382338600805931;  // std dev = 1.144, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.05625140334027885;  // std dev = 7.715, 335.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=101 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.22067840593771057;  // std dev = 2.858, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.221498348892034;  // std dev = 0.824, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0.3826289518852344;  // std dev = 4.220, 164.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=134 */
%   | else return -0.15930652912580448;  // std dev = 0.955, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2255410211938664;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.33968658874701135;  // std dev = 1.196, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.00374193204987282;  // std dev = 6.207, 274.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=66 */
%   | else if ( interaction(A, H) )
%   | | then return 0.07332206939120081;  // std dev = 1.415, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11239709162285404;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18521727213108757;  // std dev = 0.087, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.2113937469370189;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.21880838576049802;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.005195548706253049;  // std dev = 4.642, 393.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=105 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.018009018889497772;  // std dev = 1.681, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.04034511763910937;  // std dev = 7.270, 335.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=101 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.018902453135529806;  // std dev = 1.884, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.07066998004665653;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.12880878734056353;  // std dev = 0.997, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16068206340565994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.02096489038442981;  // std dev = 1.481, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(A, G) )
%   | then return -8.024490186522239E-4;  // std dev = 4.630, 407.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=105 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5038645727359499;  // std dev = 3.770, 143.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=129 */
%   | | | else return -0.222895457656308;  // std dev = 0.744, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1393128141051626;  // std dev = 0.000733, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.14949248407998503;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08547192191024826;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.004943791517994289;  // std dev = 1.799, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.02766288197587107;  // std dev = 1.494, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then return -0.014393889350975594;  // std dev = 4.764, 429.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=99 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01596813419732514;  // std dev = 6.700, 383.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996203
   AUC PR    = 0.571558
   CLL	      = -0.180292
   Precision = 0.54902 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.57732


Total learning time: 4.681 seconds
Total inference time: 2.715 seconds
AUC ROC: 0.996203


Results scoring model
   AUC ROC   = 0.984397
   AUC PR    = 0.234441
   CLL	      = -0.198817
   Precision = 0.208511 at threshold = 0.5
   Recall    = 0.707581
   F1        = 0.322104


Total scoring time: 16.243 seconds
Parameter learned model CLL: -0.198817


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.382, 2, 43], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 4], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [1.5, 3, 9], 'false,false,true,true': [6.352, 180, 52], 'false,false,true,false': [5.706, 106, 47], 'false,false,false,true': [8.397, 245, 99], 'false,false,false,false': [3.491, 34, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.979, 1, 23], 'true,false': [0.0, 0, 20], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.057, 0, 7], 'false,true,false': [0.953, 1, 10], 'false,false,true,true': [6.319, 172, 52], 'false,false,true,false': [5.937, 141, 47], 'false,false,false,true': [8.171, 205, 99], 'false,false,false,false': [3.655, 45, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.995, 1, 43], 'false,true,true,true': [2.348, 7, 26], 'false,true,true,false': [4.807, 177, 27], 'false,true,false,true': [1.073, 1, 52], 'false,true,false,false': [0.198, 117, 0], 'false,false,true,true': [1.305, 3, 9], 'false,false,true,false': [8.261, 220, 101], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.02, 0, 25], 'true,true,false': [0.012, 0, 6], 'true,false': [0.962, 1, 12], 'false,true,true,true': [0.98, 1, 6], 'false,true,true,false': [1.721, 3, 99], 'false,true,false': [0.2, 280, 0], 'false,false,true': [0.917, 1, 11], 'false,false,false,true': [8.237, 216, 99], 'false,false,false,false': [3.603, 41, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.03, 0, 23], 'true,false': [0.968, 1, 20], 'false,true,true,true': [0.204, 0, 6], 'false,true,true,false': [1.996, 4, 99], 'false,true,false': [0.281, 276, 0], 'false,false,true,true': [3.408, 14, 68], 'false,false,true,false': [0.074, 133, 0], 'false,false,false,true': [0.131, 0, 5], 'false,false,false,false': [6.155, 118, 56]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.009, 0, 13], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.984, 1, 30], 'false,true': [5.237, 284, 105], 'false,false,true,true': [1.144, 2, 9], 'false,false,true,false': [7.715, 234, 101], 'false,false,false,true': [2.858, 21, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.824, 1, 25], 'true,true,false': [4.22, 30, 134], 'true,false': [0.955, 295, 0], 'false,true,true,true': [0.022, 0, 13], 'false,true,true,false': [1.196, 1, 18], 'false,true,false': [6.207, 208, 66], 'false,false,true': [1.415, 18, 12], 'false,false,false,true': [2.306, 13, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.087, 0, 32], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.377, 3, 5], 'true,false,false,false': [0.015, 0, 6], 'false,true': [4.642, 288, 105], 'false,false,true,true': [1.681, 4, 9], 'false,false,true,false': [7.27, 234, 101], 'false,false,false,true': [1.884, 20, 10], 'false,false,false,false': [2.598, 27, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.997, 1, 31], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.481, 3, 11], 'false,true': [4.63, 302, 105], 'false,false,true,true': [3.77, 14, 129], 'false,false,true,false': [0.744, 217, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000733, 0, 11], 'true,true,true,false': [0.033, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.89, 1, 4], 'true,false': [1.799, 4, 16], 'false,true': [1.494, 3, 17], 'false,false,true': [4.764, 330, 99], 'false,false,false,true': [6.7, 265, 118], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.04246913580247025, 0.20648905334758247], 'false': [0.15419501133786812, 0.2004909046905784], 'false,false': [0.19102040816326654, 0.20888401043087865], 'false,false,false': [0.2049672120064914, 0.22997508009967915], 'false,false,true': [0.17390011890606516, 0.21282412747234025], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [0.18750000000000006, 0.18749999999999978], 'false,true,true': [0.0, 0.0]}, {'': [0.022210743801652798, 0.20461971749035718], 'false': [0.09651827759998921, 0.20061958982906075], 'false,false': [0.18248383503128243, 0.2179287515544978], 'false,false,false': [0.21960483033240755, 0.2087402343749995], 'false,false,true': [0.17825255102041027, 0.18749999999999928], 'false,true': [0.1127747134949647, 0.08264462809917349], 'false,true,true': [0.0, 0.0004623718295011514], 'true': [0.03993055555555566, -8.881784197001253e-17]}, {'': [0.022479532377555553, 0.20220108239861978], 'false': [0.18735889240563075, 0.21620647630010684], 'false,false': [0.2135642787523638, 0.2318786982248522], 'false,false,false': [0.2318786982248522, nan], 'false,false,true': [0.14183495872071664, 0.2126229942917361], 'false,true': [0.17242314120070124, 0.20586398596290645], 'false,true,false': [0.02172248755251133, 0.00033377403378259245], 'false,true,true': [0.1671258034894398, 0.11325740655849006]}, {'': [0.022479965382359423, 0.18530379273510042], 'false': [0.1554857101008951, 0.2145140337614226], 'false,false': [0.0701451797628982, 0.21558363633164362], 'false,false,false': [0.21541504044049498, 0.2163888888888894], 'false,true': [0.04579743779232822, 0.00014329827463455125], 'false,true,true': [0.1373296357881343, 0.029051281349899465], 'true': [2.156865988103202e-05, 0.07113443358369512], 'true,true': [1.6749480521838223e-05, 2.3263167391207595e-05]}, {'': [0.02188204157642961, 0.15808672768971035], 'false': [0.10442137276197094, 0.2097743899283886], 'false,false': [0.20610833411549193, 0.21388599262837188], 'false,false,false': [0.0034286307743842228, 0.21774191472072602], 'false,false,true': [0.14166113791141183, 4.1209626631703366e-05], 'false,true': [0.03839680772242095, 0.00028619909849835346], 'false,true,true': [0.006938774222795781, 0.03869333613794144], 'true': [3.8974948588703555e-05, 0.044599923857851706]}, {'': [0.022131880154822068, 0.1267636860686568], 'false': [0.07049345469965684, 0.18200349772546817], 'false,false': [0.17682901867153564, 0.20420362731039368], 'false,false,false': [0.20420362731039368, nan], 'false,false,true': [0.11895565618931228, 0.1776764658973934], 'true': [6.254296786390744e-06, 0.03121442247480497], 'true,true': [6.254296786390744e-06, nan], 'true,true,true': [6.254296786390744e-06, nan]}, {'': [0.10559752357241299, 0.139473363165202], 'false': [0.1387389509457309, 0.14113088031352944], 'false,false': [0.06670815382252702, 0.24173553719008278], 'false,false,false': [0.24173553719008278, nan], 'false,true': [0.0478212383552942, 0.14058818553570662], 'true': [0.10035358202811924, 0.003091509384929526], 'true,true': [0.02612160047605488, 0.10856922558335233], 'false,true,true': [3.666759500262287e-05, 0.07522282786195537]}, {'': [0.06470207150954868, 0.10910742611473065], 'false': [0.054819497451827695, 0.16040355612145715], 'false,false': [0.16010874913441278, 0.1580573694034619], 'false,false,true': [0.21747941182350988, 0.15775521896740968], 'false,false,false': [0.11834991044061044, 0.18749999999999967], 'true': [0.00023517810559654795, 0.18071914060000874], 'true,false': [nan, 0.18071914060000868], 'true,false,false': [0.23691109781891237, 4.0030987665547656e-05]}, {'': [0.07259849643706265, 0.10766622843427191], 'false': [0.05266921381213253, 0.16749027785194276], 'false,false': [0.16749027785194276, nan], 'false,false,true': [0.09941270144408414, 0.002547569890256499], 'true': [0.031063806017984096, 0.1483027932209306], 'true,false': [0.0, 0.15669614215815392], 'true,false,true': [nan, 0.0]}, {'': [0.09084514806063103, 0.08415198319143356], 'true': [0.036135786529576844, 0.16176807632062795], 'false': [0.11156860542590645, 0.08345820479476937], 'false,false': [0.05290708071534204, 0.1171916166598205], 'false,false,false': [0.1171916166598205, nan], 'true,true': [7.35477429836407e-05, 0.1585322814946795], 'true,true,false': [nan, 0.1585322814946795], 'true,true,true': [4.886591089598385e-08, 9.136160542671616e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
1;false,true,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 8.43e-08, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.1035477081056462;  // std dev = 5.494, 163.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=40 */
%   | | | else return 0.16976865340936922;  // std dev = 11.038, 568.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=177 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6908025777039843;  // std dev = 0.205, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5890386296022586;  // std dev = 0.337, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7322259441501947;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.29386318185652155;  // std dev = 1.263, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6279488085514597;  // std dev = 0.978, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7689963223620886;  // std dev = 1.666, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return -0.00799242328510038;  // std dev = 6.027, 292.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=43 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.27256496483900156;  // std dev = 3.678, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.13872614717151524;  // std dev = 8.800, 367.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=111 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5023636457052681;  // std dev = 0.267, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13339428878546472;  // std dev = 0.186, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.07748930364711223;  // std dev = 5.811, 203.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=53 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7755311954757488;  // std dev = 1.174, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.17033110758248862;  // std dev = 0.224, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7557726749064401;  // std dev = 1.417, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.19456548437570734;  // std dev = 0.092, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5631961809820093;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12083083626800731;  // std dev = 7.174, 243.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=74 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.36922374319148765;  // std dev = 0.289, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.2873182748244293;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.3068985017232572;  // std dev = 0.360, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6123523415428831;  // std dev = 0.291, 115.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=105 */
%   | | else return -0.15355207689634534;  // std dev = 0.536, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5182586045355403;  // std dev = 3.693, 85.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=67 */
%   | | | else return -0.19638439820521686;  // std dev = 0.429, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.46456623219764365;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13335347194606192;  // std dev = 5.742, 167.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3496588965721177;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.08728865573811126;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.21132121429051576;  // std dev = 1.319, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.2913790459224011;  // std dev = 0.296, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( interaction(A, F) )
%   | then return 0.04225228654462529;  // std dev = 0.316, 402.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=105 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5072783661505978;  // std dev = 2.701, 77.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | | | else return -0.1662564217400333;  // std dev = 0.228, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.03775660832801041;  // std dev = 2.408, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.09633257545358113;  // std dev = 5.339, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.29765035779936583;  // std dev = 0.143, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.08969205212576936;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.29445988089702757;  // std dev = 0.187, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10256883230227927;  // std dev = 0.092, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.0018151114402076597;  // std dev = 2.242, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.07921251828073222;  // std dev = 2.484, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2743730050369216;  // std dev = 0.158, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.15351830403374805;  // std dev = 2.767, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.05402503842585351;  // std dev = 8.482, 558.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=166 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.0963385869006407;  // std dev = 0.347, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | else return 0.030302929231297807;  // std dev = 0.301, 415.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=127 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.31276223633225225;  // std dev = 0.252, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.13333201574607556;  // std dev = 0.230, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.06116874885132881;  // std dev = 5.804, 210.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=66 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.1726644296684366;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11791237220691424;  // std dev = 0.706, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.25676455755413546;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.026010878052283352;  // std dev = 2.701, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.23487445259780884;  // std dev = 0.260, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.1455343772759095;  // std dev = 0.920, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.10811148543892257;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2175708280271042;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.08720023866568527;  // std dev = 0.044, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.29275410203110075;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.007869901329914828;  // std dev = 4.125, 182.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=40 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.002434459026161024;  // std dev = 3.187, 129.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=38 */
%   | | | else return 0.047815570847854864;  // std dev = 8.043, 470.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=153 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1599223113369266;  // std dev = 0.170, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1555538130585411;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05760575216543721;  // std dev = 0.392, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5016873141178159;  // std dev = 0.149, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | else return -0.17986471539225185;  // std dev = 0.065, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(I, I) )
%   | | | then return -0.0785810916382387;  // std dev = 1.396, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.019118350995625224;  // std dev = 3.898, 123.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.013303174869266425;  // std dev = 2.056, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.07645960860824422;  // std dev = 6.231, 286.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.12071489427493275;  // std dev = 0.175, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.09676869051913035;  // std dev = 0.288, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07559353964133098;  // std dev = 0.082, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( complex(E, F) )
%   | | | then return -0.00980292142741025;  // std dev = 2.622, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.03148624118166243;  // std dev = 1.686, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), phenotype(A, J) )
%   | | | then return 0.12727161824685476;  // std dev = 2.074, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.02386715072723746;  // std dev = 1.992, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.005961072977968326;  // std dev = 3.530, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | | | else return 0.0268009158547192;  // std dev = 7.093, 383.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=120 */


Results
   AUC ROC   = 0.986508
   AUC PR    = 0.548263
   CLL	      = -0.208079
   Precision = 0.557895 at threshold = 0.5
   Recall    = 0.576087
   F1        = 0.566845


Total learning time: 13.337 seconds
Total inference time: 2.777 seconds
AUC ROC: 0.986508


Results scoring model
   AUC ROC   = 0.98168
   AUC PR    = 0.29835
   CLL	      = -0.216939
   Precision = 0.293497 at threshold = 0.5
   Recall    = 0.602888
   F1        = 0.394799


Total scoring time: 10.278 seconds
Refined model CLL: -0.216939


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996203
   AUC PR    = 0.571558
   CLL	      = -0.180292
   Precision = 0.54902 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.57732


Total learning time: 44.538999999999994 seconds
Total inference time: 2.715 seconds
AUC ROC: 0.996203
Total revision time: 44.538999999999994
Best scored revision CLL: -0.198817


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:40:52
{'AUC ROC': 0.996203, 'AUC PR': 0.571558, 'CLL': -0.180292, 'Precision': [0.54902, 0.5], 'Recall': 0.608696, 'F1': 0.57732, 'Learning time': 44.538999999999994, 'Inference time': 2.715, 'parameter_1.0': {'AUC ROC': 0.996203, 'AUC PR': 0.571558, 'CLL': -0.180292, 'Precision': [0.54902, 0.5], 'Recall': 0.608696, 'F1': 0.57732, 'Learning time': 4.681, 'Inference time': 2.715}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.17522210583121967;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.16584124279182003;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11211718906776634;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10075912865422676;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.15252802431653997;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06312360814924838;  // std dev = 3.535, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | | else return 0.09279418357704884;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37354825492810284;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5354152163945873;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.001092720113349256;  // std dev = 2.565, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8148187669309467;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.18518123306905335;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15973165095070874;  // std dev = 3.416, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07713656012159886;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.46227915688595866;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.46227915688595866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.46227915688595866;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.72575387277994;  // std dev = 0.352, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.17412874568326475;  // std dev = 0.157, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5156563804527357;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.047594539278760874;  // std dev = 3.498, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.03621922011906455;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.0655583777070755;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3512726634213612;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.12532480713994576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5667442098637843;  // std dev = 0.448, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.148919685577958;  // std dev = 0.111, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7070882302885018;  // std dev = 0.513, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.20021212844046338;  // std dev = 0.079, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3886452603897733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09412528412677992;  // std dev = 2.913, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.3364827121182796;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.29611669348545827;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then return 0.03225078390687321;  // std dev = 2.530, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05642484892960392;  // std dev = 3.278, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.4557510564724556;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11351207151478049;  // std dev = 0.917, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.323925450548728;  // std dev = 1.735, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return -0.15764531872815551;  // std dev = 0.362, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22082947688947752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.36776696548955196;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07407473174745206;  // std dev = 2.871, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | else if ( interaction(A, H) )
%   | | then return 0.16397561213215925;  // std dev = 1.195, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.042406579482379116;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.24622762789263147;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.2143248965218959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18425317880089367;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return 0.00665855845101121;  // std dev = 2.371, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07479634200578036;  // std dev = 3.075, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.03667400227782339;  // std dev = 0.551, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08167849940780138;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18775287726925455;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17201414185983438;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.02305671225827784;  // std dev = 2.144, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.47669530110285885;  // std dev = 1.748, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.2430070738298259;  // std dev = 0.519, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.17321896160023187;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.17321896160023187;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13729559136619984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15618851954376248;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.05762784415603357;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.02922126138143733;  // std dev = 2.221, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.028016642220777446;  // std dev = 2.990, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991274
   AUC PR    = 0.396745
   CLL	      = -0.188634
   Precision = 0.352041 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.489362


Total learning time: 1.836 seconds
Total inference time: 3.054 seconds
AUC ROC: 0.991274


Results scoring model
   AUC ROC   = 0.987434
   AUC PR    = 0.316025
   CLL	      = -0.198764
   Precision = 0.254545 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.38009


Total scoring time: 3.773 seconds
Parameter learned model CLL: -0.198764


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 9], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.98, 28, 13], 'false,false,true,false': [2.882, 27, 12], 'false,false,false,true': [3.455, 47, 16], 'false,false,false,false': [1.095, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.98e-08, 0, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [3.09, 36, 13], 'false,false,true,false': [2.865, 26, 12], 'false,false,false,true': [3.535, 57, 16], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.279, 2, 9], 'false,true,true,true': [1.195, 2, 5], 'false,true,true,false': [2.565, 37, 8], 'false,true,false,true': [0.0, 0, 12], 'false,true,false,false': [0.0, 20, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.416, 37, 19], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.352, 0, 25], 'false,true,false': [0.157, 55, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.498, 52, 16], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.195, 2, 5], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.448, 0, 25], 'false,true,false': [0.111, 57, 0], 'false,false,true,true': [0.513, 0, 9], 'false,false,true,false': [0.079, 28, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.913, 28, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.07, 0, 6], 'false,true': [2.53, 54, 25], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.278, 46, 19], 'false,false,false,true': [0.835, 1, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.917, 1, 6], 'true,true,false': [1.735, 4, 16], 'true,false': [0.362, 55, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.17, 0, 4], 'false,true,false': [2.871, 36, 17], 'false,false,true': [1.195, 8, 10], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.007, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.024, 0, 4], 'false,true': [2.371, 58, 25], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.075, 37, 19], 'false,false,false,true': [0.551, 2, 1], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.038, 0, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.051, 0, 4], 'false,true': [2.144, 57, 25], 'false,false,true,true': [1.748, 4, 22], 'false,false,true,false': [0.519, 43, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.048, 0, 4], 'false,true': [0.886, 1, 4], 'false,false,true': [2.221, 47, 25], 'false,false,false,true': [2.99, 67, 19], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.21359937673130294], 'false': [0.18750000000000006, 0.2089116143170209], 'false,false': [0.2148437500000011, 0.20134083044982648], 'false,false,true': [0.2165377751338484, 0.21301775147929], 'false,false,false': [0.1894683799445699, 0.23999999999999994], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 1.4802973661668753e-16]}, {'': [9.868649107779169e-17, 0.19481651048169807], 'false': [0.0, 0.19150719571280886], 'false,false': [0.2048150032420481, 0.17591437904965196], 'false,false,true': [0.19491878384006678, 0.21606648199445944], 'false,false,false': [0.17113905047851372, 0.21000000000000005], 'true': [1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [nan, 0.0]}, {'': [0.14876033057851232, 0.20925428278289], 'false': [0.20867928055495727, 0.20945235170745932], 'false,false': [0.20832092872873761, 0.21000000000000005], 'false,false,false': [0.21000000000000005, nan], 'false,true': [0.18750000000000058, 0.23437500000000006], 'false,true,false': [-7.401486830834377e-17, -2.2204460492503132e-17], 'false,false,true': [nan, 0.20832092872873761], 'false,true,true': [0.20408163265306126, 0.14617283950617269]}, {'': [0.0, 0.1802495161815168], 'false': [0.1758322558360998, 0.18360768632503666], 'false,false': [-3.700743415417188e-17, 0.1825106010697761], 'false,false,false': [0.1799307958477512, 0.1983471074380165], 'false,true': [0.00494836780874472, 0.00044777320267749376], 'false,true,true': [nan, 0.004948367808744791], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0]}, {'': [0.1487603305785124, 0.14734427389288235], 'true': [0.20408163265306123, 0.0], 'false': [0.11025556245751263, 0.18680239104509436], 'false,false': [0.15879833132728122, 0.20897542391302462], 'false,false,false': [0.0, 0.21208415057382707], 'false,false,true': [0.02919297259258988, 0.00022083262006618507], 'false,true': [0.02543929322327413, 0.00021610701155244758], 'false,true,true': [0.0, 0.00803534478695454]}, {'': [0.0009052308112584963, 0.12516843459847662], 'false': [0.08102496447820101, 0.17451409754018626], 'false,false': [0.16529262084164764, 0.1741458141525084], 'false,false,false': [0.1741458141525084, nan], 'false,false,true': [nan, 0.16529262084164764], 'true': [0.0, 0.0008147077301326281], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.09163524464508843, 0.13978694866215396], 'false': [0.1484346157180987, 0.11679436251984683], 'false,true': [0.009212000237268092, 0.1555466701150602], 'false,false': [0.07935774178756685, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'true': [0.15114921388392355, 0.0023787518654464226], 'true,true': [0.120040814475599, 0.15055876365700802], 'false,true,true': [0.0, 0.007196875185365714]}, {'': [0.0009246151883991595, 0.11455743301641373], 'false': [0.06774437740504886, 0.17222520994787116], 'false,false': [0.1688771191143481, 0.1736302838941048], 'false,false,false': [0.10115935345652742, 0.20408163265306126], 'false,false,true': [nan, 0.1688771191143481], 'true': [1.0631108767901465e-05, 0.0002640098241523503], 'true,false': [nan, 0.0002640098241523503], 'true,false,false': [0.0, 0.00014915063885211077]}, {'': [0.0005103845502826338, 0.1080571784674461], 'false': [0.056058025634818105, 0.16983899068136474], 'false,false': [0.16983899068136474, nan], 'false,false,true': [0.11756005378479352, 0.006271840801896828], 'true': [0.0002949756172771434, 0.0006420302763796397], 'true,false': [nan, 0.0006420302763796397]}, {'': [0.00042496508733203334, 0.09081593935482594], 'false': [0.15701332844967036, 0.0886259363509599], 'false,false': [0.06853483681414775, 0.10395345008198958], 'false,false,false': [0.10395345008198958, nan], 'true': [0.00024196659918212723, 0.0005755655494431404], 'true,true': [-4.625929269271485e-18, 0.0], 'true,true,false': [nan, 0.0], 'true,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, F), interaction(F, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.06648226843284567;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.2427643197148959;  // std dev = 4.641, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3472085167886661;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.381750727579426;  // std dev = 4.136, 71.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=39 */
%   | | | else return -0.16279595499885927;  // std dev = 0.161, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return 0.6592896665171214;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5874036882853249;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.022749045460581957;  // std dev = 1.696, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.2968295070931408;  // std dev = 2.001, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.7503142196089585;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.171839565304832;  // std dev = 0.234, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6444296513827569;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.05813267421209821;  // std dev = 3.364, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | | | else return 0.11052722500394693;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.41285150441236623;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.45479553585698024;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.7028142421386991;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6034919911066192;  // std dev = 0.971, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.17392315545173645;  // std dev = 0.356, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.12315476285770144;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.4875557945881197;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08903786358257462;  // std dev = 2.722, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.17078718848643595;  // std dev = 1.940, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33050231718968914;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4806672604153412;  // std dev = 0.928, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.12399201251312653;  // std dev = 0.254, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.17847447786177728;  // std dev = 0.194, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5686997410642431;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1708348670539799;  // std dev = 0.194, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return -0.025836707414250565;  // std dev = 0.558, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13423544822074385;  // std dev = 2.568, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2620423202157239;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.08778819840615479;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1396669081247354;  // std dev = 0.313, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(D, H), enzyme(A, I) )
%   | | | then return -0.155921093849593;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.016687073279044173;  // std dev = 1.479, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.21676039287111623;  // std dev = 0.950, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.10900605757459073;  // std dev = 0.158, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( complex(A, M), location(A, N) )
%   | | | then return 0.15817703269586547;  // std dev = 1.675, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.038468156155469876;  // std dev = 2.972, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(E, E), complex(F, G) )
%   | | | then return -0.14562503309895947;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3158615719430121;  // std dev = 0.262, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5018534102650709;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12286054492197399;  // std dev = 0.059, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.26824315541901594;  // std dev = 0.223, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06575982942031934;  // std dev = 2.335, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.07650750407151495;  // std dev = 1.256, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( location(A, L), interaction(A, M) )
%   | | then return 0.06629249288479315;  // std dev = 0.257, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return 0.3299036996265633;  // std dev = 0.717, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.006440386022257316;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.18307628741313908;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.34113606170242883;  // std dev = 0.230, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.5245211058036489;  // std dev = 0.512, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1504014676993187;  // std dev = 0.094, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, J) )
%   | | | then return -0.10148561888752287;  // std dev = 1.296, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.17468072585601263;  // std dev = 0.633, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05906282091685163;  // std dev = 1.845, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.06614048398439067;  // std dev = 1.793, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1768355059550021;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.14383164993239167;  // std dev = 0.242, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.4108227540990745;  // std dev = 0.472, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.08541082034937422;  // std dev = 0.568, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.13685326048115462;  // std dev = 0.933, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.028729557158075823;  // std dev = 0.881, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.067362979456669;  // std dev = 1.467, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.14675929443483118;  // std dev = 1.052, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return -7.905143438017532E-4;  // std dev = 2.532, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16124601451770199;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20275538064908272;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), enzyme(A, H) )
%   | | | then return 0.20156094142528097;  // std dev = 1.226, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return 0.08269467167507642;  // std dev = 2.538, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.082162253201859;  // std dev = 0.181, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.16384136000268895;  // std dev = 0.366, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return -0.20107024559360678;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.06936426329727358;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.025406943722431047;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.989707
   AUC PR    = 0.411768
   CLL	      = -0.162759
   Precision = 0.331776 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.473333


Total learning time: 9.754 seconds
Total inference time: 5.905 seconds
AUC ROC: 0.989707


Results scoring model
   AUC ROC   = 0.988042
   AUC PR    = 0.386085
   CLL	      = -0.1833
   Precision = 0.251397 at threshold = 0.5
   Recall    = 0.803571
   F1        = 0.382979


Total scoring time: 10.781 seconds
Refined model CLL: -0.1833


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989707
   AUC PR    = 0.411768
   CLL	      = -0.162759
   Precision = 0.331776 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.473333


Total learning time: 26.144 seconds
Total inference time: 5.905 seconds
AUC ROC: 0.989707
Total revision time: 26.144
Best scored revision CLL: -0.1833


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:41:28
{'AUC ROC': 0.989707, 'AUC PR': 0.411768, 'CLL': -0.162759, 'Precision': [0.331776, 0.5], 'Recall': 0.825581, 'F1': 0.473333, 'Learning time': 26.144, 'Inference time': 5.905, 'parameter_0.2': {'AUC ROC': 0.991274, 'AUC PR': 0.396745, 'CLL': -0.188634, 'Precision': [0.352041, 0.5], 'Recall': 0.802326, 'F1': 0.489362, 'Learning time': 1.836, 'Inference time': 3.054}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08963041658099315;  // std dev = 4.383, 108.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   | | | else return 0.173300450251027;  // std dev = 5.968, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7305483838299364;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6396392929208455;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4764510425268603;  // std dev = 0.874, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7473839334745775;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.08726883014156189;  // std dev = 4.358, 104.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   | | | else return 0.15670466271607944;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16410789581040253;  // std dev = 2.687, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5793675711955348;  // std dev = 0.045, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6685556511007626;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.01126000439073971;  // std dev = 3.638, 103.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=16 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7316014292998828;  // std dev = 1.949, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return -0.18694339111509906;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7045929412319882;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20983949210025227;  // std dev = 2.479, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.02416106000935165;  // std dev = 0.656, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4274630646612955;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4448255406619718;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.301968397804829;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4584025746904338;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6005687372781907;  // std dev = 2.988, 87.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=77 */
%   | | else return -0.16168838440116995;  // std dev = 0.066, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5205710990469498;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06994936990719551;  // std dev = 2.723, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.12281786929874669;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return -0.02243822009525752;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.34134182413792286;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18695258801606582;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5220483843121941;  // std dev = 2.215, 82.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | | else return -0.1412335138745743;  // std dev = 0.107, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6898607015532526;  // std dev = 0.266, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22355748812284507;  // std dev = 0.222, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3608360283618275;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03131720850946202;  // std dev = 1.884, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.32793620442732885;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.29090356408750656;  // std dev = 0.177, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then return 0.028070610842932612;  // std dev = 4.706, 283.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.13641824194362112;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08655578372769959;  // std dev = 2.326, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.001538504057986171;  // std dev = 0.345, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.3235562130714604;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.45993563766366746;  // std dev = 0.577, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.1503298973874523;  // std dev = 0.452, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21625315570298956;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35937503860468634;  // std dev = 0.547, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.04425616002034018;  // std dev = 2.426, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then return 0.033485162491101506;  // std dev = 3.345, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1871433007596067;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.23051630667647816;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07152486806620571;  // std dev = 0.839, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.019562976794856128;  // std dev = 4.243, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07021143256820826;  // std dev = 0.472, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1236407874309755;  // std dev = 2.075, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.01567485507419526;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1675893221208974;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.028950105447498306;  // std dev = 1.155, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.00701317845166432;  // std dev = 4.441, 276.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=82 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4780529412156905;  // std dev = 0.696, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19193384183249412;  // std dev = 0.347, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.15138758587425794;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12529633310524346;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17578553872611402;  // std dev = 0.083, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2277691813572967;  // std dev = 0.207, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.08269602533760184;  // std dev = 0.968, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then return 0.009753259995265875;  // std dev = 4.214, 270.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=77 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.011433209337948181;  // std dev = 1.814, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.985205
   AUC PR    = 0.329001
   CLL	      = -0.177137
   Precision = 0.256318 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.391185


Total learning time: 2.83 seconds
Total inference time: 2.959 seconds
AUC ROC: 0.985205


Results scoring model
   AUC ROC   = 0.985933
   AUC PR    = 0.230526
   CLL	      = -0.188185
   Precision = 0.154206 at threshold = 0.5
   Recall    = 0.876106
   F1        = 0.262252


Total scoring time: 7.009 seconds
Parameter learned model CLL: -0.188185


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.972, 1, 17], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.926, 1, 6], 'false,false,true,true': [4.383, 83, 25], 'false,false,true,false': [5.968, 113, 52], 'false,false,false,true': [2.519, 15, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.874, 1, 3], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [4.358, 79, 25], 'false,false,true,false': [5.942, 110, 52], 'false,false,false,true': [2.687, 21, 11], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.045, 0, 17], 'false,true,true,true': [1.291, 2, 10], 'false,true,true,false': [3.638, 87, 16], 'false,true,false,true': [1.949, 4, 56], 'false,true,false,false': [0.0, 92, 0], 'false,false,true,true': [0.128, 0, 2], 'false,false,true,false': [2.479, 15, 11], 'false,false,false,true': [0.656, 6, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.0, 0, 2], 'true,false': [0.926, 1, 6], 'false,true,true,true': [0.216, 0, 5], 'false,true,true,false': [2.988, 10, 77], 'false,true,false': [0.066, 196, 0], 'false,false,true': [0.106, 0, 3], 'false,false,false,true': [2.723, 24, 11], 'false,false,false,false': [3.73e-09, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.37, 3, 5], 'true,false': [0.067, 0, 12], 'false,true,true,true': [0.932, 1, 5], 'false,true,true,false': [2.215, 5, 77], 'false,true,false': [0.107, 206, 0], 'false,false,true,true': [0.266, 0, 7], 'false,false,true,false': [0.222, 14, 0], 'false,false,false,true': [0.06, 0, 2], 'false,false,false,false': [1.884, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.177, 0, 15], 'false,true': [4.706, 201, 82], 'false,false,true,true': [0.569, 1, 2], 'false,false,true,false': [2.326, 19, 11], 'false,false,false,true': [0.345, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true': [0.188, 0, 5], 'true,true,false': [0.577, 0, 37], 'true,false': [0.452, 86, 0], 'false,true,true,true': [0.072, 0, 7], 'false,true,true,false': [0.547, 1, 8], 'false,true,false': [2.426, 63, 15], 'false,false,true': [3.345, 78, 41], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.061, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.02, 0, 3], 'true,false,false,false': [0.839, 1, 5], 'false,true': [4.243, 195, 82], 'false,false,true,true': [0.472, 1, 2], 'false,false,true,false': [2.075, 13, 11], 'false,false,false,true': [0.282, 4, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.074, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.155, 2, 6], 'false,true': [4.441, 194, 82], 'false,false,true,true': [0.696, 0, 14], 'false,false,true,false': [0.347, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 2], 'true,true,true,false': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.083, 0, 2], 'true,false': [0.207, 0, 8], 'false,true': [0.968, 1, 8], 'false,false,true': [4.214, 193, 77], 'false,false,false,true': [1.814, 22, 11], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.05246913580246885, 0.21453870804520198], 'false': [0.09876543209876527, 0.20769342624802964], 'false,false': [0.20249835634451058, 0.24408284023668594], 'false,false,false': [0.24408284023668594, nan], 'false,false,true': [0.17789780521262102, 0.21583103764922043], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [nan, 0.12244897959183662], 'false,true,true': [0.0, 0.0]}, {'': [0.052469135802469445, 0.21061786541380947], 'false': [0.10307343462608894, 0.20669207140764498], 'false,false': [0.20527970663404382, 0.21749878605615444], 'false,false,false': [0.22558593750000006, 0.0], 'false,false,true': [0.1825998520710058, 0.21795458009449925], 'false,true': [0.1911348771324292, -8.881784197001253e-17], 'false,true,true': [nan, 0.1911348771324292], 'true': [-6.344131569286608e-17, 0.08264462809917349]}, {'': [0.00011914099238045682, 0.20785752913867525], 'false': [0.20669102465418415, 0.21294964189456014], 'false,false': [0.23629069126142369, 0.0615501796657349], 'false,false,true': [0.008153821650126902, 0.23635532584382726], 'false,true': [0.17274923113460997, 0.22657873133194895], 'false,true,false': [0.06332404471925024, -3.37893964016352e-17], 'false,true,true': [0.13888888888888848, 0.12846984793842756], 'false,false,false': [0.0615501796657349, nan]}, {'': [0.051622982777489196, 0.1599326285401569], 'false': [0.15528236820355934, 0.19107843979236097], 'false,false': [0.003759290916614977, 0.18940480627880885], 'false,false,false': [0.21181773468332493, 2.7755575615628915e-18], 'false,true': [0.09860192448520654, 2.2456805072442447e-05], 'false,true,true': [0.009333377467676618, 0.10263386500140274], 'true': [0.0001153147645940726, 0.12244897959183666], 'true,true': [8.613016367831072e-05, 0.0]}, {'': [0.12583494445861482, 0.11786937445285575], 'true': [0.23462098079925053, 0.000376551998606441], 'false': [0.10783214620704959, 0.1894058852613453], 'false,false': [0.19110426460497715, 0.18748066057498725], 'false,false,true': [0.010080308529089508, 0.0035053128992010374], 'false,false,false': [0.001775655347454469, 0.19725628478102356], 'false,true': [0.07273772051137647, 5.6069277850190014e-05], 'false,true,true': [0.14467964235671615, 0.05981759612938597]}, {'': [0.001993130795523095, 0.08788856152134135], 'false': [0.0782471500296235, 0.15911642737798104], 'false,false': [0.17393463465487422, 0.029713918848123615], 'false,false,true': [0.10786997656382609, 0.18031507639676683], 'false,false,false': [0.029713918848123615, nan], 'true': [0.0, 0.0020975384564314286], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.08290582254700837, 0.08932940710614991], 'false': [0.08314442105418561, 0.09404382347129107], 'false,false': [0.09404382347129103, nan], 'false,true': [0.02404496780727991, 0.07547309035250752], 'true': [0.01071884429974719, 0.0023739641998789334], 'false,true,true': [0.0007421709317623759, 0.03320767077979633], 'true,true': [0.007068056990400718, 0.00899798590613316]}, {'': [0.04315545821710018, 0.07400119245854057], 'false': [0.0649924535437855, 0.14662649646404122], 'false,false': [0.16806452974104644, 0.015850829312860984], 'false,false,true': [0.07432778296202955, 0.17946443464830666], 'true': [0.00041195014171364127, 0.08393825353165686], 'true,false': [nan, 0.08393825353165685], 'true,false,false': [0.00013307110586803042, 0.11741475222742992], 'false,false,false': [0.015850829312860984, nan]}, {'': [0.07991722928229471, 0.07796421516738576], 'true': [0.0004981747171653853, 0.16675499707366126], 'true,false': [nan, 0.16675499707366126], 'false': [0.07146146595922606, 0.125011998406785], 'false,false': [0.125011998406785, nan], 'false,false,true': [0.03462047249784276, 0.00572009989571101]}, {'': [0.004982297207478566, 0.07062689885389235], 'false': [0.10416705041211637, 0.06947794551942311], 'false,false': [0.06577822304483713, 0.0997458872714398], 'false,false,false': [0.0997458872714398, nan], 'true': [0.0011971306000686645, 0.005374552879579164], 'true,true': [0.00013892927980747077, 0.0034604113688491596], 'true,true,false': [nan, 0.0034604113688491596], 'true,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(E, G), phenotype(G, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.05259337954395682;  // std dev = 3.358, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | | else return 0.19743464938522673;  // std dev = 6.137, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.11231856126074151;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6373269569258906;  // std dev = 0.308, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.06269460220565948;  // std dev = 4.912, 163.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=36 */
%   | | | else return 0.15438410994745902;  // std dev = 5.282, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.31613906709653267;  // std dev = 2.371, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return -0.14653400779406012;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.40155600348938325;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5944638335305473;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.13282572569464143;  // std dev = 2.187, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.03874789173194983;  // std dev = 3.586, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7152625513163018;  // std dev = 1.949, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return -0.17407341760612147;  // std dev = 0.230, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then return -0.16441862160627294;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.19257666262481166;  // std dev = 1.612, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.495512478095796;  // std dev = 1.452, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3977028444839877;  // std dev = 0.261, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.03617456341976302;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.48429716490216124;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.6709968008220063;  // std dev = 1.032, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5105851380749394;  // std dev = 3.106, 75.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=62 */
%   | | else return -0.15517831149029512;  // std dev = 0.354, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.45724167368060636;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.07197899016949905;  // std dev = 2.631, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.147800088683373;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4256807035160476;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3697041778017431;  // std dev = 0.057, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.5162552042566587;  // std dev = 1.158, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return 0.43469308616328034;  // std dev = 2.580, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | else return -0.137649792436556;  // std dev = 0.363, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( enzyme(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.17998735629173268;  // std dev = 1.276, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.30326068425109826;  // std dev = 1.124, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.32511211272281937;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.018212119418182633;  // std dev = 1.846, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.3035538095837843;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.29523601151900947;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.028793484161584237;  // std dev = 0.949, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.29908735783463836;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.014171900838036404;  // std dev = 0.257, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.12172725324615505;  // std dev = 1.340, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.34678666335768044;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.044669298379990625;  // std dev = 1.197, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.059784657908616805;  // std dev = 4.274, 188.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=64 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4375540730831597;  // std dev = 0.155, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return -0.1425583105093433;  // std dev = 0.077, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2123339678395637;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.45287455343502747;  // std dev = 0.424, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1325866871775197;  // std dev = 0.338, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.030759542302543588;  // std dev = 2.414, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24542948549951973;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.009178903295481967;  // std dev = 1.087, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.061636585392975604;  // std dev = 2.690, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.17923433834798233;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.04546036341700363;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.23806582028902437;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06842591660995966;  // std dev = 0.784, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then return -0.1444667627096092;  // std dev = 0.201, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.2729697545394093;  // std dev = 0.464, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.052187754802859844;  // std dev = 2.249, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then return 0.0239536737366067;  // std dev = 0.252, 239.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=72 */
%   | | else return -0.06021386636432026;  // std dev = 0.334, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.2083886622249862;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.012252707754102565;  // std dev = 0.763, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then return -0.1268412848071068;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1805988872694984;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.19014719134649544;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.13274733767371516;  // std dev = 0.395, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.016548557067267478;  // std dev = 2.382, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.05714397607619339;  // std dev = 2.238, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return -0.0042609818121769946;  // std dev = 3.615, 207.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.1501431138482203;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.11650544058745345;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.10170794537121675;  // std dev = 0.179, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( complex(F, G) )
%   | | then return -0.09144063838121744;  // std dev = 0.143, 54.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=5 */
%   | | else return 0.05575902413984643;  // std dev = 0.262, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.18859199870005344;  // std dev = 3.364, 116.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=72 */
%   | | | else return -0.13964247128973553;  // std dev = 0.614, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.04724574964564992;  // std dev = 0.715, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.32422765830161654;  // std dev = 0.531, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */


Results
   AUC ROC   = 0.985405
   AUC PR    = 0.365221
   CLL	      = -0.17862
   Precision = 0.271654 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.405882


Total learning time: 7.206 seconds
Total inference time: 3.932 seconds
AUC ROC: 0.985405


Results scoring model
   AUC ROC   = 0.987712
   AUC PR    = 0.294807
   CLL	      = -0.185636
   Precision = 0.183636 at threshold = 0.5
   Recall    = 0.893805
   F1        = 0.304676


Total scoring time: 9.576 seconds
Refined model CLL: -0.185636


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985405
   AUC PR    = 0.365221
   CLL	      = -0.17862
   Precision = 0.271654 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.405882


Total learning time: 26.621000000000002 seconds
Total inference time: 3.932 seconds
AUC ROC: 0.985405
Total revision time: 26.621000000000002
Best scored revision CLL: -0.185636


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:42:02
{'AUC ROC': 0.985405, 'AUC PR': 0.365221, 'CLL': -0.17862, 'Precision': [0.271654, 0.5], 'Recall': 0.802326, 'F1': 0.405882, 'Learning time': 26.621000000000002, 'Inference time': 3.932, 'parameter_0.4': {'AUC ROC': 0.985205, 'AUC PR': 0.329001, 'CLL': -0.177137, 'Precision': [0.256318, 0.5], 'Recall': 0.825581, 'F1': 0.391185, 'Learning time': 2.83, 'Inference time': 2.959}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.19148226843284438;  // std dev = 5.033, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
%   | | | else return 0.17393840878372283;  // std dev = 4.531, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09952824544434037;  // std dev = 6.518, 232.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=56 */
%   | | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.5608086869649979;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.6608086869649978;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.14987215789821579;  // std dev = 5.096, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | | else return 0.11085875949681254;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12842462155784537;  // std dev = 6.337, 198.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=56 */
%   | | | else return 0.1793593373853945;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5896425950342115;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5396049771983573;  // std dev = 2.283, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.029010703057589245;  // std dev = 3.996, 119.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=19 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8055721304703272;  // std dev = 0.318, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.18118619897497631;  // std dev = 0.073, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6001778529343252;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09488243249948651;  // std dev = 6.487, 220.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=60 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.18177014996143806;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.45034989778728307;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.19560014060096576;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3221396608054296;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3943351315412805;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6960148976963042;  // std dev = 1.427, 70.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=68 */
%   | | else return -0.17623947936392456;  // std dev = 0.371, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1914287858590135;  // std dev = 1.702, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10384004699965489;  // std dev = 6.295, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
%   | | | else return 0.11018075966609801;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.24241780698664633;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2956327141015194;  // std dev = 0.969, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.025143187179288724;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5151023907799321;  // std dev = 2.013, 72.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | | else return -0.14800776032853732;  // std dev = 0.172, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7408568242193475;  // std dev = 0.647, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.20809644839490937;  // std dev = 0.135, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4411139766899214;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11173739669996016;  // std dev = 5.465, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.31099797654199174;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28931534105725215;  // std dev = 0.067, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, F) )
%   | then return 0.018157607950479264;  // std dev = 4.288, 258.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=70 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.032111051764538524;  // std dev = 0.986, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.07015893944028619;  // std dev = 5.983, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.16236263880718527;  // std dev = 2.164, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24288077334953134;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4630153257526702;  // std dev = 1.640, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | else return -0.1723674512002769;  // std dev = 0.828, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24074724240500478;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.30214760100488564;  // std dev = 1.353, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return 0.019223275175618944;  // std dev = 5.591, 228.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=59 */
%   | else if ( interaction(A, H) )
%   | | then return 0.12705244187000586;  // std dev = 1.692, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09219836927123157;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19915156476765392;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18669557435216444;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.21418845659913233;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G) )
%   | then return 0.009464676738339778;  // std dev = 3.742, 242.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=70 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.167064592925298;  // std dev = 0.472, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.05126370118341888;  // std dev = 5.727, 203.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=60 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.019862110068950896;  // std dev = 0.775, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.09548221901336239;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17144019496600382;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.026678012956167396;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return -0.007824899014210004;  // std dev = 3.984, 258.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=70 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5528066564370525;  // std dev = 2.461, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return -0.22613894986970756;  // std dev = 0.728, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.152146390533984;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.14000635657317084;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0.17867192061808368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1115206111838355;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.04950586682725644;  // std dev = 1.362, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.02948442552727399;  // std dev = 1.234, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then return 0.00912498858128578;  // std dev = 3.724, 237.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=68 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027692239887432222;  // std dev = 5.070, 216.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991844
   AUC PR    = 0.385612
   CLL	      = -0.196544
   Precision = 0.359281 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.474308


Total learning time: 2.786 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.991844


Results scoring model
   AUC ROC   = 0.987999
   AUC PR    = 0.2728
   CLL	      = -0.201657
   Precision = 0.242171 at threshold = 0.5
   Recall    = 0.686391
   F1        = 0.358025


Total scoring time: 8.021 seconds
Parameter learned model CLL: -0.201657


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.98, 1, 24], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 6], 'false,false,true,true': [5.033, 76, 38], 'false,false,true,false': [4.531, 65, 30], 'false,false,false,true': [6.518, 176, 56], 'false,false,false,false': [2.449, 18, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.291, 2, 10], 'true,false': [0.966, 1, 14], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.076, 0, 8], 'false,false,true,true': [5.096, 82, 38], 'false,false,true,false': [4.663, 79, 30], 'false,false,false,true': [6.337, 142, 56], 'false,false,false,false': [2.426, 17, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.058, 0, 24], 'false,true,true,true': [2.283, 7, 19], 'false,true,true,false': [3.996, 100, 19], 'false,true,false,true': [0.318, 0, 32], 'false,true,false,false': [0.073, 72, 0], 'false,false,true,true': [0.25, 0, 6], 'false,false,true,false': [6.487, 160, 60], 'false,false,false,true': [2.372, 15, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.041, 0, 13], 'true,true,false': [0.852, 1, 3], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.056, 0, 2], 'false,true,true,false': [1.427, 2, 68], 'false,true,false': [0.371, 178, 0], 'false,false,true': [1.702, 4, 10], 'false,false,false,true': [6.295, 137, 56], 'false,false,false,false': [2.449, 18, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.892, 1, 7], 'true,false': [0.969, 1, 17], 'false,true,true,true': [0.689, 1, 2], 'false,true,true,false': [2.013, 4, 68], 'false,true,false': [0.172, 150, 0], 'false,false,true,true': [0.647, 0, 24], 'false,false,true,false': [0.135, 63, 0], 'false,false,false,true': [0.196, 0, 7], 'false,false,false,false': [5.465, 94, 44]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.048, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.067, 0, 20], 'false,true': [4.288, 188, 70], 'false,false,true,true': [0.986, 5, 6], 'false,false,true,false': [5.983, 140, 60], 'false,false,false,true': [2.164, 12, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.084, 0, 8], 'true,true,false': [1.64, 3, 51], 'true,false': [0.828, 120, 0], 'false,true,true,true': [0.042, 0, 9], 'false,true,true,false': [1.353, 3, 20], 'false,true,false': [5.591, 169, 59], 'false,false,true': [1.692, 18, 15], 'false,false,false,true': [2.068, 11, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.064, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.024, 0, 2], 'true,false,false,false': [0.049, 0, 8], 'false,true': [3.742, 172, 70], 'false,false,true,true': [0.472, 1, 6], 'false,false,true,false': [5.727, 143, 60], 'false,false,false,true': [0.775, 5, 2], 'false,false,false,false': [2.029, 10, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.052, 0, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.27, 2, 8], 'false,true': [3.984, 188, 70], 'false,false,true,true': [2.461, 5, 75], 'false,false,true,false': [0.728, 155, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.03, 0, 4], 'true,true,true,false': [0.0, 0, 6], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.025, 0, 4], 'true,false': [1.362, 5, 9], 'false,true': [1.234, 2, 12], 'false,false,true': [3.724, 169, 68], 'false,false,false,true': [5.07, 151, 65], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.0384000000000006, 0.21058000267979501], 'false': [0.07100591715976314, 0.20342519541237655], 'false,false': [0.21950046931160017, 0.18798169377320012], 'false,false,true': [0.22222222222222365, 0.21606648199445935], 'false,false,false': [0.18311533888228382, 0.2222222222222223], 'false,true': [0.0, 0.09876543209876527], 'false,true,false': [0.22222222222222224, -1.4802973661668753e-16], 'false,true,true': [nan, 0.0]}, {'': [0.09876543209876568, 0.2109183035722502], 'false': [0.0005365707752695107, 0.20729275858483623], 'false,false': [0.20871930990115417, 0.2058297105356914], 'false,false,true': [0.21638888888888969, 0.19947815840417396], 'false,false,false': [0.20283644526068595, 0.2263313609467454], 'true': [0.13888888888888876, 0.06222222222222218], 'false,true': [0.0, 0.000724370546613673], 'false,true,true': [nan, 0.0]}, {'': [0.0001418069891981529, 0.1990745466923139], 'false': [0.20042126012423694, 0.19749749162263397], 'false,true': [0.19365151045514845, 0.2084339360636463], 'false,true,false': [0.0031505421773139197, 7.34613270694795e-05], 'false,false': [0.19306306389153027, 0.23437499999999986], 'false,false,false': [0.23437499999999986, nan], 'false,true,true': [0.20053929574753923, 0.13417131558505813], 'false,false,true': [0.010389410887747216, 0.19126657362098992]}, {'': [0.07086252168580741, 0.18473225073959054], 'false': [0.16244646649275346, 0.20782491467061998], 'false,false': [0.20697353401442914, 0.2074282172526071], 'false,false,false': [0.20535365540890602, 0.2222222222222221], 'false,true': [0.030785386830109215, 0.0007742957848386844], 'true': [0.05447708295846505, 0.09876543209876552], 'true,true': [0.0001299467135748108, 0.18147782256469136], 'false,true,true': [0.0015762168023696066, 0.029091860064427624]}, {'': [0.06727797515343209, 0.15993839611596322], 'false': [0.11533848177873532, 0.20264308431705955], 'false,false': [0.18491391349561043, 0.21122960738409663], 'false,false,false': [0.00550180155962275, 0.21642767910499205], 'false,false,true': [0.017463499659779263, 0.0002873573777470572], 'false,true': [0.06954834906989002, 0.00019774319513201632], 'false,true,true': [0.15808726392878422, 0.05625682676971734], 'true': [0.09935425175345775, 0.05215052103878141]}, {'': [0.00035166335505594965, 0.1233317686946256], 'false': [0.07125595053395584, 0.17943907831254557], 'false,false': [0.17430715674837674, 0.2229344350703076], 'false,false,false': [0.2229344350703076, nan], 'false,false,true': [0.0883956333746261, 0.17895682105847116], 'true': [0.0005833346670721107, 0.00022697297905873714], 'true,true': [0.0005833346670721107, nan], 'true,true,true': [0.0005833346670721107, nan]}, {'': [0.10318523203310308, 0.13640392294259623], 'false': [0.1349901585968758, 0.1403109216747215], 'false,false': [0.08678576685770174, 0.23765432098765432], 'false,false,false': [0.23765432098765432, nan], 'false,true': [0.05801556213259719, 0.13710772379274877], 'true': [0.04892375171984922, 0.00571370320648759], 'false,true,true': [0.00019859299056113056, 0.07957927990082307], 'true,true': [0.0008751929543554249, 0.04978925399159859]}, {'': [0.0003685123352591367, 0.10956415202734848], 'false': [0.05784686184983366, 0.16195743857574565], 'false,false': [0.1576838065384473, 0.19931123563773448], 'false,false,false': [0.08569362452171406, 0.2422145328719724], 'false,false,true': [0.031795967280251275, 0.16157777162859396], 'true': [0.0002951236968428377, 0.00041818507718393574], 'true,false': [nan, 0.00041818507718394127], 'true,false,false': [0.0002780880743245076, 0.00030203761304965077]}, {'': [0.0714546695432329, 0.11104882468230642], 'false': [0.06153369305615793, 0.1642610193455784], 'false,false': [0.1642610193455784, nan], 'false,false,true': [0.07569070227726864, 0.0034194096499050265], 'true': [0.00016962287066714724, 0.16135639079761951], 'true,false': [nan, 0.16135639079761951]}, {'': [0.07304356904706873, 0.08809654427591998], 'false': [0.10879385671728425, 0.08745292330674244], 'false,false': [0.058513301296155715, 0.11902575754129617], 'false,false,false': [0.11902575754129617, nan], 'true': [0.0004541732171041627, 0.1325888070009765], 'true,true': [0.00012335485999169504, 0.0008514981205036964], 'true,true,false': [0.0, 0.00016251297888278914], 'true,true,true': [0.00021995889523742512, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;true,true,false;interaction(C, D), enzyme(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10205137412390329;  // std dev = 7.777, 328.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=80 */
%   | | | else return 0.19581127276185;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.5376552303927725;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7483828540191295;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.3989887196812545;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41419570983948395;  // std dev = 7.014, 214.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=125 */
%   | | | else return -0.14963098154301357;  // std dev = 0.200, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.17015754366077962;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5048979458925177;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5313248403719838;  // std dev = 0.200, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.0056699107689208335;  // std dev = 2.662, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return 0.16710194298389094;  // std dev = 3.785, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7303172509517823;  // std dev = 0.411, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.15711901753497906;  // std dev = 0.358, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5599430948856637;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1363476634013245;  // std dev = 0.182, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.20040310538880002;  // std dev = 3.300, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.14129989798256185;  // std dev = 4.849, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3803912962853433;  // std dev = 0.240, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.19581611174108485;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.44132723723118056;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5928423378591774;  // std dev = 0.245, 75.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=70 */
%   | | else return -0.14930493610972922;  // std dev = 0.038, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6588273602381355;  // std dev = 0.582, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.16045971496010697;  // std dev = 0.365, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.10595039181450293;  // std dev = 3.078, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.047214248333956425;  // std dev = 4.165, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.34977828093000374;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.05738503432425882;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3503072925473643;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5046690021665422;  // std dev = 0.149, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | | else return -0.140283441727919;  // std dev = 0.044, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.44853063823397404;  // std dev = 1.613, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.14793785436403967;  // std dev = 0.411, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08149349223461513;  // std dev = 4.676, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.2506082930857677;  // std dev = 1.772, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.2887304973926243;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), location(A, F) )
%   | | then return 0.26869193371348793;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.3110564133492287;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.30077724691158714;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then if ( enzyme(I, K), interaction(L, J) )
%   | | then return -0.01621962428841319;  // std dev = 0.235, 86.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=17 */
%   | | else return 0.061824435752427666;  // std dev = 0.248, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else if ( enzyme(A, M), complex(A, N) )
%   | | then return -0.005922018390229275;  // std dev = 0.213, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.19918734567119994;  // std dev = 1.074, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.07741362885809806;  // std dev = 5.486, 211.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=72 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.02232779277597447;  // std dev = 0.247, 185.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=59 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.2859410187070866;  // std dev = 0.241, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2308021154379332;  // std dev = 2.117, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.1253691404173232;  // std dev = 0.395, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.05216325860617625;  // std dev = 4.805, 185.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=59 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2681992620929137;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.27985142874570407;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -9.755077310728555E-4;  // std dev = 1.421, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.0938025034652892;  // std dev = 1.738, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, A), complex(A, G) )
%   | | | then return 0.18118524584746598;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25917102754128113;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03383979982982305;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.20686803824738553;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.09824796957254434;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I), complex(H, J) )
%   | | | then return 0.38748903891364117;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04284567282986141;  // std dev = 2.417, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.0075197006527726136;  // std dev = 2.588, 148.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=41 */
%   | | | else return 0.03477009162940699;  // std dev = 5.556, 247.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=75 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.18654925826400712;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1641386153599261;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2780543456700033;  // std dev = 0.980, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return -0.11869738393101126;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19174980656530638;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H) )
%   | then return -9.835654061231551E-4;  // std dev = 0.244, 244.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=70 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3456451047348622;  // std dev = 0.222, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.044801555715548926;  // std dev = 5.314, 205.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=65 */
%   | | else return -0.10494508128629652;  // std dev = 0.393, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1897845323577395;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.11169645558876723;  // std dev = 0.310, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11831334635646536;  // std dev = 0.048, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.27166738048990957;  // std dev = 1.606, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.007342521004526577;  // std dev = 4.761, 262.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=67 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2271007684665407;  // std dev = 0.200, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.022394778507503217;  // std dev = 2.029, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1275391128277582;  // std dev = 2.824, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | | else return 0.014914645889680282;  // std dev = 1.340, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */


Results
   AUC ROC   = 0.991312
   AUC PR    = 0.422484
   CLL	      = -0.186725
   Precision = 0.351955 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.475472


Total learning time: 11.446 seconds
Total inference time: 3.643 seconds
AUC ROC: 0.991312


Results scoring model
   AUC ROC   = 0.985851
   AUC PR    = 0.27795
   CLL	      = -0.202656
   Precision = 0.28436 at threshold = 0.5
   Recall    = 0.710059
   F1        = 0.406091


Total scoring time: 13.578 seconds
Refined model CLL: -0.202656


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991844
   AUC PR    = 0.385612
   CLL	      = -0.196544
   Precision = 0.359281 at threshold = 0.5
   Recall    = 0.697674
   F1        = 0.474308


Total learning time: 35.831 seconds
Total inference time: 2.899 seconds
AUC ROC: 0.991844
Total revision time: 35.831
Best scored revision CLL: -0.201657


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:42:45
{'AUC ROC': 0.991844, 'AUC PR': 0.385612, 'CLL': -0.196544, 'Precision': [0.359281, 0.5], 'Recall': 0.697674, 'F1': 0.474308, 'Learning time': 35.831, 'Inference time': 2.899, 'parameter_0.6': {'AUC ROC': 0.991844, 'AUC PR': 0.385612, 'CLL': -0.196544, 'Precision': [0.359281, 0.5], 'Recall': 0.697674, 'F1': 0.474308, 'Learning time': 2.786, 'Inference time': 2.899}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8278459047964812;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07822615517673273;  // std dev = 6.668, 259.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=57 */
%   | | | else return 0.16608544303602052;  // std dev = 8.193, 315.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=97 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328448;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7255486463834699;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.72554864638347;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7274065038819156;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5761796595230009;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11347345675845787;  // std dev = 6.472, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | | | else return 0.11464215114075348;  // std dev = 8.369, 349.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=97 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16653882456488242;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return -0.01294835492229775;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5310377802623569;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7462187621871602;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.013464696332807842;  // std dev = 5.546, 212.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=39 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7277888872064342;  // std dev = 2.888, 114.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=105 */
%   | | | else return -0.17956868633677467;  // std dev = 0.000, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18108377061228265;  // std dev = 1.032, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16998019022176064;  // std dev = 3.885, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0908368778652367;  // std dev = 1.394, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.37381191203644637;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.429367467592002;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2475492857738202;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4197384877766565;  // std dev = 0.739, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6237802794477573;  // std dev = 3.913, 172.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=154 */
%   | | else return -0.16033093856799177;  // std dev = 0.142, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5820770875871318;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16200685341060908;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.07209835629260031;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.29733546541322003;  // std dev = 0.954, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.2782666115949117;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3803607830287967;  // std dev = 0.211, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5055650826765407;  // std dev = 3.646, 168.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=154 */
%   | | else return -0.1406697621249704;  // std dev = 0.214, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5885180710062641;  // std dev = 1.589, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.2478724054829045;  // std dev = 3.33e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.43927061396442496;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0048176070222716;  // std dev = 2.884, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2762498243902681;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19712461332288916;  // std dev = 1.374, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( interaction(F, A) )
%   | then return 0.028696851219327007;  // std dev = 6.803, 572.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=165 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.44810157025111347;  // std dev = 0.250, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07286357752141924;  // std dev = 3.602, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01871676796154952;  // std dev = 1.266, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2242858756697696;  // std dev = 0.575, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.3949853493582975;  // std dev = 2.762, 112.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=100 */
%   | else return -0.1548803191472054;  // std dev = 1.218, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24728640244831102;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20822471842185172;  // std dev = 1.465, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return -0.004396115700832072;  // std dev = 3.063, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then return 0.053799918623918114;  // std dev = 3.908, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1209365665027965;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19065049714573273;  // std dev = 0.046, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.06528127212239557;  // std dev = 1.071, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.05838087001873889;  // std dev = 1.273, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(G, A) )
%   | then return 0.012872888874613676;  // std dev = 6.195, 567.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=165 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2871144245851671;  // std dev = 0.185, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.009745656350489445;  // std dev = 3.520, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.23769529784802623;  // std dev = 0.530, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.09977611002332054;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17651452039347504;  // std dev = 0.123, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.030800317973522406;  // std dev = 1.478, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.02010237076675223;  // std dev = 6.049, 543.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=165 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5679140457811794;  // std dev = 0.851, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.22716246518295002;  // std dev = 0.237, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1377370970038217;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.19583971442361753;  // std dev = 0.171, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.16806526844018432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11904164396622735;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14493055570597427;  // std dev = 1.068, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.12950067920028013;  // std dev = 1.023, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.00758726144964904;  // std dev = 5.970, 553.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=154 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06509428684132869;  // std dev = 2.714, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991076
   AUC PR    = 0.403471
   CLL	      = -0.171837
   Precision = 0.255556 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.38764


Total learning time: 4.452 seconds
Total inference time: 3.177 seconds
AUC ROC: 0.991076


Results scoring model
   AUC ROC   = 0.984496
   AUC PR    = 0.217295
   CLL	      = -0.187734
   Precision = 0.148795 at threshold = 0.5
   Recall    = 0.792035
   F1        = 0.250525


Total scoring time: 13.441 seconds
Parameter learned model CLL: -0.187734


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.985, 1, 32], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.5, 3, 9], 'false,false,true,true': [6.668, 202, 57], 'false,false,true,false': [8.193, 218, 97], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 14], 'true,false': [0.0, 0, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.043, 0, 6], 'false,true,false': [1.209, 2, 8], 'false,false,true,true': [6.472, 158, 57], 'false,false,true,false': [8.369, 252, 97], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [1.301, 11, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.985, 1, 32], 'false,true,true,true': [1.351, 2, 21], 'false,true,true,false': [5.546, 173, 39], 'false,true,false,true': [2.888, 9, 105], 'false,true,false,false': [0.0, 230, 0], 'false,false,true,true': [1.032, 2, 2], 'false,false,true,false': [3.885, 42, 24], 'false,false,false,true': [1.394, 8, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.972, 1, 17], 'true,true,false': [0.0, 0, 6], 'true,false': [1.279, 2, 9], 'false,true,true,true': [0.739, 1, 11], 'false,true,true,false': [3.913, 18, 154], 'false,true,false': [0.142, 397, 0], 'false,false,true': [0.091, 0, 3], 'false,false,false,true': [3.854, 39, 24], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.954, 1, 19], 'true,false': [0.944, 1, 13], 'false,true,true,true': [0.211, 0, 11], 'false,true,true,false': [3.646, 14, 154], 'false,true,false': [0.214, 394, 0], 'false,false,true,true': [1.589, 3, 15], 'false,false,true,false': [3.33e-08, 26, 0], 'false,false,false,true': [0.091, 0, 3], 'false,false,false,false': [2.884, 33, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.015, 0, 12], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.374, 2, 20], 'false,true': [6.803, 407, 165], 'false,false,true,true': [0.25, 0, 2], 'false,false,true,false': [3.602, 48, 24], 'false,false,false,true': [1.266, 9, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.575, 1, 19], 'true,true,false': [2.762, 12, 100], 'true,false': [1.218, 207, 0], 'false,true,true,true': [0.125, 0, 7], 'false,true,true,false': [1.465, 3, 10], 'false,true,false': [3.063, 69, 20], 'false,false,true': [3.908, 135, 68], 'false,false,false,true': [0.911, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.046, 0, 18], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.071, 2, 5], 'true,false,false,false': [1.273, 2, 9], 'false,true': [6.195, 402, 165], 'false,false,true,true': [0.185, 0, 2], 'false,false,true,false': [3.52, 59, 24], 'false,false,false,true': [0.53, 1, 1], 'false,false,false,false': [0.909, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.123, 0, 23], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.478, 3, 9], 'false,true': [6.049, 378, 165], 'false,false,true,true': [0.851, 0, 29], 'false,false,true,false': [0.237, 48, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.008, 0, 10], 'true,true,true,false': [0.171, 0, 7], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.065, 0, 2], 'true,false': [1.068, 1, 11], 'false,true': [1.023, 1, 15], 'false,false,true': [5.97, 399, 154], 'false,false,false,true': [2.714, 43, 26], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.02938475665748541, 0.2058937217496635], 'false': [0.14532871972318315, 0.19985697617524276], 'false,false': [0.19631171921475557, 0.22222222222222343], 'false,false,false': [0.22222222222222332, 0.22222222222222224], 'false,false,true': [0.17164323728030376, 0.21311161501637726], 'false,true': [0.0, 0.18749999999999992], 'false,true,false': [nan, 0.18749999999999978], 'false,true,true': [0.0, 0.0]}, {'': [5.551115123125783e-16, 0.20408924996918218], 'false': [0.09683695121349561, 0.20034128425345088], 'false,false': [0.19845508585017207, 0.2123183391003469], 'false,false,false': [0.22222222222222301, 0.13017751479289938], 'false,false,true': [0.1948296376419663, 0.2006880074876252], 'false,true': [0.00031466971729946874, 0.14617423569067983], 'false,true,true': [nan, 0.00031466971729946874], 'true': [0.0, -9.868649107779169e-17]}, {'': [0.02938475665748428, 0.2020628006239384], 'false': [0.19861154549779914, 0.22424587560121462], 'false,false': [0.2308632359575576, 0.1766352173240968], 'false,false,true': [0.2663014517900162, 0.22870842018690316], 'false,true': [0.1860559008808391, 0.20666441759709844], 'false,true,false': [0.07315822851056035, -1.1584935909132068e-17], 'false,true,true': [0.07939508506616154, 0.14507714216857465], 'false,false,false': [0.1766352173240968, nan]}, {'': [0.07836734693877559, 0.16561717096606646], 'false': [0.15670528619586235, 0.2290974249035236], 'false,false': [0.0027766743142113213, 0.2311573261536579], 'false,false,false': [0.23579029243509142, 0.1875], 'false,true': [0.0887261489436172, 5.092005463426345e-05], 'false,true,true': [0.04552115566969125, 0.08902525170765305], 'true': [0.0399305555555556, 0.14876033057851235], 'true,true': [0.052469135802469195, 0.0]}, {'': [0.05305093991601586, 0.12446071038221133], 'false': [0.11122791774320401, 0.20777252191498358], 'false,false': [0.226511252406789, 0.18838687764445536], 'false,false,true': [0.14032429168160418, 4.2700885562506023e-17], 'false,false,false': [0.0027373383111939744, 0.18899696576542596], 'false,true': [0.07543505738082948, 0.00011665894350387841], 'false,true,true': [0.00405474711742403, 0.07914543139449469], 'true': [0.04547115434651744, 0.06366531020003799]}, {'': [0.056922270671645646, 0.09329654819597188], 'false': [0.08090376330882514, 0.17393611411127738], 'false,false': [0.17989878602059137, 0.13361000562915826], 'false,false,true': [0.0312553004279823, 0.18022227034804286], 'false,false,false': [0.13361000562915826, nan], 'true': [1.912678210561995e-05, 0.08575065538280559], 'true,true': [1.912678210561995e-05, nan], 'true,true,true': [1.912678210561995e-05, nan]}, {'': [0.09459809102692536, 0.09001331481741823], 'true': [0.0640358219043791, 0.007171663762187571], 'false': [0.11365811507116762, 0.07750752517921812], 'false,true': [0.10842459734166328, 0.1054381752879439], 'false,true,true': [0.0022226173590850933, 0.1650762435650998], 'false,false': [0.07521940398366611, 0.1660062654967686], 'false,false,false': [0.1660062654967686, nan], 'true,true': [0.016536334836797294, 0.06810297766378984]}, {'': [0.08683620445950752, 0.07919543204778247], 'true': [0.00011634124334636287, 0.157291119877159], 'true,false': [nan, 0.157291119877159], 'true,false,false': [0.16377342864785302, 0.1472189988628894], 'false': [0.0676765354410986, 0.1500470048090662], 'false,false': [0.14791977517213012, 0.16192030604908014], 'false,false,false': [0.1402077857898225, 0.1651705420470042], 'false,false,true': [0.017021202058685028, 0.1492637592193321]}, {'': [0.07251875664592117, 0.07899799898847101], 'false': [0.06738009491142656, 0.158542290718192], 'false,false': [0.158542290718192, nan], 'false,false,true': [0.02496094521218313, 0.0011664779962120193], 'true': [0.0006572884080212277, 0.18200960398482688], 'true,false': [nan, 0.18200960398482688]}, {'': [0.0372727772265849, 0.06969854027533604], 'false': [0.06541620257493151, 0.06947394803154383], 'false,false': [0.06445434642775226, 0.10676331087024574], 'false,false,false': [0.10676331087024574, nan], 'true': [0.0025334716886847184, 0.09506939058786638], 'true,true': [0.0025355921087399534, 0.0019344646196223735], 'true,true,true': [6.797660633958702e-06, 0.00416232375248647], 'true,true,false': [0.0, 0.002100591677245715]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7867203636709403;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.004236386001405076;  // std dev = 5.086, 218.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=30 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.3171653285421341;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | | | else return 0.16584124279182103;  // std dev = 8.152, 312.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=96 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6862433352433301;  // std dev = 0.228, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.6660633000779167;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14524247810217877;  // std dev = 0.123, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0784779976285469;  // std dev = 4.292, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | | else return 0.1418860503356348;  // std dev = 10.192, 499.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=153 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.5570505408206166;  // std dev = 0.206, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.4551247280041979;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.05602958052898747;  // std dev = 4.117, 123.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=29 */
%   | | | else return 0.14717395280574339;  // std dev = 4.535, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7438233695655354;  // std dev = 2.466, 111.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=105 */
%   | | | else return -0.17750966423524175;  // std dev = 0.321, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5847866102143071;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06354353747457869;  // std dev = 3.349, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.17991604844151377;  // std dev = 2.635, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.45947416663781426;  // std dev = 0.036, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.20698733567881403;  // std dev = 0.438, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5271855820967811;  // std dev = 3.164, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | | else return 0.6154421455711602;  // std dev = 3.016, 110.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=100 */
%   | | else return -0.162629138388763;  // std dev = 0.537, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(H, J), phenotype(A, K) )
%   | | | then return -0.041599639812843314;  // std dev = 1.876, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.09879126374321004;  // std dev = 3.226, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.12124057623839815;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.18567691010461249;  // std dev = 1.737, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return 0.2442481420117403;  // std dev = 0.357, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3612082325990669;  // std dev = 0.198, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.2255875791255077;  // std dev = 2.840, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | | | else return 0.4697437541553015;  // std dev = 3.795, 152.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=136 */
%   | | else return -0.14526867683650396;  // std dev = 0.528, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7094112108212159;  // std dev = 1.019, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2192794050611354;  // std dev = 0.086, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12359160112851147;  // std dev = 2.537, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.43971010992248866;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.29251561117821157;  // std dev = 0.041, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.003454539715663224;  // std dev = 1.653, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return -0.11082966841801369;  // std dev = 1.026, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.29639194253575074;  // std dev = 1.850, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return 0.028915449999110793;  // std dev = 5.906, 419.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=120 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L) )
%   | | | then return 0.05401372216272471;  // std dev = 3.230, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.20351333772125102;  // std dev = 1.809, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.08733413631069017;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24502582863005798;  // std dev = 1.056, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.18934045140419214;  // std dev = 0.203, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1440212711908193;  // std dev = 0.131, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(E, A), phenotype(E, F) )
%   | | | then return 0.006433921429410079;  // std dev = 4.455, 251.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=67 */
%   | | | else return 0.07196625490026237;  // std dev = 3.329, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.2673361631259919;  // std dev = 0.137, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14210983520589598;  // std dev = 1.575, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.0774873387684788;  // std dev = 1.683, 72.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return 0.1311763657137096;  // std dev = 2.521, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else return 0.04091823385711899;  // std dev = 0.292, 203.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=70 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.09913080342662817;  // std dev = 0.286, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( complex(A, E) )
%   | | then return 0.2359275404392515;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.5207211088752437;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2250879522681742;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.01129707190053759;  // std dev = 0.265, 185.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=41 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2850095812470518;  // std dev = 1.025, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.017624194019654885;  // std dev = 3.741, 147.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=37 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.052212169400460515;  // std dev = 2.278, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.028874255803686622;  // std dev = 4.966, 273.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=89 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17912664798285435;  // std dev = 0.143, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.21107773160349866;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1868823612975124;  // std dev = 3.864, 138.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=84 */
%   | | | else return -0.14431425472103096;  // std dev = 0.764, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.007599044966230079;  // std dev = 4.403, 271.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=69 */
%   | | | else return 0.04533662804632976;  // std dev = 1.512, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.21758743245226342;  // std dev = 1.805, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.426245837310954;  // std dev = 1.879, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return -0.2447355286819668;  // std dev = 0.309, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15255735295443695;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.18222372571800782;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.17750574969969385;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), enzyme(E, H) )
%   | | | then return 0.041091194795830926;  // std dev = 1.411, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.03765913239260527;  // std dev = 3.846, 237.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=49 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.05137681104019765;  // std dev = 2.305, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | else return 0.08502669337136073;  // std dev = 1.515, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.048603746098899656;  // std dev = 1.196, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.027143489825725953;  // std dev = 5.299, 284.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=95 */


Results
   AUC ROC   = 0.986622
   AUC PR    = 0.323127
   CLL	      = -0.184931
   Precision = 0.19943 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.320366


Total learning time: 23.082 seconds
Total inference time: 5.541 seconds
AUC ROC: 0.986622


Results scoring model
   AUC ROC   = 0.978856
   AUC PR    = 0.191194
   CLL	      = -0.196753
   Precision = 0.133041 at threshold = 0.5
   Recall    = 0.80531
   F1        = 0.228356


Total scoring time: 81.444 seconds
Refined model CLL: -0.196753


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991076
   AUC PR    = 0.403471
   CLL	      = -0.171837
   Precision = 0.255556 at threshold = 0.5
   Recall    = 0.802326
   F1        = 0.38764


Total learning time: 122.41900000000001 seconds
Total inference time: 3.177 seconds
AUC ROC: 0.991076
Total revision time: 122.41900000000001
Best scored revision CLL: -0.187734


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:44:57
{'AUC ROC': 0.991076, 'AUC PR': 0.403471, 'CLL': -0.171837, 'Precision': [0.255556, 0.5], 'Recall': 0.802326, 'F1': 0.38764, 'Learning time': 122.41900000000001, 'Inference time': 3.177, 'parameter_0.8': {'AUC ROC': 0.991076, 'AUC PR': 0.403471, 'CLL': -0.171837, 'Precision': [0.255556, 0.5], 'Recall': 0.802326, 'F1': 0.38764, 'Learning time': 4.452, 'Inference time': 3.177}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7914822684328453;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10472427756526713;  // std dev = 7.365, 292.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=72 */
%   | | | else return 0.18451969227966641;  // std dev = 9.176, 383.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=125 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15935375437661986;  // std dev = 4.180, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6374918715064882;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0.6527299667445833;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5117935311241331;  // std dev = 1.246, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.6585439352512186;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11559340112887885;  // std dev = 7.246, 266.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=72 */
%   | | | else return 0.14129617257789914;  // std dev = 9.306, 407.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=125 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18973552904478103;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.055744679225908075;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5896880691602207;  // std dev = 0.012, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6768376614882969;  // std dev = 2.114, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return -0.01571926744712211;  // std dev = 6.176, 292.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=46 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7529791055114554;  // std dev = 2.603, 140.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=133 */
%   | | | else return -0.1864178397925079;  // std dev = 0.031, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.35266370358598426;  // std dev = 0.882, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16075340258051635;  // std dev = 4.037, 73.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=26 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14835504533458432;  // std dev = 1.553, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.44469641454827274;  // std dev = 0.007, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.24254229878710115;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.4417900678863746;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4275496206037372;  // std dev = 0.967, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5845504680629013;  // std dev = 5.061, 227.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=197 */
%   | | else return -0.16394466187396;  // std dev = 0.243, 469.000 (wgt'ed) examples reached here.  /* #neg=469 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5570918688106725;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1252323502002408;  // std dev = 4.055, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.06229989039758058;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3451366474030471;  // std dev = 0.083, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.2406466498657044;  // std dev = 1.321, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.28676773256373755;  // std dev = 1.095, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.4972308701584313;  // std dev = 4.281, 216.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=197 */
%   | | else return -0.1421891824122887;  // std dev = 0.141, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6699472161217682;  // std dev = 0.597, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.23104198496784956;  // std dev = 0.074, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03568335033625172;  // std dev = 3.617, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2693697995240277;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2648663384435582;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1698925878997411;  // std dev = 1.875, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   else if ( interaction(F, A) )
%   | then return 0.03404999185690712;  // std dev = 7.678, 697.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.47955708229788646;  // std dev = 0.338, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0825645762305982;  // std dev = 3.803, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.17473638445412878;  // std dev = 1.225, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2586826481609127;  // std dev = 0.376, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.4449714212289037;  // std dev = 1.136, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return -0.16014780578745547;  // std dev = 1.363, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.28330467515269686;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.29785210346783364;  // std dev = 1.628, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else return -0.03763116999718368;  // std dev = 4.207, 172.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05177706446844042;  // std dev = 5.158, 296.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=102 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.267152958554018;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1639684545441027;  // std dev = 0.890, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0.17590003244104047;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.0016645612803021135;  // std dev = 1.156, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.25027269049922507;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.01745203638626795;  // std dev = 6.848, 739.000 (wgt'ed) examples reached here.  /* #neg=530 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.020234691307348063;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07464270317724161;  // std dev = 3.598, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.029657365281406736;  // std dev = 0.869, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.08390940776966622;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1157700353037408;  // std dev = 1.314, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( interaction(E, F), interaction(F, C) )
%   | | | then return -0.7648223072645082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17098924522570516;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A) )
%   | then return 0.012711142947589096;  // std dev = 6.936, 728.000 (wgt'ed) examples reached here.  /* #neg=519 #pos=209 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5803217919396768;  // std dev = 1.061, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.22088029809036785;  // std dev = 0.304, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.16307928996949259;  // std dev = 0.285, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.19131220123018625;  // std dev = 0.253, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.17164583014140983;  // std dev = 0.130, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26370468712325046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20351198992886366;  // std dev = 0.259, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.10346799883565166;  // std dev = 0.919, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.005070741650797382;  // std dev = 6.805, 737.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=197 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.013230483468938284;  // std dev = 3.287, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990501
   AUC PR    = 0.371786
   CLL	      = -0.176047
   Precision = 0.258182 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.393352


Total learning time: 5.118 seconds
Total inference time: 3.171 seconds
AUC ROC: 0.990501


Results scoring model
   AUC ROC   = 0.986445
   AUC PR    = 0.287692
   CLL	      = -0.183335
   Precision = 0.160377 at threshold = 0.5
   Recall    = 0.840989
   F1        = 0.269383


Total scoring time: 15.018 seconds
Parameter learned model CLL: -0.183335


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.673, 3, 42], 'false,true,true,true': [1.155, 2, 4], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 2, 0], 'false,true,false,false': [1.301, 2, 11], 'false,false,true,true': [7.365, 220, 72], 'false,false,true,false': [9.176, 258, 125], 'false,false,false,true': [4.18, 58, 25], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [1.345, 2, 19], 'true,false': [1.356, 2, 23], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.246, 2, 6], 'false,true,false': [0.953, 1, 10], 'false,false,true,true': [7.246, 194, 72], 'false,false,true,false': [9.306, 282, 125], 'false,false,false,true': [4.025, 46, 25], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.012, 0, 42], 'false,true,true,true': [2.114, 5, 30], 'false,true,true,false': [6.176, 246, 46], 'false,true,false,true': [2.603, 7, 133], 'false,true,false,false': [0.031, 278, 0], 'false,false,true,true': [0.882, 1, 2], 'false,false,true,false': [4.037, 47, 26], 'false,false,false,true': [1.553, 8, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.007, 0, 22], 'true,true,false': [1.266, 2, 8], 'true,false': [0.0, 0, 12], 'false,true,true,true': [0.967, 1, 12], 'false,true,true,false': [5.061, 30, 197], 'false,true,false': [0.243, 469, 0], 'false,false,true': [0.044, 0, 4], 'false,false,false,true': [4.055, 48, 25], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.083, 0, 26], 'true,false': [1.321, 2, 16], 'false,true,true,true': [1.095, 2, 12], 'false,true,true,false': [4.281, 19, 197], 'false,true,false': [0.141, 454, 0], 'false,false,true,true': [0.597, 0, 14], 'false,false,true,false': [0.074, 24, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.617, 48, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.02, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.875, 4, 30], 'false,true': [7.678, 488, 209], 'false,false,true,true': [0.338, 0, 2], 'false,false,true,false': [3.803, 50, 26], 'false,false,false,true': [1.225, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.376, 0, 26], 'true,true,false': [1.136, 0, 94], 'true,false': [1.363, 234, 0], 'false,true,true,true': [0.242, 0, 11], 'false,true,true,false': [1.628, 4, 17], 'false,true,false': [4.207, 140, 32], 'false,false,true': [5.158, 194, 102], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.89, 1, 26], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [1.156, 2, 9], 'true,false,false,false': [0.035, 0, 5], 'false,true': [6.848, 530, 209], 'false,false,true,true': [0.777, 2, 2], 'false,false,true,false': [3.598, 49, 26], 'false,false,false,true': [0.869, 6, 3], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'true,false,true': 'interaction(E, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)'}, {'true,true': [1.314, 2, 30], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.069, 0, 12], 'false,true': [6.936, 519, 209], 'false,false,true,true': [1.061, 0, 32], 'false,false,true,false': [0.304, 60, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.285, 0, 12], 'true,true,true,false': [0.253, 0, 11], 'true,true,false,true': [0.13, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.259, 0, 15], 'false,true': [0.919, 1, 17], 'false,false,true': [6.805, 540, 197], 'false,false,false,true': [3.287, 77, 28], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.062222222222223345, 0.21184916914530155], 'false': [0.19834710743801612, 0.20698016947347067], 'false,false': [0.20667434842249896, 0.20914440923494917], 'false,false,false': [0.21048047612135395, 0.1983471074380164], 'false,false,true': [0.18577594295365032, 0.21985288603780953], 'false,true': [0.20408163265306106, 0.1955555555555555], 'false,true,true': [0.22222222222222213, 0.0], 'false,true,false': [0.0, 0.13017751479289916]}, {'': [0.07939508506616338, 0.21184292247701378], 'false': [0.13484309297716318, 0.2085644691669919], 'false,false': [0.20687501828112093, 0.22075619830942447], 'false,false,false': [0.22812933941678132, 0.1683673469387757], 'false,false,true': [0.19741082028378937, 0.2127993528484908], 'false,true': [0.19414795627776305, 0.08264462809917372], 'false,true,true': [nan, 0.194147956277763], 'true': [0.08616780045351444, 0.0736000000000002]}, {'': [3.3666613197575705e-06, 0.20095532177742276], 'false': [0.19789664470928625, 0.22271043917783925], 'false,false': [0.22608560812423026, 0.20098982038332872], 'false,false,true': [0.2594993060927149, 0.22325864388987104], 'false,false,false': [0.20098982038332872, nan], 'false,true': [0.17614088323772076, 0.21277732595530244], 'false,true,false': [0.0483819647332589, 3.3737279392535998e-06], 'false,true,true': [0.12766949425517565, 0.1306137198049058]}, {'': [0.04353954918739495, 0.16731246767447935], 'false': [0.16056742473305083, 0.21885873684480164], 'false,false': [0.0004766366855976645, 0.22040496345854166], 'false,false,false': [0.22525486991277263, 0.18749999999999986], 'false,true': [0.11187158724790731, 0.00012565041582118027], 'false,true,true': [0.07190217770590591, 0.11282541568956458], 'true': [0.05887631042404942, 0.0], 'true,true': [2.4843679174485995e-06, 0.16030315576560267]}, {'': [0.042449075795647356, 0.1279145441007504], 'false': [0.11705647545639708, 0.199256920830784], 'false,false': [0.19842670738871815, 0.19818079754419238], 'false,false,true': [0.025494241430759828, 0.0002265695469612176], 'false,false,false': [nan, 0.19818079754419238], 'false,true': [0.08741832559938181, 4.361088018876435e-05], 'false,true,true': [0.08558826443723533, 0.08484073957902279], 'true': [0.000263774660881549, 0.09693175990199393]}, {'': [0.07832038518081745, 0.09659476200811018], 'false': [0.08456955173663253, 0.18892282843370733], 'false,false': [0.19079965519366093, 0.1666296834890801], 'false,false,true': [0.057122528468706385, 0.19027637047508936], 'false,false,false': [0.1666296834890801, nan], 'true': [3.574606995523921e-05, 0.1034075756130941], 'true,true': [3.9515090329056426e-05, 0.0], 'true,true,true': [3.9515090329056426e-05, nan]}, {'': [0.08275796754009347, 0.10106055799508892], 'false': [0.11448998021906331, 0.0912487448803825], 'false,true': [0.08466544341765823, 0.10290637900312423], 'false,false': [0.08986478062207082, 0.25], 'false,false,false': [0.25, nan], 'false,true,true': [0.005324751196878999, 0.12615210661677925], 'true': [0.017816728443344677, 0.00794249437510275], 'true,true': [0.005436502455908372, 0.013721953092568287]}, {'': [0.053718441053512866, 0.07487010523978183], 'false': [0.06346229655938207, 0.1640815508889898], 'false,false': [0.17196860461814084, 0.11403829820327868], 'false,false,true': [0.15105601129385396, 0.17262815963843103], 'false,false,false': [0.0838978008768817, 0.15999999999999998], 'true': [0.029356491466455307, 0.08698582916371589], 'true,false': [0.0, 0.0968233888975735], 'true,false,false': [0.12141127558405386, 0.00023841187162552125]}, {'': [0.05647332803409345, 0.07669355774426706], 'false': [0.0660814883545024, 0.15886251733448314], 'false,false': [0.15886251733448314, nan], 'false,false,true': [0.03520018352685467, 0.0015375745297939428], 'true': [0.05392583899911585, 0.06254417081208234], 'true,false': [0.0, 0.00039131875610382466], 'true,false,true': [0.0, nan]}, {'': [0.006026030815761146, 0.06763130944370473], 'false': [0.04688978806935242, 0.06786255857983428], 'false,false': [0.06282485437551256, 0.10292927684866023], 'false,false,false': [0.10292927684866023, nan], 'true': [0.006710453002216536, 0.004475682695581258], 'true,true': [0.006526632151235004, 0.0075331850211582075], 'true,true,false': [0.008474833148802985, 0.0], 'true,true,true': [0.006773511068713521, 0.005841432854975575]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;true,false;interaction(E, C), interaction(A, E).;true;true
8;false;interaction(G, A).;true;true
8;false,false;interaction(I, H), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5581489350995122;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.10008441897047957;  // std dev = 5.841, 186.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=45 */
%   | | | else return 0.17338536242000033;  // std dev = 11.102, 571.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=180 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( location(A, D), location(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.689135576766341;  // std dev = 0.192, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return 0.1205781854113285;  // std dev = 0.445, 348.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=97 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7582173915152263;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, C) )
%   | | | then return -0.0273470561494173;  // std dev = 0.860, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.3710023552307795;  // std dev = 1.929, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return 0.12435987958164742;  // std dev = 0.450, 408.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=119 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.744796259214679;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.16429464987623013;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.1157053501237699;  // std dev = 0.449, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.4070408180418266;  // std dev = 0.384, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.5836435701250645;  // std dev = 0.220, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( location(A, H) )
%   | | | then return 0.09767194982815218;  // std dev = 7.253, 271.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=75 */
%   | | | else return -0.041469563479246664;  // std dev = 0.801, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7281770757868193;  // std dev = 3.056, 143.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=133 */
%   | | | else return -0.17820167071870713;  // std dev = 0.233, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6017164925151297;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1138928614684966;  // std dev = 3.753, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.26469044243178735;  // std dev = 2.112, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.44751855761378073;  // std dev = 0.204, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.24623772840752522;  // std dev = 0.768, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5961286335408573;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.6328428205663595;  // std dev = 4.134, 205.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=187 */
%   | | | else return 0.5591640050342663;  // std dev = 1.110, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.1671813196635074;  // std dev = 0.487, 509.000 (wgt'ed) examples reached here.  /* #neg=509 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4531851885175632;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.030841325833170567;  // std dev = 2.786, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.22613912623314208;  // std dev = 3.183, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.38053993374701217;  // std dev = 0.058, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.25057853401399693;  // std dev = 0.356, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5121804155599092;  // std dev = 2.245, 80.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=75 */
%   | | | else return 0.4126669739978893;  // std dev = 4.653, 160.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=134 */
%   | | else return -0.14398927430908523;  // std dev = 0.436, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.672003021200769;  // std dev = 0.775, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1953546646137725;  // std dev = 0.046, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.08904963643254421;  // std dev = 2.825, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.1626093361407717;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.15543428587901081;  // std dev = 0.282, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.0559955551547436;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.18512771568403608;  // std dev = 0.751, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.379459820313128;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.2818218272499074;  // std dev = 0.276, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then return 0.026182226652371604;  // std dev = 0.299, 652.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=187 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then return 0.02784275454572082;  // std dev = 0.210, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.09113907856209696;  // std dev = 1.994, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.13856913598839846;  // std dev = 3.634, 78.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, E) )
%   | then return 0.14835979792688234;  // std dev = 0.288, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0.3002202750139898;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.5263867544895039;  // std dev = 0.683, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.037672357650752275;  // std dev = 1.252, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.057114878029565753;  // std dev = 0.216, 281.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=43 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5214908529312605;  // std dev = 0.965, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.15583224304312746;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.08411677122858839;  // std dev = 3.400, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.0232248816390676;  // std dev = 5.659, 375.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=112 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.2157102198245935;  // std dev = 0.054, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.25284191995851474;  // std dev = 0.038, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.1152682176677795;  // std dev = 0.031, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(H, E), location(E, I) )
%   | | | then return 0.031133867634199713;  // std dev = 3.492, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
%   | | | else return -0.02244302868933;  // std dev = 1.635, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, J), phenotype(A, K) )
%   | | | then return -0.1673489669054649;  // std dev = 0.269, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.10393202785001716;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.08966055265528518;  // std dev = 3.159, 105.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=44 */
%   | | | else return 0.03412391297623049;  // std dev = 6.436, 432.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=142 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15546960352579606;  // std dev = 0.185, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0757349027726603;  // std dev = 0.310, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10489358943193855;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.015485966388848652;  // std dev = 3.072, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
%   | | | else return 0.02876048314174471;  // std dev = 6.491, 547.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=175 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.2131749806862022;  // std dev = 1.788, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.5360998461800478;  // std dev = 1.594, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return -0.26561620767851907;  // std dev = 0.060, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17138718892933186;  // std dev = 0.057, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, D), interaction(D, E) )
%   | | then if ( complex(D, F), complex(A, F) )
%   | | | then return -0.1255378036924527;  // std dev = 0.777, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return -0.031550287068014625;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.22517251080057457;  // std dev = 1.742, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return -0.035992002194091564;  // std dev = 3.599, 216.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=42 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.38622504528822516;  // std dev = 1.274, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | | else return -0.1761857045423625;  // std dev = 1.147, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.19587428613900792;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.036607076062542133;  // std dev = 5.114, 288.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=96 */


Results
   AUC ROC   = 0.987862
   AUC PR    = 0.317237
   CLL	      = -0.185492
   Precision = 0.239617 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.37594


Total learning time: 25.988 seconds
Total inference time: 4.49 seconds
AUC ROC: 0.987862


Results scoring model
   AUC ROC   = 0.984354
   AUC PR    = 0.277773
   CLL	      = -0.193862
   Precision = 0.159561 at threshold = 0.5
   Recall    = 0.872792
   F1        = 0.269798


Total scoring time: 38.702 seconds
Refined model CLL: -0.193862


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990501
   AUC PR    = 0.371786
   CLL	      = -0.176047
   Precision = 0.258182 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.393352


Total learning time: 84.826 seconds
Total inference time: 3.171 seconds
AUC ROC: 0.990501
Total revision time: 84.826
Best scored revision CLL: -0.183335


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 00:46:30
{'AUC ROC': 0.990501, 'AUC PR': 0.371786, 'CLL': -0.176047, 'Precision': [0.258182, 0.5], 'Recall': 0.825581, 'F1': 0.393352, 'Learning time': 84.826, 'Inference time': 3.171, 'parameter_1.0': {'AUC ROC': 0.990501, 'AUC PR': 0.371786, 'CLL': -0.176047, 'Precision': [0.258182, 0.5], 'Recall': 0.825581, 'F1': 0.393352, 'Learning time': 5.118, 'Inference time': 3.171}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.10814893509951236;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.15360348055405781;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12130682983635448;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.060153712345559524;  // std dev = 2.937, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.19951454590393322;  // std dev = 2.882, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1427314077493016;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.08320549123154833;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4644573458371935;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.503068693069817;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08640202640315042;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7886749283359885;  // std dev = 0.206, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19048189720553835;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18912167702466023;  // std dev = 0.518, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1228769173030361;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.22131940340711878;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4397739068722391;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.43977390687223905;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06022609312776095;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.46118699305582744;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6284117560645497;  // std dev = 1.526, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else return -0.16942751296250652;  // std dev = 0.045, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.508313227755617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08727091671409618;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.09419851170034067;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3358477239184543;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.37545230906295224;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.350520520023757;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4549422811666548;  // std dev = 1.879, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | else return -0.14810114653177853;  // std dev = 0.079, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6430291926069673;  // std dev = 1.303, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.2110223283422775;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3834199604734212;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.019503737528748382;  // std dev = 2.320, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.26547539654156727;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28632392919497063;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.07164686932750965;  // std dev = 2.598, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2976575977464463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08303876819775885;  // std dev = 2.942, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03043709569243293;  // std dev = 1.519, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.16538301529638857;  // std dev = 0.436, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3232148781886091;  // std dev = 2.333, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | else return -0.16315840756580494;  // std dev = 0.215, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22314204312252217;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.33650655453955114;  // std dev = 0.228, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.051702277673371835;  // std dev = 2.190, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then return 0.27235993295649014;  // std dev = 1.185, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0958367645851518;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18388680249866082;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.29556021456670084;  // std dev = 0.650, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.23502767333091368;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return -0.015597169992284584;  // std dev = 2.607, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20112516536943736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.002227690266055427;  // std dev = 2.952, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09829416868925642;  // std dev = 0.996, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13080759171729522;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1635614976897314;  // std dev = 0.056, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.43561020273435574;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F) )
%   | then return 0.0050727464000565395;  // std dev = 2.418, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.49522339450614256;  // std dev = 1.609, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.20914270243467614;  // std dev = 0.506, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1423376991523011;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12850747861952583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11148857239193832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.12994951163987795;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.19081787693369212;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.029003818052575576;  // std dev = 2.289, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.022428695278552603;  // std dev = 2.751, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.986349
   AUC PR    = 0.308363
   CLL	      = -0.191365
   Precision = 0.273171 at threshold = 0.5
   Recall    = 0.643678
   F1        = 0.383562


Total learning time: 1.856 seconds
Total inference time: 5.515 seconds
AUC ROC: 0.986349


Results scoring model
   AUC ROC   = 0.990028
   AUC PR    = 0.376549
   CLL	      = -0.187387
   Precision = 0.289855 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.412371


Total scoring time: 3.319 seconds
Parameter learned model CLL: -0.187387


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.0, 2, 2], 'false,false,true,true': [2.872, 33, 11], 'false,false,true,false': [3.026, 31, 13], 'false,false,false,true': [3.325, 42, 15], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [2.937, 40, 11], 'false,false,true,false': [2.882, 23, 13], 'false,false,false,true': [3.24, 35, 15], 'false,false,false,false': [1.732, 12, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.953, 1, 10], 'false,true,true,true': [0.816, 1, 2], 'false,true,true,false': [2.598, 27, 9], 'false,true,false,true': [0.206, 0, 15], 'false,true,false,false': [0.0, 30, 0], 'false,false,true,true': [0.518, 1, 1], 'false,false,true,false': [3.24, 35, 15], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 3], 'true,false': [0.707, 1, 1], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.526, 3, 24], 'false,true,false': [0.045, 49, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.279, 38, 15], 'false,false,false,false': [1.664, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.05e-08, 0, 7], 'true,false': [0.097, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.879, 4, 24], 'false,true,false': [0.079, 56, 0], 'false,false,true,true': [1.303, 2, 12], 'false,false,true,false': [0.019, 17, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.32, 23, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.05e-08, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.09, 0, 4], 'false,true': [2.598, 49, 26], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.942, 34, 15], 'false,false,false,true': [1.519, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.436, 1, 7], 'true,true,false': [2.333, 7, 23], 'true,false': [0.215, 65, 0], 'false,true,true,true': [0.023, 0, 2], 'false,true,true,false': [0.228, 0, 6], 'false,true,false': [2.19, 22, 8], 'false,false,true': [1.185, 5, 9], 'false,false,false,true': [0.926, 6, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.033, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.65, 1, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [2.607, 71, 26], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.952, 46, 15], 'false,false,false,true': [0.996, 5, 3], 'false,false,false,false': [0.953, 10, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.056, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.773, 2, 1], 'false,true': [2.418, 69, 26], 'false,false,true,true': [1.609, 3, 20], 'false,false,true,false': [0.506, 57, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 6], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.711, 2, 2], 'false,true': [0.111, 0, 3], 'false,false,true': [2.289, 53, 24], 'false,false,false,true': [2.751, 66, 19], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, 0.20332266422801445], 'false': [0.23999999999999994, 0.19887216519940065], 'false,true': [0.0, 0.25], 'false,true,false': [nan, 0.25], 'false,false': [0.19834710743801753, 0.1995379122033181], 'false,false,false': [0.1939058171745147, 0.22222222222222207], 'false,false,true': [0.18749999999999947, 0.2081611570247934], 'false,true,true': [nan, 0.0]}, {'': [8.881784197001253e-17, 0.20617896236135713], 'false': [0.0017708281049346741, 0.20189501829979944], 'false,false': [0.19934328656508024, 0.20519620472677338], 'false,false,false': [0.21000000000000074, 0.18750000000000017], 'false,false,true': [0.16916570549788518, 0.23070987654321], 'false,true': [0.0, 0.0], 'true': [-6.344131569286608e-17, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.08264462809917349, 0.2109149610917543], 'false': [0.2087337703072513, 0.21377154006369298], 'false,false': [0.2072444157239294, 0.24], 'false,false,false': [0.24, nan], 'false,true': [0.20249835634451, 0.21399641305316616], 'false,true,false': [0.002823846489791393, -3.700743415417188e-17], 'false,false,true': [0.13413522402355033, 0.20999999999999935], 'false,true,true': [0.22222222222222224, 0.18750000000000014]}, {'': [0.08264462809917346, 0.1887844202318209], 'false': [0.1749679345119571, 0.20444700595004153], 'false,false': [0.0, 0.20491589020139045], 'false,false,false': [0.20291918832324643, 0.21301775147929003], 'false,true': [0.0821272978613986, 4.186110916515555e-05], 'true': [-1.2335811384723962e-16, 0.25], 'false,true,true': [0.0, 0.0862822413126651], 'true,true': [-7.401486830834377e-17, 0.0]}, {'': [0.001270503763218933, 0.16009876517969482], 'false': [0.12206508747266843, 0.21177442018527112], 'false,false': [0.23543503726339188, 0.17782694784020747], 'false,false,true': [0.12129811558334534, 2.1890973902607152e-05], 'false,false,false': [0.0, 0.1794824154352364], 'false,true': [0.11834237752868537, 0.00011274872544115935], 'false,true,true': [0.0, 0.12606847754834138], 'true': [1.586032892321652e-17, 0.0031370463289355963]}, {'': [0.000916244204773542, 0.12800433160853014], 'false': [0.09000553347613388, 0.17252851353391818], 'false,false': [0.1739890762749221, 0.16478336426269763], 'false,false,true': [0.0, 0.17661864890998358], 'false,false,false': [0.16478336426269763, nan], 'true': [1.850371707708594e-17, 0.0020298137236537117], 'true,true': [1.850371707708594e-17, nan], 'true,true,true': [1.850371707708594e-17, nan]}, {'': [0.10448090242352541, 0.1390874565460094], 'false': [0.13907945245717288, 0.13785880917773674], 'false,true': [0.008954104669416846, 0.15993252482139314], 'false,false': [0.10037412127716296, 0.12244897959183673], 'false,false,false': [0.12244897959183673, nan], 'true': [0.15239816885565924, 0.0007109065751126371], 'true,true': [0.023728254643289724, 0.18146574662232004], 'false,true,true': [0.0002633569551488413, 0.008638142461967424]}, {'': [0.07375492039582188, 0.09955228803632243], 'false': [0.07007909574833578, 0.1348093813253412], 'false,false': [0.14123183299618042, 0.11289292143889854], 'false,false,true': [0.0, 0.1428801350131454], 'false,false,false': [0.12409675726337864, 0.08264462809917356], 'true': [0.00013566382199329402, 0.20348580212979872], 'true,false': [nan, 0.20348580212979872], 'true,false,false': [0.21138753426681428, 0.0]}, {'': [0.1173556944184417, 0.09615346265219912], 'true': [0.00035080805177907363, 0.19911530857661056], 'true,false': [nan, 0.19911530857661056], 'false': [0.06152713604266186, 0.1371977842124275], 'false,false': [0.1371977842124275, nan], 'false,false,true': [0.11257531539643233, 0.004495331791852941]}, {'': [0.057990269396402026, 0.07897264910193957], 'false': [0.004119024948920987, 0.07971072667306563], 'false,false': [0.0680371885170333, 0.0890282433052362], 'false,false,false': [0.0890282433052362, nan], 'true': [0.00011167663906806735, 0.1263273797370477], 'true,true': [2.3421428569611997e-05, 0.0], 'true,true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;interaction(G, A), interaction(H, G).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( complex(A, G), complex(F, H) )
%   | | | then return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.10139217834275562;  // std dev = 3.691, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | | else return 0.23745927992709853;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8525740770602166;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.042468557605167656;  // std dev = 3.686, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.35363683870351276;  // std dev = 2.475, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.11243191324071068;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462844;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.09952239222416465;  // std dev = 1.232, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.2306708594902589;  // std dev = 2.238, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6985652806798975;  // std dev = 1.019, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.17355293783101458;  // std dev = 0.159, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8322930928559886;  // std dev = 0.045, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1677069071440112;  // std dev = 0.051, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(A, L) )
%   | | | then return 0.05616614503526145;  // std dev = 2.398, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return -0.1602809358243427;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3831527645700097;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6613860186846442;  // std dev = 0.876, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.15199291223504943;  // std dev = 0.276, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.23282854322471236;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5414574778900572;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16539086269708414;  // std dev = 2.273, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return -0.003896784995820032;  // std dev = 2.399, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2974771749727553;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5069275411333964;  // std dev = 0.956, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.17957947260534055;  // std dev = 0.293, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.14667294605716488;  // std dev = 0.191, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5058352309464116;  // std dev = 1.296, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.16805833434349146;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4072740210114265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04145875340080147;  // std dev = 2.331, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.25517224256948945;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( phenotype(A, H), interaction(F, I) )
%   | | | then return -0.1186747386532927;  // std dev = 1.205, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.046029421354722225;  // std dev = 1.529, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else return 0.07856146881242382;  // std dev = 0.262, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.31377702455088463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.061580464035483104;  // std dev = 2.722, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.3078951433961683;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08138357813898438;  // std dev = 0.661, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.25735086177566807;  // std dev = 0.261, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2190090840251212;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3844049826371163;  // std dev = 0.231, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return -0.14500486975786814;  // std dev = 0.079, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.2745546683126801;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.07941226363640602;  // std dev = 0.544, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0691936930542796;  // std dev = 2.122, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(A, J) )
%   | | then return 0.23427003923453962;  // std dev = 0.274, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else return -0.0256981714185901;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17942432234568317;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.34693890953658757;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16785012058953885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.05098747800814089;  // std dev = 0.154, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else return 0.021194924298392592;  // std dev = 0.242, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20248227890066195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04577054438244729;  // std dev = 2.502, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3137477890602205;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.043522562492389304;  // std dev = 0.557, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16005551096669132;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14569271360256053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( interaction(H, A), complex(A, I) )
%   | | | then return -0.15406893812116526;  // std dev = 0.436, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.04459041734345781;  // std dev = 0.785, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else return 0.11805640644602038;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( phenotype(J, L), phenotype(A, M) )
%   | | | then return -0.01899665737124261;  // std dev = 0.433, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.17197042775526067;  // std dev = 0.804, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.07087852898187672;  // std dev = 1.423, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.026680691546383657;  // std dev = 2.856, 94.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.13943702779379225;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.021638060102505907;  // std dev = 0.466, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.2784291449475295;  // std dev = 1.180, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.6439068645955951;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1253379105698701;  // std dev = 0.037, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4573300239964272;  // std dev = 1.196, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.16957698042160685;  // std dev = 0.285, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.3542502708574705;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0833803931047279;  // std dev = 0.557, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.985557
   AUC PR    = 0.276231
   CLL	      = -0.173529
   Precision = 0.243243 at threshold = 0.5
   Recall    = 0.62069
   F1        = 0.349515


Total learning time: 4.571 seconds
Total inference time: 5.467 seconds
AUC ROC: 0.985557


Results scoring model
   AUC ROC   = 0.987689
   AUC PR    = 0.347005
   CLL	      = -0.180595
   Precision = 0.215859 at threshold = 0.5
   Recall    = 0.875
   F1        = 0.34629


Total scoring time: 4.043 seconds
Refined model CLL: -0.180595


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985557
   AUC PR    = 0.276231
   CLL	      = -0.173529
   Precision = 0.243243 at threshold = 0.5
   Recall    = 0.62069
   F1        = 0.349515


Total learning time: 13.788999999999998 seconds
Total inference time: 5.467 seconds
AUC ROC: 0.985557
Total revision time: 13.788999999999998
Best scored revision CLL: -0.180595


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:46:56
{'AUC ROC': 0.985557, 'AUC PR': 0.276231, 'CLL': -0.173529, 'Precision': [0.243243, 0.5], 'Recall': 0.62069, 'F1': 0.349515, 'Learning time': 13.788999999999998, 'Inference time': 5.467, 'parameter_0.2': {'AUC ROC': 0.986349, 'AUC PR': 0.308363, 'CLL': -0.191365, 'Precision': [0.273171, 0.5], 'Recall': 0.643678, 'F1': 0.383562, 'Learning time': 1.856, 'Inference time': 5.515}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0828680362231077;  // std dev = 3.938, 89.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=20 */
%   | | | else return 0.19743464938522662;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19148226843284427;  // std dev = 4.830, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6441420202983311;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5941420202983312;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7378036050524781;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7927941835770488;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.0916614852333611;  // std dev = 3.889, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.10773894178085137;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1003810637506331;  // std dev = 5.064, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
%   | | | else return 0.14274256379180836;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5499244394099515;  // std dev = 0.987, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5022148612139874;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.03844674527195857;  // std dev = 3.341, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.788086328774185;  // std dev = 0.346, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.18319841470944792;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22357469465141855;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13128489692735143;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.12213019499459515;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.37403374490409647;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.45333960609435175;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.25953484518901543;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.41301828814172453;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7176108792831126;  // std dev = 1.008, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.16481078238544206;  // std dev = 0.104, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2973408417845451;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11958582232506063;  // std dev = 4.875, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.08098244008575191;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3609699704043553;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3741400809256382;  // std dev = 0.070, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.31819229307441904;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4651540507424683;  // std dev = 2.178, 45.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | | else return -0.143395732470015;  // std dev = 0.058, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7594668564196765;  // std dev = 0.248, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22089422016656698;  // std dev = 0.007, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.0881058773021363;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09853746828991637;  // std dev = 4.594, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2716013952651362;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31373391476926227;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19631035464864502;  // std dev = 1.336, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( interaction(A, F) )
%   | then return 0.029574039394967125;  // std dev = 3.373, 156.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=42 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.08018315522060109;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06411279831358631;  // std dev = 4.705, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05043669519398364;  // std dev = 2.227, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24629068004873117;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.47745161899785077;  // std dev = 1.129, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.1641234330773199;  // std dev = 0.277, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.26436606847709804;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27960913153617417;  // std dev = 0.956, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.005525911335704488;  // std dev = 4.597, 156.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=37 */
%   | else if ( interaction(A, H) )
%   | | then return 0.06681432221145336;  // std dev = 1.827, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04940649319403983;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19917652256291746;  // std dev = 0.113, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0.2070590387199972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1750380638232849;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.12267269965331423;  // std dev = 0.926, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, G) )
%   | then return 0.008653417525528078;  // std dev = 3.100, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30341331878959277;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05631395861500321;  // std dev = 4.533, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.16532582992496772;  // std dev = 0.813, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05854241861496044;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1079121286415835;  // std dev = 0.999, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.21601330588155965;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.046259119165314715;  // std dev = 2.987, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5983538483368093;  // std dev = 1.616, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.23484095310526568;  // std dev = 0.426, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.14159872727604034;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15187235416641037;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16093463205415803;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.10516541422441335;  // std dev = 0.463, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.08677118431027121;  // std dev = 0.940, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, I) )
%   | | then return 0.01424408839043144;  // std dev = 2.906, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024060802963933557;  // std dev = 4.071, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989862
   AUC PR    = 0.305084
   CLL	      = -0.204238
   Precision = 0.306122 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.424028


Total learning time: 2.087 seconds
Total inference time: 5.577 seconds
AUC ROC: 0.989862


Results scoring model
   AUC ROC   = 0.990214
   AUC PR    = 0.325853
   CLL	      = -0.201856
   Precision = 0.296748 at threshold = 0.5
   Recall    = 0.651786
   F1        = 0.407821


Total scoring time: 4.538 seconds
Parameter learned model CLL: -0.201856


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.98, 1, 24], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [3.938, 69, 20], 'false,false,true,false': [3.543, 37, 19], 'false,false,false,true': [4.83, 70, 35], 'false,false,false,false': [2.332, 17, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.957, 1, 11], 'true,false': [1.317, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.063, 0, 4], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [3.889, 62, 20], 'false,false,true,false': [3.711, 50, 19], 'false,false,false,true': [5.064, 96, 35], 'false,false,false,false': [2.353, 18, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.987, 1, 24], 'false,true,true,true': [1.414, 3, 6], 'false,true,true,false': [3.341, 55, 14], 'false,true,false,true': [0.346, 0, 22], 'false,true,false,false': [0.0, 50, 0], 'false,false,true,true': [1.005, 2, 3], 'false,false,true,false': [4.905, 77, 35], 'false,false,false,true': [2.353, 18, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.952, 1, 12], 'true,true,false': [0.012, 0, 4], 'true,false': [1.265, 2, 8], 'false,true,true,true': [0.067, 0, 3], 'false,true,true,false': [1.008, 1, 39], 'false,true,false': [0.104, 112, 0], 'false,false,true': [0.803, 1, 3], 'false,false,false,true': [4.875, 74, 35], 'false,false,false,false': [2.39, 20, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.06, 0, 8], 'true,false': [0.07, 0, 16], 'false,true,true,true': [0.06, 0, 3], 'false,true,true,false': [2.178, 6, 39], 'false,true,false': [0.058, 113, 0], 'false,false,true,true': [0.248, 0, 13], 'false,false,true,false': [0.007, 35, 0], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [4.594, 66, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.336, 2, 19], 'false,true': [3.373, 114, 42], 'false,false,true,true': [0.735, 3, 3], 'false,false,true,false': [4.705, 81, 35], 'false,false,false,true': [2.227, 20, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.093, 0, 7], 'true,true,false': [1.129, 1, 29], 'true,false': [0.277, 72, 0], 'false,true,true,true': [0.187, 0, 10], 'false,true,true,false': [0.956, 2, 9], 'false,true,false': [4.597, 119, 37], 'false,false,true': [1.827, 28, 15], 'false,false,false,true': [1.879, 12, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.113, 0, 14], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.02, 0, 2], 'true,false,false,false': [0.926, 1, 7], 'false,true': [3.1, 113, 42], 'false,false,true,true': [0.043, 0, 3], 'false,false,true,false': [4.533, 77, 35], 'false,false,false,true': [0.813, 3, 3], 'false,false,false,false': [1.854, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.999, 1, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.086, 0, 8], 'false,true': [2.987, 79, 42], 'false,false,true,true': [1.616, 2, 46], 'false,false,true,false': [0.426, 119, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.011, 0, 5], 'true,true,true,false': [0.008, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.463, 1, 5], 'false,true': [0.94, 1, 10], 'false,false,true': [2.906, 103, 39], 'false,false,false,true': [4.071, 98, 43], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.0384000000000006, 0.21384645903590663], 'false': [0.22222222222222218, 0.20926942148760347], 'false,true': [1.4802973661668753e-16, 0.25000000000000006], 'false,true,false': [0.0, 0.23999999999999994], 'false,false': [0.19662306777645788, 0.22136094674556323], 'false,false,false': [0.22222222222222365, 0.2176000000000001], 'false,false,true': [0.1742204267137984, 0.2241709183673466], 'false,true,true': [0.0, 0.0]}, {'': [0.09876543209876568, 0.19951557820764523], 'false': [0.001343983878429933, 0.19523186766618938], 'false,false': [0.19138909027282422, 0.19889329166528966], 'false,false,false': [0.1957927859681846, 0.21301775147929003], 'false,false,true': [0.1844140392623443, 0.1995379122033184], 'true': [0.07638888888888877, 0.1155555555555555], 'false,true': [0.0010079879088221722, 0.0], 'false,true,true': [nan, 0.0010079879088222832]}, {'': [0.038939768716844195, 0.20527251370905195], 'false': [0.19614505689763775, 0.21437024860179987], 'false,false': [0.21463960784269875, 0.2130177514792901], 'false,false,true': [0.20191340849721723, 0.21484375000000142], 'false,false,false': [0.2130177514792901, nan], 'false,true': [0.19066403681788244, 0.20183966488750862], 'false,true,false': [0.005431417020437721, -3.1086244689504386e-17], 'false,true,true': [0.22222222222222246, 0.16173072883847897]}, {'': [0.09768072517786311, 0.1849924246505838], 'false': [0.15699229047498947, 0.2148104286864721], 'false,false': [0.1613433813894148, 0.21539380886748302], 'false,false,false': [0.21799511825604007, 0.20408163265306153], 'false,true': [0.02977368741527864, 9.664835091868773e-05], 'true': [0.05445516283916594, 0.16000000000000006], 'true,true': [0.06971892458451756, 3.838098744005092e-05], 'false,true,true': [0.0015132980291172233, 0.025420427323085894]}, {'': [0.0003940143281483399, 0.15568129318968957], 'false': [0.1050449891927441, 0.2096846903234179], 'false,false': [0.19108957499732934, 0.21767842597160436], 'false,false,false': [0.2222222222222222, 0.21753463164794132], 'false,false,true': [0.004749761170465798, 1.465715861246965e-06], 'false,true': [0.10013289935016116, 2.952472874120312e-05], 'false,true,true': [0.0011844759702501761, 0.10537960102026689], 'true': [0.000452720847367305, 0.0003068437981578742]}, {'': [0.06982329613799111, 0.12778535329326857], 'false': [0.07291792709877656, 0.184304722914064], 'false,false': [0.18590070690456678, 0.17718057978790047], 'false,false,true': [0.09014452229491075, 0.19084091187206037], 'false,false,false': [0.17718057978790047, nan], 'true': [0.0003332343659887549, 0.08502073600623165], 'true,true': [6.151311753281596e-05, 0.0], 'true,true,true': [6.151311753281596e-05, nan]}, {'': [0.09539546388226425, 0.12786269193466232], 'false': [0.13222344473080508, 0.11454286997081033], 'false,true': [0.04528427460637966, 0.13547988539975045], 'false,false': [0.07766205784765524, 0.20761245674740478], 'false,false,false': [0.20761245674740478, nan], 'true': [0.04286598177319646, 0.0010654439362030835], 'false,true,true': [0.0034956190953073117, 0.08316331811490198], 'true,true': [0.0012227684370068365, 0.04247333539296848]}, {'': [0.03607727820168072, 0.11897914107454413], 'false': [0.06201487165377095, 0.18163555062137363], 'false,false': [0.18021455960013139, 0.18854279706504576], 'false,false,false': [0.11011405207656035, 0.21484374999999994], 'false,false,true': [0.0006133324515412153, 0.18343248691767047], 'true': [0.0009152278655202692, 0.07885898952294071], 'true,false': [0.0, 0.08624823657294528], 'true,false,false': [0.00019510200428291685, 0.10721309394218016]}, {'': [0.04277834352385154, 0.12354242616847795], 'false': [0.0737193760974069, 0.15891402437321617], 'false,false': [0.15891402437321617, nan], 'false,false,true': [0.0544360277537402, 0.0015219682277106152], 'true': [0.058736188839609946, 0.0009215343538101495], 'true,false': [nan, 0.0009215343538101495]}, {'': [0.01063435669061755, 0.0883050170016362], 'false': [0.08036610454157184, 0.08844243664999779], 'false,false': [0.05947428006928724, 0.1175676869459307], 'false,false,false': [0.1175676869459307, nan], 'true': [5.3095477347890144e-05, 0.03567363650391841], 'true,true': [3.8683254866910524e-05, 0.0], 'true,true,true': [2.3310614511407036e-05, 7.695997595816989e-06], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, E), interaction(C, A).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8181489350995119;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.09185106490048775;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | | | else return 0.1081489350995123;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.24451257146314873;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.14020021715079453;  // std dev = 6.284, 195.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then return 0.7274753536316645;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7274753536316645;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12747535363166448;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.7274753536316645;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7401919213324014;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J), phenotype(A, K) )
%   | | | then return -0.05722761409530391;  // std dev = 1.648, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.08328515399775667;  // std dev = 4.907, 132.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.03671663292644965;  // std dev = 3.077, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.16789118942724;  // std dev = 4.850, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5343116997913365;  // std dev = 0.202, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.039988983436303534;  // std dev = 3.078, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.3651855704756016;  // std dev = 1.933, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.786840148448674;  // std dev = 0.443, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1691540846945957;  // std dev = 0.312, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6719890495633672;  // std dev = 1.320, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.17778291674412058;  // std dev = 0.201, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.3348517576805077;  // std dev = 2.023, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.15656860069199752;  // std dev = 3.945, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4397738683196408;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.33589951192602857;  // std dev = 0.323, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3577413178438078;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6984810492039978;  // std dev = 1.379, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | else return -0.16321861833527307;  // std dev = 0.428, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5811340925490295;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.19961975772591603;  // std dev = 0.145, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.028349509144896364;  // std dev = 2.316, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.14816798550762467;  // std dev = 4.374, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.22410320509600515;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.35418170607731453;  // std dev = 0.050, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2803104251430689;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5547833247665339;  // std dev = 1.306, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | else return -0.14242431107018177;  // std dev = 0.303, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6456617204186006;  // std dev = 0.328, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.15170348483478238;  // std dev = 0.073, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06581327745057494;  // std dev = 3.320, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.13049712065774197;  // std dev = 3.113, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.284414151262006;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A), complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2546637212180356;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.716232720442994;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.2890772795745335;  // std dev = 0.171, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.12553534909622724;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2989323413844495;  // std dev = 0.971, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.027142567051093334;  // std dev = 2.071, 84.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=16 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.126639649705939;  // std dev = 2.700, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.05443656501431615;  // std dev = 4.660, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then return 0.03055327212704559;  // std dev = 0.273, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(D, G), phenotype(F, H) )
%   | | | then return -0.16385933017400742;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.33349374649665436;  // std dev = 0.737, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5588530752269805;  // std dev = 1.728, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.19960934060661217;  // std dev = 0.797, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5187834657106566;  // std dev = 0.923, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.196199494231772;  // std dev = 0.346, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.06453404178554879;  // std dev = 1.158, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.03605071611107314;  // std dev = 1.350, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14899556655074467;  // std dev = 0.193, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( enzyme(E, F), complex(A, G) )
%   | | | then return 0.26279681968552804;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.05267803945398428;  // std dev = 1.810, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( location(A, H) )
%   | | | then return -0.01939549407560229;  // std dev = 1.753, 92.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=20 */
%   | | | else return 0.14865476052002596;  // std dev = 0.712, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.3174708982012417;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03773103152118787;  // std dev = 3.802, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.18478676636687316;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03815539115687078;  // std dev = 1.619, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1667865299236974;  // std dev = 0.114, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.16498789887070953;  // std dev = 0.112, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.17191231207686397;  // std dev = 2.130, 64.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | | else return -0.12290834334337854;  // std dev = 0.349, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0.24846293624168309;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( location(A, J) )
%   | | | then return 0.21875795807345869;  // std dev = 3.434, 79.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=45 */
%   | | | else return -0.12483247747464618;  // std dev = 0.467, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.1950709501860528;  // std dev = 0.446, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1562535560319191;  // std dev = 0.053, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.01827234535984539;  // std dev = 0.843, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.10507746267582446;  // std dev = 0.453, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.020328408374498685;  // std dev = 0.728, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.0667895777399928;  // std dev = 3.193, 95.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=38 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3502970901271044;  // std dev = 0.532, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20359966773394092;  // std dev = 1.055, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.09476087934210366;  // std dev = 0.873, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.01622548003728848;  // std dev = 2.571, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */


Results
   AUC ROC   = 0.991005
   AUC PR    = 0.333956
   CLL	      = -0.189859
   Precision = 0.315789 at threshold = 0.5
   Recall    = 0.758621
   F1        = 0.445946


Total learning time: 13.859 seconds
Total inference time: 18.745 seconds
AUC ROC: 0.991005


Results scoring model
   AUC ROC   = 0.991638
   AUC PR    = 0.380756
   CLL	      = -0.189095
   Precision = 0.29932 at threshold = 0.5
   Recall    = 0.785714
   F1        = 0.433498


Total scoring time: 34.319 seconds
Refined model CLL: -0.189095


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991005
   AUC PR    = 0.333956
   CLL	      = -0.189859
   Precision = 0.315789 at threshold = 0.5
   Recall    = 0.758621
   F1        = 0.445946


Total learning time: 54.803000000000004 seconds
Total inference time: 18.745 seconds
AUC ROC: 0.991005
Total revision time: 54.803000000000004
Best scored revision CLL: -0.189095


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:48:16
{'AUC ROC': 0.991005, 'AUC PR': 0.333956, 'CLL': -0.189859, 'Precision': [0.315789, 0.5], 'Recall': 0.758621, 'F1': 0.445946, 'Learning time': 54.803000000000004, 'Inference time': 18.745, 'parameter_0.4': {'AUC ROC': 0.989862, 'AUC PR': 0.305084, 'CLL': -0.204238, 'Precision': [0.306122, 0.5], 'Recall': 0.689655, 'F1': 0.424028, 'Learning time': 2.087, 'Inference time': 5.577}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877469;  // std dev = 1.372, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.06620262637467915;  // std dev = 4.955, 149.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=31 */
%   | | | else return 0.1284192053697825;  // std dev = 4.679, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16723984419042198;  // std dev = 5.936, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.1996123497336587;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6597626198178553;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7311911912464266;  // std dev = 4.21e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4535259597816283;  // std dev = 1.231, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.7778646454725172;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.07291908448298455;  // std dev = 4.908, 139.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=31 */
%   | | | else return 0.13024800679052198;  // std dev = 4.620, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12965084996629353;  // std dev = 6.004, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | | | else return 0.07768659271975246;  // std dev = 3.250, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5440643622628347;  // std dev = 0.976, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5009155422396085;  // std dev = 1.664, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.005823493593697013;  // std dev = 4.381, 139.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=23 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7672322722451779;  // std dev = 1.048, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.17634161016851063;  // std dev = 9.42e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3000352361957383;  // std dev = 1.108, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16636586918015384;  // std dev = 5.827, 151.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=53 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13204699184770946;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.445323619074841;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.4388240373145765;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4330401833076743;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.30740352363134055;  // std dev = 0.664, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7382673913541752;  // std dev = 1.065, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | else return -0.1570373768764875;  // std dev = 0.100, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5869962313374676;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07064241526011546;  // std dev = 6.065, 183.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=51 */
%   | | | else return 0.12627803583404013;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2583108388769607;  // std dev = 0.966, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.28792025674685634;  // std dev = 0.967, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.35541395224534805;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5707858286887356;  // std dev = 1.437, 63.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=61 */
%   | | else return -0.1401189215677587;  // std dev = 0.218, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7561918224877416;  // std dev = 0.387, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.22037877936875946;  // std dev = 0.024, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.22418498645003596;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11316613319729948;  // std dev = 5.356, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2881912658933682;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27569208673247914;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23603145803153;  // std dev = 0.980, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, F) )
%   | then return 0.03923243206856712;  // std dev = 4.033, 233.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=66 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.020816444284240215;  // std dev = 1.001, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03976222582066861;  // std dev = 5.731, 186.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=53 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.006569241392360105;  // std dev = 3.091, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2503686803835821;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4999924192166756;  // std dev = 1.120, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | else return -0.16320809229046418;  // std dev = 0.446, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.20850214966554795;  // std dev = 0.574, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.2601893156955335;  // std dev = 1.324, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return -0.021626685525058507;  // std dev = 5.335, 232.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=48 */
%   | else if ( interaction(A, H) )
%   | | then return 0.10054603847710006;  // std dev = 2.158, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.11567350687287067;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.14067381065539045;  // std dev = 0.962, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0.183622815152239;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1657700055250685;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20977220548863804;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G) )
%   | then return 0.01180100159753369;  // std dev = 3.651, 242.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=66 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18656620144652744;  // std dev = 0.415, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.04642639747963706;  // std dev = 5.391, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04162637696310428;  // std dev = 1.103, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.03083325407384073;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17078937864507981;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17350213744976228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.05842332894083515;  // std dev = 1.715, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else if ( interaction(A, G) )
%   | then return -0.0036588531406466116;  // std dev = 3.719, 269.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=66 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4964176392518022;  // std dev = 3.134, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | | else return -0.22928606657814665;  // std dev = 0.482, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.15268171069932318;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1650164891973709;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0.17369274247857647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.177235043759695;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1054723809838128;  // std dev = 0.916, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1604943155788113;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then return -0.007770351570761669;  // std dev = 3.727, 258.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=61 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03664836601399301;  // std dev = 5.091, 207.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=65 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989412
   AUC PR    = 0.334603
   CLL	      = -0.193301
   Precision = 0.349112 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.460938


Total learning time: 2.764 seconds
Total inference time: 5.488 seconds
AUC ROC: 0.989412


Results scoring model
   AUC ROC   = 0.98987
   AUC PR    = 0.309362
   CLL	      = -0.191418
   Precision = 0.295039 at threshold = 0.5
   Recall    = 0.668639
   F1        = 0.40942


Total scoring time: 6.306 seconds
Parameter learned model CLL: -0.191418


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.372, 2, 32], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [1.369, 3, 5], 'false,false,true,true': [4.955, 118, 31], 'false,false,true,false': [4.679, 81, 30], 'false,false,false,true': [5.936, 114, 51], 'false,false,false,false': [3.036, 27, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.964, 1, 13], 'true,false': [4.21e-08, 0, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.231, 2, 5], 'false,true,false': [0.026, 0, 6], 'false,false,true,true': [4.908, 108, 31], 'false,false,true,false': [4.62, 74, 30], 'false,false,false,true': [6.004, 123, 51], 'false,false,false,false': [3.25, 43, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.976, 1, 32], 'false,true,true,true': [1.664, 4, 8], 'false,true,true,false': [4.381, 116, 23], 'false,true,false,true': [1.048, 1, 35], 'false,true,false,false': [9.42e-08, 80, 0], 'false,false,true,true': [1.108, 3, 4], 'false,false,true,false': [5.827, 98, 53], 'false,false,false,true': [3.106, 31, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.027, 0, 13], 'true,true,false': [0.019, 0, 5], 'true,false': [0.017, 0, 14], 'false,true,true,true': [0.664, 1, 5], 'false,true,true,false': [1.065, 1, 61], 'false,true,false': [0.1, 201, 0], 'false,false,true': [0.094, 0, 6], 'false,false,false,true': [6.065, 132, 51], 'false,false,false,false': [3.073, 29, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.966, 1, 12], 'true,false': [0.967, 1, 20], 'false,true,true,true': [0.029, 0, 5], 'false,true,true,false': [1.437, 2, 61], 'false,true,false': [0.218, 158, 0], 'false,false,true,true': [0.387, 0, 24], 'false,false,true,false': [0.024, 59, 0], 'false,false,false,true': [0.861, 1, 4], 'false,false,false,false': [5.356, 86, 43]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.001, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.98, 1, 25], 'false,true': [4.033, 167, 66], 'false,false,true,true': [1.001, 3, 4], 'false,false,true,false': [5.731, 133, 53], 'false,false,false,true': [3.091, 43, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.107, 0, 12], 'true,true,false': [1.12, 1, 49], 'true,false': [0.446, 126, 0], 'false,true,true,true': [0.574, 1, 10], 'false,true,true,false': [1.324, 3, 15], 'false,true,false': [5.335, 184, 48], 'false,false,true': [2.158, 34, 25], 'false,false,false,true': [2.535, 18, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.962, 1, 17], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.029, 0, 3], 'true,false,false,false': [0.039, 0, 10], 'false,true': [3.651, 176, 66], 'false,false,true,true': [0.415, 1, 4], 'false,false,true,false': [5.391, 122, 53], 'false,false,false,true': [1.103, 9, 4], 'false,false,false,false': [2.657, 24, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.056, 0, 18], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.715, 4, 13], 'false,true': [3.719, 203, 66], 'false,false,true,true': [3.134, 12, 71], 'false,false,true,false': [0.482, 154, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.022, 0, 7], 'true,true,true,false': [0.072, 0, 8], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.916, 2, 11], 'false,true': [0.103, 0, 14], 'false,false,true': [3.727, 197, 61], 'false,false,false,true': [5.091, 142, 65], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.05536332179930943, 0.2036989812457592], 'false': [0.1955555555555553, 0.19727753320193905], 'false,false': [0.1795710059171605, 0.21597228768027169], 'false,false,false': [0.21355371900826514, 0.2248661511005349], 'false,true': [1.4802973661668753e-16, 0.2222222222222222], 'false,true,false': [0.18750000000000006, 0.23437499999999983], 'false,false,true': [0.16476735282194607, 0.197224251278305], 'false,true,true': [0.0, 0.0]}, {'': [0.029384756657483257, 0.1999455063676076], 'false': [0.1426952339524155, 0.19493990985404103], 'false,false': [0.18776956372799727, 0.20229032258409138], 'false,false,false': [0.2071938168846609, 0.1852877808556474], 'false,false,true': [0.17328295636871838, 0.20525147928994], 'false,true': [0.21635378520404075, 0.00011648201142803553], 'false,true,true': [nan, 0.21635378520404075], 'true': [0.06632653061224492, 9.349246523159212e-17]}, {'': [0.028850333997609202, 0.200188293494727], 'false': [0.1805568737723094, 0.2216880972112171], 'false,false': [0.2234273591549617, 0.2143209876543211], 'false,false,true': [0.17524062779999136, 0.2248695830512894], 'false,false,false': [0.2143209876543211, nan], 'false,true': [0.1633853419480843, 0.20003256180894158], 'false,true,false': [0.030527523364507085, 1.1102230246251565e-16], 'false,true,true': [0.23077512726467753, 0.13808809067853628]}, {'': [7.47432622167088e-05, 0.1755166879735105], 'false': [0.14849027508757243, 0.20620931607205575], 'false,false': [0.0014874864656579205, 0.20502885154837974], 'false,false,false': [0.20102123085192264, 0.21957815035154185], 'false,true': [0.03810463290339229, 5.0169788056015545e-05], 'false,true,true': [0.07342619402095601, 0.01830609326645064], 'true': [6.885928970749393e-05, 2.05523900401897e-05], 'true,true': [5.5005941482282156e-05, 7.436803288403126e-05]}, {'': [0.055173903194014606, 0.16125573549432806], 'false': [0.11192576366581702, 0.2122559305069032], 'false,false': [0.19783906370290125, 0.22001586200849252], 'false,false,false': [0.1481401405319093, 0.22234184769417983], 'false,false,true': [0.00624600440711857, 9.399683321310411e-06], 'false,true': [0.03353342528465183, 0.00030059782449619164], 'true': [0.07183949110109632, 0.04452189511699733], 'false,true,true': [0.00016473507058534231, 0.03277106894630457]}, {'': [0.029490915038275133, 0.12364001507335073], 'false': [0.06979895797501474, 0.17379224588752717], 'false,false': [0.17538900255192366, 0.16756996618596282], 'false,false,true': [0.14323339971978083, 0.1765861410028547], 'false,false,false': [0.16756996618596282, nan], 'true': [3.218848328686733e-05, 0.03692132356596582], 'true,true': [4.268824027708895e-07, 0.0], 'true,true,true': [4.268824027708895e-07, nan]}, {'': [0.09456433504528258, 0.1265668684672734], 'false': [0.12387679570035628, 0.12744777598265974], 'false,false': [0.07889897875537293, 0.22959183673469422], 'false,false,false': [0.22959183673469422, nan], 'false,true': [0.07243718828860521, 0.12266737338986321], 'true': [0.03013908185231841, 0.0015780148705700047], 'false,true,true': [0.029901580973686757, 0.09741781900370328], 'true,true': [0.0009568801127504134, 0.02508242104613501]}, {'': [0.029068145710906223, 0.10894230240427459], 'false': [0.05508226337887262, 0.1657256048828443], 'false,false': [0.16296415922619986, 0.17608545787013194], 'false,false,false': [0.09354595958922333, 0.20761245674740514], 'false,false,true': [0.03449031481469953, 0.1660893081435477], 'true': [0.051420262453340256, 0.0004851337835195535], 'true,false': [0.0, 0.0005256575912024288], 'true,false,false': [0.00028505225366170134, 0.00015102528439526753]}, {'': [0.09485271617124368, 0.10354093269042823], 'false': [0.051429331737830174, 0.16225621783853117], 'false,false': [0.16225621783853117, nan], 'false,false,true': [0.11830766501359158, 0.0015056147771877434], 'true': [0.00017703849715671675, 0.16612950082475875], 'true,false': [0.0, 0.17291352318265818], 'true,false,true': [nan, 0.0]}, {'': [0.02805872703102495, 0.08423827260336876], 'false': [0.00075406478598932, 0.08610731884827841], 'false,false': [0.05384336032275421, 0.1252256593622696], 'false,false,false': [0.1252256593622696, nan], 'true': [0.0003812112074310092, 0.06452217182455694], 'true,true': [0.0004098892609477045, 2.788421859157656e-06], 'true,true,true': [6.678960558608489e-05, 0.0006390996377777028], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, E), interaction(C, A).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;true,true,false;interaction(C, D), enzyme(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, I), phenotype(A, H) )
%   | | | then return -0.0418510649004877;  // std dev = 2.510, 70.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=7 */
%   | | | else return 0.11126096829453275;  // std dev = 6.750, 241.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=61 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.37988806553429494;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.1939153584571758;  // std dev = 5.528, 137.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.7194734122109544;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3889900291002434;  // std dev = 2.521, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.0394454651035399;  // std dev = 7.244, 338.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=66 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.46626046385410325;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.19100678711188887;  // std dev = 5.123, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4442553256351733;  // std dev = 0.314, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.021766545751529847;  // std dev = 3.000, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return 0.16290490855378728;  // std dev = 3.547, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7556552053226692;  // std dev = 1.114, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.17596137277816504;  // std dev = 0.208, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.760258045751827;  // std dev = 1.440, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.16862442998187946;  // std dev = 0.131, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.29651059382026423;  // std dev = 2.945, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.12326525152622293;  // std dev = 3.269, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.44475702894584135;  // std dev = 7.45e-09, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.44475702894584135;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.05524297105415865;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6380151692838473;  // std dev = 0.270, 71.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=66 */
%   | | else return -0.16732021288706206;  // std dev = 0.035, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1954250629039464;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26303095368369617;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09318154617280411;  // std dev = 5.436, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return 0.23728980659500357;  // std dev = 2.699, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.25591746307824187;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.35627746160264323;  // std dev = 0.042, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.13713868739356896;  // std dev = 0.738, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5110536886554716;  // std dev = 2.218, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | else return -0.14296119152309206;  // std dev = 0.031, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6596942216381703;  // std dev = 1.106, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.19669641785054345;  // std dev = 0.333, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11108798970634452;  // std dev = 4.703, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | | | else return 0.3707605209316472;  // std dev = 0.991, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.28443815861989674;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2415006680163336;  // std dev = 0.198, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(H, G) )
%   | | then if ( interaction(E, H), complex(A, I) )
%   | | | then return 0.10037748311517908;  // std dev = 1.481, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.05249017054453533;  // std dev = 1.684, 66.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | | else return 0.16461460331876443;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.46997388275026114;  // std dev = 2.186, 74.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=66 */
%   | | | else return -0.1724949593955063;  // std dev = 0.702, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.017558537459235468;  // std dev = 2.186, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.0634199907671998;  // std dev = 3.897, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22778902411025506;  // std dev = 0.019, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(A, F), interaction(A, G) )
%   | | | then return 0.3230887567799137;  // std dev = 0.980, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.47649544192681503;  // std dev = 0.833, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.1625177117807771;  // std dev = 0.089, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return 0.38982479090538263;  // std dev = 1.068, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return 0.10655657406917833;  // std dev = 4.336, 136.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=59 */
%   | | else return -0.1541717910166085;  // std dev = 0.057, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.09680279881661069;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.363379335817058;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18113356181181567;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.20107100787988003;  // std dev = 0.050, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(A, F), complex(E, G) )
%   | | then return -0.09643309649243306;  // std dev = 0.017, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.0602743251777594;  // std dev = 1.138, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.03509504203132838;  // std dev = 1.126, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4010239216547957;  // std dev = 1.968, 70.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=66 */
%   | | | else return -0.1498905645173567;  // std dev = 0.846, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.05703846076768835;  // std dev = 2.575, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.01579692440589621;  // std dev = 2.543, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.15173491278246987;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.014172609703937597;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.14994771589070588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return -0.1556953256459308;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18786514129829712;  // std dev = 0.145, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, I) )
%   | then return -0.003959644245142184;  // std dev = 0.200, 265.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=66 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12088879978916903;  // std dev = 2.527, 67.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=37 */
%   | | | else return 0.28216231863367114;  // std dev = 2.200, 46.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=34 */
%   | | else return -0.1430747034393989;  // std dev = 0.041, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1470080229491018;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.02503684778697267;  // std dev = 0.925, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.16355220273501017;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.11978567729156349;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.13464645768290576;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.15846843357615653;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then return -0.030216838693764982;  // std dev = 0.217, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.07794904044687652;  // std dev = 1.547, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.0032976875471763495;  // std dev = 4.403, 283.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=81 */


Results
   AUC ROC   = 0.990032
   AUC PR    = 0.378766
   CLL	      = -0.167118
   Precision = 0.311966 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.454829


Total learning time: 23.662 seconds
Total inference time: 19.674 seconds
AUC ROC: 0.990032


Results scoring model
   AUC ROC   = 0.992393
   AUC PR    = 0.412498
   CLL	      = -0.171144
   Precision = 0.265101 at threshold = 0.5
   Recall    = 0.934911
   F1        = 0.413072


Total scoring time: 45.038 seconds
Refined model CLL: -0.171144


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990032
   AUC PR    = 0.378766
   CLL	      = -0.167118
   Precision = 0.311966 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.454829


Total learning time: 77.77 seconds
Total inference time: 19.674 seconds
AUC ROC: 0.990032
Total revision time: 77.77
Best scored revision CLL: -0.171144


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:49:59
{'AUC ROC': 0.990032, 'AUC PR': 0.378766, 'CLL': -0.167118, 'Precision': [0.311966, 0.5], 'Recall': 0.83908, 'F1': 0.454829, 'Learning time': 77.77, 'Inference time': 19.674, 'parameter_0.6': {'AUC ROC': 0.989412, 'AUC PR': 0.334603, 'CLL': -0.193301, 'Precision': [0.349112, 0.5], 'Recall': 0.678161, 'F1': 0.460938, 'Learning time': 2.764, 'Inference time': 5.488}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 2.38e-07, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.07973984419042028;  // std dev = 5.510, 176.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=39 */
%   | | | else return 0.11123535485259785;  // std dev = 5.534, 162.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=41 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16723984419042282;  // std dev = 6.854, 220.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=68 */
%   | | | else return 0.16584124279181983;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6759951513413891;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.727366852271177;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5818286623199146;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.07623251845784061;  // std dev = 5.487, 171.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=39 */
%   | | | else return 0.13691877245950768;  // std dev = 5.385, 140.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=41 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1222616874047172;  // std dev = 6.969, 238.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=68 */
%   | | | else return 0.13085619769115298;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5378385960405476;  // std dev = 0.984, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5047489005969789;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -4.355727167206935E-4;  // std dev = 4.808, 172.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=28 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7815513727063521;  // std dev = 1.066, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return -0.17649184800571738;  // std dev = 0.176, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.41638535722878833;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1142348571659694;  // std dev = 7.068, 244.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=73 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09975666556147601;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4242000897779963;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.4281651874767979;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.31414758680511295;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3071987637357893;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7130262719199363;  // std dev = 1.710, 83.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=80 */
%   | | else return -0.15787537662548046;  // std dev = 0.197, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5347040120289344;  // std dev = 0.199, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08099413894154216;  // std dev = 7.003, 243.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=68 */
%   | | | else return 0.09260103798006573;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.26054192810412896;  // std dev = 0.978, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2749539281756249;  // std dev = 1.342, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.38221845960385786;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5711557705278999;  // std dev = 1.665, 82.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=80 */
%   | | else return -0.1407523159246317;  // std dev = 0.311, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7512414659507396;  // std dev = 0.677, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.22417337805993107;  // std dev = 0.519, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.14578248164075952;  // std dev = 1.334, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.07683220890534015;  // std dev = 6.423, 201.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=58 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2685899995418654;  // std dev = 0.000853, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.300131405668114;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17837046485597519;  // std dev = 1.873, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   else if ( interaction(A, F) )
%   | then return 0.017821245971441826;  // std dev = 4.792, 340.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=86 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.24621749992913194;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0747062087636719;  // std dev = 6.572, 237.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=73 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15920455671715764;  // std dev = 3.230, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2301146220452385;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.5088073348730545;  // std dev = 1.315, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | else return -0.1664604693739804;  // std dev = 0.583, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23326554049936654;  // std dev = 0.022, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.26241626254917366;  // std dev = 1.608, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0.015006838795556905;  // std dev = 6.273, 302.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=74 */
%   | else if ( interaction(A, H) )
%   | | then return 0.08377772122078209;  // std dev = 2.459, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15932228129062165;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.09208731363479085;  // std dev = 1.520, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return -0.09978518131407614;  // std dev = 0.738, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1868790355586657;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10536628242869245;  // std dev = 1.307, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, G) )
%   | then return -0.002310104722067174;  // std dev = 4.333, 356.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.00586284677483258;  // std dev = 0.539, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.0497822438001862;  // std dev = 6.311, 241.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=73 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04018949856489527;  // std dev = 1.499, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.056998973616181;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18210441210291298;  // std dev = 0.097, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19194263524393518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.151038972817446;  // std dev = 0.928, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, G) )
%   | then return -0.0037051479591309333;  // std dev = 4.409, 352.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=86 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5452979545657601;  // std dev = 3.033, 105.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=97 */
%   | | | else return -0.22412552892597226;  // std dev = 0.619, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.15879589957078938;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15625986396768057;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0.1689516646151603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12996075647831018;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11123763734630589;  // std dev = 1.349, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.03515541115056819;  // std dev = 1.524, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then return 0.004620564430308555;  // std dev = 4.192, 325.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=80 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.005667957956134964;  // std dev = 5.959, 314.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=88 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989325
   AUC PR    = 0.300958
   CLL	      = -0.191098
   Precision = 0.30303 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.421053


Total learning time: 3.125 seconds
Total inference time: 5.545 seconds
AUC ROC: 0.989325


Results scoring model
   AUC ROC   = 0.989731
   AUC PR    = 0.30384
   CLL	      = -0.190192
   Precision = 0.288719 at threshold = 0.5
   Recall    = 0.671111
   F1        = 0.403743


Total scoring time: 8.165 seconds
Parameter learned model CLL: -0.190192


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [2.38e-07, 0, 42], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.949, 1, 9], 'false,false,true,true': [5.51, 137, 39], 'false,false,true,false': [5.534, 121, 41], 'false,false,false,true': [6.854, 152, 68], 'false,false,false,false': [3.721, 45, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [7.3e-08, 0, 20], 'true,false': [0.978, 1, 22], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.022, 0, 5], 'false,true,false': [1.285, 2, 10], 'false,false,true,true': [5.487, 132, 39], 'false,false,true,false': [5.385, 99, 41], 'false,false,false,true': [6.969, 170, 68], 'false,false,false,false': [3.757, 48, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.984, 1, 42], 'false,true,true,true': [2.0, 6, 12], 'false,true,true,false': [4.808, 144, 28], 'false,true,false,true': [1.066, 1, 46], 'false,true,false,false': [0.176, 106, 0], 'false,false,true,true': [0.668, 1, 4], 'false,false,true,false': [7.068, 171, 73], 'false,false,false,true': [3.79, 51, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.021, 0, 22], 'true,true,false': [0.012, 0, 5], 'true,false': [1.328, 2, 15], 'false,true,true,true': [0.977, 1, 6], 'false,true,true,false': [1.71, 3, 80], 'false,true,false': [0.197, 250, 0], 'false,false,true': [0.199, 0, 9], 'false,false,false,true': [7.003, 175, 68], 'false,false,false,false': [3.769, 49, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.978, 1, 12], 'true,false': [1.342, 2, 30], 'false,true,true,true': [0.186, 0, 6], 'false,true,true,false': [1.665, 2, 80], 'false,true,false': [0.311, 226, 0], 'false,false,true,true': [0.677, 0, 33], 'false,false,true,false': [0.519, 60, 0], 'false,false,false,true': [1.334, 2, 6], 'false,false,false,false': [6.423, 143, 58]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.000853, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.873, 4, 35], 'false,true': [4.792, 254, 86], 'false,false,true,true': [0.093, 0, 4], 'false,false,true,false': [6.572, 164, 73], 'false,false,false,true': [3.23, 31, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.132, 0, 13], 'true,true,false': [1.315, 1, 62], 'true,false': [0.583, 159, 0], 'false,true,true,true': [0.022, 0, 17], 'false,true,true,false': [1.608, 5, 20], 'false,true,false': [6.273, 228, 74], 'false,false,true': [2.459, 41, 27], 'false,false,false,true': [2.652, 17, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [1.52, 3, 24], 'true,false,true': [0.738, 1, 2], 'true,false,false,true': [0.044, 0, 3], 'true,false,false,false': [1.307, 2, 13], 'false,true': [4.333, 270, 86], 'false,false,true,true': [0.539, 3, 4], 'false,false,true,false': [6.311, 168, 73], 'false,false,false,true': [1.499, 16, 8], 'false,false,false,false': [2.808, 23, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.097, 0, 27], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.928, 1, 14], 'false,true': [4.409, 266, 86], 'false,false,true,true': [3.033, 8, 97], 'false,false,true,false': [0.619, 193, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.058, 0, 7], 'true,true,true,false': [0.027, 0, 15], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.349, 2, 15], 'false,true': [1.524, 3, 17], 'false,false,true': [4.192, 245, 80], 'false,false,false,true': [5.959, 226, 88], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [1.3534147347811431e-15, 0.20417724609375099], 'false': [0.10380622837370206, 0.19694483019820952], 'false,false': [0.18066594306922085, 0.2134318251769784], 'false,false,false': [0.2135537190082647, 0.21301775147928947], 'false,false,true': [0.17248837809917475, 0.18903368388965197], 'false,true': [1.4802973661668753e-16, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 0.08999999999999977], 'false,true,true': [0.0, 0.0]}, {'': [0.022714981070848156, 0.2021816470119439], 'false': [0.10149327276997631, 0.19795815308902293], 'false,false': [0.19093766770859041, 0.2048790271246325], 'false,false,false': [0.20408163265306106, 0.20761245674740447], 'false,false,true': [0.17605417051400316, 0.2070918367346931], 'false,true': [9.345959397641935e-05, 0.1375133817694989], 'true': [2.6645352591003756e-16, 0.04158790170132343], 'false,true,true': [nan, 9.345959397650816e-05]}, {'': [0.022511843955341844, 0.19339018260356275], 'false': [0.18294229266395773, 0.20388369919145805], 'false,false': [0.2042299837268842, 0.2023408053957548], 'false,false,true': [0.08929764512328453, 0.20475192318046684], 'false,false,false': [0.2023408053957548, nan], 'false,true': [0.1645998514978943, 0.2029762624808745], 'false,true,false': [0.024196608786517367, 0.000293543809266928], 'false,true,true': [0.22222222222222246, 0.13439168583362432]}, {'': [0.04297689850494964, 0.176755970074754], 'false': [0.15177095528050447, 0.20269616316894604], 'false,false': [0.004397632573328567, 0.20270986525405216], 'false,false,false': [0.20179152056899627, 0.20583910943079212], 'false,true': [0.05491927537058017, 0.00015568566333532273], 'false,true,true': [0.13625236671551078, 0.035250171752761204], 'true': [2.359616920850956e-05, 0.10366525407447637], 'true,true': [1.987462789543315e-05, 2.7160432662776125e-05]}, {'': [0.0613598993000033, 0.1598154402444755], 'false': [0.10845167005413273, 0.21250726735103684], 'false,false': [0.2256348569056641, 0.2061103567891404], 'false,false,true': [0.013890981081382934, 0.004488333864501855], 'false,false,false': [0.22254634879827484, 0.20527421129801668], 'false,true': [0.034179817453856204, 0.0004287333821900473], 'true': [0.07361374883298642, 0.056321769045033596], 'false,true,true': [0.005738355097369141, 0.03382699273854142]}, {'': [0.07757531551736027, 0.12318214977078021], 'false': [0.06753241135310262, 0.18503442177752363], 'false,false': [0.1797457210416277, 0.20452356862481696], 'false,false,false': [0.20452356862481696, nan], 'false,false,true': [0.0021590655615472687, 0.18225472976549992], 'true': [0.0002031366902456628, 0.08996419386996878], 'true,true': [1.4556622368600003e-07, 0.0], 'true,true,true': [1.4556622368600003e-07, nan]}, {'': [0.09862008500799875, 0.13036922785552427], 'false': [0.12790315018999984, 0.13605907205669923], 'false,false': [0.08892977800766463, 0.24256837098692036], 'false,false,false': [0.24256837098692036, nan], 'false,true': [0.06181504753264228, 0.13031655559068572], 'true': [0.03398297497475726, 0.0021341200490996542], 'false,true,true': [2.7662643121647632e-05, 0.10348651692103022], 'true,true': [0.001332745683127869, 0.027434729581688008]}, {'': [0.09803099743447612, 0.1047931260898825], 'false': [0.05274705193552187, 0.1637552812719873], 'false,false': [0.16183701756050337, 0.17181542096760588], 'false,false,false': [0.09364052855355436, 0.22530612244897935], 'false,false,true': [0.04149947715603308, 0.1652449011044207], 'true': [0.08556134881874236, 0.11405259331264149], 'true,false': [0.18155082649200063, 0.09596776759595683], 'true,false,false': [0.000652886234825234, 0.11392335571437849]}, {'': [0.02046602438938773, 0.10722736665589318], 'false': [0.05523493458450571, 0.16725003904254115], 'false,false': [0.16725003904254115, nan], 'false,false,true': [0.08760777700992807, 0.001983723507854221], 'true': [0.0003460565392509833, 0.053908131945831245], 'true,false': [0.0, 0.057397438058892886], 'true,false,true': [nan, 0.0]}, {'': [0.04395849370669184, 0.08409470189807003], 'false': [0.11617453704354089, 0.0830632873561934], 'false,false': [0.05407231686277571, 0.11306930713721404], 'false,false,false': [0.11306930713721404, nan], 'true': [0.00022561283588109493, 0.10711203488593021], 'true,true': [0.0001864209369437148, 0.000337842426074729], 'true,true,false': [0.0, 0.0], 'true,true,true': [0.00047856679010686257, 4.803982655566437e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(A, F).;true;true
5;false,false;interaction(G, A), interaction(H, G).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, E), interaction(C, A).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
8;false;interaction(A, G).;true;true
8;false,false;interaction(H, I), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;true,true,false;interaction(C, D), enzyme(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.0945125714631488;  // std dev = 6.302, 220.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=52 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.24451257146314873;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.13468524794867492;  // std dev = 8.463, 358.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=99 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6480397163840629;  // std dev = 0.281, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.24179034310462463;  // std dev = 0.957, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7417903431046247;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), interaction(I, J) )
%   | | | then return 0.7149220146585405;  // std dev = 1.626, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.07042094589972321;  // std dev = 8.497, 415.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=94 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.14593369415527085;  // std dev = 4.483, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.24821083986624984;  // std dev = 3.844, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4668534134673519;  // std dev = 0.309, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13337633255627304;  // std dev = 1.97e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.09021829950398652;  // std dev = 5.200, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7495020842147596;  // std dev = 1.420, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return -0.1714450808496321;  // std dev = 0.298, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.569650565731939;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.10827233570699579;  // std dev = 7.059, 248.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=70 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.8048839996892438;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2589708123899884;  // std dev = 2.946, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3864555770505545;  // std dev = 0.249, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.4539032021602145;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.22244283044916477;  // std dev = 0.431, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6647973294627808;  // std dev = 0.211, 90.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=86 */
%   | | else return -0.16020997294745012;  // std dev = 0.420, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8155706321735858;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18442936782641417;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.06125669065555341;  // std dev = 2.980, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.13693063388905072;  // std dev = 6.832, 216.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.2801530594714191;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.37948868232883926;  // std dev = 0.198, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.6438088162587897;  // std dev = 0.368, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.4611607645590985;  // std dev = 1.845, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | else return -0.13910532604374803;  // std dev = 0.406, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, I), enzyme(J, K) )
%   | | | then return -0.11004750483674812;  // std dev = 0.796, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.10479342611937445;  // std dev = 6.812, 232.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=76 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.09396887439053958;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.017723112365709438;  // std dev = 3.409, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.28701112696625064;  // std dev = 0.000369, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2705624905360651;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11235089265717935;  // std dev = 1.682, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return 0.31504205370712923;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, G) )
%   | then return 0.003440448807354114;  // std dev = 0.257, 352.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2686771014732336;  // std dev = 0.703, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06856445530830046;  // std dev = 6.851, 245.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=73 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.10850274470679189;  // std dev = 2.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.022190089299904736;  // std dev = 2.927, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.500143693979326;  // std dev = 0.229, 78.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=75 */
%   | else return -0.18518257653839115;  // std dev = 0.083, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.23896062730893602;  // std dev = 0.186, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.21794826264349632;  // std dev = 1.474, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.08369167652297836;  // std dev = 1.450, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return 0.08279598696922955;  // std dev = 5.819, 205.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=67 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2881882831558366;  // std dev = 2.559, 50.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=35 */
%   | | | else return -0.18262625651513978;  // std dev = 0.409, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0.5661588673335846;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.14915141145434474;  // std dev = 0.197, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.21845376642364112;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then if ( complex(A, G), complex(E, H) )
%   | | | then return -0.05071415249847626;  // std dev = 1.159, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return -0.12291090074104821;  // std dev = 1.015, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( complex(A, I), location(E, J) )
%   | | | then return -0.07926371459108351;  // std dev = 1.172, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.04622647401623581;  // std dev = 0.853, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2695448568028722;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, L) )
%   | | | then return 0.027930101088459662;  // std dev = 7.971, 483.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=139 */
%   | | | else return -0.047669273024963654;  // std dev = 1.961, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.1625540445144196;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.025823509666563816;  // std dev = 0.341, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.1855810223890995;  // std dev = 0.039, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.045960007947145116;  // std dev = 0.174, 122.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=21 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.004808253589520888;  // std dev = 2.343, 101.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=26 */
%   | | | else return 0.02953993440020704;  // std dev = 2.766, 127.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=39 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.16404536958428637;  // std dev = 2.393, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.2996380696304591;  // std dev = 5.204, 132.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=81 */
%   | | else return -0.2363548348796034;  // std dev = 0.511, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.14149270250976373;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.12075618104622177;  // std dev = 0.254, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.45815419210337566;  // std dev = 3.071, 153.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=144 */
%   | | | else return -0.06546356673886454;  // std dev = 2.959, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | | else return -0.15655009161205802;  // std dev = 0.063, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.18647846159421302;  // std dev = 0.584, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05135249596724622;  // std dev = 0.554, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.20738051815250627;  // std dev = 1.321, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0856324402459187;  // std dev = 0.855, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */


Results
   AUC ROC   = 0.989959
   AUC PR    = 0.306112
   CLL	      = -0.190736
   Precision = 0.29646 at threshold = 0.5
   Recall    = 0.770115
   F1        = 0.428115


Total learning time: 35.9 seconds
Total inference time: 18.895 seconds
AUC ROC: 0.989959


Results scoring model
   AUC ROC   = 0.990098
   AUC PR    = 0.344425
   CLL	      = -0.19163
   Precision = 0.245856 at threshold = 0.5
   Recall    = 0.791111
   F1        = 0.375132


Total scoring time: 77.962 seconds
Refined model CLL: -0.19163


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989325
   AUC PR    = 0.300958
   CLL	      = -0.191098
   Precision = 0.30303 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.421053


Total learning time: 125.152 seconds
Total inference time: 5.545 seconds
AUC ROC: 0.989325
Total revision time: 125.152
Best scored revision CLL: -0.190192


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:52:29
{'AUC ROC': 0.989325, 'AUC PR': 0.300958, 'CLL': -0.191098, 'Precision': [0.30303, 0.5], 'Recall': 0.689655, 'F1': 0.421053, 'Learning time': 125.152, 'Inference time': 5.545, 'parameter_0.8': {'AUC ROC': 0.989325, 'AUC PR': 0.300958, 'CLL': -0.191098, 'Precision': [0.30303, 0.5], 'Recall': 0.689655, 'F1': 0.421053, 'Learning time': 3.125, 'Inference time': 5.545}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08325716020773745;  // std dev = 6.348, 231.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=52 */
%   | | | else return 0.1470879870182467;  // std dev = 9.540, 443.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=128 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.6123305550680972;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7256044627444209;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5993887427638303;  // std dev = 1.325, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.07379577417422802;  // std dev = 6.344, 230.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=52 */
%   | | | else return 0.13558052530259218;  // std dev = 9.491, 432.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=128 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1883869022806811;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
%   | | | else return 0.1873700181204695;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5080844565968594;  // std dev = 1.690, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5251094278283004;  // std dev = 2.336, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.029843305137342586;  // std dev = 5.392, 190.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=37 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7313101895923463;  // std dev = 3.214, 149.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=138 */
%   | | | else return -0.1798548075791118;  // std dev = 2.31e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.349890888485947;  // std dev = 1.334, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1283740368321483;  // std dev = 4.659, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2948612589877713;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3928931558144475;  // std dev = 0.959, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.44792810415340006;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.45547725145069085;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26130658510292215;  // std dev = 1.507, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.6462583037881636;  // std dev = 3.746, 195.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=180 */
%   | | else return -0.15931549406182455;  // std dev = 0.146, 455.000 (wgt'ed) examples reached here.  /* #neg=455 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2792038508032889;  // std dev = 1.241, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07123940268202837;  // std dev = 4.778, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | | else return 0.2426178795515272;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3413986625505938;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3435864995247053;  // std dev = 0.046, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.315012614590073;  // std dev = 1.028, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.49502970890657455;  // std dev = 4.000, 197.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=180 */
%   | | else return -0.13863821239876498;  // std dev = 0.128, 440.000 (wgt'ed) examples reached here.  /* #neg=440 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.684270120089956;  // std dev = 0.974, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.2295225209920743;  // std dev = 0.097, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4509845618328603;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17505762603055322;  // std dev = 3.660, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.09300154015409061;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2737975514431359;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17809321530354108;  // std dev = 1.910, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   else if ( interaction(F, A) )
%   | then return 0.031106406049445604;  // std dev = 7.164, 679.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=194 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3298530541084672;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.045891207302204744;  // std dev = 4.458, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.04355017269880377;  // std dev = 1.590, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2788360293391787;  // std dev = 0.217, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.45485320636322724;  // std dev = 1.184, 88.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=87 */
%   | else return -0.14429298502442983;  // std dev = 0.639, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.1966085918453192;  // std dev = 0.976, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.36448971327998453;  // std dev = 1.311, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.024208062641161526;  // std dev = 4.530, 233.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=47 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04700813045238543;  // std dev = 4.468, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03996389747230432;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.13939415441107467;  // std dev = 1.299, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.17827573916707462;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17130759585281663;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.23680074685678182;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then return 0.009893887976238525;  // std dev = 6.671, 680.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=194 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1235066005908631;  // std dev = 1.037, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.06519096041091872;  // std dev = 4.089, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.061362410386665255;  // std dev = 0.568, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08457400697345216;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18307349427512956;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17127097380279352;  // std dev = 0.098, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.011881770432757085;  // std dev = 6.470, 687.000 (wgt'ed) examples reached here.  /* #neg=493 #pos=194 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5740933590000044;  // std dev = 1.108, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.25881740306514706;  // std dev = 0.392, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.14491329262619182;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16404330417646548;  // std dev = 0.187, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16853147890555317;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1377751792151058;  // std dev = 1.115, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.0671248486916059;  // std dev = 1.343, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( interaction(I, A) )
%   | | then return 2.9620697847726176E-4;  // std dev = 6.512, 682.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=180 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02127996325790884;  // std dev = 3.558, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.984471
   AUC PR    = 0.248326
   CLL	      = -0.183633
   Precision = 0.177616 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.293173


Total learning time: 3.955 seconds
Total inference time: 6.907 seconds
AUC ROC: 0.984471


Results scoring model
   AUC ROC   = 0.987913
   AUC PR    = 0.263842
   CLL	      = -0.181211
   Precision = 0.190252 at threshold = 0.5
   Recall    = 0.858156
   F1        = 0.311454


Total scoring time: 11.35 seconds
Parameter learned model CLL: -0.181211


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [2.06e-07, 0, 46], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [1.323, 2, 14], 'false,false,true,true': [6.348, 179, 52], 'false,false,true,false': [9.54, 315, 128], 'false,false,false,true': [4.707, 72, 32], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [7.3e-08, 0, 21], 'true,false': [1.637, 3, 25], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.03, 0, 8], 'false,true,false': [1.325, 2, 12], 'false,false,true,true': [6.344, 178, 52], 'false,false,true,false': [9.491, 304, 128], 'false,false,false,true': [4.555, 59, 32], 'false,false,false,false': [1.595, 7, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.69, 3, 46], 'false,true,true,true': [2.336, 8, 19], 'false,true,true,false': [5.392, 153, 37], 'false,true,false,true': [3.214, 11, 138], 'false,true,false,false': [2.31e-07, 293, 0], 'false,false,true,true': [1.334, 2, 5], 'false,false,true,false': [4.659, 68, 33], 'false,false,false,true': [1.414, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.959, 1, 23], 'true,true,false': [0.032, 0, 7], 'true,false': [4.21e-08, 0, 16], 'false,true,true,true': [1.507, 4, 14], 'false,true,true,false': [3.746, 15, 180], 'false,true,false': [0.146, 455, 0], 'false,false,true': [1.241, 2, 6], 'false,false,false,true': [4.778, 81, 32], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.03, 0, 14], 'true,false': [0.046, 0, 32], 'false,true,true,true': [1.028, 1, 14], 'false,true,true,false': [4.0, 17, 180], 'false,true,false': [0.128, 440, 0], 'false,false,true,true': [0.974, 1, 14], 'false,false,true,false': [0.097, 23, 0], 'false,false,false,true': [0.119, 0, 5], 'false,false,false,false': [3.66, 34, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.919, 1, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.91, 4, 39], 'false,true': [7.164, 485, 194], 'false,false,true,true': [0.713, 1, 5], 'false,false,true,false': [4.458, 71, 33], 'false,false,false,true': [1.59, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.217, 0, 12], 'true,true,false': [1.184, 1, 87], 'true,false': [0.639, 168, 0], 'false,true,true,true': [0.976, 1, 21], 'false,true,true,false': [1.311, 2, 26], 'false,true,false': [4.53, 186, 47], 'false,false,true': [4.468, 179, 86], 'false,false,false,true': [1.369, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [1.299, 2, 28], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.023, 0, 6], 'true,false,false,false': [0.018, 0, 10], 'false,true': [6.671, 486, 194], 'false,false,true,true': [1.037, 1, 5], 'false,false,true,false': [4.089, 64, 33], 'false,false,false,true': [0.568, 3, 1], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.093, 0, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.098, 0, 16], 'false,true': [6.47, 493, 194], 'false,false,true,true': [1.108, 0, 42], 'false,false,true,false': [0.392, 68, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.022, 0, 7], 'true,true,true,false': [0.187, 0, 16], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.106, 0, 5], 'true,false': [1.115, 3, 18], 'false,true': [1.343, 2, 20], 'false,false,true': [6.512, 502, 180], 'false,false,false,true': [3.558, 74, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [9.267948727305654e-16, 0.20631848458541155], 'false': [0.11342155009451807, 0.1989744646860281], 'false,false': [0.19574003469256823, 0.21606648199446127], 'false,false,false': [0.2130177514792913, 0.23999999999999985], 'false,false,true': [0.1744345120968507, 0.2054532761950392], 'false,true': [-1.4802973661668753e-16, 0.14532871972318334], 'false,true,false': [0.0, 0.10937499999999967], 'false,true,true': [0.0, 0.0]}, {'': [0.05747605164514733, 0.20651244462942436], 'false': [0.08358582244963592, 0.20244676797743696], 'false,false': [0.1977197909964049, 0.22835997490807275], 'false,false,false': [0.22799178843134854, 0.23140495867768587], 'false,false,true': [0.17497164461247702, 0.2085048010973947], 'false,true': [0.00011276934193193977, 0.1254918343142181], 'true': [2.5376526277146434e-16, 0.09566326530612258], 'false,true,true': [nan, 0.00011276934193193977]}, {'': [0.05828276052960267, 0.20512019172993243], 'false': [0.20159305154283172, 0.22394808717295106], 'false,false': [0.22042221723631408, 0.25000000000000006], 'false,false,false': [0.25000000000000006, nan], 'false,false,true': [0.2542785081271049, 0.21489529710255606], 'false,true': [0.18584598590044582, 0.20890119251985162], 'false,true,false': [0.06934291826365016, 1.818795398703328e-16], 'false,true,true': [0.20212478867720712, 0.15301291104978643]}, {'': [0.020494092554798688, 0.16606098500884472], 'false': [0.1578832084660804, 0.2083596892823282], 'false,false': [0.19254051139926964, 0.20700776901359763], 'false,false,false': [0.20202221456140182, 0.25], 'false,true': [0.08800096279411561, 4.6824495236470035e-05], 'false,true,true': [0.12612108125044674, 0.07195926777944864], 'true': [0.030215276958787878, 1.1102230246251565e-16], 'true,true': [0.0383025782733619, 0.00014247406229046206]}, {'': [6.751536122220058e-05, 0.12780877484579228], 'false': [0.1114759808276658, 0.22401208711651918], 'false,false': [0.2247259929264067, 0.22191299119299654], 'false,false,true': [0.06327061047671473, 0.00041101139015670867], 'false,false,false': [0.002851560309911161, 0.23498893248102698], 'false,true': [0.08257383052812173, 3.700881167208711e-05], 'false,true,true': [0.07046498530204094, 0.08120293554731649], 'true': [6.51159497979194e-05, 6.710830309514249e-05]}, {'': [0.08924125053355755, 0.09323826431311566], 'false': [0.07558879414478162, 0.1895962371664268], 'false,false': [0.18949227247477268, 0.18064585791697535], 'false,false,true': [0.08481344363675151, 0.19113319947105947], 'false,false,false': [0.18064585791697535, nan], 'true': [0.1117260752729744, 0.08480839198419997], 'true,true': [0.14079630093945875, 0.0], 'true,true,true': [0.14079630093945875, nan]}, {'': [0.08630305330501481, 0.08900356472098389], 'false': [0.09759001130796403, 0.07998210168466309], 'false,true': [0.06037556495373947, 0.0880639332527821], 'true': [0.01777061830874256, 0.002427551825858716], 'false,false': [0.07531972989803734, 0.23437500000000003], 'false,false,false': [0.23437500000000003, nan], 'false,true,true': [0.04330850517766512, 0.06138440642391], 'true,true': [0.003915853984327607, 0.015942058760078967]}, {'': [0.036652119845894185, 0.08151232961317412], 'false': [0.06544139027853745, 0.17477245016435586], 'false,false': [0.1729992749269078, 0.19013344169022248], 'false,false,false': [0.08074262104183348, 0.24489795918367352], 'false,false,true': [0.17932056261000506, 0.17241016760312627], 'true': [0.056220009294772375, 0.0010570666053012366], 'true,false': [0.0, 0.001061019220743864], 'true,false,false': [9.192984863652202e-05, 3.39655333476907e-05]}, {'': [0.0004278495560039983, 0.07711593882989357], 'false': [0.0609252567009492, 0.17630386623550318], 'false,false': [0.17630386623550318, nan], 'false,false,true': [0.029226723172000965, 0.0022629567262438485], 'true': [0.00028916270098815476, 0.000597039916006608], 'true,false': [nan, 0.000597039916006608]}, {'': [0.026511797825848598, 0.07002790667445458], 'false': [0.08196545691468139, 0.06958590186911694], 'false,false': [0.06218501985296226, 0.11509220762329171], 'false,false,false': [0.11509220762329171, nan], 'true': [0.0017530005824892003, 0.059239690902376664], 'true,true': [0.0016233150575329634, 0.0022622333788222147], 'true,true,false': [nan, 0.0022622333788222203], 'true,true,true': [6.838933810833305e-05, 0.002192216738329287]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.7581489350995123;  // std dev = 0.300, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.09888967584025228;  // std dev = 4.443, 108.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=26 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.12957750652808456;  // std dev = 6.444, 210.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=57 */
%   | | | else return 0.17940497374685155;  // std dev = 9.501, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6829886850066619;  // std dev = 0.206, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.6200830408415302;  // std dev = 0.308, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.07560931583524588;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7243596772733024;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6767541907243149;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return -0.012461794920426006;  // std dev = 3.320, 95.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=13 */
%   | | | else return 0.09508352049054362;  // std dev = 6.274, 210.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=53 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.24590439022597693;  // std dev = 5.757, 137.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=56 */
%   | | | else return 0.13611183146023967;  // std dev = 8.113, 314.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=94 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5731557353788299;  // std dev = 0.040, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.41520568837844196;  // std dev = 0.384, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.1013432903260876;  // std dev = 5.094, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
%   | | | else return 0.025384348260554086;  // std dev = 3.777, 94.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=19 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7533959965226654;  // std dev = 2.626, 145.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=138 */
%   | | | else return -0.18281393669621596;  // std dev = 0.203, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B), complex(J, L) )
%   | | | then return 0.6637881749247521;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14069397880519421;  // std dev = 4.619, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | else return 0.6163631176180542;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.45226267110631213;  // std dev = 0.031, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.35132142598113353;  // std dev = 0.313, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.5251858639222657;  // std dev = 2.613, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return 0.6244705980454346;  // std dev = 3.339, 176.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=164 */
%   | | else return -0.1629596724444211;  // std dev = 0.450, 498.000 (wgt'ed) examples reached here.  /* #neg=498 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6399925593163217;  // std dev = 1.596, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.2178309085503602;  // std dev = 0.121, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4470222481325015;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04075048010452256;  // std dev = 3.411, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.24941562492111768;  // std dev = 0.316, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.23313543256894725;  // std dev = 1.614, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.2520127643495273;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3520999013599935;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(H, A) )
%   | then return 0.03870468784353691;  // std dev = 0.325, 723.000 (wgt'ed) examples reached here.  /* #neg=529 #pos=194 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6511226782747858;  // std dev = 0.342, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.22765511833184796;  // std dev = 0.260, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.20670028067256466;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.053397857574163515;  // std dev = 3.785, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.30572732599798746;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, G), complex(G, H) )
%   | | | then return 0.2319102031533309;  // std dev = 0.964, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.19820275656573186;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.313778861401864;  // std dev = 0.223, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, A) )
%   | then return -0.12580905253990846;  // std dev = 0.140, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J), interaction(K, A) )
%   | | | then return 0.48399422191708963;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2538885921460657;  // std dev = 0.628, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.013766604827123155;  // std dev = 4.779, 206.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=48 */
%   | | | else return 0.06711368547900023;  // std dev = 8.086, 538.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=168 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.25017135816192837;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.43636433188702806;  // std dev = 1.209, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.5167251592220231;  // std dev = 0.096, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | else return -0.1712528616021105;  // std dev = 0.057, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.24332373091387247;  // std dev = 0.227, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4417079210635434;  // std dev = 1.521, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return -0.0655124505146055;  // std dev = 2.707, 111.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=15 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.034814365079032426;  // std dev = 5.465, 281.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=80 */
%   | | | else return 0.07556522402751054;  // std dev = 4.165, 125.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.2067951160775332;  // std dev = 0.141, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.2311390899218135;  // std dev = 0.050, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, G), recursion_proteinclass(E, B) )
%   | | then return 0.2354256664598725;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F), interaction(E, A) )
%   | | | then return -0.07090247610707653;  // std dev = 0.731, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.009434035365443138;  // std dev = 3.931, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, H), interaction(H, A) )
%   | | | then return -0.0672585535228053;  // std dev = 0.697, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.07051949162393405;  // std dev = 4.140, 145.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=51 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.08091292076713333;  // std dev = 2.488, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.016981248550369702;  // std dev = 6.154, 382.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=111 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.11341773466947562;  // std dev = 0.248, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else return 0.13745314325192504;  // std dev = 0.220, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), complex(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.17916304940467512;  // std dev = 3.531, 117.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=67 */
%   | | | else return -0.14405092231010894;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.06824308070862796;  // std dev = 2.988, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.01880375323483173;  // std dev = 5.757, 348.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=106 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.16487499077556564;  // std dev = 2.322, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.34316988529879267;  // std dev = 2.186, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | else return -0.20838294562736692;  // std dev = 0.050, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1295255514783956;  // std dev = 0.159, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(H, D), complex(H, E) )
%   | | | then return -0.008360286012662163;  // std dev = 2.941, 146.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=33 */
%   | | | else return 0.06609167625912575;  // std dev = 1.692, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return 0.11363337995176719;  // std dev = 3.320, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.01534117760827373;  // std dev = 3.765, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return -0.014413107372929682;  // std dev = 1.303, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.09475399640532473;  // std dev = 1.424, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.06373076996187535;  // std dev = 1.546, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.0026008008915910825;  // std dev = 5.219, 300.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=82 */


Results
   AUC ROC   = 0.981524
   AUC PR    = 0.251956
   CLL	      = -0.210266
   Precision = 0.195652 at threshold = 0.5
   Recall    = 0.62069
   F1        = 0.297521


Total learning time: 20.391 seconds
Total inference time: 9.266 seconds
AUC ROC: 0.981524


Results scoring model
   AUC ROC   = 0.986474
   AUC PR    = 0.278281
   CLL	      = -0.203589
   Precision = 0.210628 at threshold = 0.5
   Recall    = 0.77305
   F1        = 0.331055


Total scoring time: 41.713 seconds
Refined model CLL: -0.203589


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984471
   AUC PR    = 0.248326
   CLL	      = -0.183633
   Precision = 0.177616 at threshold = 0.5
   Recall    = 0.83908
   F1        = 0.293173


Total learning time: 77.40899999999999 seconds
Total inference time: 6.907 seconds
AUC ROC: 0.984471
Total revision time: 77.40899999999999
Best scored revision CLL: -0.181211


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:54:04
{'AUC ROC': 0.984471, 'AUC PR': 0.248326, 'CLL': -0.183633, 'Precision': [0.177616, 0.5], 'Recall': 0.83908, 'F1': 0.293173, 'Learning time': 77.40899999999999, 'Inference time': 6.907, 'parameter_1.0': {'AUC ROC': 0.984471, 'AUC PR': 0.248326, 'CLL': -0.183633, 'Precision': [0.177616, 0.5], 'Recall': 0.83908, 'F1': 0.293173, 'Learning time': 3.955, 'Inference time': 6.907}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.01604367194161758;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.12130682983635441;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19777157660894634;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.04368470511807633;  // std dev = 2.208, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.16531205291059192;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14267443522796394;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return -0.004318608374915809;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8507215633436079;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03350828436255826;  // std dev = 1.751, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7955439922415354;  // std dev = 0.252, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.18043825220893964;  // std dev = 2.11e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.18853555103997777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.12578386792086924;  // std dev = 3.603, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.052658412893306035;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4620656132175886;  // std dev = 0.144, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7132799288204384;  // std dev = 0.278, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.15281997577739995;  // std dev = 0.145, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21652206761787693;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15146357308794894;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.164442872802513;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3553539726085298;  // std dev = 0.132, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5544757851566742;  // std dev = 0.368, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.13495860760716347;  // std dev = 0.234, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7458303800860213;  // std dev = 0.290, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2346377263918558;  // std dev = 1.49e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.47005381317066597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.02175964138966977;  // std dev = 2.674, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2551722425694894;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F) )
%   | then return -0.005346360228729137;  // std dev = 2.050, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.1650626904614645;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.135569256666619;  // std dev = 2.986, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.058190113691967894;  // std dev = 1.413, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22209116716943167;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4741857516506019;  // std dev = 0.772, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.15559000959119104;  // std dev = 0.718, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.12058051462917896;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.008029232610438227;  // std dev = 2.476, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then return 0.023283274852477432;  // std dev = 0.976, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08672732310509636;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17620137645512235;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.14178142447769349;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2076468271991435;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.005361639213957774;  // std dev = 1.837, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012474990372199936;  // std dev = 2.942, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.19549614605623794;  // std dev = 0.484, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.00905026762433468;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.13885957797059778;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1547819432882704;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then return -0.018000483139718713;  // std dev = 1.807, 90.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=18 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.518166223638608;  // std dev = 1.206, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.23264301481571498;  // std dev = 0.235, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.15150796965455998;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13573146326041818;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2180588470358398;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.12679183873707892;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H) )
%   | | then return -0.009871789024029978;  // std dev = 1.754, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0463460249880032;  // std dev = 2.535, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981734
   AUC PR    = 0.216596
   CLL	      = -0.204005
   Precision = 0.16954 at threshold = 0.5
   Recall    = 0.567308
   F1        = 0.261062


Total learning time: 1.678 seconds
Total inference time: 6.224 seconds
AUC ROC: 0.981734


Results scoring model
   AUC ROC   = 0.995944
   AUC PR    = 0.560564
   CLL	      = -0.174349
   Precision = 0.506173 at threshold = 0.5
   Recall    = 0.773585
   F1        = 0.61194


Total scoring time: 2.65 seconds
Parameter learned model CLL: -0.174349


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.248, 32, 6], 'false,false,true,false': [2.714, 28, 10], 'false,false,false,true': [3.448, 35, 18], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [2.98e-08, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [2.208, 26, 6], 'false,false,true,false': [2.603, 21, 10], 'false,false,false,true': [3.523, 40, 18], 'false,false,false,false': [1.589, 16, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [1.751, 28, 4], 'false,true,false,true': [0.252, 0, 11], 'false,true,false,false': [2.11e-08, 38, 0], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [3.603, 42, 20], 'false,false,false,true': [1.535, 11, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [2.11e-08, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 6], 'false,true,true,true': [0.144, 0, 2], 'false,true,true,false': [0.278, 0, 16], 'false,true,false': [0.145, 61, 0], 'false,false,true': [0.753, 1, 2], 'false,false,false,true': [3.394, 32, 18], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.132, 0, 2], 'false,true,true,false': [0.368, 0, 16], 'false,true,false': [0.234, 63, 0], 'false,false,true,true': [0.29, 0, 13], 'false,false,true,false': [1.49e-08, 14, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.674, 36, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 1], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 11], 'false,true': [2.05, 63, 18], 'false,false,true,true': [0.021, 2, 0], 'false,false,true,false': [2.986, 28, 20], 'false,false,false,true': [1.413, 9, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.054, 0, 4], 'true,true,false': [0.772, 0, 25], 'true,false': [0.718, 51, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [2.476, 43, 13], 'false,false,true': [0.976, 15, 7], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.002, 0, 4], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 5], 'true,false,false,false': [0.004, 0, 3], 'false,true': [1.837, 50, 18], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.942, 44, 20], 'false,false,false,true': [0.484, 1, 1], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.033, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.055, 0, 6], 'false,true': [1.807, 72, 18], 'false,false,true,true': [1.206, 1, 23], 'false,false,true,false': [0.235, 59, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.024, 0, 2], 'true,true,true,false': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.188, 0, 4], 'false,true': [0.06, 0, 8], 'false,false,true': [1.754, 60, 16], 'false,false,false,true': [2.535, 36, 21], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.20450877793535147], 'false': [0.0, 0.19533150458050927], 'false,false': [0.16620498614958396, 0.22222222222222235], 'false,false,false': [0.22427910288358793, 0.20999999999999988], 'false,false,true': [0.1329639889196678, 0.1939058171745152], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'false,true,true': [0.0, nan]}, {'': [1.4802973661668753e-16, 0.19860817643397222], 'false': [0.0, 0.19379824502046622], 'false,false': [0.18860520523698193, 0.19804338826431578], 'false,false,false': [0.21403091557669446, 0.13296398891966757], 'false,false,true': [0.1523437499999998, 0.21852237252861612], 'true': [1.4802973661668753e-16, 9.868649107779169e-17], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [-2.590520390792032e-16, 0.17991067233687297], 'false': [0.1595435314665275, 0.1996920353696774], 'false,false': [0.20582505801782314, 0.16836734693877564], 'false,false,true': [0.0, 0.20937717923290167], 'false,false,false': [0.16836734693877564, nan], 'false,true': [0.14891925799020292, 0.1671268288857741], 'false,true,false': [0.005768525816367594, 1.1686558153949016e-17], 'false,true,true': [1.4802973661668753e-16, 0.09586365926325847]}, {'': [1.4802973661668753e-16, 0.1743441056781703], 'false': [0.12652776342231106, 0.22742546313789969], 'false,false': [0.18924489568625127, 0.22917432002283478], 'false,false,false': [0.2304000000000006, 0.22222222222222238], 'false,true': [0.011667021009054344, 0.00034463944138567567], 'false,true,true': [0.010314247383039155, 0.004824047449660918], 'true': [7.401486830834377e-17, 7.401486830834377e-17], 'true,true': [7.401486830834377e-17, nan]}, {'': [-5.551115123125783e-17, 0.14083581624055422], 'false': [0.08039672572481224, 0.20550095784677183], 'false,false': [0.24310942747561026, 0.16058515931347803], 'false,false,true': [0.006458546457044834, 1.586032892321652e-17], 'false,false,false': [0.0, 0.15889544723353805], 'false,true': [0.012391869642192176, 0.0008706183074912285], 'false,true,true': [0.008701705696848389, 0.008447640553975733], 'true': [-3.172065784643304e-17, -2.2204460492503132e-17]}, {'': [3.700743415417188e-17, 0.11053892194333301], 'false': [0.051899713016782555, 0.179494550780557], 'false,false': [0.18184246107863594, 0.16626713339704993], 'false,false,true': [0.00021423238607998218, 0.18579512123546485], 'false,false,false': [0.16626713339704993, nan], 'true': [0.0, 4.0371746350005693e-17], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.09848565447737936, 0.09856056674645251], 'false': [0.1057240232032682, 0.08285125246560594], 'false,true': [0.024249632527209224, 0.10949921078593391], 'true': [0.028228747196902722, 0.010099831842916528], 'false,false': [0.04330636240935162, 0.20408163265306123], 'false,false,false': [0.20408163265306123, nan], 'true,true': [0.0007388438732462976, 0.023861382828724444], 'false,true,true': [0.0, 0.0]}, {'': [0.0007005993091910625, 0.09713120647376092], 'false': [0.04964411897782788, 0.14012236720584753], 'false,false': [0.13521704221628644, 0.1678699518943415], 'false,false,false': [0.11706526761762777, 0.17283950617283958], 'false,false,true': [nan, 0.13521704221628644], 'true': [8.012421240863321e-07, 0.0010190027824634323], 'true,false': [nan, 0.0010190027824634323], 'true,false,false': [0.0, 5.933705949071981e-06]}, {'': [0.0004082092781820766, 0.08319699239543964], 'false': [0.03628936639947662, 0.13405753772888462], 'false,false': [0.13405753772888462, nan], 'false,false,true': [0.06059387875479453, 0.0009392732624580142], 'true': [0.00018172364989313636, 0.000507934047816308], 'true,false': [nan, 0.000507934047816308]}, {'': [0.005887977327585316, 0.06881611542386724], 'false': [0.00045440961401279137, 0.07220911516417089], 'false,false': [0.0404870512144296, 0.11269923322346888], 'false,false,false': [0.11269923322346888, nan], 'true': [0.00021043424330358107, 0.008794928331236705], 'true,true': [0.00021043424330358107, nan], 'true,true,true': [0.0002964194096049637, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;interaction(G, A), interaction(H, G).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;complex(A, F), complex(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, I), location(H, J) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.38756069980539465;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.05361577078284073;  // std dev = 1.654, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return 0.11621345122854462;  // std dev = 3.445, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7906663383120752;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( complex(A, I), interaction(G, G) )
%   | | | then return 0.1515436582697799;  // std dev = 2.020, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.050266515983158955;  // std dev = 1.877, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.2814732545398643;  // std dev = 2.557, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.13390006982026317;  // std dev = 3.264, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8065146607219167;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.045030462843837896;  // std dev = 1.745, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7298478534837086;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.1597599601060088;  // std dev = 0.148, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15515786946755156;  // std dev = 3.513, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.13355023329585267;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1582306685983402;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5685283069518771;  // std dev = 0.975, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.7458819608738505;  // std dev = 0.170, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return -0.17167738063310475;  // std dev = 0.119, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.13122064920719956;  // std dev = 0.097, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7406508325041334;  // std dev = 0.150, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.24788530487492288;  // std dev = 0.094, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1223626865694909;  // std dev = 1.937, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.00829431833944267;  // std dev = 1.800, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.154045180493483;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.4587300667263758;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5887545685259804;  // std dev = 0.250, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.12722221719271953;  // std dev = 0.021, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5783525008701695;  // std dev = 0.181, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.19504247463234223;  // std dev = 0.074, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5515653846684727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05291315066795759;  // std dev = 2.568, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2688991714807409;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, G), complex(F, H) )
%   | | | then return -0.05200596919005577;  // std dev = 0.265, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.21073737004016588;  // std dev = 0.933, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.04810763582923487;  // std dev = 1.346, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.09069059263818358;  // std dev = 0.986, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return -0.18164118690923467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0269280777868526;  // std dev = 2.927, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.06477736842985489;  // std dev = 1.290, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.2063552118214011;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3336560126176168;  // std dev = 0.206, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.15714863463059242;  // std dev = 0.034, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.23623253856347048;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.5147798843846751;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.073290638362997;  // std dev = 1.062, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.04964912261185967;  // std dev = 2.269, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( enzyme(A, H) )
%   | | then return -0.05475880238035232;  // std dev = 0.222, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.21658340505292303;  // std dev = 1.141, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.01907177969809458;  // std dev = 0.669, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17980241852127674;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(D, F) )
%   | | then if ( complex(A, G), complex(D, H) )
%   | | | then return 0.03565960818210347;  // std dev = 0.612, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.1428515352426126;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45034634502445275;  // std dev = 0.805, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.17560714540685615;  // std dev = 0.268, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), complex(L, K) )
%   | | | then return 0.024148286713804378;  // std dev = 1.184, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.1656730461426687;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.08977216992717875;  // std dev = 0.987, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.007116780375322025;  // std dev = 1.896, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15491117929899603;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return -0.16544317581442125;  // std dev = 0.192, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.05332891211382744;  // std dev = 0.776, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.035576206896154726;  // std dev = 0.695, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.08090495465479268;  // std dev = 1.180, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.2577858217273999;  // std dev = 1.335, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.13967398580021506;  // std dev = 1.746, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.13718026388489837;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.2141530912189296;  // std dev = 0.112, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(C, E) )
%   | | then return 0.13016169338161898;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.14875581925950265;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1893661471784187;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.11831513486449008;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16787379247461795;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(H, J) )
%   | | | then return -0.10462939141909484;  // std dev = 0.437, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return -0.009211576853983897;  // std dev = 1.037, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return -0.015059492157446983;  // std dev = 1.186, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.08142969315092682;  // std dev = 2.359, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */


Results
   AUC ROC   = 0.958292
   AUC PR    = 0.211898
   CLL	      = -0.18675
   Precision = 0.193916 at threshold = 0.5
   Recall    = 0.490385
   F1        = 0.277929


Total learning time: 8.565 seconds
Total inference time: 14.351 seconds
AUC ROC: 0.958292


Results scoring model
   AUC ROC   = 0.993979
   AUC PR    = 0.574859
   CLL	      = -0.163378
   Precision = 0.52439 at threshold = 0.5
   Recall    = 0.811321
   F1        = 0.637037


Total scoring time: 13.33 seconds
Refined model CLL: -0.163378


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958292
   AUC PR    = 0.211898
   CLL	      = -0.18675
   Precision = 0.193916 at threshold = 0.5
   Recall    = 0.490385
   F1        = 0.277929


Total learning time: 26.223 seconds
Total inference time: 14.351 seconds
AUC ROC: 0.958292
Total revision time: 26.223
Best scored revision CLL: -0.163378


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:54:51
{'AUC ROC': 0.958292, 'AUC PR': 0.211898, 'CLL': -0.18675, 'Precision': [0.193916, 0.5], 'Recall': 0.490385, 'F1': 0.277929, 'Learning time': 26.223, 'Inference time': 14.351, 'parameter_0.2': {'AUC ROC': 0.981734, 'AUC PR': 0.216596, 'CLL': -0.204005, 'Precision': [0.16954, 0.5], 'Recall': 0.567308, 'F1': 0.261062, 'Learning time': 1.678, 'Inference time': 6.224}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08891816586874314;  // std dev = 3.721, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return 0.09678529873587599;  // std dev = 3.999, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1724346493852252;  // std dev = 4.757, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
%   | | | else return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10784611566257041;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.11868139988532833;  // std dev = 3.908, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10632764646758039;  // std dev = 4.907, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | | | else return 0.24226581259110053;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6324701356988156;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03415364667206874;  // std dev = 3.399, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8173692612072874;  // std dev = 0.268, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.17015441381837887;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.643817846669763;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1593735111770046;  // std dev = 4.694, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05735565792922622;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27465644130116706;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4512039673869422;  // std dev = 0.135, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7164232007572264;  // std dev = 0.993, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.1590583605809597;  // std dev = 0.135, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.46791636657480506;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11164375618313116;  // std dev = 4.741, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | | | else return 0.07413951049535383;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.329407672696643;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.332668607272828;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3472938164459261;  // std dev = 0.124, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5855142767985106;  // std dev = 0.548, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.141241573341177;  // std dev = 0.161, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7060052781196728;  // std dev = 0.723, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.22232596607724064;  // std dev = 0.009, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.03050267570719256;  // std dev = 0.905, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03369407969112344;  // std dev = 4.235, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.253399714402155;  // std dev = 0.000552, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2034791097697321;  // std dev = 0.896, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, F) )
%   | then return 0.01235245576022738;  // std dev = 3.287, 159.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=41 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2840666599338707;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09493759961586769;  // std dev = 4.332, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07262978652361553;  // std dev = 2.279, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1965452708659143;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4599995410323364;  // std dev = 1.544, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return -0.16944307859167235;  // std dev = 0.677, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21475120128401287;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.454945579545088;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0035943314000324114;  // std dev = 3.964, 121.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=29 */
%   | else if ( interaction(A, H) )
%   | | then return 0.058051084628369415;  // std dev = 1.545, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.02545157431783348;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1793359662904665;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.1564927460918054;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23485952374277094;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.003545543477701166;  // std dev = 2.893, 157.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=41 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18607047754113484;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02290290029850547;  // std dev = 4.266, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.17528238140942964;  // std dev = 0.681, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05787480841775902;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14688410448736938;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17670561188407174;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then return 0.013898030148742661;  // std dev = 2.826, 148.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=41 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.546579371889182;  // std dev = 1.823, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | | else return -0.22088401789542045;  // std dev = 0.275, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14117459430710327;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13735179769781453;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05685994684717388;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.05079806928078288;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.03810806069877197;  // std dev = 0.922, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, I) )
%   | | then return -3.188086485764594E-4;  // std dev = 2.754, 163.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=39 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.038828130467554914;  // std dev = 3.867, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.977159
   AUC PR    = 0.180229
   CLL	      = -0.21804
   Precision = 0.131417 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.216582


Total learning time: 2.113 seconds
Total inference time: 5.916 seconds
AUC ROC: 0.977159


Results scoring model
   AUC ROC   = 0.992483
   AUC PR    = 0.392136
   CLL	      = -0.185326
   Precision = 0.382353 at threshold = 0.5
   Recall    = 0.735849
   F1        = 0.503226


Total scoring time: 4.342 seconds
Parameter learned model CLL: -0.185326


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.721, 60, 18], 'false,false,true,false': [3.999, 67, 21], 'false,false,false,true': [4.757, 72, 33], 'false,false,false,false': [2.422, 22, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [2.98e-08, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 0, 5], 'false,false,true,true': [3.648, 51, 18], 'false,false,true,false': [3.908, 56, 21], 'false,false,false,true': [4.907, 89, 33], 'false,false,false,false': [2.191, 12, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.0, 0, 19], 'false,true,true,true': [0.894, 1, 4], 'false,true,true,false': [3.399, 58, 15], 'false,true,false,true': [0.268, 0, 22], 'false,true,false,false': [5.96e-08, 58, 0], 'false,false,true,true': [0.217, 0, 3], 'false,false,true,false': [4.694, 66, 35], 'false,false,false,true': [2.449, 24, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [4.21e-08, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.926, 1, 6], 'false,true,true,true': [0.135, 0, 2], 'false,true,true,false': [0.993, 1, 39], 'false,true,false': [0.135, 118, 0], 'false,false,true': [0.131, 0, 5], 'false,false,false,true': [4.741, 71, 33], 'false,false,false,false': [2.407, 21, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.047, 0, 11], 'true,false': [0.044, 0, 8], 'false,true,true,true': [0.124, 0, 2], 'false,true,true,false': [0.548, 0, 39], 'false,true,false': [0.161, 125, 0], 'false,false,true,true': [0.723, 0, 20], 'false,false,true,false': [0.009, 26, 0], 'false,false,false,true': [0.905, 1, 2], 'false,false,false,false': [4.235, 70, 24]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.000552, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.896, 1, 14], 'false,true': [3.287, 118, 41], 'false,false,true,true': [0.283, 0, 3], 'false,false,true,false': [4.332, 67, 35], 'false,false,false,true': [2.279, 19, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.11, 0, 9], 'true,true,false': [1.544, 1, 39], 'true,false': [0.677, 84, 0], 'false,true,true,true': [0.007, 0, 5], 'false,true,true,false': [0.202, 0, 5], 'false,true,false': [3.964, 92, 29], 'false,false,true': [1.545, 24, 13], 'false,false,false,true': [2.181, 23, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.043, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.021, 0, 5], 'true,false,false,false': [0.009, 0, 3], 'false,true': [2.893, 116, 41], 'false,false,true,true': [0.183, 0, 3], 'false,false,true,false': [4.266, 85, 35], 'false,false,false,true': [0.681, 2, 2], 'false,false,false,false': [2.07, 15, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.042, 0, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.053, 0, 6], 'false,true': [2.826, 107, 41], 'false,false,true,true': [1.823, 3, 46], 'false,false,true,false': [0.275, 70, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 5], 'true,true,true,false': [0.005, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.97, 1, 5], 'false,true': [0.922, 1, 9], 'false,false,true': [2.754, 124, 39], 'false,false,false,true': [3.867, 85, 41], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.8047739569477637e-16, 0.20267962556923708], 'false': [-2.5376526277146434e-16, 0.19514133398086142], 'false,false': [0.17974306866018414, 0.21146776406035786], 'false,false,false': [0.21551020408163402, 0.19555555555555568], 'false,false,true': [0.17751479289940775, 0.18168904958677656], 'false,true': [1.4802973661668753e-16, 0.0], 'false,true,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}, {'': [2.8047739569477637e-16, 0.20421487017155954], 'false': [-6.344131569286608e-17, 0.20063494540380591], 'false,false': [0.1957626538096764, 0.20557253626552813], 'false,false,false': [0.19732598763773285, 0.23999999999999994], 'false,false,true': [0.1928166351606803, 0.19834710743801684], 'true': [9.868649107779169e-17, 8.881784197001253e-17], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [-2.8047739569477637e-16, 0.20080690172086327], 'false': [0.18789742577863988, 0.21393952957465578], 'false,false': [0.21890907707505194, 0.18749999999999983], 'false,false,true': [0.015647303834902388, 0.21817675796338465], 'false,true': [0.1798511375643544, 0.19533002877187616], 'false,true,false': [0.0032688323821687152, 6.125368411725002e-17], 'false,false,false': [0.18749999999999983, nan], 'false,true,true': [0.15999999999999998, 0.1582632006079138]}, {'': [0.04750000000000014, 0.17905931683341023], 'false': [0.15136771076722444, 0.20986423984923172], 'false,false': [0.0034314859420054855, 0.21281240706506746], 'false,false,false': [0.21614471511887967, 0.1997621878715814], 'false,true': [0.02712689670818701, 0.00015417077882055663], 'true': [1.3664283380001927e-16, 0.12244897959183679], 'false,true,true': [0.009161092931044834, 0.024675603956590565], 'true,true': [1.3664283380001927e-16, nan]}, {'': [0.0002196604644696106, 0.14919864033866204], 'false': [0.09782518736620409, 0.20771203523202536], 'false,false': [0.22313845060103968, 0.19337882061013387], 'false,false,true': [0.026111041409108537, 2.822675821437889e-06], 'false,false,false': [0.2732527086297299, 0.19082933896937376], 'false,true': [0.010334516272411559, 0.00020790623151199837], 'false,true,true': [0.007627837657838241, 0.007705076999997027], 'true': [0.00020164635136295367, 0.00023827352065353136]}, {'': [0.0405929949829109, 0.12182284771902518], 'false': [0.06794770142295299, 0.18301519030878566], 'false,false': [0.18045226493883662, 0.1923712710721985], 'false,false,false': [0.1923712710721985, nan], 'false,false,true': [0.026650847570063623, 0.18395384171058188], 'true': [6.083776156184939e-08, 0.05350095633957731], 'true,true': [6.083776156184939e-08, nan], 'true,true,true': [6.083776156184939e-08, nan]}, {'': [0.1038638199332923, 0.12290778566312395], 'false': [0.1294273632081685, 0.10996689654617245], 'false,true': [0.018502802164928212, 0.12985090551263087], 'false,false': [0.0644820373141156, 0.16409036860879914], 'false,false,false': [0.16409036860879914, nan], 'true': [0.059325388566659, 0.005457276400646712], 'true,true': [0.0013369764933379652, 0.05962434511539505], 'false,true,true': [1.1144341213048525e-05, 0.008147790314531144]}, {'': [0.0007388831256860289, 0.10362650484451343], 'false': [0.053316584042899115, 0.1564770586931713], 'false,false': [0.14887461984546346, 0.19182181191958836], 'false,false,false': [0.11587874098438694, 0.2040816326530613], 'false,false,true': [0.011135216759527422, 0.15166874740399647], 'true': [0.0001643991979391569, 0.0015040032857381452], 'true,false': [nan, 0.0015040032857381452], 'true,false,false': [8.686191906089879e-05, 2.756066391112107e-05]}, {'': [0.00043737374011995476, 0.10784683951638561], 'false': [0.053953223703308094, 0.1712164957151496], 'false,false': [0.1712164957151496, nan], 'false,false,true': [0.06779699486037606, 0.001080712041861988], 'true': [0.00013859350736476867, 0.0004762472298079264], 'true,false': [nan, 0.0004762472298079264]}, {'': [0.05417364792495605, 0.07860700160504204], 'false': [0.08503297041443006, 0.07836939149397669], 'false,false': [0.046536463744513756, 0.11868574220748317], 'false,false,false': [0.11868574220748317, nan], 'true': [0.0010086913881781738, 0.15678038766189126], 'true,true': [7.871375392247693e-05, 0.0], 'true,true,true': [0.00014464424015183663, 5.476380735128239e-06], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04124752664880815;  // std dev = 4.609, 142.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=26 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16849376268571828;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.12898171885920476;  // std dev = 4.449, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | | else return -0.02789903351106694;  // std dev = 2.099, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.13882871084722706;  // std dev = 5.325, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | | | else return 0.4579215314789004;  // std dev = 1.362, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.5683478489330074;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3886997700796178;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.16800776961738248;  // std dev = 2.517, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.04748209708276012;  // std dev = 2.423, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.8078922687528304;  // std dev = 0.316, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.15677421249428186;  // std dev = 0.118, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7598873745995816;  // std dev = 1.097, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.18535778382089968;  // std dev = 0.065, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return 0.2458397911399023;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4357164527814775;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.5917506102161131;  // std dev = 1.339, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.7208158275015876;  // std dev = 0.407, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.1794639237625667;  // std dev = 0.131, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.15224682812251383;  // std dev = 0.261, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6123274190059885;  // std dev = 0.466, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1672851284752852;  // std dev = 0.067, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.05033300402913034;  // std dev = 1.120, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.07021394403188642;  // std dev = 3.428, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.32097737615420363;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.04612256034752691;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.33797850162835574;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5625242791084788;  // std dev = 0.111, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.14178644790757397;  // std dev = 0.024, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46776302746984993;  // std dev = 0.438, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1467058648835363;  // std dev = 0.157, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.033705689036152016;  // std dev = 2.182, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | | else return 0.07218841644282212;  // std dev = 2.873, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27756715673986454;  // std dev = 0.042, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( enzyme(F, H), enzyme(A, I) )
%   | | | then return -0.12696139937808154;  // std dev = 0.712, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return -0.009092381050612748;  // std dev = 2.503, 107.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=23 */
%   | | else if ( enzyme(D, J) )
%   | | | then return -0.12475596215248201;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1171296150303222;  // std dev = 1.742, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( enzyme(M, L), complex(M, N) )
%   | | | then return 0.1537423777875488;  // std dev = 1.315, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.0767013492369514;  // std dev = 0.911, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return -0.014186053349126657;  // std dev = 1.208, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.04436249505289409;  // std dev = 3.393, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3595238643860965;  // std dev = 0.118, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else return -0.141978473379624;  // std dev = 0.053, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2153513924591796;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22852651188605697;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.018127228069727237;  // std dev = 1.396, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.0715772798422994;  // std dev = 2.982, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.08113936262995414;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.21472804232262968;  // std dev = 1.316, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.06047585379960613;  // std dev = 1.430, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1826699310584653;  // std dev = 0.033, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then if ( interaction(E, E), location(E, D) )
%   | | | then return -0.11014139029231673;  // std dev = 0.775, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | | else return 0.005713379303169688;  // std dev = 0.593, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(E, G), location(E, D) )
%   | | | then return 0.04758449271838778;  // std dev = 1.961, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return -0.011327184379818347;  // std dev = 1.468, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.471450631649353;  // std dev = 0.577, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.14848732838583314;  // std dev = 0.138, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.023305455358531207;  // std dev = 3.382, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | | else return 0.27224150627285554;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1571286517711979;  // std dev = 0.030, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return -0.09439513563694665;  // std dev = 0.847, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return 0.06945616709047661;  // std dev = 0.615, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.007487134862584513;  // std dev = 1.561, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.035906478841634205;  // std dev = 1.968, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), location(J, K) )
%   | | | then return 0.21155756565775927;  // std dev = 2.735, 69.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=44 */
%   | | | else return 0.09602176032877231;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.1512574210592305;  // std dev = 0.282, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.20733704755076435;  // std dev = 0.090, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.11968966978703595;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return -0.5378629361242032;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2149711610541647;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.2733600889289978;  // std dev = 1.806, 50.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | | else return 0.0797586214442343;  // std dev = 2.901, 93.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=41 */
%   | | else return -0.1360521553680607;  // std dev = 0.064, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.027101230886456596;  // std dev = 0.538, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07320988257164028;  // std dev = 0.506, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.12500015704521836;  // std dev = 0.376, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.985668
   AUC PR    = 0.267244
   CLL	      = -0.175629
   Precision = 0.178571 at threshold = 0.5
   Recall    = 0.721154
   F1        = 0.28626


Total learning time: 20.226 seconds
Total inference time: 18.412 seconds
AUC ROC: 0.985668


Results scoring model
   AUC ROC   = 0.995313
   AUC PR    = 0.490003
   CLL	      = -0.158901
   Precision = 0.425926 at threshold = 0.5
   Recall    = 0.867925
   F1        = 0.571429


Total scoring time: 33.5 seconds
Refined model CLL: -0.158901


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985668
   AUC PR    = 0.267244
   CLL	      = -0.175629
   Precision = 0.178571 at threshold = 0.5
   Recall    = 0.721154
   F1        = 0.28626


Total learning time: 60.181 seconds
Total inference time: 18.412 seconds
AUC ROC: 0.985668
Total revision time: 60.181
Best scored revision CLL: -0.158901


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:56:16
{'AUC ROC': 0.985668, 'AUC PR': 0.267244, 'CLL': -0.175629, 'Precision': [0.178571, 0.5], 'Recall': 0.721154, 'F1': 0.28626, 'Learning time': 60.181, 'Inference time': 18.412, 'parameter_0.4': {'AUC ROC': 0.977159, 'AUC PR': 0.180229, 'CLL': -0.21804, 'Precision': [0.131417, 0.5], 'Recall': 0.615385, 'F1': 0.216582, 'Learning time': 2.113, 'Inference time': 5.916}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7891834178581324;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.10593654571898038;  // std dev = 4.589, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   | | | else return 0.1763307532813303;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1169724645112765;  // std dev = 5.711, 170.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=44 */
%   | | | else return 0.2684053453559226;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7331799252676825;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.6562568483446054;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.6299163191412256;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.11142446315648614;  // std dev = 4.531, 105.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=28 */
%   | | | else return 0.12218578823659156;  // std dev = 4.996, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11490994892035342;  // std dev = 5.661, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   | | | else return 0.2666839558690197;  // std dev = 2.981, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5412907839621098;  // std dev = 0.991, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5295779388408242;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.035123595685136864;  // std dev = 4.140, 106.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=22 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8052873205378525;  // std dev = 0.321, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.18474080660415992;  // std dev = 0.199, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6534129889105675;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11116364169421372;  // std dev = 5.701, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15196332206480997;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43846286785590666;  // std dev = 0.034, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.05604096574623352;  // std dev = 0.721, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.3284524125773426;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4621326590037255;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7138558159799181;  // std dev = 1.063, 64.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | | else return -0.16766283672216617;  // std dev = 0.156, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.27016510930438925;  // std dev = 1.356, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.057711827094719094;  // std dev = 5.743, 178.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=44 */
%   | | | else return 0.10823374069592;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35481851674711;  // std dev = 0.135, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.26222174974683266;  // std dev = 0.930, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.35597902428762124;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5571430166818154;  // std dev = 1.223, 64.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | | else return -0.14538526353036674;  // std dev = 0.179, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7310968872379319;  // std dev = 0.666, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.20892923023995455;  // std dev = 0.182, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5242990086687012;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05965218729108495;  // std dev = 5.242, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.26015987150392056;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2952538901115276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19127447588786328;  // std dev = 1.340, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, F) )
%   | then return 0.01039440328135181;  // std dev = 4.048, 266.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=66 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.31041107972957893;  // std dev = 0.271, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09731287927227382;  // std dev = 5.179, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.15988560644960814;  // std dev = 2.799, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2297255878995081;  // std dev = 0.233, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.49558839240338154;  // std dev = 0.987, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return -0.16014736088115153;  // std dev = 0.601, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2379253553327939;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.43252475640284205;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.05212231277937376;  // std dev = 4.754, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | else if ( interaction(A, H) )
%   | | then return 0.05005519193018109;  // std dev = 2.166, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.010323964694715184;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13523784827622323;  // std dev = 0.912, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.19861368620982567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.17685737346347938;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.015173230286689987;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.015012259354706755;  // std dev = 3.534, 231.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=66 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.03636417836726443;  // std dev = 0.676, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.039840174495811155;  // std dev = 5.033, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.015100609620477445;  // std dev = 1.113, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.039408226194576214;  // std dev = 2.664, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16353506009366145;  // std dev = 0.079, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2070528119102431;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.010291104100663489;  // std dev = 3.497, 237.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=66 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5465222921072019;  // std dev = 2.289, 71.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=66 */
%   | | | else return -0.22719068392012906;  // std dev = 0.655, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.13948981903139135;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.15436814966044035;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09425957297379983;  // std dev = 0.428, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.01678839944936836;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.06370244038400609;  // std dev = 1.002, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, I) )
%   | | then return 0.0033474569504126877;  // std dev = 3.565, 228.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=63 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.007002389058533128;  // std dev = 4.912, 228.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=60 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979291
   AUC PR    = 0.202059
   CLL	      = -0.212086
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.231884


Total learning time: 2.556 seconds
Total inference time: 6.009 seconds
AUC ROC: 0.979291


Results scoring model
   AUC ROC   = 0.993291
   AUC PR    = 0.416645
   CLL	      = -0.186768
   Precision = 0.397163 at threshold = 0.5
   Recall    = 0.704403
   F1        = 0.507937


Total scoring time: 5.946 seconds
Parameter learned model CLL: -0.186768


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.365, 2, 27], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.913, 1, 5], 'false,false,true,true': [4.589, 85, 28], 'false,false,true,false': [4.885, 75, 35], 'false,false,false,true': [5.711, 126, 44], 'false,false,false,false': [3.072, 23, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.961, 1, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.941, 1, 7], 'false,false,true,true': [4.531, 77, 28], 'false,false,true,false': [4.996, 87, 35], 'false,false,false,true': [5.661, 118, 44], 'false,false,false,false': [2.981, 20, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.991, 1, 27], 'false,true,true,true': [1.449, 3, 7], 'false,true,true,false': [4.14, 84, 22], 'false,true,false,true': [0.321, 0, 37], 'false,true,false,false': [0.199, 79, 0], 'false,false,true,true': [0.214, 0, 3], 'false,false,true,false': [5.701, 116, 47], 'false,false,false,true': [3.17, 27, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.034, 0, 19], 'true,true,false': [0.721, 1, 1], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.185, 0, 3], 'false,true,true,false': [1.063, 1, 63], 'false,true,false': [0.156, 179, 0], 'false,false,true': [1.356, 2, 6], 'false,false,false,true': [5.743, 134, 44], 'false,false,false,false': [3.211, 29, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.135, 0, 16], 'true,false': [0.93, 1, 11], 'false,true,true,true': [0.175, 0, 3], 'false,true,true,false': [1.223, 1, 63], 'false,true,false': [0.179, 158, 0], 'false,false,true,true': [0.666, 0, 26], 'false,false,true,false': [0.182, 51, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [5.242, 100, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.017, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.34, 2, 18], 'false,true': [4.048, 200, 66], 'false,false,true,true': [0.271, 0, 3], 'false,false,true,false': [5.179, 101, 47], 'false,false,false,true': [2.799, 19, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.233, 0, 15], 'true,true,false': [0.987, 0, 52], 'true,false': [0.601, 138, 0], 'false,true,true,true': [0.012, 0, 8], 'false,true,true,false': [0.242, 0, 9], 'false,true,false': [4.754, 104, 44], 'false,false,true': [2.166, 39, 20], 'false,false,false,true': [2.728, 23, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.912, 1, 17], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.067, 0, 6], 'true,false,false,false': [0.866, 1, 3], 'false,true': [3.534, 165, 66], 'false,false,true,true': [0.676, 2, 3], 'false,false,true,false': [5.033, 118, 47], 'false,false,false,true': [1.113, 8, 5], 'false,false,false,false': [2.664, 20, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.079, 0, 20], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.131, 0, 7], 'false,true': [3.497, 171, 66], 'false,false,true,true': [2.289, 5, 66], 'false,false,true,false': [0.655, 148, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.021, 0, 9], 'true,true,true,false': [0.008, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.428, 1, 2], 'true,false': [1.227, 2, 7], 'false,true': [1.002, 1, 10], 'false,false,true': [3.565, 165, 63], 'false,false,false,true': [4.912, 168, 60], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06420927467300945, 0.20918323150691243], 'false': [0.14876033057851218, 0.20365547839506298], 'false,false': [0.20269862655593354, 0.20466564410155488], 'false,false,false': [0.19183391003460323, 0.24194608809993376], 'false,false,true': [0.18638891064296456, 0.21694214876033052], 'false,true': [1.4802973661668753e-16, 0.18749999999999978], 'false,true,false': [0.25, 0.1388888888888887], 'false,true,true': [0.0, 0.0]}, {'': [0.03443877551020418, 0.20853219745009136], 'false': [0.08981696862145352, 0.20513724661810437], 'false,false': [0.2004356161451426, 0.21018569365947826], 'false,false,false': [0.19783569577808308, 0.24691358024691368], 'false,false,true': [0.19555555555555645, 0.20458210158559456], 'false,true': [0.0, 0.11066711619299702], 'true': [-2.3684757858670006e-16, 0.07100591715976326], 'false,true,true': [nan, 0.0]}, {'': [0.03509909640202004, 0.20416549938188122], 'false': [0.200354451075713, 0.2081189843127888], 'false,false': [0.20131045161893416, 0.2336398053001617], 'false,false,false': [0.2336398053001617, nan], 'false,false,true': [0.015236371463368684, 0.19942125406328748], 'false,true': [0.18514123644880096, 0.21414748415454293], 'false,true,false': [0.0027900408611617076, 0.0005018116690804567], 'false,true,true': [0.2099999999999998, 0.16171976857039777]}, {'': [0.06416297600610772, 0.17576152392919625], 'false': [0.15565375412761737, 0.19715907505351016], 'false,false': [0.22978119949487136, 0.19457203312883764], 'false,false,false': [0.18531893039293695, 0.2291358024691358], 'false,true': [0.020075104646384238, 0.00013621718997288744], 'true': [0.045847408890498306, 0.10937500000000008], 'true,true': [5.991638692142961e-05, 0.2595835025555708], 'false,true,true': [0.011413629264360662, 0.01764389274858502]}, {'': [0.03362892274639427, 0.1539140175829421], 'false': [0.10801731886909548, 0.20129645294089688], 'false,false': [0.20381409979671514, 0.19928007016675545], 'false,false,true': [0.01705514303050263, 0.0006495270447902679], 'false,false,false': [0.0, 0.19908394900260362], 'false,true': [0.02451733390000351, 0.00020297830396975435], 'true': [0.0011343471837612362, 0.07205550277719815], 'false,true,true': [0.010165151166454741, 0.02337813939835659]}, {'': [0.06314213240077618, 0.11612597252798301], 'false': [0.06160327210765095, 0.18796097417797344], 'false,false': [0.17901133576452874, 0.22380926559478379], 'false,false,false': [0.22380926559478379, nan], 'false,false,true': [0.0244593978006928, 0.18124194313828398], 'true': [0.00015354171809479745, 0.08984291015202331], 'true,true': [3.589108374209282e-05, 0.0], 'true,true,true': [3.589108374209282e-05, nan]}, {'': [0.08900486567758767, 0.14102099747755809], 'false': [0.1460058852229798, 0.13080289254714314], 'false,true': [0.01287866365484057, 0.15270267527350265], 'false,false': [0.07948208376485467, 0.21885813148788938], 'false,false,false': [0.21885813148788938, nan], 'true': [0.027645454883331044, 0.002616844101783427], 'true,true': [0.0036265957826495296, 0.018749412793097643], 'false,true,true': [1.6599994402025087e-05, 0.006490937649928721]}, {'': [0.057136280719706306, 0.10493837343469652], 'false': [0.05407451466477123, 0.15960326630723826], 'false,false': [0.15183778377402718, 0.1895833383670338], 'false,false,false': [0.09534468862302924, 0.2289281997918834], 'false,false,true': [0.09141850889390482, 0.15349787373292195], 'true': [0.046194879445938586, 0.07489704696018822], 'true,false': [0.0, 0.081707648045557], 'true,false,false': [0.0007562461008135818, 0.1874496936697846]}, {'': [0.0012355189624899635, 0.10229042386497826], 'false': [0.051608346125040984, 0.15704543051217962], 'false,false': [0.15704543051217962, nan], 'false,false,true': [0.0738011637183695, 0.0029032138287138445], 'true': [0.00031485865029913794, 0.0024631660912693342], 'true,false': [nan, 0.0024631660912693342]}, {'': [0.06524552499163813, 0.08114849948778104], 'false': [0.09132156298768153, 0.08080194919904884], 'false,false': [0.0557316590039354, 0.10581867973795783], 'false,false,false': [0.10581867973795783, nan], 'true': [0.016615291686345353, 0.1672719154186426], 'true,true': [8.558382723997931e-05, 0.06101676545341401], 'true,true,false': [nan, 0.06101676545341402], 'true,true,true': [4.9903654630500333e-05, 8.530933145303732e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.014112237851805919;  // std dev = 3.788, 109.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.17162855892396128;  // std dev = 8.286, 319.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=100 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, F) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7789852279274081;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.14357763622965686;  // std dev = 1.05e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09740145656145795;  // std dev = 7.675, 310.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=81 */
%   | | | else return 0.16644839126886762;  // std dev = 5.315, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.562564033616196;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.01758424614720289;  // std dev = 1.810, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.15946308178465995;  // std dev = 3.922, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7764588732382399;  // std dev = 1.027, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.17880260069414472;  // std dev = 0.288, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, I) )
%   | | | then return 0.21260793970560035;  // std dev = 1.213, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04966084592126629;  // std dev = 1.613, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10541105380712766;  // std dev = 4.122, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.17117052135709912;  // std dev = 4.661, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42332720886271574;  // std dev = 0.029, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.4151865215508068;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6788232844981889;  // std dev = 1.744, 66.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.15544929552100573;  // std dev = 0.398, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.1761736845370849;  // std dev = 0.247, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.5292083568994714;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1942782266024358;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06632935526121109;  // std dev = 5.678, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   | | | else return 0.20102774029776846;  // std dev = 3.082, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.31788391439614083;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3352791240660897;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.6437518183726111;  // std dev = 0.332, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.5002293871904799;  // std dev = 1.152, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.14167486218603417;  // std dev = 0.025, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7297255892195372;  // std dev = 0.663, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.2049833528313645;  // std dev = 0.132, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.10539323386122686;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04508891019215347;  // std dev = 5.268, 145.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.25287770182960256;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.3863156927178805;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.14921790704906812;  // std dev = 0.857, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.2716784715801043;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.09357836725883809;  // std dev = 0.006, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.21448919834152752;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3194683287251667;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.027939944719040988;  // std dev = 4.495, 180.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=48 */
%   | | | else return 0.06938222175046131;  // std dev = 5.663, 234.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=75 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.20361006596518133;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.08648923353179247;  // std dev = 0.366, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | else return 0.009501468073216087;  // std dev = 0.281, 112.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=30 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.24827932087796167;  // std dev = 0.284, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.13245053789423877;  // std dev = 0.598, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.033156375009530836;  // std dev = 4.811, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.058901467091155506;  // std dev = 0.298, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return -0.11166079549501093;  // std dev = 0.619, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.016103105736734034;  // std dev = 3.051, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.1818457400214322;  // std dev = 0.026, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.33252315895186546;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, F), interaction(C, A) )
%   | | then return 0.17684290431622518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.13932488814319852;  // std dev = 0.268, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then return -2.407468794784329E-4;  // std dev = 0.242, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), location(I, L) )
%   | | | then return 0.028594734743079275;  // std dev = 1.859, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return -0.05811655722909013;  // std dev = 1.357, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.021106891725934763;  // std dev = 1.557, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.08096382845208915;  // std dev = 6.005, 223.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=81 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14339450138798268;  // std dev = 0.189, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3736001261656207;  // std dev = 0.435, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.037314123831594916;  // std dev = 2.927, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | else if ( enzyme(A, G), complex(D, H) )
%   | | | then return 0.05359374282436207;  // std dev = 1.913, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.11037802088743315;  // std dev = 3.696, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5153023862477562;  // std dev = 0.706, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1817634845073921;  // std dev = 0.380, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.08619884732175906;  // std dev = 1.084, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.03450686547405797;  // std dev = 4.089, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.10782071503672198;  // std dev = 0.151, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(A, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.01607090392930465;  // std dev = 1.442, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.13420697703165665;  // std dev = 0.922, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, I), enzyme(I, J) )
%   | | | then return -0.10722056844367663;  // std dev = 1.759, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return -0.009048706446970721;  // std dev = 1.991, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(K, K), interaction(L, A) )
%   | | | then return -0.04364625690902101;  // std dev = 0.695, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.038328374721148126;  // std dev = 2.182, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.007181287241935527;  // std dev = 2.293, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | else return 0.08368214121690928;  // std dev = 5.254, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */


Results
   AUC ROC   = 0.921382
   AUC PR    = 0.147958
   CLL	      = -0.230982
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.519231
   F1        = 0.224066


Total learning time: 8.695 seconds
Total inference time: 6.542 seconds
AUC ROC: 0.921382


Results scoring model
   AUC ROC   = 0.969119
   AUC PR    = 0.373993
   CLL	      = -0.221407
   Precision = 0.341818 at threshold = 0.5
   Recall    = 0.591195
   F1        = 0.43318


Total scoring time: 6.35 seconds
Refined model CLL: -0.221407


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979291
   AUC PR    = 0.202059
   CLL	      = -0.212086
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.615385
   F1        = 0.231884


Total learning time: 23.546999999999997 seconds
Total inference time: 6.009 seconds
AUC ROC: 0.979291
Total revision time: 23.546999999999997
Best scored revision CLL: -0.186768


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:56:53
{'AUC ROC': 0.979291, 'AUC PR': 0.202059, 'CLL': -0.212086, 'Precision': [0.142857, 0.5], 'Recall': 0.615385, 'F1': 0.231884, 'Learning time': 23.546999999999997, 'Inference time': 6.009, 'parameter_0.6': {'AUC ROC': 0.979291, 'AUC PR': 0.202059, 'CLL': -0.212086, 'Precision': [0.142857, 0.5], 'Recall': 0.615385, 'F1': 0.231884, 'Learning time': 2.556, 'Inference time': 6.009}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08592671287728913;  // std dev = 5.627, 180.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=41 */
%   | | | else return 0.16904637099694914;  // std dev = 8.176, 312.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=97 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19598677293734915;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.6606498827991899;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5243782526377279;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7439976143448207;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0751416399842956;  // std dev = 5.627, 180.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=41 */
%   | | | else return 0.1432622598289728;  // std dev = 8.199, 316.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=97 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19489738240469656;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.12050918552707938;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5331917962174535;  // std dev = 0.979, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8373895140412875;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.03971746846245905;  // std dev = 5.016, 157.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=32 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.774303080692045;  // std dev = 1.772, 106.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=103 */
%   | | | else return -0.18426849315184074;  // std dev = 2.11e-07, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6697943893338759;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.133978359009961;  // std dev = 4.052, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23708738999317017;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4237170044402945;  // std dev = 0.014, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4373336019306979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.37066693526403127;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32165576404649027;  // std dev = 0.770, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.6366287913804621;  // std dev = 3.220, 149.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=138 */
%   | | else return -0.16289277964092197;  // std dev = 0.281, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2654337116407527;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1049355624115228;  // std dev = 4.093, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return 0.027459331533643622;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.25310788458725636;  // std dev = 0.974, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.29149622293009975;  // std dev = 0.965, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3470941653658529;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.47992313123340863;  // std dev = 3.523, 152.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=138 */
%   | | else return -0.1406070874490621;  // std dev = 0.075, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7114806828150678;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.23687638452107146;  // std dev = 0.120, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3733772718922169;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13850278161708654;  // std dev = 3.619, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2713786650733453;  // std dev = 7.45e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2940560529088829;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23977453100427873;  // std dev = 0.966, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(F, A) )
%   | then return 0.041234523124838864;  // std dev = 5.979, 480.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=145 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4010812281379952;  // std dev = 0.270, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.012308179046473721;  // std dev = 3.973, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2636119825985461;  // std dev = 1.510, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23759010593590824;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4341981697294522;  // std dev = 1.188, 67.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | else return -0.1525596584791402;  // std dev = 0.981, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23496056795388176;  // std dev = 0.193, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3528201032516127;  // std dev = 0.842, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.019841472428272267;  // std dev = 3.922, 139.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07660350403848343;  // std dev = 3.846, 192.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=71 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.016896570631654784;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1377989483608297;  // std dev = 0.989, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.19664263715550878;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18520243345055773;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11486889939440531;  // std dev = 0.953, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(G, A) )
%   | then return 0.009864459037692555;  // std dev = 5.550, 515.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=145 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.26422197018465526;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.015083695101847008;  // std dev = 3.949, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.098414802011081;  // std dev = 0.705, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1501517893626305;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16542264623335648;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18922701528484767;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then return 0.02066744360215205;  // std dev = 5.461, 474.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=145 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5711037608784371;  // std dev = 1.365, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.24244882346280394;  // std dev = 0.695, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1421001393537947;  // std dev = 0.000955, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15915830855186172;  // std dev = 0.204, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12697753754012173;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12668487126353833;  // std dev = 0.689, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.08104080681823969;  // std dev = 1.686, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008947037093754738;  // std dev = 5.463, 482.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=138 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06618163244256485;  // std dev = 3.205, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980716
   AUC PR    = 0.181405
   CLL	      = -0.20528
   Precision = 0.10307 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.185039


Total learning time: 3.417 seconds
Total inference time: 7.15 seconds
AUC ROC: 0.980716


Results scoring model
   AUC ROC   = 0.990518
   AUC PR    = 0.349513
   CLL	      = -0.180799
   Precision = 0.248196 at threshold = 0.5
   Recall    = 0.811321
   F1        = 0.38011


Total scoring time: 8.902 seconds
Parameter learned model CLL: -0.180799


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [2.23e-07, 0, 33], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [5.627, 139, 41], 'false,false,true,false': [8.176, 215, 97], 'false,false,false,true': [4.069, 49, 25], 'false,false,false,false': [1.919, 14, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [5.96e-08, 0, 17], 'true,false': [0.97, 1, 16], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.872, 1, 4], 'false,true,false': [2.98e-08, 0, 7], 'false,false,true,true': [5.627, 139, 41], 'false,false,true,false': [8.199, 219, 97], 'false,false,false,true': [3.993, 44, 25], 'false,false,false,false': [1.9, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.979, 1, 33], 'false,true,true,true': [0.0, 0, 10], 'false,true,true,false': [5.016, 125, 32], 'false,true,false,true': [1.772, 3, 103], 'false,true,false,false': [2.11e-07, 205, 0], 'false,false,true,true': [0.164, 0, 3], 'false,false,true,false': [4.052, 50, 25], 'false,false,false,true': [1.79, 8, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.014, 0, 18], 'true,true,false': [0.0, 0, 1], 'true,false': [0.966, 1, 14], 'false,true,true,true': [0.77, 1, 7], 'false,true,true,false': [3.22, 11, 138], 'false,true,false': [0.281, 324, 0], 'false,false,true': [0.99, 1, 4], 'false,false,false,true': [4.093, 52, 25], 'false,false,false,false': [1.952, 16, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.974, 1, 11], 'true,false': [0.965, 1, 22], 'false,true,true,true': [0.181, 0, 7], 'false,true,true,false': [3.523, 14, 138], 'false,true,false': [0.075, 319, 0], 'false,false,true,true': [0.382, 0, 11], 'false,false,true,false': [0.12, 31, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [3.619, 35, 21]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [7.45e-09, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.966, 1, 26], 'false,true': [5.979, 335, 145], 'false,false,true,true': [0.27, 0, 3], 'false,false,true,false': [3.973, 65, 25], 'false,false,false,true': [1.51, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.082, 0, 10], 'true,true,false': [1.188, 2, 65], 'true,false': [0.981, 147, 0], 'false,true,true,true': [0.193, 0, 15], 'false,true,true,false': [0.842, 1, 15], 'false,true,false': [3.922, 107, 32], 'false,false,true': [3.846, 121, 71], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.989, 1, 20], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.025, 0, 3], 'true,false,false,false': [0.953, 1, 8], 'false,true': [5.55, 370, 145], 'false,false,true,true': [0.21, 0, 3], 'false,false,true,false': [3.949, 69, 25], 'false,false,false,true': [0.705, 9, 2], 'false,false,false,false': [1.491, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.047, 0, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.095, 0, 14], 'false,true': [5.461, 329, 145], 'false,false,true,true': [1.365, 1, 34], 'false,false,true,false': [0.695, 80, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.000955, 0, 7], 'true,true,true,false': [0.204, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.1, 0, 3], 'true,false': [0.689, 1, 10], 'false,true': [1.686, 4, 12], 'false,false,true': [5.463, 344, 138], 'false,false,false,true': [3.205, 52, 30], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [1.5072118637335459e-15, 0.20993297026730773], 'false': [0.07638888888888877, 0.20470742932281458], 'false,false': [0.20181439619274485, 0.21852237252861736], 'false,false,false': [0.22370343316289376, 0.19390581717451505], 'false,false,true': [0.17589506172839622, 0.214240220249836], 'false,true': [0.0, 0.109375], 'false,true,false': [nan, 0.10937499999999978], 'false,true,true': [0.0, 0.0]}, {'': [0.028546712802767594, 0.20750598785738752], 'false': [0.075160085768186, 0.2046744266529602], 'false,false': [0.20043940708393065, 0.22565674783571107], 'false,false,false': [0.23104389834068437, 0.20061728395061731], 'false,false,true': [0.17589506172839642, 0.21273634033007172], 'false,true': [0.15224848515561118, 1.2688263138573217e-16], 'false,true,true': [nan, 0.15224848515561118], 'true': [2.0898315757650005e-16, 0.05536332179930776]}, {'': [0.028173375582236832, 0.20968082304599436], 'false': [0.20671997568561662, 0.2234484147958578], 'false,false': [0.221447354708054, 0.22882656081845212], 'false,false,false': [0.22882656081845212, nan], 'false,false,true': [0.00895551045473623, 0.21890476623387614], 'false,true': [0.18647142102912279, 0.2165374885657018], 'false,true,false': [0.02963375351448116, 2.1662888285368908e-16], 'false,true,true': [-2.6645352591003756e-16, 0.16024794134686574]}, {'': [0.02817463312280571, 0.16866588630972937], 'false': [0.15947752618338307, 0.21156082100377477], 'false,false': [0.19610983381949693, 0.2108265890851476], 'false,false,false': [0.21756415033803186, 0.18140589569160998], 'false,true': [0.0746144884785201, 0.00024381199523938865], 'false,true,true': [0.07407232678981916, 0.06958841271256629], 'true': [1.957744814005592e-05, 0.06222222222222224], 'true,true': [1.0906572189063448e-05, 0.0]}, {'': [0.054057253404892654, 0.12771929186821943], 'false': [0.11016456828181441, 0.2110717438705855], 'false,false': [0.1776689005873922, 0.22759427278702274], 'false,false,false': [0.0, 0.23382036290737687], 'false,false,true': [0.013237581661094405, 0.00046329765360271367], 'false,true': [0.07899845708794385, 1.743838044982444e-05], 'false,true,true': [0.004695569771788389, 0.0816435412166406], 'true': [0.079087742177346, 0.0404926115512897]}, {'': [0.027690837926012502, 0.09399623696233879], 'false': [0.07448602153833872, 0.18397874138947198], 'false,false': [0.17518964180428437, 0.2073085932792403], 'false,false,false': [0.2073085932792403, nan], 'false,false,true': [0.024290313210005004, 0.1753439909176447], 'true': [0.00010495182021294116, 0.03454413400174345], 'true,true': [1.1102230246251566e-17, 0.0], 'true,true,true': [1.1102230246251566e-17, nan]}, {'': [0.08318407264259489, 0.09728416477479182], 'false': [0.11036890329397711, 0.08587482734972736], 'false,true': [0.02754747266414972, 0.11067313232713667], 'false,false': [0.07704012389759787, 0.21301775147929009], 'false,false,false': [0.21301775147929009, nan], 'true': [0.022798690826086612, 0.006542634804539722], 'false,true,true': [0.0024709949352589152, 0.044335281795986545], 'true,true': [0.0006679320217857665, 0.0210816942526658]}, {'': [0.054408432341673266, 0.07865393157307919], 'false': [0.05980182102657321, 0.16149961784128708], 'false,false': [0.16355131794124003, 0.1512210333419022], 'false,false,true': [0.014728250926946851, 0.16588825870530222], 'false,false,false': [0.04512372367249561, 0.2469135802469136], 'true': [0.046568342212240946, 0.06615979657139869], 'true,false': [0.0, 0.07659780053638936], 'true,false,false': [0.00020314589785367745, 0.10082598391269426]}, {'': [0.00048224531386323576, 0.08201697813754955], 'false': [0.0629226612042033, 0.1605250971979048], 'false,false': [0.1605250971979048, nan], 'false,false,true': [0.05321798824612551, 0.006033928998300253], 'true': [0.0001172365966493236, 0.0006513624165325035], 'true,false': [nan, 0.0006513624165325035]}, {'': [0.016169165476559583, 0.07472766531538616], 'false': [0.1776945424207409, 0.07154000685263151], 'false,false': [0.06192280222397024, 0.1252708745221801], 'false,false,false': [0.1252708745221801, nan], 'true': [0.0024929502387859444, 0.04317935287262981], 'true,true': [0.0022668652685139284, 0.0033456565828367487], 'true,true,false': [nan, 0.0033456565828367487], 'true,true,true': [1.3030899967799874e-07, 0.003481923751665899]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.048827809086534266;  // std dev = 1.905, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return 0.14386322081379807;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.1254756677727787;  // std dev = 4.448, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | | | else return 0.19060966808380522;  // std dev = 9.207, 382.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=127 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7282909457254706;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.40612648817719127;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7280390161964844;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7357208520710393;  // std dev = 0.105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7369421001532306;  // std dev = 1.342, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.08826260082050043;  // std dev = 9.332, 465.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=117 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.148555069910739;  // std dev = 2.495, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.2402439388355016;  // std dev = 3.859, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5746840617252316;  // std dev = 0.034, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.3657937159473673;  // std dev = 0.394, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5650675602098998;  // std dev = 1.337, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.022949878420448475;  // std dev = 4.957, 164.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=32 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7382468518066639;  // std dev = 2.585, 110.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=103 */
%   | | | else return -0.17790084043962004;  // std dev = 0.078, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5533586475937959;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.05990192281648333;  // std dev = 2.875, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.14788430897204402;  // std dev = 3.526, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4260121120626087;  // std dev = 0.020, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.5012010335903675;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4556614185640133;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.5657074176222554;  // std dev = 2.356, 62.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=57 */
%   | | | else return 0.6719829362727153;  // std dev = 2.102, 92.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=88 */
%   | | else return -0.16337646473514456;  // std dev = 0.026, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.416028315268518;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.024180585506418068;  // std dev = 2.650, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.10678836738672019;  // std dev = 3.756, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34229584107000083;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.22482087287863145;  // std dev = 0.315, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.3231599815964844;  // std dev = 1.285, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.5066649416204496;  // std dev = 2.803, 137.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=130 */
%   | | else return -0.13943559557973126;  // std dev = 0.224, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.615807108583711;  // std dev = 1.035, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.21957326875541303;  // std dev = 0.095, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return -0.011860027264764983;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11408829355249732;  // std dev = 3.723, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.30224356457159024;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.22498525789138826;  // std dev = 0.213, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.3826750116917134;  // std dev = 1.103, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27653367604917145;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.12284404711347044;  // std dev = 0.032, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4245836330822433;  // std dev = 1.997, 90.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=83 */
%   | | | else return -0.1575801078993326;  // std dev = 1.203, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.022531245226026664;  // std dev = 2.427, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.06117179449408278;  // std dev = 4.893, 227.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=79 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37264690840151593;  // std dev = 0.150, 78.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=75 */
%   | else return -0.1383282556433386;  // std dev = 0.067, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.2538652473050683;  // std dev = 0.158, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11424634396485028;  // std dev = 0.182, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.010842592917156333;  // std dev = 3.749, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J), interaction(K, H) )
%   | | | then return 0.0301642815839241;  // std dev = 1.711, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.015396918797428097;  // std dev = 1.952, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.18721772270647968;  // std dev = 1.218, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.04774244230879027;  // std dev = 2.802, 97.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18136580918726306;  // std dev = 0.029, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.23492923038408386;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, F), interaction(A, C) )
%   | | then return 0.1972611941718062;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22044929904937113;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.09348378724597223;  // std dev = 0.024, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.09329299312837351;  // std dev = 1.241, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.013952939972455213;  // std dev = 3.091, 238.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=59 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.016014231359450726;  // std dev = 3.025, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | | | else return 0.05726343675527637;  // std dev = 4.669, 182.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=65 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15718396163552015;  // std dev = 0.025, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.1238761177813623;  // std dev = 0.241, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then if ( interaction(H, E), interaction(H, H) )
%   | | | then return -0.05111202836080968;  // std dev = 0.253, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.2619939675804682;  // std dev = 0.875, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.038014523043393755;  // std dev = 0.145, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1676516749324169;  // std dev = 0.164, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.006223259720064267;  // std dev = 3.836, 164.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=40 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.02596331642240966;  // std dev = 4.288, 321.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=107 */
%   | | | else return 0.15259706920649724;  // std dev = 2.182, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14366513434205555;  // std dev = 0.036, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.013714708101384282;  // std dev = 0.320, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.21507728550456354;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1197328865003481;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.08351782465393828;  // std dev = 0.021, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( location(A, G), enzyme(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.1159241423904425;  // std dev = 2.607, 109.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=62 */
%   | | | else return -0.1145553544264545;  // std dev = 0.338, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.17480718691680736;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.027853785952953368;  // std dev = 5.514, 335.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=109 */


Results
   AUC ROC   = 0.983092
   AUC PR    = 0.208732
   CLL	      = -0.189893
   Precision = 0.104508 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.188889


Total learning time: 10.47 seconds
Total inference time: 8.666 seconds
AUC ROC: 0.983092


Results scoring model
   AUC ROC   = 0.988214
   AUC PR    = 0.384995
   CLL	      = -0.173399
   Precision = 0.250352 at threshold = 0.5
   Recall    = 0.839623
   F1        = 0.385699


Total scoring time: 12.972 seconds
Refined model CLL: -0.173399


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983092
   AUC PR    = 0.208732
   CLL	      = -0.189893
   Precision = 0.104508 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.188889


Total learning time: 35.761 seconds
Total inference time: 8.666 seconds
AUC ROC: 0.983092
Total revision time: 35.761
Best scored revision CLL: -0.173399


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:57:45
{'AUC ROC': 0.983092, 'AUC PR': 0.208732, 'CLL': -0.189893, 'Precision': [0.104508, 0.5], 'Recall': 0.980769, 'F1': 0.188889, 'Learning time': 35.761, 'Inference time': 8.666, 'parameter_0.8': {'AUC ROC': 0.980716, 'AUC PR': 0.181405, 'CLL': -0.20528, 'Precision': [0.10307, 0.5], 'Recall': 0.903846, 'F1': 0.185039, 'Learning time': 3.417, 'Inference time': 7.15}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8337586911970727;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12285481745245401;  // std dev = 6.301, 204.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=54 */
%   | | | else return 0.15197609559333855;  // std dev = 9.167, 405.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=119 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12841920536978138;  // std dev = 4.679, 111.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=30 */
%   | | | else return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7243696773246421;  // std dev = 4.21e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.7243696773246421;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7263328500003844;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7606300389475332;  // std dev = 5.16e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10853598828073123;  // std dev = 6.296, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | | else return 0.1302904632391416;  // std dev = 9.181, 408.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=119 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13590411538780708;  // std dev = 4.602, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | | else return 0.15724843862440427;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5601748317458617;  // std dev = 1.58e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5679466687180192;  // std dev = 1.956, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.03832305923326973;  // std dev = 5.721, 198.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7681692780664644;  // std dev = 2.254, 132.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=127 */
%   | | | else return -0.17979552423307207;  // std dev = 3.77e-07, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4717683015473587;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11658098297620506;  // std dev = 4.607, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2180606538160726;  // std dev = 1.976, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4210893265160257;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.4210893265160257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3622657971042611;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34324590206782585;  // std dev = 0.798, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6233888666414442;  // std dev = 3.999, 192.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=173 */
%   | | else return -0.16324227847494802;  // std dev = 0.250, 419.000 (wgt'ed) examples reached here.  /* #neg=419 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5074821825455741;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10697923968741875;  // std dev = 4.568, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.045661732004981144;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.264268723683699;  // std dev = 0.961, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.32713617244789633;  // std dev = 0.031, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3382000469490324;  // std dev = 0.145, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5044122865630862;  // std dev = 3.629, 188.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=173 */
%   | | else return -0.1425725218165282;  // std dev = 0.270, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7387892142626575;  // std dev = 0.469, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.21576194414403813;  // std dev = 0.031, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36119353946027216;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11317184947318983;  // std dev = 3.922, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2682221850884887;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2799241820519456;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.12915938899625848;  // std dev = 2.066, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   else if ( interaction(F, A) )
%   | then return 0.032524825234923185;  // std dev = 6.897, 629.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=183 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.36908057653133536;  // std dev = 0.383, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05248077979978366;  // std dev = 4.298, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09655514449218368;  // std dev = 1.890, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23475467572509545;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4593768302620035;  // std dev = 1.005, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | else return -0.1443443437337567;  // std dev = 0.588, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23298193818615476;  // std dev = 0.154, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.3268454251840217;  // std dev = 1.490, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else return -0.028698439690751986;  // std dev = 4.259, 186.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=37 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03671002581369847;  // std dev = 4.674, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13854618249824754;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19272806299470754;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.18854127435628643;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18453961750084796;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.015402115159285598;  // std dev = 1.504, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(G, A) )
%   | then return 0.02275140625013574;  // std dev = 6.241, 601.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.25147574930739314;  // std dev = 0.330, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05271855533277746;  // std dev = 4.067, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.06624812066247877;  // std dev = 0.918, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.0033609152192780123;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13076787054291145;  // std dev = 0.926, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14140753220698482;  // std dev = 0.944, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.010523988958234165;  // std dev = 6.345, 629.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=183 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5304436158190109;  // std dev = 2.107, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.23682447472669307;  // std dev = 0.680, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1394512993710586;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15854774203652713;  // std dev = 0.156, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.069915326512588;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.14098965523074045;  // std dev = 0.856, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.12214811199414374;  // std dev = 0.942, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01216822789849932;  // std dev = 6.158, 604.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=173 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.027164351624183108;  // std dev = 3.693, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980934
   AUC PR    = 0.174343
   CLL	      = -0.203192
   Precision = 0.096708 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.174721


Total learning time: 4.112 seconds
Total inference time: 7.206 seconds
AUC ROC: 0.980934


Results scoring model
   AUC ROC   = 0.990133
   AUC PR    = 0.338148
   CLL	      = -0.176503
   Precision = 0.232979 at threshold = 0.5
   Recall    = 0.826415
   F1        = 0.363485


Total scoring time: 10.849 seconds
Parameter learned model CLL: -0.176503


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.988, 1, 40], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.535, 3, 11], 'false,false,true,true': [6.301, 150, 54], 'false,false,true,false': [9.167, 286, 119], 'false,false,false,true': [4.679, 81, 30], 'false,false,false,false': [2.089, 16, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [4.21e-08, 0, 21], 'true,false': [7.3e-08, 0, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.038, 0, 6], 'false,true,false': [5.16e-08, 0, 10], 'false,false,true,true': [6.296, 149, 54], 'false,false,true,false': [9.181, 289, 119], 'false,false,false,true': [4.602, 72, 30], 'false,false,false,false': [2.026, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.58e-07, 0, 40], 'false,true,true,true': [1.956, 4, 14], 'false,true,true,false': [5.721, 156, 42], 'false,true,false,true': [2.254, 5, 127], 'false,true,false,false': [3.77e-07, 285, 0], 'false,false,true,true': [0.759, 1, 4], 'false,false,true,false': [4.607, 73, 31], 'false,false,false,true': [1.976, 10, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [4.21e-08, 0, 23], 'true,true,false': [0.0, 0, 1], 'true,false': [0.97, 1, 16], 'false,true,true,true': [0.798, 1, 10], 'false,true,true,false': [3.999, 19, 173], 'false,true,false': [0.25, 419, 0], 'false,false,true': [0.139, 0, 6], 'false,false,false,true': [4.568, 69, 30], 'false,false,false,false': [2.106, 17, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.961, 1, 14], 'true,false': [0.031, 0, 26], 'false,true,true,true': [0.145, 0, 10], 'false,true,true,false': [3.629, 15, 173], 'false,true,false': [0.27, 406, 0], 'false,false,true,true': [0.469, 0, 15], 'false,false,true,false': [0.031, 36, 0], 'false,false,false,true': [0.102, 0, 4], 'false,false,false,false': [3.922, 47, 23]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [2.066, 5, 32], 'false,true': [6.897, 446, 183], 'false,false,true,true': [0.383, 0, 4], 'false,false,true,false': [4.298, 75, 31], 'false,false,false,true': [1.89, 12, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.079, 0, 12], 'true,true,false': [1.005, 0, 88], 'true,false': [0.588, 168, 0], 'false,true,true,true': [0.154, 0, 19], 'false,true,true,false': [1.49, 2, 18], 'false,true,false': [4.259, 149, 37], 'false,false,true': [4.674, 187, 87], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.073, 0, 24], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.031, 0, 5], 'true,false,false,false': [1.504, 3, 9], 'false,true': [6.241, 418, 183], 'false,false,true,true': [0.33, 0, 4], 'false,false,true,false': [4.067, 69, 31], 'false,false,false,true': [0.918, 12, 3], 'false,false,false,false': [1.69, 10, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.926, 1, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.944, 1, 16], 'false,true': [6.345, 446, 183], 'false,false,true,true': [2.107, 2, 42], 'false,false,true,false': [0.68, 83, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.006, 0, 8], 'true,true,true,false': [0.156, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.884, 1, 4], 'true,false': [0.856, 1, 14], 'false,true': [0.942, 1, 15], 'false,false,true': [6.158, 431, 173], 'false,false,false,true': [3.693, 88, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.023795359904820054, 0.20824663584985065], 'false': [0.13296398891966726, 0.20233251720054504], 'false,false': [0.20337520660265965, 0.19741082028379353], 'false,false,true': [0.1946366782006928, 0.20749276024996288], 'false,false,false': [0.19722425127830653, 0.19834710743801667], 'false,true': [0.0, 0.16836734693877536], 'false,true,false': [nan, 0.16836734693877523], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [-1.7763568394002506e-16, 0.20771514186155352], 'false': [0.00036391693686843585, 0.2039710391609066], 'false,false': [0.20293172985722527, 0.20900025254984264], 'false,false,false': [0.20761245674740408, 0.21606648199445963], 'false,false,true': [0.19524861074037161, 0.2065972222222188], 'false,true': [0.00023525943393528279, 2.6645352591003756e-16], 'false,true,true': [nan, 0.00023525943393528279], 'true': [8.458842092382145e-17, 2.8047739569477637e-16]}, {'': [6.217248937900876e-16, 0.20303270128186027], 'false': [0.2014911172153955, 0.20963598560196156], 'false,false': [0.20554453393140548, 0.2295917294456945], 'false,false,false': [0.2295917294456945, nan], 'false,false,true': [0.11515003109605142, 0.20410335783603767], 'false,true': [0.1906808537848527, 0.20660256211085293], 'false,true,false': [0.038499726781692604, 4.98626481235158e-16], 'false,true,true': [0.21249207955051538, 0.16532291776857608]}, {'': [0.023795359904818604, 0.16710106606633185], 'false': [0.15898648070722096, 0.2059635352123897], 'false,false': [0.0032418387192426255, 0.20797427884381342], 'false,false,false': [0.21078692993661008, 0.19281663516068037], 'false,true': [0.0859292049714148, 0.00014908025011483051], 'false,true,true': [0.057889474704213656, 0.08328303264637553], 'true': [7.401486830834377e-17, 0.05536332179930792], 'true,true': [7.723290606088045e-17, 0.0]}, {'': [0.023465230249159315, 0.12830483318473318], 'false': [0.11225670261143288, 0.20485274836571746], 'false,false': [0.1934942119436498, 0.2111332494627753], 'false,false,false': [0.0026231832782368514, 0.21972298829549514], 'false,false,true': [0.014639753719107536, 2.6339924788411197e-05], 'false,true': [0.06795604487492066, 0.00017949218756339562], 'false,true,true': [0.002101924193350935, 0.07006364542258493], 'true': [0.061569574893379685, 3.598518283477202e-05]}, {'': [0.09781968986637946, 0.09275274707549311], 'true': [2.567563742487955e-05, 0.11538022141171918], 'false': [0.07562985511788649, 0.17515213107719593], 'false,false': [0.17276002114419736, 0.18809709030178484], 'false,false,false': [0.18809709030178484, nan], 'false,false,true': [0.03662938390800102, 0.17425210154872323], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08487830116710803, 0.09418224120586835], 'false': [0.10472093235097454, 0.08572954425852554], 'false,true': [0.05975572735451268, 0.0975116089246592], 'false,false': [0.07973407358410822, 0.2399999999999999], 'false,false,false': [0.2399999999999999, nan], 'true': [0.015487141968735543, 0.002055841196996871], 'false,true,true': [0.0012510367736444416, 0.11104295956950234], 'true,true': [0.0005167879020894495, 0.01147394040985777]}, {'': [0.061333757125251215, 0.08135935618983518], 'false': [0.06480431589723676, 0.1559419295211149], 'false,false': [0.16156112308687295, 0.1285459824480099], 'false,false,true': [0.02719705326640963, 0.16541628502751213], 'false,false,false': [0.05613682816978837, 0.2040816326530611], 'true': [0.00022321862362995973, 0.1284971498220532], 'true,false': [0.0, 0.1413971196647951], 'true,false,false': [0.00019819251932159943, 0.1884721540756631]}, {'': [0.04167984802091254, 0.08217520217423051], 'false': [0.06400163559255287, 0.1719004025413299], 'false,false': [0.1719004025413299, nan], 'false,false,true': [0.10091472312451932, 0.005572198179918929], 'true': [0.03430006374301611, 0.0524650895778492], 'true,false': [nan, 0.0524650895778492]}, {'': [0.04069920197709137, 0.0707751582381715], 'false': [0.05546369544156704, 0.07086349628291741], 'false,false': [0.06278864501736733, 0.11000925696259037], 'false,false,false': [0.11000925696259037, nan], 'true': [0.03606089495548026, 0.048821205067196755], 'true,true': [0.0011440592123026698, 0.15626037401556642], 'true,true,false': [nan, 0.15626037401556642], 'true,true,true': [4.531278579786302e-06, 0.0016249642705865634]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.11697246451127827;  // std dev = 6.994, 255.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=66 */
%   | | | else return 0.1846329533643496;  // std dev = 9.814, 438.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=143 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.48870418144172356;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.608362301099843;  // std dev = 0.314, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5402550729234012;  // std dev = 2.517, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.07690116472007423;  // std dev = 9.615, 516.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=122 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.08491768190404415;  // std dev = 3.000, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.2001328774535785;  // std dev = 5.856, 148.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5764530364197062;  // std dev = 0.035, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.026992639751763945;  // std dev = 4.132, 118.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=24 */
%   | | | else return 0.12995714896944444;  // std dev = 4.646, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7531971079007633;  // std dev = 2.681, 134.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=127 */
%   | | | else return -0.17706127144949085;  // std dev = 0.193, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.582608003894076;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09573346769007385;  // std dev = 3.877, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.38351099211292833;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16822656074154302;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.42400946188435035;  // std dev = 0.036, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.39156347420330406;  // std dev = 0.233, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.6046686561997339;  // std dev = 2.356, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0.6626078139141627;  // std dev = 2.502, 131.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=125 */
%   | | else return -0.161138864568647;  // std dev = 0.024, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6697206259925177;  // std dev = 0.966, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.21077406679865984;  // std dev = 0.067, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.03236664935954908;  // std dev = 2.788, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.10744118851125786;  // std dev = 3.576, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3316917781825027;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3408807796695269;  // std dev = 0.038, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.29431986257541226;  // std dev = 0.209, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.49164695780461054;  // std dev = 3.773, 189.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=173 */
%   | | else return -0.13940552837497205;  // std dev = 0.017, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6455317784718895;  // std dev = 0.496, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.18625783949043087;  // std dev = 0.126, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1997402815216415;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.0641906010299883;  // std dev = 3.564, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.24870398001944455;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.2516832128648768;  // std dev = 0.014, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3001904597451744;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3352630842406176;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10694262176091288;  // std dev = 0.004, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1666698680286818;  // std dev = 4.328, 156.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=84 */
%   | | | else return -0.13888743460420455;  // std dev = 0.425, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05305683818099527;  // std dev = 5.318, 346.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=116 */
%   | | | else return 0.10273429028232568;  // std dev = 3.733, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37934138012070984;  // std dev = 0.149, 104.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=100 */
%   | else return -0.14494584852907627;  // std dev = 0.083, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.27213186045464177;  // std dev = 0.253, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11702077151413187;  // std dev = 0.348, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0.033024370493011664;  // std dev = 3.981, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5188344852969257;  // std dev = 0.249, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15508885353012536;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.23824949046339308;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.034229557176286736;  // std dev = 4.104, 212.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1617270379639464;  // std dev = 0.013, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.1318185343778968;  // std dev = 0.224, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(G, A) )
%   | | then if ( complex(G, H), interaction(F, I) )
%   | | | then return -0.12487477778486407;  // std dev = 0.451, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18852502186245784;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24040958785826244;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, J), enzyme(A, L) )
%   | | | then return 0.11312929137942848;  // std dev = 1.118, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.01737781816732001;  // std dev = 4.337, 242.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=53 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.026777089272989545;  // std dev = 4.969, 412.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=131 */
%   | | | else return 0.0830288213040782;  // std dev = 2.731, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(C, D), recursion_proteinclass(C, B) )
%   | then return 0.14333716390849943;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.002857494589866853;  // std dev = 0.234, 348.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=99 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), phenotype(F, G) )
%   | | then if ( enzyme(A, H), enzyme(F, I) )
%   | | | then return -0.18993821203235928;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08554570106810562;  // std dev = 2.062, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.013214524093272373;  // std dev = 1.738, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.02260354513411787;  // std dev = 2.993, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | else if ( enzyme(A, L), interaction(M, A) )
%   | | then return -0.026460476860334852;  // std dev = 0.210, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.00217428398990731;  // std dev = 4.534, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | | | else return 0.10422683880383916;  // std dev = 0.861, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14798724232257093;  // std dev = 0.053, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.1764764600057603;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.07238411492399507;  // std dev = 1.141, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.15076294657538047;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.09038594592773239;  // std dev = 0.013, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.10782832089136585;  // std dev = 3.876, 146.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=83 */
%   | | | else return -0.12095177961852657;  // std dev = 0.628, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.1689068410211416;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.013389354838299793;  // std dev = 6.023, 442.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=134 */


Results
   AUC ROC   = 0.978184
   AUC PR    = 0.167061
   CLL	      = -0.198792
   Precision = 0.103842 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.187441


Total learning time: 15.206 seconds
Total inference time: 9.039 seconds
AUC ROC: 0.978184


Results scoring model
   AUC ROC   = 0.986984
   AUC PR    = 0.353207
   CLL	      = -0.177686
   Precision = 0.230769 at threshold = 0.5
   Recall    = 0.871698
   F1        = 0.364929


Total scoring time: 21.879 seconds
Refined model CLL: -0.177686


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980934
   AUC PR    = 0.174343
   CLL	      = -0.203192
   Precision = 0.096708 at threshold = 0.5
   Recall    = 0.903846
   F1        = 0.174721


Total learning time: 52.04600000000001 seconds
Total inference time: 7.206 seconds
AUC ROC: 0.980934
Total revision time: 52.04600000000001
Best scored revision CLL: -0.176503


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:58:54
{'AUC ROC': 0.980934, 'AUC PR': 0.174343, 'CLL': -0.203192, 'Precision': [0.096708, 0.5], 'Recall': 0.903846, 'F1': 0.174721, 'Learning time': 52.04600000000001, 'Inference time': 7.206, 'parameter_1.0': {'AUC ROC': 0.980934, 'AUC PR': 0.174343, 'CLL': -0.203192, 'Precision': [0.096708, 0.5], 'Recall': 0.903846, 'F1': 0.174721, 'Learning time': 4.112, 'Inference time': 7.206}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.1718744252955908;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.036720363670940774;  // std dev = 2.027, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2137044906550679;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26410727399829476;  // std dev = 0.644, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.11177476844110087;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.011244929014317447;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10595633762858672;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.2002888995982391;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3508125421395262;  // std dev = 1.477, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8200004895732149;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.025128694701419978;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8230553606800033;  // std dev = 0.175, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1449805569889827;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7389293770749306;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06777524793243436;  // std dev = 3.440, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.6169751418221553;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4893417580918486;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24290949403050383;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.46373589618971955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6883431215978966;  // std dev = 1.087, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.16352709551330485;  // std dev = 0.204, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5060864187776963;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1069828743166842;  // std dev = 3.318, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.2170680226759136;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3865996672354769;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.35227651441705565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.548106689907426;  // std dev = 0.957, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return -0.138819712751486;  // std dev = 0.194, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3546778812703276;  // std dev = 2.689, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return -0.24330039583970878;  // std dev = 0.391, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3618665334547285;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6698215808148466;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2850855046042372;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12007678948246477;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.036840643184514014;  // std dev = 2.328, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.021694707372902383;  // std dev = 0.920, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04713900126487036;  // std dev = 3.061, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.10555625250317531;  // std dev = 1.698, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2455846616036944;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.17039295482220704;  // std dev = 3.625, 79.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=42 */
%   | else return -0.1671609813984231;  // std dev = 0.632, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.28752319314622166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.554268298227915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.10500248999923818;  // std dev = 0.866, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return -0.10110457857820279;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.13887240322281305;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.21145919510633085;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( location(A, F) )
%   | | | then return -0.04850030869545896;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.016968053142947838;  // std dev = 2.137, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3825438266284065;  // std dev = 0.212, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06003605225996047;  // std dev = 2.879, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( location(A, J) )
%   | | | then return -0.04004795140665551;  // std dev = 1.135, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.06221691206541924;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11446558571926663;  // std dev = 0.856, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E) )
%   | then return 0.018839254111217143;  // std dev = 2.241, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4937435094232255;  // std dev = 1.550, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.23688512290634914;  // std dev = 0.608, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.14504638468218953;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11192229984046476;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19299258442973294;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.0428121641190403;  // std dev = 0.824, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.01581287257359233;  // std dev = 2.286, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013793111221341576;  // std dev = 2.799, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.99583
   AUC PR    = 0.511777
   CLL	      = -0.174513
   Precision = 0.460177 at threshold = 0.5
   Recall    = 0.565217
   F1        = 0.507317


Total learning time: 2.958 seconds
Total inference time: 5.765 seconds
AUC ROC: 0.99583


Results scoring model
   AUC ROC   = 0.980243
   AUC PR    = 0.215438
   CLL	      = -0.207439
   Precision = 0.160976 at threshold = 0.5
   Recall    = 0.6
   F1        = 0.253846


Total scoring time: 8.652 seconds
Parameter learned model CLL: -0.207439


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.0, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.314, 35, 16], 'false,false,true,false': [2.027, 23, 5], 'false,false,false,true': [3.211, 29, 16], 'false,false,false,false': [1.651, 6, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.894, 1, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.644, 1, 1], 'false,true,false': [0.063, 0, 2], 'false,false,true,true': [3.404, 42, 16], 'false,false,true,false': [2.08, 32, 5], 'false,false,false,true': [3.404, 42, 16], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.477, 3, 10], 'false,true,true,true': [0.0, 0, 8], 'false,true,true,false': [2.522, 31, 8], 'false,true,false,true': [0.175, 0, 6], 'false,true,false,false': [0.0, 24, 0], 'false,false,true,true': [0.107, 0, 2], 'false,false,true,false': [3.44, 44, 16], 'false,false,false,true': [0.913, 1, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.065, 0, 7], 'true,true,false': [0.838, 1, 3], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.087, 1, 21], 'false,true,false': [0.204, 58, 0], 'false,false,true': [0.03, 0, 2], 'false,false,false,true': [3.318, 36, 16], 'false,false,false,false': [1.491, 4, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.107, 0, 10], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.957, 1, 21], 'false,true,false': [0.194, 62, 0], 'false,false,true,true': [2.689, 12, 19], 'false,false,true,false': [0.391, 35, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.143, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.059, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.908, 1, 4], 'false,true': [2.328, 56, 22], 'false,false,true,true': [0.92, 2, 2], 'false,false,true,false': [3.061, 43, 16], 'false,false,false,true': [1.698, 9, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.093, 0, 8], 'true,true,false': [3.625, 37, 42], 'true,false': [0.632, 77, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.866, 5, 1], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.119, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.733, 1, 2], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.137, 59, 22], 'false,false,true,true': [0.212, 0, 2], 'false,false,true,false': [2.879, 37, 16], 'false,false,false,true': [1.135, 7, 3], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A)', 'false,false,true': 'interaction(F, G), recursion_proteinclass(G, B)'}, {'true,true': [0.856, 1, 10], 'true,false': [0.0, 0, 0], 'false,true': [2.241, 49, 22], 'false,false,true,true': [1.55, 2, 23], 'false,false,true,false': [0.608, 50, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.036, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.035, 0, 2], 'false,true': [0.824, 1, 4], 'false,false,true': [2.286, 68, 21], 'false,false,false,true': [2.799, 45, 21], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-8.881784197001253e-17, 0.21893276745510165], 'false': [0.18750000000000006, 0.21432098765432223], 'false,false': [0.195161031885916, 0.234375], 'false,false,false': [0.2291358024691353, 0.24793388429752045], 'false,false,true': [0.2153018069973082, 0.14668367346938768], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.25, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.08264462809917364, 0.1913349904804411], 'false': [0.16717525072438116, 0.18767007888517923], 'false,false': [0.17107786143132714, 0.20785395691956418], 'false,false,false': [0.19976218787158198, 0.23668639053254428], 'false,false,true': [0.19976218787158198, 0.11687363038714381], 'false,true': [0.20735831983071118, 0.0019921816180513696], 'false,true,true': [nan, 0.20735831983071118], 'true': [7.401486830834377e-17, 0.16000000000000006]}, {'': [0.1677329568385256, 0.20963129811382739], 'false': [0.19884118516448418, 0.22165566432901682], 'false,false': [0.20510869786256447, 0.13888888888888884], 'false,false,true': [0.005729646437816482, 0.19722408995096927], 'false,true': [0.22453598913535566, 0.15095666862282156], 'false,true,true': [-1.1102230246251565e-16, 0.16305062458908637], 'false,true,false': [0.005108512796319076, -1.3877787807814457e-17], 'false,false,false': [0.13888888888888884, nan]}, {'': [0.07830963100749083, 0.18533421941277176], 'false': [0.15989117970989314, 0.21603583388146924], 'false,false': [0.00045702080990528415, 0.2184505660424086], 'false,false,false': [0.2117362643190628, 0.2469135802469136], 'false,true': [0.053500577548603385, 0.0007197300880096904], 'true': [0.07830963100749083, nan], 'true,true': [0.0006109795069425708, 0.17563663246137723], 'false,true,true': [0.0, 0.0537390130389106]}, {'': [0.0011530534903256618, 0.1500264679129114], 'false': [0.10249232584450971, 0.2074160643242794], 'false,false': [0.20097997776696902, 0.022910900750242158], 'false,false,true': [0.2333328742075767, 0.004371242830134786], 'false,true': [0.0414317517142964, 0.000607513466551237], 'false,true,true': [0.0, 0.0416476454326995], 'false,false,false': [0.0, 0.006838789868346333], 'true': [0.0011530534903256618, nan]}, {'': [0.0820104279576732, 0.12131285915836293], 'false': [0.06945265046141559, 0.17362380417968704], 'false,false': [0.16244881924513332, 0.2059110204129065], 'false,false,false': [0.2059110204129065, nan], 'false,false,true': [0.21171124161096488, 0.15880816355905075], 'true': [0.0005782481172607415, 0.16487747500282], 'true,true': [0.0005782481172607415, nan], 'true,true,true': [0.0005782481172607415, nan]}, {'': [0.11239949769551548, 0.1598047997532027], 'false': [0.15005943601622693, 0.17746459512810261], 'false,false': [0.0, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,true': [0.0177882377712609, 0.1250075968567231], 'true': [0.15158056907559805, 0.005183203382611414], 'true,true': [0.0010919348364788958, 0.16630003545135846], 'false,true,true': [0.0, 0.0]}, {'': [0.06351409073026286, 0.1038770487633283], 'false': [0.05638134245558071, 0.15911981385612145], 'false,false': [0.1551480540959647, 0.1635969184329832], 'false,false,false': [0.12889526785855088, 0.25], 'false,false,true': [0.02255164818598046, 0.1563694642538105], 'true': [0.0017575686552347772, 0.17904982696655145], 'true,false': [nan, 0.17904982696655145], 'true,false,false': [0.17904982696655145, nan]}, {'': [0.0666743541128213, 0.11436859221278432], 'false': [0.07075629532550086, 0.1555827381919], 'false,false': [0.1555827381919, nan], 'false,false,true': [0.09609272327671736, 0.0073883461895627445], 'true': [0.0666743541128213, nan]}, {'': [0.000864751285094152, 0.08614799809531658], 'false': [0.13585280683699968, 0.08447843863119786], 'false,false': [0.05871441551507451, 0.11871754459668768], 'false,false,false': [0.11871754459668768, nan], 'true': [0.00032178891334831505, 0.0006067909151918627], 'true,true': [0.00021867682796325913, 0.0], 'true,true,true': [0.00021867682796325913, nan], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.03382461077518805;  // std dev = 3.274, 74.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   | | | else return 0.31269438964496676;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.18467954734441028;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7343513661400678;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5551805016408267;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.19880898450941642;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.030228218848652042;  // std dev = 2.509, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11869073341064072;  // std dev = 2.739, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.32445017907379875;  // std dev = 2.527, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3408178501654876;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.609696157426799;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.822035127353849;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.008057497988609797;  // std dev = 2.442, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.7755389050015115;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17575492352963124;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), interaction(J, A) )
%   | | | then return 0.11292559142359111;  // std dev = 3.338, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.07458689091037388;  // std dev = 1.256, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else return 0.44934038090217826;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.45294766684516563;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4859171477952085;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.07614497107776669;  // std dev = 0.522, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6266262300642627;  // std dev = 1.316, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return -0.1782969089825892;  // std dev = 0.037, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30065134189286763;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.23266624050961285;  // std dev = 1.290, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.06094939191125017;  // std dev = 3.515, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.34999426513421233;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.10332537984079349;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.4265422375730241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45367506882003816;  // std dev = 1.542, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return -0.14949248991842387;  // std dev = 0.031, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.013920089918034258;  // std dev = 2.331, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.19938350809764593;  // std dev = 2.461, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5347072433017273;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.45761831214914084;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2147934248574326;  // std dev = 0.253, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.018521476204985513;  // std dev = 3.310, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   | | | else return 0.2611174552088506;  // std dev = 1.500, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.08024914940341114;  // std dev = 1.326, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.19434712712731894;  // std dev = 0.240, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.21993259506134702;  // std dev = 0.846, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.13071714287604255;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.5676556227892368;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19915931276427193;  // std dev = 1.013, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.2538852822405767;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07379215951756289;  // std dev = 0.638, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.18992838454130587;  // std dev = 1.662, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return 0.345165111405336;  // std dev = 2.578, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | else return -0.1798264591112881;  // std dev = 0.065, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( recursion_proteinclass(K, B) )
%   | | then return 0.37703420584135006;  // std dev = 0.101, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.001343694807614861;  // std dev = 0.601, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, L) )
%   | | then return -0.14172758750479633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19757791393015625;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.18840158655599898;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2157614695903394;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06837962239045392;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then return -0.1784464431524639;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14049753230313863;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.01687606837991219;  // std dev = 2.735, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.06392590429046685;  // std dev = 2.689, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.05396548066449769;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13648626129227168;  // std dev = 1.501, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(C, E), complex(E, D) )
%   | then return -0.07391508156484364;  // std dev = 0.279, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | else if ( enzyme(A, F) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4531380278964674;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.19324247452819288;  // std dev = 0.524, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5378429470292596;  // std dev = 0.365, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1774103389588623;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, I) )
%   | then return 0.009640999976258197;  // std dev = 0.257, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3238137256823905;  // std dev = 1.675, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.2641182881189812;  // std dev = 0.188, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0.42071163749920054;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.15919000610510156;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08583362555308072;  // std dev = 0.948, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G), enzyme(F, H) )
%   | | | then return 0.08771330208063648;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4346541199890636;  // std dev = 1.044, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.128396867217898;  // std dev = 0.373, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.24004183224590936;  // std dev = 0.935, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.3366798176899157;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.005058598723417286;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.023389639957340537;  // std dev = 0.492, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.986763
   AUC PR    = 0.541607
   CLL	      = -0.180932
   Precision = 0.409938 at threshold = 0.5
   Recall    = 0.717391
   F1        = 0.521739


Total learning time: 7.975 seconds
Total inference time: 9.225 seconds
AUC ROC: 0.986763


Results scoring model
   AUC ROC   = 0.985493
   AUC PR    = 0.315316
   CLL	      = -0.196479
   Precision = 0.154839 at threshold = 0.5
   Recall    = 0.872727
   F1        = 0.263014


Total scoring time: 13.766 seconds
Refined model CLL: -0.196479


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986763
   AUC PR    = 0.541607
   CLL	      = -0.180932
   Precision = 0.409938 at threshold = 0.5
   Recall    = 0.717391
   F1        = 0.521739


Total learning time: 33.351 seconds
Total inference time: 9.225 seconds
AUC ROC: 0.986763
Total revision time: 33.351
Best scored revision CLL: -0.196479


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:59:43
{'AUC ROC': 0.986763, 'AUC PR': 0.541607, 'CLL': -0.180932, 'Precision': [0.409938, 0.5], 'Recall': 0.717391, 'F1': 0.521739, 'Learning time': 33.351, 'Inference time': 9.225, 'parameter_0.2': {'AUC ROC': 0.99583, 'AUC PR': 0.511777, 'CLL': -0.174513, 'Precision': [0.460177, 0.5], 'Recall': 0.565217, 'F1': 0.507317, 'Learning time': 2.958, 'Inference time': 5.765}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7470378239884012;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15279179224236805;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.15148226843284443;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16249676118646889;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7413433124639607;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.40800997913062725;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7275682260387666;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5518526675222027;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.13315623179270716;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.14424617252045666;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18719491633600902;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.07314425473577647;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6067522432878185;  // std dev = 0.152, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6323679695725622;  // std dev = 1.561, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.003145054798355379;  // std dev = 4.091, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7099433089205812;  // std dev = 2.128, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | | else return -0.18178929995902818;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5737343769137138;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11103182939676173;  // std dev = 2.308, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5080699958780118;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4359477343805809;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4681482125153812;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5095488272601245;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.46714882432543237;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6523562368108224;  // std dev = 2.448, 83.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=77 */
%   | | else return -0.16825775969086754;  // std dev = 0.247, 198.000 (wgt'ed) examples reached here.  /* #neg=198 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4908817789829724;  // std dev = 0.148, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09671876190054203;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.0947817413936884;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.342252818643446;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15815148051605027;  // std dev = 1.497, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23761649778736982;  // std dev = 0.658, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.515063156593966;  // std dev = 2.294, 83.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=77 */
%   | | else return -0.1479093045480826;  // std dev = 0.289, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6668710411249537;  // std dev = 0.476, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22399108941208096;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.33544343616457306;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09055830151726581;  // std dev = 1.640, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.013894239240176964;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23959163522496554;  // std dev = 0.999, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(F, A) )
%   | then return 0.022287887375529176;  // std dev = 4.811, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.22253717098784292;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20209838619043885;  // std dev = 1.753, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14935285785836552;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.26794711084594813;  // std dev = 0.173, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4565732558006927;  // std dev = 0.552, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return -0.17682561971574215;  // std dev = 0.952, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24898331973522106;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.27956876926860574;  // std dev = 0.966, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.06861920518388123;  // std dev = 1.952, 60.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04589198421173593;  // std dev = 3.379, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.028829942581488688;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19826015796674776;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3003165351349522;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.017793723618890363;  // std dev = 4.488, 267.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14884027388462306;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1559755912775671;  // std dev = 1.490, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.21126470046992996;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.08935679329422949;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.10530018495808706;  // std dev = 1.007, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24264952962075212;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.008134559050775607;  // std dev = 4.453, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4001702694532412;  // std dev = 0.949, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.24454002724699891;  // std dev = 0.193, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.20926622234328685;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1603130003836831;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.07197771539791331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17996434500320635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.08166612379128746;  // std dev = 0.692, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.026166259241693975;  // std dev = 1.194, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then return 0.011535352786126399;  // std dev = 4.259, 275.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=77 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.04823665369824155;  // std dev = 1.804, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996775
   AUC PR    = 0.55063
   CLL	      = -0.165469
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 2.774 seconds
Total inference time: 2.532 seconds
AUC ROC: 0.996775


Results scoring model
   AUC ROC   = 0.983784
   AUC PR    = 0.235818
   CLL	      = -0.188324
   Precision = 0.143987 at threshold = 0.5
   Recall    = 0.827273
   F1        = 0.245283


Total scoring time: 6.89 seconds
Parameter learned model CLL: -0.188324


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.333, 2, 16], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.913, 1, 5], 'false,false,true,true': [4.825, 79, 33], 'false,false,true,false': [5.576, 106, 44], 'false,false,false,true': [2.207, 16, 7], 'false,false,false,false': [1.265, 8, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 10], 'true,false': [1.414, 3, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.028, 0, 4], 'false,true,false': [0.894, 1, 4], 'false,false,true,true': [4.825, 79, 33], 'false,false,true,false': [5.528, 100, 44], 'false,false,false,true': [2.133, 13, 7], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.152, 0, 16], 'false,true,true,true': [1.561, 3, 14], 'false,true,true,false': [4.091, 92, 21], 'false,true,false,true': [2.128, 5, 47], 'false,true,false,false': [0.0, 106, 0], 'false,false,true,true': [0.029, 0, 2], 'false,false,true,false': [2.308, 18, 8], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.078, 0, 9], 'true,true,false': [0.083, 0, 4], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.124, 0, 5], 'false,true,true,false': [2.448, 6, 77], 'false,true,false': [0.247, 198, 0], 'false,false,true': [0.148, 0, 3], 'false,false,false,true': [2.207, 16, 7], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.06, 0, 4], 'true,false': [1.497, 3, 12], 'false,true,true,true': [0.658, 1, 5], 'false,true,true,false': [2.294, 6, 77], 'false,true,false': [0.289, 192, 0], 'false,false,true,true': [0.476, 0, 7], 'false,false,true,false': [0.0, 10, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.64, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.877, 1, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.999, 1, 13], 'false,true': [4.811, 202, 82], 'false,false,true,true': [0.06, 0, 2], 'false,false,true,false': [1.753, 8, 8], 'false,false,false,true': [1.054, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.173, 0, 8], 'true,true,false': [0.552, 0, 31], 'true,false': [0.952, 81, 0], 'false,true,true,true': [0.043, 0, 7], 'false,true,true,false': [0.966, 2, 7], 'false,true,false': [1.952, 50, 10], 'false,false,true': [3.379, 96, 45], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.069, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.021, 0, 5], 'false,true': [4.488, 185, 82], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [1.49, 8, 8], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.007, 1, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.017, 0, 3], 'false,true': [4.453, 202, 82], 'false,false,true,true': [0.949, 1, 12], 'false,false,true,false': [0.193, 14, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.121, 0, 3], 'true,true,true,false': [0.032, 0, 7], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.692, 1, 5], 'false,true': [1.194, 2, 7], 'false,false,true': [4.259, 198, 77], 'false,false,false,true': [1.804, 27, 9], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.09876543209876518, 0.2135993767313024], 'false': [0.09876543209876527, 0.20653835104855034], 'false,false': [0.20751995804440335, 0.19834710743801665], 'false,false,true': [0.20782844387755237, 0.20728888888889008], 'false,false,false': [0.21172022684310027, 0.16000000000000003], 'false,true': [1.4802973661668753e-16, 0.13888888888888898], 'false,true,false': [nan, 0.1388888888888887], 'false,true,true': [0.0, 0.0]}, {'': [0.1329639889196673, 0.21424656289278465], 'false': [0.09659995011449037, 0.21063294890197065], 'false,false': [0.21031284936452135, 0.21332041703349852], 'false,false,false': [0.22750000000000004, 0.17283950617283952], 'false,false,true': [0.2078284438775521, 0.21219135802468964], 'true': [-8.881784197001253e-17, 0.2222222222222222], 'false,true': [0.00019657803272077334, 0.15999999999999998], 'false,true,true': [nan, 0.00019657803272077334]}, {'': [0.00144765336107755, 0.20146251361832912], 'false': [0.19909522797731766, 0.21775364809663356], 'false,false': [0.2044535252453498, 0.2222222222222222], 'false,false,false': [0.2222222222222222, nan], 'false,false,true': [0.00041484380538958643, 0.20485640504170494], 'false,true': [0.19247716289968975, 0.20422909805388012], 'false,true,false': [0.08706234270963989, -7.54113752575578e-17], 'false,true,true': [0.14338303876543823, 0.1480886576596948]}, {'': [0.001606885219914922, 0.16646616676161702], 'false': [0.16157114870046368, 0.20775465467580748], 'false,false': [0.007325325705143733, 0.21389366914827562], 'false,false,false': [0.21172022684310016, 0.2222222222222222], 'false,true': [0.07009077506833923, 0.00030688265428680087], 'false,true,true': [0.0030800424866561206, 0.07217860109456276], 'true': [0.0012170491606455609, 0.0], 'true,true': [0.0006771401091328529, 0.0017140109012426519]}, {'': [0.12372244277651062, 0.12167597294576582], 'true': [0.000897381109197834, 0.1493403604070296], 'false': [0.11192495165854954, 0.20830091767934286], 'false,false': [0.20554566697916657, 0.21127031478529915], 'false,false,false': [0.0, 0.22426319518372306], 'false,false,true': [0.032338019018741324, -2.2204460492503132e-17], 'false,true': [0.06882814210406858, 0.0004350232569269724], 'false,true,true': [0.0721371958592946, 0.06339949642249225]}, {'': [0.10693551288653841, 0.09108029545947989], 'true': [0.19231210809472726, 0.07122235229117646], 'true,true': [0.19231210809472726, nan], 'true,true,true': [0.19231210809472726, nan], 'false': [0.08149281210036904, 0.18269183281275905], 'false,false': [0.1710418938990875, 0.22226280056910444], 'false,false,false': [0.22226280056910444, nan], 'false,false,true': [0.0018201836305546532, 0.1921481916910991]}, {'': [0.08981093432762104, 0.0852526906009207], 'true': [0.014385646290190261, 0.011182236452039156], 'false': [0.08111562788995191, 0.08675174420359241], 'false,false': [0.08097516083724528, 0.2222222222222222], 'false,false,false': [0.2222222222222222, nan], 'false,true': [0.05866791310619651, 0.06350260720785786], 'false,true,true': [0.00026567934035630944, 0.10368260469796783], 'true,true': [0.003762137134413701, 0.00982877189945502]}, {'': [0.0025632662461327754, 0.08223089807654908], 'false': [0.0754230333084871, 0.14670254754320353], 'false,false': [0.12346926399029957, 0.18987209847203973], 'false,false,false': [0.0, 0.24000000000000007], 'false,false,true': [0.0009267305357108929, 0.1387814236994234], 'true': [0.00043493200267220487, 8.494249876561666e-05], 'true,false': [nan, 8.494249876561666e-05], 'true,false,false': [nan, 8.494249876561666e-05]}, {'': [0.06244057595913962, 0.07604331982769186], 'false': [0.06981439067739031, 0.13851780143269446], 'false,false': [0.13851780143269446, nan], 'false,false,true': [0.0693154292071207, 0.0026487112660217938], 'true': [0.0724709531167128, 9.639659381636505e-05], 'true,false': [nan, 9.639659381636505e-05]}, {'': [0.02989636694230586, 0.07170144844490242], 'false': [0.15846459539323957, 0.0691639673486277], 'false,false': [0.06597487131611852, 0.09036598412824458], 'false,false,false': [0.09036598412824458, nan], 'true': [0.0025387577648224627, 0.0797765955944037], 'true,true': [0.0020628306117744855, 0.002915278043377687], 'true,true,false': [0.0, 0.0], 'true,true,true': [0.004867771015869614, 0.00014178791366587746]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.13030083383368893;  // std dev = 5.594, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | | | else return 0.23534191755565162;  // std dev = 5.175, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7283527732630031;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return 0.34433562315669086;  // std dev = 1.086, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.5160900577342101;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then if ( interaction(A, J), interaction(J, I) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1282023747408947;  // std dev = 5.538, 150.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=43 */
%   | | | else return 0.1945421092460377;  // std dev = 5.215, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6109296068294866;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.04061793232762131;  // std dev = 2.721, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.1488072456778744;  // std dev = 4.007, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.682742731477494;  // std dev = 2.278, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | | else return -0.19141551588919098;  // std dev = 0.250, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.14345826931125438;  // std dev = 2.248, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0473988901375778;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.0473988901375778;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43310553053865053;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5016964236272826;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.49581991523909563;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.5032332488978066;  // std dev = 2.377, 37.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=29 */
%   | | | else return 0.6550248664753852;  // std dev = 1.940, 57.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=53 */
%   | | else return -0.1750315135419243;  // std dev = 0.028, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4681028149361675;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.18692721710891436;  // std dev = 2.031, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return -0.0374940573124352;  // std dev = 1.281, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3599854062473431;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.34949713494339624;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(G, H) )
%   | | | then return 0.5771810407871335;  // std dev = 1.064, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.4845554994010449;  // std dev = 2.176, 55.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=50 */
%   | | else return -0.15032463485372383;  // std dev = 0.024, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6366609662884658;  // std dev = 0.439, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.24693038264424205;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30979206369926116;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.030009820383365117;  // std dev = 1.787, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.28509970239521704;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.0936135897847522;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1053344519538754;  // std dev = 0.048, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( location(A, G) )
%   | | | then return 0.031340175146315874;  // std dev = 4.686, 249.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=75 */
%   | | | else return 0.2060005580254707;  // std dev = 1.031, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2197999006059635;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08837867544641752;  // std dev = 1.894, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.1781813929570865;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1212133273933228;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.22625654811887916;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.020959821701442154;  // std dev = 0.286, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.17161961515658103;  // std dev = 1.185, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.012851340114095526;  // std dev = 1.332, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.30386286731191176;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.06635498526642833;  // std dev = 0.248, 60.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2585596406272813;  // std dev = 2.416, 63.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | else return -0.15249961180850344;  // std dev = 0.664, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.027879583156038144;  // std dev = 0.222, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15491593567854045;  // std dev = 0.208, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.14921968666767263;  // std dev = 3.700, 133.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=75 */
%   | | | else return -0.1296632973880888;  // std dev = 0.581, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.3026721508616201;  // std dev = 0.557, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03185571995011577;  // std dev = 0.897, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.14758023598029646;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02399207286750721;  // std dev = 1.908, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.1827987477942205;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.22815937923758225;  // std dev = 0.968, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12259270278646524;  // std dev = 0.241, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, G) )
%   | | | then return -0.02818919912174552;  // std dev = 0.565, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.09690873546193302;  // std dev = 1.374, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( location(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.12556326299779064;  // std dev = 3.365, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   | | | else return -0.12112925232037132;  // std dev = 0.671, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5275993513913503;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20897669681800682;  // std dev = 0.252, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.08233853782152582;  // std dev = 0.805, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.2074081992471511;  // std dev = 1.369, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1302042125976275;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.03532019284101808;  // std dev = 0.735, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.33959603235441255;  // std dev = 1.115, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.6800481134859871;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12747220434847734;  // std dev = 0.040, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(K, J), enzyme(K, L) )
%   | | | then return 0.06601335587956009;  // std dev = 2.130, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return -0.10489651450213348;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return -0.058362320563191586;  // std dev = 1.289, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.029714792098345273;  // std dev = 2.068, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */


Results
   AUC ROC   = 0.989334
   AUC PR    = 0.537033
   CLL	      = -0.171681
   Precision = 0.529412 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.631579


Total learning time: 10.286 seconds
Total inference time: 5.415 seconds
AUC ROC: 0.989334


Results scoring model
   AUC ROC   = 0.983034
   AUC PR    = 0.214504
   CLL	      = -0.192477
   Precision = 0.134715 at threshold = 0.5
   Recall    = 0.945455
   F1        = 0.235828


Total scoring time: 29.405 seconds
Refined model CLL: -0.192477


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996775
   AUC PR    = 0.55063
   CLL	      = -0.165469
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 49.355000000000004 seconds
Total inference time: 2.532 seconds
AUC ROC: 0.996775
Total revision time: 49.355000000000004
Best scored revision CLL: -0.188324


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:00:41
{'AUC ROC': 0.996775, 'AUC PR': 0.55063, 'CLL': -0.165469, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 49.355000000000004, 'Inference time': 2.532, 'parameter_0.4': {'AUC ROC': 0.996775, 'AUC PR': 0.55063, 'CLL': -0.165469, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 2.774, 'Inference time': 2.532}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11220298915356616;  // std dev = 5.921, 185.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=47 */
%   | | | else return 0.1510359643882157;  // std dev = 7.035, 239.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=70 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7266248616643611;  // std dev = 5.96e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.6551962902357898;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11097968017158073;  // std dev = 5.869, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */
%   | | | else return 0.1628250617912082;  // std dev = 6.879, 216.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=70 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16052609387379246;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.036919399343920904;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5354404519289604;  // std dev = 0.974, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6839855426266513;  // std dev = 1.646, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.006679152036102215;  // std dev = 4.893, 164.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=30 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6840632077576947;  // std dev = 2.970, 84.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=74 */
%   | | | else return -0.184501953691733;  // std dev = 1.93e-07, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462844;  // std dev = 1.05e-08, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09197277077694475;  // std dev = 2.684, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2504665539749501;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4318625931429638;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.4399000201675799;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.446932768814119;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43434023628793667;  // std dev = 0.200, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6271678452525904;  // std dev = 3.457, 130.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=117 */
%   | | else return -0.1654388766873754;  // std dev = 0.177, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4750343416215673;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05202985869040097;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.06574760124578893;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.33398246714922886;  // std dev = 0.027, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.33546156687395595;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3343525658027868;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.47169916123799227;  // std dev = 3.771, 133.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=117 */
%   | | else return -0.14335993950623374;  // std dev = 0.109, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5892218550237293;  // std dev = 1.350, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.2030828443863335;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3437697323905759;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.02017184168491082;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.14750293462343636;  // std dev = 0.944, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21719773277214785;  // std dev = 0.972, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(F, A) )
%   | then return 0.019937693320782966;  // std dev = 6.185, 439.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=124 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2401617625814424;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16501261108846446;  // std dev = 2.099, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03751297649736096;  // std dev = 1.177, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1046058303374747;  // std dev = 1.409, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.31077439791176376;  // std dev = 3.390, 106.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=83 */
%   | else return -0.1434177537821205;  // std dev = 0.887, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21603659954663124;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3001953260697274;  // std dev = 1.174, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.05284070330997366;  // std dev = 1.892, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then return 0.011187748032608231;  // std dev = 3.629, 142.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=42 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13626351805228384;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14251715326381653;  // std dev = 0.961, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1791732633833094;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22889746387235835;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.022788618328867638;  // std dev = 5.437, 426.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=124 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.17619383862358703;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.022662619080697867;  // std dev = 2.128, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.23418246948014926;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.030476645375057794;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13249166220360625;  // std dev = 0.944, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.03726740757708169;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.01891508676509137;  // std dev = 5.520, 418.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=124 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4195214367589132;  // std dev = 1.462, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2161303822125106;  // std dev = 0.381, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.17083022913125098;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17608924836054282;  // std dev = 0.165, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16703512651780156;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.024670935109204272;  // std dev = 1.317, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1634088007671671;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A) )
%   | | then return 0.013848485573687654;  // std dev = 5.308, 426.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=117 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.018011417745027843;  // std dev = 2.059, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996314
   AUC PR    = 0.536378
   CLL	      = -0.156885
   Precision = 0.524823 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.635193


Total learning time: 3.793 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.996314


Results scoring model
   AUC ROC   = 0.983376
   AUC PR    = 0.208945
   CLL	      = -0.185768
   Precision = 0.144527 at threshold = 0.5
   Recall    = 0.819277
   F1        = 0.245709


Total scoring time: 10.269 seconds
Parameter learned model CLL: -0.185768


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.982, 1, 27], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 8], 'false,false,true,true': [5.921, 138, 47], 'false,false,true,false': [7.035, 169, 70], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [1.291, 10, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [5.96e-08, 0, 14], 'true,false': [0.964, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 5], 'false,true,false': [2.11e-08, 0, 6], 'false,false,true,true': [5.869, 129, 47], 'false,false,true,false': [6.879, 146, 70], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [1.279, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.974, 1, 27], 'false,true,true,true': [1.646, 3, 20], 'false,true,true,false': [4.893, 134, 30], 'false,true,false,true': [2.97, 10, 74], 'false,true,false,false': [1.93e-07, 140, 0], 'false,false,true,true': [1.05e-08, 0, 2], 'false,false,true,false': [2.684, 27, 11], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.023, 0, 14], 'true,true,false': [0.019, 0, 5], 'true,false': [2.11e-08, 0, 8], 'false,true,true,true': [0.2, 0, 7], 'false,true,true,false': [3.457, 13, 117], 'false,true,false': [0.177, 327, 0], 'false,false,true': [0.115, 0, 4], 'false,false,false,true': [2.598, 27, 9], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.027, 0, 17], 'true,false': [0.023, 0, 10], 'false,true,true,true': [0.186, 0, 7], 'false,true,true,false': [3.771, 16, 117], 'false,true,false': [0.109, 313, 0], 'false,false,true,true': [1.35, 2, 10], 'false,false,true,false': [0.018, 11, 0], 'false,false,false,true': [0.087, 0, 3], 'false,false,false,false': [1.282, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.944, 1, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.972, 1, 19], 'false,true': [6.185, 315, 124], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [2.099, 14, 11], 'false,false,false,true': [1.177, 6, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [1.409, 3, 15], 'true,true,false': [3.39, 23, 83], 'true,false': [0.887, 184, 0], 'false,true,true,true': [0.019, 0, 6], 'false,true,true,false': [1.174, 1, 8], 'false,true,false': [1.892, 54, 11], 'false,false,true': [3.629, 100, 42], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.961, 1, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 7], 'true,false,false,false': [0.002, 0, 4], 'false,true': [5.437, 302, 124], 'false,false,true,true': [0.826, 1, 2], 'false,false,true,false': [2.128, 24, 11], 'false,false,false,true': [0.544, 1, 1], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.944, 1, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.24, 2, 8], 'false,true': [5.52, 294, 124], 'false,false,true,true': [1.462, 1, 15], 'false,false,true,false': [0.381, 38, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.001, 0, 7], 'true,true,true,false': [0.165, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 2], 'true,false': [1.317, 3, 8], 'false,true': [0.054, 0, 14], 'false,false,true': [5.308, 309, 117], 'false,false,false,true': [2.059, 33, 11], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.03443877551020513, 0.20597887910181906], 'false': [0.07638888888888877, 0.19896464287515697], 'false,false': [0.19979863830544872, 0.19037317468902057], 'false,false,true': [0.18951059167275489, 0.20710421736314183], 'false,false,false': [0.2060353798126952, 0.13888888888888892], 'false,true': [1.4802973661668753e-16, 0.09876543209876537], 'false,true,false': [0.0, -2.220446049250313e-16], 'false,true,true': [0.0, 0.0]}, {'': [0.03443877551020399, 0.2115800789557066], 'false': [8.074349270001139e-17, 0.20857392330779242], 'false,false': [0.2092458013365527, 0.20164534296252107], 'false,false,true': [0.1957321797520678, 0.2190500685871061], 'false,false,false': [0.2181122448979594, 0.14876033057851237], 'true': [2.5376526277146434e-16, 0.06632653061224485], 'false,true': [-1.7763568394002506e-16, 7.401486830834377e-17], 'false,true,true': [nan, -1.7763568394002506e-16]}, {'': [0.033890512537575024, 0.2050279384052961], 'false': [0.2058246179369746, 0.19761577945009678], 'false,true': [0.1919819753631996, 0.2161868285296504], 'false,true,false': [0.10499480961010638, 2.6645352591003756e-16], 'false,false': [0.19028301721317836, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'false,true,true': [0.11775751637582797, 0.14596845087581956], 'false,false,true': [5.551115123125783e-17, 0.18956122837295195]}, {'': [7.71745433952165e-05, 0.1569651949377487], 'false': [0.15394076058085482, 0.1856841474422094], 'false,false': [0.0033086375391469247, 0.1875279931925182], 'false,false,false': [0.1874999999999999, 0.18750000000000006], 'false,true': [0.08934933252066118, 9.581495148617583e-05], 'false,true,true': [0.005700278815681438, 0.09195367724464522], 'true': [5.994059464628352e-05, 5.551115123125783e-17], 'true,true': [3.785169912646451e-05, 7.418933028811026e-05]}, {'': [4.769996131541803e-05, 0.11869587570935436], 'false': [0.11075440509545284, 0.2051425843112387], 'false,false': [0.23586514830267993, 0.14021740591300255], 'false,false,true': [0.15182189375116736, 2.866217958834168e-05], 'false,false,false': [0.0025145135514619277, 0.14938985390616352], 'false,true': [0.1027042696850021, 3.807982989010008e-05], 'false,true,true': [0.00494650645548205, 0.1069062107542528], 'true': [4.3399142448937787e-05, 5.363388998391727e-05]}, {'': [0.06435672472436794, 0.09416865456294801], 'false': [0.08714276718014312, 0.16890628027398907], 'false,false': [0.16363604797166417, 0.17303391878888452], 'false,false,false': [0.17303391878888452, nan], 'false,false,true': [0.0, 0.17630860625605546], 'true': [0.0990500610232758, 0.04723726532086263], 'true,true': [0.0990500610232758, nan], 'true,true,true': [0.0990500610232758, nan]}, {'': [0.09173253864045441, 0.08938206678195333], 'true': [0.11397475975937436, 0.004275550804458618], 'true,true': [0.11033571419333618, 0.10842256082386334], 'false': [0.0778105873072376, 0.09575020862787458], 'false,false': [0.09275459678395308, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,true': [0.09354951091606341, 0.05505374954026389], 'false,true,true': [5.739748646535481e-05, 0.15304451003579966]}, {'': [0.03393363998783495, 0.07664344584514927], 'false': [0.06938532223077613, 0.14690504942910532], 'false,false': [0.13998156245218105, 0.1835366228303975], 'false,false,false': [0.1479458266416363, 0.18749999999999997], 'false,false,true': [0.22766445382464304, 0.12934399993535114], 'true': [0.0543431162222995, 0.0005725952982650429], 'true,false': [nan, 0.000572595298265048], 'true,false,false': [0.0, 1.2304520537811947e-06]}, {'': [0.08740387078844501, 0.07925200236516308], 'true': [0.0445594387768989, 0.15388064029633425], 'true,false': [nan, 0.15388064029633425], 'false': [0.07289904512189914, 0.12649686939442717], 'false,false': [0.12649686939442717, nan], 'false,false,true': [0.13350082900049784, 0.0038283567451354687]}, {'': [0.07472069255944759, 0.06770326607324945], 'true': [0.0018371706133388857, 0.15765861068531453], 'false': [0.00021131264908660907, 0.06904058431691838], 'false,false': [0.06612785709597754, 0.09632105252326277], 'false,false,false': [0.09632105252326277, nan], 'true,true': [0.0019543563227943173, 0.0009807544601545815], 'true,true,true': [2.639167893352707e-07, 0.003894620087172281], 'true,true,false': [nan, 0.0009807544601545815]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6081489350995117;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.12005369700427308;  // std dev = 5.699, 168.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=44 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0650454868236503;  // std dev = 3.085, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0.14792166237223892;  // std dev = 6.018, 176.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109546;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( phenotype(I, K), enzyme(A, L) )
%   | | | then return 0.14113648754403632;  // std dev = 3.499, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.05185554556724853;  // std dev = 5.068, 160.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=35 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1443280758985323;  // std dev = 6.452, 198.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=60 */
%   | | | else return 0.28434009872477806;  // std dev = 2.891, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46344375988468994;  // std dev = 0.297, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06140232529655419;  // std dev = 5.832, 197.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=47 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7131272653271226;  // std dev = 2.554, 81.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | | else return -0.17682589942791144;  // std dev = 0.134, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0553664367462845;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.21325131896850313;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.17437486593486695;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4870378428105872;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3931341329340418;  // std dev = 0.219, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.34273693461691956;  // std dev = 0.320, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.613868770458153;  // std dev = 3.320, 129.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=116 */
%   | | | else return 0.7181818671216744;  // std dev = 0.160, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.16570858415060205;  // std dev = 0.017, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), interaction(J, H) )
%   | | | then return 0.32028231574267313;  // std dev = 1.764, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.00537636090417168;  // std dev = 1.351, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.03017042825080907;  // std dev = 1.089, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.300108315908801;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.30531238272068006;  // std dev = 0.234, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.2577404347442464;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.4097959394227973;  // std dev = 3.747, 92.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=75 */
%   | | | else return 0.5299011818164885;  // std dev = 1.048, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.14315426405849088;  // std dev = 0.014, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6209783761349889;  // std dev = 0.988, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.22875493561233634;  // std dev = 0.218, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.0060867774738049205;  // std dev = 1.613, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.2801682687665343;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22632525656186572;  // std dev = 0.248, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3097097981070664;  // std dev = 2.157, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return -0.06322056284052813;  // std dev = 2.536, 143.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=19 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08732081468059893;  // std dev = 2.451, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.04662861024270161;  // std dev = 3.706, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5025512963606191;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03644344853675719;  // std dev = 2.259, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( location(A, K) )
%   | | | then return -0.02030701888243113;  // std dev = 1.146, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.23948732164467;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then return 0.016379556198848972;  // std dev = 0.280, 127.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=46 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return 0.09823060726097103;  // std dev = 2.815, 84.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=32 */
%   | | | else return -0.019938455360214147;  // std dev = 0.681, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11645581002371293;  // std dev = 1.850, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return -0.012464756287012543;  // std dev = 1.411, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   else if ( interaction(A, L), interaction(L, M) )
%   | then if ( recursion_proteinclass(M, B) )
%   | | then return 0.35680598094468086;  // std dev = 0.267, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return -0.027431184502271944;  // std dev = 0.269, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( complex(A, N) )
%   | | then return -0.028319720685761194;  // std dev = 0.258, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else return 0.061380843295272394;  // std dev = 0.306, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16253086047992987;  // std dev = 0.246, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( phenotype(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.21612347936681497;  // std dev = 1.009, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.23926769501649742;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24577421377142408;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.2887392278287691;  // std dev = 0.263, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else return -0.02775685540455214;  // std dev = 0.266, 270.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=55 */
%   | else if ( interaction(J, A) )
%   | | then return 0.04633608684774263;  // std dev = 0.270, 138.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=49 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.04659038165934579;  // std dev = 2.302, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.15247684378003207;  // std dev = 1.275, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18281275331519095;  // std dev = 0.125, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(D, F) )
%   | | then if ( complex(E, F) )
%   | | | then return -0.09009235303034993;  // std dev = 1.657, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return -0.004190986140591213;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.07132011128143274;  // std dev = 1.532, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.0510079980057581;  // std dev = 1.263, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.32738513832619437;  // std dev = 0.644, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.011429083161860884;  // std dev = 2.919, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.004456965168876787;  // std dev = 3.866, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
%   | | | else return 0.08448475390170593;  // std dev = 2.233, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.16150274651787225;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.15972063623199304;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then return -0.1151842128013621;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.25352915292198397;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.21831796799109732;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( enzyme(A, J), complex(I, K) )
%   | | | then return -0.1490968783139405;  // std dev = 0.916, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.02651360197357474;  // std dev = 2.351, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | else if ( location(A, L) )
%   | | | then return 0.02518800140693848;  // std dev = 5.328, 323.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=96 */
%   | | | else return 0.17089957609374287;  // std dev = 0.960, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */


Results
   AUC ROC   = 0.979659
   AUC PR    = 0.439019
   CLL	      = -0.188438
   Precision = 0.470588 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.561404


Total learning time: 9.449 seconds
Total inference time: 2.662 seconds
AUC ROC: 0.979659


Results scoring model
   AUC ROC   = 0.979795
   AUC PR    = 0.175415
   CLL	      = -0.200652
   Precision = 0.136364 at threshold = 0.5
   Recall    = 0.795181
   F1        = 0.232804


Total scoring time: 16.585 seconds
Refined model CLL: -0.200652


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996314
   AUC PR    = 0.536378
   CLL	      = -0.156885
   Precision = 0.524823 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.635193


Total learning time: 40.096000000000004 seconds
Total inference time: 2.549 seconds
AUC ROC: 0.996314
Total revision time: 40.096000000000004
Best scored revision CLL: -0.185768


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:01:27
{'AUC ROC': 0.996314, 'AUC PR': 0.536378, 'CLL': -0.156885, 'Precision': [0.524823, 0.5], 'Recall': 0.804348, 'F1': 0.635193, 'Learning time': 40.096000000000004, 'Inference time': 2.549, 'parameter_0.6': {'AUC ROC': 0.996314, 'AUC PR': 0.536378, 'CLL': -0.156885, 'Precision': [0.524823, 0.5], 'Recall': 0.804348, 'F1': 0.635193, 'Learning time': 3.793, 'Inference time': 2.549}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7812258581764345;  // std dev = 1.664, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0955030207026259;  // std dev = 6.821, 257.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=61 */
%   | | | else return 0.16659049354107183;  // std dev = 8.105, 308.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=95 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21109011157010057;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7347337483847238;  // std dev = 8.43e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7347337483847242;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.735339595552877;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6420719622367218;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11603265847847785;  // std dev = 6.673, 226.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=61 */
%   | | | else return 0.14913617179839328;  // std dev = 8.082, 304.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=95 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06575679437324576;  // std dev = 3.029, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return 0.38861593565933933;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4705365006107759;  // std dev = 1.897, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7459262573467427;  // std dev = 1.361, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.00838168982006082;  // std dev = 5.700, 226.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=41 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7235813645974917;  // std dev = 2.878, 109.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=100 */
%   | | | else return -0.18571171117021631;  // std dev = 0.181, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6615445866860296;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13665642149053187;  // std dev = 2.887, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08523692230254631;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4535106399162898;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2535106399162898;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.34239952880517865;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4844697742369725;  // std dev = 0.202, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5760504413549924;  // std dev = 4.690, 184.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=156 */
%   | | else return -0.1644613632390352;  // std dev = 0.182, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.29793572919721056;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0683489242385506;  // std dev = 2.942, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.01433574896254618;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.36393492960886403;  // std dev = 0.088, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.35703162335447164;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.36866558077122824;  // std dev = 0.191, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4805168162414899;  // std dev = 4.260, 177.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=156 */
%   | | else return -0.14262723384080905;  // std dev = 0.183, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.510008899293459;  // std dev = 1.742, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.23175740447172133;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.1416474137272971;  // std dev = 0.937, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0077815967659036105;  // std dev = 1.902, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.18844419445345598;  // std dev = 0.924, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28525907225902974;  // std dev = 0.083, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(F, A) )
%   | then return 0.03942501621249948;  // std dev = 6.875, 553.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=165 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4404071432784152;  // std dev = 0.304, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12317802150135261;  // std dev = 2.540, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06151039622462792;  // std dev = 1.533, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21797455348901912;  // std dev = 0.875, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.36742750688806036;  // std dev = 3.070, 129.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=109 */
%   | else return -0.16074630719823443;  // std dev = 1.428, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22905485041094137;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.32717809457552427;  // std dev = 1.123, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.08984392632591828;  // std dev = 2.691, 103.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06958763101033658;  // std dev = 3.694, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07516013477032431;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15420951182470058;  // std dev = 1.004, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1737947323040051;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05090576563539941;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.013525679624793606;  // std dev = 6.442, 557.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=165 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.06524414184342056;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16947656767904715;  // std dev = 2.078, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16095755749548168;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.40624106347352223;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1449198502483242;  // std dev = 0.919, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.01629196546798565;  // std dev = 1.118, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.004492187732778925;  // std dev = 6.434, 589.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=165 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3975257387375233;  // std dev = 1.799, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.2591490875527639;  // std dev = 0.501, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.159404241051725;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1700725051888552;  // std dev = 0.177, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13905708379553272;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15312482880445097;  // std dev = 0.886, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.11146262099949983;  // std dev = 0.896, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.012210163802458894;  // std dev = 6.160, 557.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=156 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.008606218219477348;  // std dev = 2.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996527
   AUC PR    = 0.544284
   CLL	      = -0.162041
   Precision = 0.521127 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.632479


Total learning time: 4.763 seconds
Total inference time: 2.589 seconds
AUC ROC: 0.996527


Results scoring model
   AUC ROC   = 0.982943
   AUC PR    = 0.216424
   CLL	      = -0.189374
   Precision = 0.13876 at threshold = 0.5
   Recall    = 0.809955
   F1        = 0.236929


Total scoring time: 14.08 seconds
Parameter learned model CLL: -0.189374


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.664, 3, 36], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.5, 3, 9], 'false,false,true,true': [6.821, 196, 61], 'false,false,true,false': [8.105, 213, 95], 'false,false,false,true': [2.787, 22, 12], 'false,false,false,false': [1.491, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [8.43e-08, 0, 18], 'true,false': [0.0, 0, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.055, 0, 6], 'false,true,false': [0.935, 1, 7], 'false,false,true,true': [6.673, 165, 61], 'false,false,true,false': [8.082, 209, 95], 'false,false,false,true': [3.029, 39, 12], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.897, 4, 36], 'false,true,true,true': [1.361, 2, 24], 'false,true,true,false': [5.7, 185, 41], 'false,true,false,true': [2.878, 9, 100], 'false,true,false,false': [0.181, 195, 0], 'false,false,true,true': [0.2, 0, 3], 'false,false,true,false': [2.887, 27, 13], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [1.265, 2, 8], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.202, 0, 9], 'false,true,true,false': [4.69, 28, 156], 'false,true,false': [0.182, 384, 0], 'false,false,true': [0.968, 1, 4], 'false,false,false,true': [2.942, 32, 12], 'false,false,false,false': [1.732, 12, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.088, 0, 22], 'true,false': [0.072, 0, 14], 'false,true,true,true': [0.191, 0, 9], 'false,true,true,false': [4.26, 21, 156], 'false,true,false': [0.183, 403, 0], 'false,false,true,true': [1.742, 4, 12], 'false,false,true,false': [0.116, 22, 0], 'false,false,false,true': [0.937, 1, 3], 'false,false,false,false': [1.902, 16, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.924, 1, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.083, 0, 26], 'false,true': [6.875, 388, 165], 'false,false,true,true': [0.304, 0, 3], 'false,false,true,false': [2.54, 21, 13], 'false,false,false,true': [1.533, 8, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.875, 1, 19], 'true,true,false': [3.07, 20, 109], 'true,false': [1.428, 236, 0], 'false,true,true,true': [0.111, 0, 9], 'false,true,true,false': [1.123, 2, 11], 'false,true,false': [2.691, 88, 15], 'false,false,true': [3.694, 94, 56], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [1.004, 1, 23], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.015, 0, 8], 'true,false,false,false': [0.906, 1, 5], 'false,true': [6.442, 392, 165], 'false,false,true,true': [0.825, 1, 3], 'false,false,true,false': [2.078, 15, 13], 'false,false,false,true': [0.728, 2, 2], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.919, 1, 28], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.118, 2, 8], 'false,true': [6.434, 424, 165], 'false,false,true,true': [1.799, 2, 20], 'false,false,true,false': [0.501, 29, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.035, 0, 9], 'true,true,true,false': [0.177, 0, 10], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 2], 'true,false': [0.886, 1, 11], 'false,true': [0.896, 1, 17], 'false,false,true': [6.16, 401, 156], 'false,false,false,true': [2.353, 39, 16], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.07100591715976516, 0.20857731344510447], 'false': [0.15234374999999972, 0.20286530470914202], 'false,false': [0.19987156394392924, 0.23363980530016176], 'false,false,false': [0.22837370242214483, 0.2469135802469134], 'false,false,true': [0.18101712365062372, 0.2133053634677013], 'false,true': [0.0, 0.18749999999999992], 'false,true,false': [nan, 0.18749999999999978], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [6.908054375445419e-16, 0.21032365375407414], 'false': [0.06484610448151067, 0.20675221351768502], 'false,false': [0.20752821228740753, 0.1988337813648035], 'false,false,true': [0.19705928420392982, 0.21484374999999659], 'false,false,false': [0.1799307958477505, 0.24489795918367346], 'false,true': [0.0005034715476789723, 0.10937499999999983], 'false,true,true': [nan, 0.0005034715476789723], 'true': [3.9474596431116675e-16, -1.9737298215558337e-16]}, {'': [0.09000000000000004, 0.20547790666366034], 'false': [0.20429085123361124, 0.21608968055500263], 'false,false': [0.21268715245241376, 0.22222222222222213], 'false,false,false': [0.22222222222222213, nan], 'false,false,true': [0.01332829815776367, 0.20841760703877082], 'false,true': [0.1866227791440337, 0.21752350308820745], 'false,true,false': [0.07601399830947761, 0.00016738898613414294], 'false,true,true': [0.0712695753516443, 0.14376940759195425]}, {'': [0.07100591715976322, 0.16316219681411037], 'false': [0.15904492583521723, 0.19947657431601498], 'false,false': [0.1872951450053189, 0.1956208701763042], 'false,false,false': [0.19675077916147898, 0.1874999999999999], 'false,true': [0.11457341050427705, 8.650481038194324e-05], 'false,true,true': [0.004527008827861451, 0.11956501044027609], 'true': [0.06222222222222206, 0.09876543209876543], 'true,true': [0.0, 0.15999999999999998]}, {'': [0.00036904804396605445, 0.12213828083198827], 'false': [0.11356570053729345, 0.20223103613226953], 'false,false': [0.21435739750881702, 0.18220756557256487], 'false,false,true': [0.18970664387028247, 0.0006147975362281632], 'false,false,false': [0.2195987144936058, 0.17221823285643856], 'false,true': [0.09835570052759189, 8.274508467260475e-05], 'false,true,true': [0.004033244511550886, 0.10254640121591811], 'true': [0.0003493645291159768, 0.00037085639216189695]}, {'': [0.02520284813234709, 0.09444438726714957], 'false': [0.08547047218879858, 0.1885959601280187], 'false,false': [0.18441743425943385, 0.19571316925845636], 'false,false,false': [0.19571316925845636, nan], 'false,false,true': [0.03085621487133546, 0.18980741450611702], 'true': [0.07755472498633102, 0.000267373744591566], 'true,true': [0.07755472498633102, nan], 'true,true,true': [0.07755472498633102, nan]}, {'': [0.09401907887057125, 0.09502079336218236], 'false': [0.0891309518788318, 0.09652352823343005], 'false,false': [0.09098226871783627, 0.15999999999999995], 'false,false,false': [0.15999999999999995, nan], 'true': [0.0709943073585333, 0.008637342454515437], 'false,true': [0.06019345389055481, 0.07031290260418283], 'true,true': [0.038300086291277714, 0.07306503316670235], 'false,true,true': [0.0013594067687090607, 0.09698592003676362]}, {'': [0.0497646714367411, 0.08199275572651009], 'false': [0.07450507133881332, 0.1642237564800731], 'false,false': [0.1573940468407733, 0.1855834804813676], 'false,false,false': [0.13231985347363542, 0.22222222222222224], 'false,false,true': [0.17021949641616635, 0.1542037899341268], 'true': [0.04202018529101962, 0.06234974332462458], 'true,false': [nan, 0.062349743324624604], 'true,false,false': [2.6343645775063484e-05, 0.13681806777516053]}, {'': [0.058651147025176605, 0.07859347101196959], 'false': [0.07028891973865894, 0.1741482582445348], 'false,false': [0.1741482582445348, nan], 'false,false,true': [0.14709524080329991, 0.008653978078659152], 'true': [0.029120687054499796, 0.12496414154860265], 'true,false': [nan, 0.12496414154860265]}, {'': [0.0248990975095763, 0.07061597861397788], 'false': [0.044559439466665844, 0.07109017873532972], 'false,false': [0.06812790658711755, 0.10069553722727125], 'false,false,false': [0.10069553722727125, nan], 'true': [0.0016804477401068465, 0.06547524544247534], 'true,true': [0.0017391684822388263, 0.000512766589442229], 'true,true,true': [0.00013342851223735773, 0.0031304235743298435], 'true,true,false': [nan, 0.000512766589442229]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( location(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.46926004621062417;  // std dev = 4.625, 90.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=55 */
%   | | | else return -0.141851064900488;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.08037115732173458;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.17755192017413968;  // std dev = 8.534, 335.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=107 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7279513767519373;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7211690051191508;  // std dev = 0.020, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.756766728629559;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, A), interaction(H, I) )
%   | | | then return 0.008284050045728067;  // std dev = 3.148, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | | else return 0.12629073413054775;  // std dev = 3.075, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.056379010812024254;  // std dev = 3.448, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return 0.14860912953182936;  // std dev = 9.274, 408.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=128 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.5637861769374903;  // std dev = 0.009, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.45778408776265983;  // std dev = 0.298, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( location(A, G), complex(A, H) )
%   | | | then return 0.06800139055209324;  // std dev = 4.066, 108.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=26 */
%   | | | else return 0.12646139074990814;  // std dev = 5.148, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7193303165308309;  // std dev = 2.726, 108.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=100 */
%   | | | else return -0.1799857224539658;  // std dev = 0.404, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5941332496353445;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.053355908342799685;  // std dev = 2.158, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.22510996555747623;  // std dev = 2.312, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.42996725657140356;  // std dev = 0.011, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.09847040483316287;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.44734731002506484;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.518971117880156;  // std dev = 2.816, 64.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=53 */
%   | | | else return 0.6292987916797526;  // std dev = 3.171, 122.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=112 */
%   | | else return -0.16639283159546;  // std dev = 0.030, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.44800626882780736;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.1702900156529969;  // std dev = 2.020, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.04838172883847789;  // std dev = 2.514, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.29533908009935494;  // std dev = 0.210, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.33007737727652264;  // std dev = 0.010, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16897453732255005;  // std dev = 1.280, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.4512771998120106;  // std dev = 4.547, 180.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=156 */
%   | | else return -0.14611852393358338;  // std dev = 0.030, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5235371989408737;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.18832480895174505;  // std dev = 0.137, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.133825159008547;  // std dev = 0.899, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.23155342829631217;  // std dev = 1.660, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21844287897072334;  // std dev = 0.224, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(A, E), interaction(D, F) )
%   | | | then return -0.12811391027768665;  // std dev = 0.688, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.00883603917979702;  // std dev = 2.544, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | else if ( location(A, H), complex(A, E) )
%   | | | then return -0.03423609844015529;  // std dev = 1.566, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | | | else return 0.035947791059798485;  // std dev = 4.922, 251.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=76 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.030558285077655636;  // std dev = 1.824, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.14787839442265005;  // std dev = 2.081, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30277943699379206;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03481498978777727;  // std dev = 3.856, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( complex(D, F), enzyme(A, G) )
%   | | then if ( interaction(D, H), phenotype(H, I) )
%   | | | then return 0.02990472698564891;  // std dev = 2.138, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.13890872599112533;  // std dev = 1.213, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2558821681636676;  // std dev = 1.926, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return -0.0672921509721466;  // std dev = 2.922, 142.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=23 */
%   | else return 0.0503237622730015;  // std dev = 0.290, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
%   else if ( interaction(A, K), interaction(K, L) )
%   | then if ( recursion_proteinclass(L, B) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.1360175857620582;  // std dev = 0.925, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.5464505989453442;  // std dev = 0.391, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.0347242644299104;  // std dev = 0.265, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | else return 0.021510846286264814;  // std dev = 0.278, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16022308393961182;  // std dev = 0.197, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.7462135140236165;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24874618989895958;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.028172155284658607;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.10939742200362342;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.01890817416151725;  // std dev = 0.291, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return 0.026820088680956203;  // std dev = 0.287, 367.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=111 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.22484043241588705;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05614731125822302;  // std dev = 3.442, 112.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, A) )
%   | then return -0.0628703740142684;  // std dev = 0.175, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.03762920298091843;  // std dev = 0.305, 211.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=74 */
%   | | else return -0.001937436278301969;  // std dev = 0.295, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.34640304279571027;  // std dev = 0.391, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.13919955163459763;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.13660803230326043;  // std dev = 2.317, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return 0.1472397437799988;  // std dev = 0.252, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.022377562501633717;  // std dev = 3.354, 128.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
%   | | | else return 0.07632312177829946;  // std dev = 1.847, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17890504886850805;  // std dev = 0.043, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( complex(A, E) )
%   | | then return 0.31118186846825613;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.23506978356570085;  // std dev = 0.629, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.16529732292567897;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.10708372585925333;  // std dev = 0.023, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3032546135082939;  // std dev = 1.938, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return -0.05803342420093577;  // std dev = 4.205, 267.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=49 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.013692358211295518;  // std dev = 4.449, 247.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=77 */
%   | | | else return 0.04060773092783954;  // std dev = 2.649, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */


Results
   AUC ROC   = 0.987621
   AUC PR    = 0.444351
   CLL	      = -0.177224
   Precision = 0.472222 at threshold = 0.5
   Recall    = 0.73913
   F1        = 0.576271


Total learning time: 14.502 seconds
Total inference time: 3.589 seconds
AUC ROC: 0.987621


Results scoring model
   AUC ROC   = 0.978938
   AUC PR    = 0.179504
   CLL	      = -0.200274
   Precision = 0.13524 at threshold = 0.5
   Recall    = 0.791855
   F1        = 0.231023


Total scoring time: 18.949 seconds
Refined model CLL: -0.200274


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996527
   AUC PR    = 0.544284
   CLL	      = -0.162041
   Precision = 0.521127 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.632479


Total learning time: 52.294 seconds
Total inference time: 2.589 seconds
AUC ROC: 0.996527
Total revision time: 52.294
Best scored revision CLL: -0.189374


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:02:26
{'AUC ROC': 0.996527, 'AUC PR': 0.544284, 'CLL': -0.162041, 'Precision': [0.521127, 0.5], 'Recall': 0.804348, 'F1': 0.632479, 'Learning time': 52.294, 'Inference time': 2.589, 'parameter_0.8': {'AUC ROC': 0.996527, 'AUC PR': 0.544284, 'CLL': -0.162041, 'Precision': [0.521127, 0.5], 'Recall': 0.804348, 'F1': 0.632479, 'Learning time': 4.763, 'Inference time': 2.589}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.08132490076474838;  // std dev = 6.356, 233.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=52 */
%   | | | else return 0.13461952333480567;  // std dev = 5.831, 170.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=47 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1418165568760147;  // std dev = 8.421, 349.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=99 */
%   | | | else return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6394734122109543;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.5194734122109543;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7471378250601993;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6411220668522176;  // std dev = 0.967, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.047958102036476775;  // std dev = 6.450, 260.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=52 */
%   | | | else return 0.11263524707681262;  // std dev = 5.851, 173.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=47 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1722087662699872;  // std dev = 8.131, 298.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=99 */
%   | | | else return 0.15609385923117755;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5661508465167472;  // std dev = 0.978, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5761529264457101;  // std dev = 2.684, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   | | | else return -0.02575669386616297;  // std dev = 4.808, 200.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=27 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7603841619188396;  // std dev = 1.629, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1746901253192662;  // std dev = 4.21e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.510303005189423;  // std dev = 1.133, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.1286925954707024;  // std dev = 8.232, 319.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=101 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1287332463498943;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4403728183385533;  // std dev = 0.059, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.199277444593002;  // std dev = 1.249, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.12913615015514793;  // std dev = 1.995, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.423252741227975;  // std dev = 0.202, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7180729006021164;  // std dev = 1.717, 102.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=99 */
%   | | else return -0.15425362142065918;  // std dev = 0.171, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.43189300720807605;  // std dev = 0.920, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11517642942039887;  // std dev = 8.192, 308.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=99 */
%   | | | else return 0.08512079592419489;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.26728795134430405;  // std dev = 1.553, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return 0.3672400147855518;  // std dev = 0.190, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.327225520781923;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5243062487843162;  // std dev = 2.641, 107.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=99 */
%   | | else return -0.1353201138783449;  // std dev = 0.155, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6307434556948094;  // std dev = 2.853, 77.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | | | else return -0.2237601701802079;  // std dev = 0.079, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.22718904210242838;  // std dev = 0.845, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.11414083424434823;  // std dev = 6.083, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.28087140017697065;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28187002252266724;  // std dev = 0.962, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(A, F) )
%   | then return 0.030587329815439507;  // std dev = 5.348, 379.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=105 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1506009799170115;  // std dev = 1.369, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.07133372368782953;  // std dev = 7.592, 308.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=101 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12072875155603242;  // std dev = 3.209, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24996538622070108;  // std dev = 0.241, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.3963088817159432;  // std dev = 4.072, 162.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=134 */
%   | else return -0.16029770331950788;  // std dev = 0.761, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22347713902745642;  // std dev = 0.119, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3860556883583723;  // std dev = 0.691, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.010995878257928568;  // std dev = 6.141, 259.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=66 */
%   | else if ( interaction(A, H) )
%   | | then return 0.06387687568024775;  // std dev = 1.493, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.013339835308927333;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16763663932567152;  // std dev = 0.888, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.2181879354009683;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11190081612223038;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, G) )
%   | then return 0.003727842324243578;  // std dev = 4.775, 394.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=105 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.014979515120872562;  // std dev = 1.580, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.06203702295529406;  // std dev = 7.014, 298.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=101 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06578023239975393;  // std dev = 1.906, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.1293460397303897;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1060013962546697;  // std dev = 1.366, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16858181632262303;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06943730892051667;  // std dev = 1.276, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, G) )
%   | then return 0.003941190065106632;  // std dev = 4.644, 407.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=105 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.46707999329986977;  // std dev = 3.948, 149.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | | else return -0.24186030398110034;  // std dev = 1.048, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1507147727558125;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1392159237310865;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15489642205276677;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.10046233659147241;  // std dev = 1.133, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.08556223451653008;  // std dev = 1.295, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then return 0.01023225660159434;  // std dev = 4.630, 363.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=99 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0030683526865618403;  // std dev = 6.753, 397.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.995607
   AUC PR    = 0.537931
   CLL	      = -0.181321
   Precision = 0.54902 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.57732


Total learning time: 4.369 seconds
Total inference time: 2.65 seconds
AUC ROC: 0.995607


Results scoring model
   AUC ROC   = 0.983497
   AUC PR    = 0.227122
   CLL	      = -0.200832
   Precision = 0.207847 at threshold = 0.5
   Recall    = 0.707581
   F1        = 0.321311


Total scoring time: 14.853 seconds
Parameter learned model CLL: -0.200832


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [2.31e-07, 0, 43], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.894, 1, 4], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.949, 1, 9], 'false,false,true,true': [6.356, 181, 52], 'false,false,true,false': [5.831, 123, 47], 'false,false,false,true': [8.421, 250, 99], 'false,false,false,false': [3.678, 47, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.356, 2, 23], 'true,false': [2.0, 5, 20], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.037, 0, 7], 'false,true,false': [0.967, 1, 10], 'false,false,true,true': [6.45, 208, 52], 'false,false,true,false': [5.851, 126, 47], 'false,false,false,true': [8.131, 199, 99], 'false,false,false,false': [3.603, 41, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.978, 1, 43], 'false,true,true,true': [2.684, 9, 26], 'false,true,true,false': [4.808, 173, 27], 'false,true,false,true': [1.629, 2, 52], 'false,true,false,false': [4.21e-08, 109, 0], 'false,false,true,true': [1.133, 2, 9], 'false,false,true,false': [8.232, 218, 101], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.059, 0, 25], 'true,true,false': [1.249, 2, 6], 'true,false': [1.995, 6, 12], 'false,true,true,true': [0.202, 0, 6], 'false,true,true,false': [1.717, 3, 99], 'false,true,false': [0.171, 288, 0], 'false,false,true': [0.92, 1, 11], 'false,false,false,true': [8.192, 209, 99], 'false,false,false,false': [3.678, 47, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.553, 3, 23], 'true,false': [0.19, 0, 20], 'false,true,true,true': [0.193, 0, 6], 'false,true,true,false': [2.641, 8, 99], 'false,true,false': [0.155, 294, 0], 'false,false,true,true': [2.853, 9, 68], 'false,false,true,false': [0.079, 136, 0], 'false,false,false,true': [0.845, 1, 5], 'false,false,false,false': [6.083, 110, 56]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.071, 0, 13], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.962, 1, 30], 'false,true': [5.348, 274, 105], 'false,false,true,true': [1.369, 4, 9], 'false,false,true,false': [7.592, 207, 101], 'false,false,false,true': [3.209, 34, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.241, 0, 25], 'true,true,false': [4.072, 28, 134], 'true,false': [0.761, 297, 0], 'false,true,true,true': [0.119, 0, 13], 'false,true,true,false': [0.691, 1, 18], 'false,true,false': [6.141, 193, 66], 'false,false,true': [1.493, 21, 12], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.888, 1, 32], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.045, 0, 5], 'true,false,false,false': [0.909, 1, 6], 'false,true': [4.775, 289, 105], 'false,false,true,true': [1.58, 6, 9], 'false,false,true,false': [7.014, 197, 101], 'false,false,false,true': [1.906, 17, 10], 'false,false,false,false': [2.341, 14, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [1.366, 2, 31], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.276, 2, 11], 'false,true': [4.644, 302, 105], 'false,false,true,true': [3.948, 20, 129], 'false,false,true,false': [1.048, 232, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.042, 0, 11], 'true,true,true,false': [0.031, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 4], 'true,false': [1.133, 2, 16], 'false,true': [1.295, 2, 17], 'false,false,true': [4.63, 264, 99], 'false,false,false,true': [6.753, 279, 118], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [1.2393187251629655e-15, 0.20141056769568927], 'false': [0.09418282548476423, 0.19490707253065398], 'false,false': [0.1853099274055021, 0.20348962113514507], 'false,false,false': [0.20320030213216778, 0.2050045913682272], 'false,false,true': [0.1733684540146264, 0.20003460207612517], 'false,true': [0.1388888888888887, 0.07100591715976314], 'false,true,true': [0.0, 0.15999999999999986], 'false,true,false': [1.4802973661668753e-16, 0.08999999999999977]}, {'': [0.12039999999999913, 0.20244183569760468], 'false': [0.054702321430357, 0.19869524718353304], 'false,false': [0.17613338880334395, 0.22096938992172352], 'false,false,false': [0.22184811494977993, 0.21638888888888863], 'false,false,true': [0.159999999999998, 0.19786828828226577], 'true': [0.07360000000000007, 0.16000000000000014], 'false,true': [0.00019496347425412047, 0.08501796711904998], 'false,true,true': [nan, 0.0001949634742539936]}, {'': [0.02173124607451574, 0.20272144092357222], 'false': [0.19052336974406084, 0.2140525307762099], 'false,false': [0.2139524093830125, 0.21445847890352032], 'false,false,false': [0.21445847890352032, nan], 'false,false,true': [0.11665618067504119, 0.21245323492539622], 'false,true': [0.1749520400282601, 0.20997959855150064], 'false,true,false': [0.04912995968805188, 1.6296851737616978e-17], 'false,true,true': [0.20584929715614222, 0.11558616179326904]}, {'': [0.13024028371956894, 0.18429658457777692], 'false': [0.15418646336420025, 0.21434805402007695], 'false,false': [0.07047186553987288, 0.2157406548255602], 'false,false,false': [0.2178818267159791, 0.20500459136822785], 'false,true': [0.032244890792235484, 0.00010191612136406823], 'true': [0.05808894107942085, 0.22116911233718853], 'true,true': [0.00014096421107815616, 0.19514077845851668], 'false,true,true': [0.0068074422802624586, 0.028912382049972953]}, {'': [0.05566380232364916, 0.15680568921283822], 'false': [0.10234039090622757, 0.21283178837914513], 'false,false': [0.2067910250830747, 0.21971222317210806], 'false,false,false': [0.11906460807335577, 0.22290427840715943], 'false,false,true': [0.10573623182862286, 4.537177665589966e-05], 'false,true': [0.06398290656668489, 8.209748381312466e-05], 'false,true,true': [0.006177205816024193, 0.06516200365859415], 'true': [0.09274619964704581, 0.001809929506706398]}, {'': [0.021154848454171662, 0.13156213905175665], 'false': [0.07546241581997003, 0.18712819021211013], 'false,false': [0.18563899665939712, 0.1943168826947933], 'false,false,false': [0.1943168826947933, nan], 'false,false,true': [0.14410275752062898, 0.18713768583176862], 'true': [0.0003824645912605075, 0.029865553497580473], 'true,true': [0.0003824645912605075, nan], 'true,true,true': [0.0003824645912605075, nan]}, {'': [0.10491668165999304, 0.1399169603529228], 'false': [0.14134299129482222, 0.1335964031321727], 'false,true': [0.021756499833147425, 0.14561769322511106], 'false,false': [0.06756870260158225, 0.19834710743801678], 'false,false,false': [0.19834710743801678, nan], 'true': [0.09146877695220584, 0.0019511788536498553], 'true,true': [0.0023299241662687554, 0.1023616151757984], 'false,true,true': [0.0010947255102127069, 0.02515559078185191]}, {'': [0.03671887389752767, 0.1115941858483679], 'false': [0.0578769258778492, 0.1680457211610015], 'false,false': [0.16544156547952377, 0.18318798936612143], 'false,false,false': [0.13447978516369719, 0.23818525519848793], 'false,false,true': [0.16636186189593022, 0.16511098238693123], 'true': [0.023917716901959984, 0.07182592180379567], 'true,false': [nan, 0.07182592180379568], 'true,false,false': [0.00040275674318042686, 0.11813540505709177]}, {'': [0.07469121194172874, 0.10665384925168452], 'false': [0.05298733459261996, 0.16347183778066274], 'false,false': [0.16347183778066274, nan], 'false,false,true': [0.10459755104720385, 0.004729914595869895], 'true': [0.05650742939455091, 0.11694268998107793], 'true,false': [0.0, 0.12523616485036917], 'true,false,true': [nan, 0.0]}, {'': [0.029133099817330393, 0.08837798217867217], 'false': [0.08830162639904093, 0.08822739329575552], 'false,false': [0.05906598486893168, 0.1148668383485322], 'false,false,false': [0.1148668383485322, nan], 'true': [0.00021459013871598736, 0.07125440418125775], 'true,true': [0.0001488357516962384, 0.0005043802214203287], 'true,true,false': [nan, 0.0005043802214203287], 'true,true,true': [0.000156948934555625, 7.816132750290926e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.7152917922423689;  // std dev = 0.350, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.08803399257077561;  // std dev = 5.550, 174.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=40 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.21458457866386738;  // std dev = 4.813, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | | else return 0.1518989350995131;  // std dev = 9.979, 480.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=141 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.733428672842766;  // std dev = 0.086, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0.5807172668079109;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.41589598673584804;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.4158959867358479;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7417903431046245;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14131676252958433;  // std dev = 0.117, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10248973304748321;  // std dev = 7.182, 267.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=70 */
%   | | | else return 0.17201278991526506;  // std dev = 9.894, 441.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=147 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.5801592439782559;  // std dev = 0.123, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.4712462566542156;  // std dev = 0.295, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14146081934708454;  // std dev = 0.451, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.08301925553402863;  // std dev = 6.255, 201.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=53 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.781629998995019;  // std dev = 1.065, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.18097085229640278;  // std dev = 0.094, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.573316315446278;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1207337554541477;  // std dev = 4.487, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | | | else return 0.17541514859799445;  // std dev = 7.541, 247.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=89 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43526641473401273;  // std dev = 0.023, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return 0.3881695344089878;  // std dev = 0.262, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3373579348856384;  // std dev = 0.829, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7358704122004227;  // std dev = 1.152, 100.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=99 */
%   | | else return -0.16613774136211473;  // std dev = 0.486, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), complex(A, J) )
%   | | | then return 0.5685956449914873;  // std dev = 0.426, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08835111305667337;  // std dev = 8.351, 342.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=105 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.047411848075957774;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.20300108150450102;  // std dev = 3.150, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.1185587611738867;  // std dev = 0.410, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.2896972035463403;  // std dev = 0.223, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.2980732499859756;  // std dev = 0.206, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5209245880157919;  // std dev = 0.238, 112.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=105 */
%   | | else return -0.14508492871641368;  // std dev = 0.478, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6211940013263267;  // std dev = 2.892, 77.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | | | else return -0.22948862995059652;  // std dev = 0.126, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3629488851856078;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06533368255395915;  // std dev = 6.288, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24214007684810654;  // std dev = 0.207, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D), interaction(D, A) )
%   | | | then return 0.4882317122626479;  // std dev = 0.933, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.009314559527348281;  // std dev = 1.163, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.13389698683370174;  // std dev = 0.556, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return 0.02061756170020583;  // std dev = 3.921, 233.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=65 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(F, H), complex(G, I) )
%   | | | then return 0.027300628801180348;  // std dev = 3.651, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | | else return 0.09916670725617484;  // std dev = 6.651, 238.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=85 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.1406680547028953;  // std dev = 2.460, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.21576222822321592;  // std dev = 1.697, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1823293664914226;  // std dev = 0.231, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0.37553770466030856;  // std dev = 0.310, 162.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=134 */
%   | else return -0.16826267147640064;  // std dev = 0.063, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3112854061009467;  // std dev = 0.115, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -0.04337050631756667;  // std dev = 2.150, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return 0.08549063843233351;  // std dev = 5.523, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.262903421429671;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.22038088404018197;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0069281709331822;  // std dev = 2.473, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16439321857279074;  // std dev = 0.164, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.4342049538932673;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19834622673637273;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.219118281348354;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.07477948909166807;  // std dev = 0.096, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.1459086698014016;  // std dev = 2.184, 51.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   | | | else return -0.0017583823969950952;  // std dev = 7.349, 522.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=131 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.019796446210711718;  // std dev = 2.266, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.06571757668087004;  // std dev = 4.093, 124.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.10591745753919027;  // std dev = 0.240, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.17886911107282533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.4973346586677695;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1838105272265065;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then return -0.003158089048484041;  // std dev = 0.213, 342.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=87 */
%   | else if ( location(A, I), phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.35810413180165185;  // std dev = 2.879, 87.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=75 */
%   | | | else return -0.17511049023891662;  // std dev = 0.350, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.00490294962178073;  // std dev = 3.082, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.08979114031235245;  // std dev = 5.413, 137.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.15010553715596836;  // std dev = 0.036, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.15332270134326959;  // std dev = 0.199, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.6233142162723712;  // std dev = 0.273, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.4423610144691951;  // std dev = 0.175, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.17255286483045776;  // std dev = 0.081, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.002797658077800243;  // std dev = 2.834, 136.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=36 */
%   | | | else return -0.07595557602707965;  // std dev = 3.356, 115.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=19 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return -0.02300097473833047;  // std dev = 4.124, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | | else return 0.010117097091159205;  // std dev = 5.763, 249.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=78 */


Results
   AUC ROC   = 0.967844
   AUC PR    = 0.461861
   CLL	      = -0.202588
   Precision = 0.4125 at threshold = 0.5
   Recall    = 0.717391
   F1        = 0.52381


Total learning time: 14.126 seconds
Total inference time: 2.737 seconds
AUC ROC: 0.967844


Results scoring model
   AUC ROC   = 0.968961
   AUC PR    = 0.267676
   CLL	      = -0.209987
   Precision = 0.151536 at threshold = 0.5
   Recall    = 0.783394
   F1        = 0.25395


Total scoring time: 16.456 seconds
Refined model CLL: -0.209987


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.995607
   AUC PR    = 0.537931
   CLL	      = -0.181321
   Precision = 0.54902 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.57732


Total learning time: 49.804 seconds
Total inference time: 2.65 seconds
AUC ROC: 0.995607
Total revision time: 49.804
Best scored revision CLL: -0.200832


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:03:22
{'AUC ROC': 0.995607, 'AUC PR': 0.537931, 'CLL': -0.181321, 'Precision': [0.54902, 0.5], 'Recall': 0.608696, 'F1': 0.57732, 'Learning time': 49.804, 'Inference time': 2.65, 'parameter_1.0': {'AUC ROC': 0.995607, 'AUC PR': 0.537931, 'CLL': -0.181321, 'Precision': [0.54902, 0.5], 'Recall': 0.608696, 'F1': 0.57732, 'Learning time': 4.369, 'Inference time': 2.65}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.09344305274657111;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.25520775862892287;  // std dev = 4.035, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.1332543117306286;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.09638917099336183;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14946150135630756;  // std dev = 4.268, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   | | | else return 0.17780077116908888;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6866561293379135;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.024145264390309517;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8334346786485699;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1665653213514301;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17130491563846814;  // std dev = 4.125, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019660684641638115;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6938231030932729;  // std dev = 0.927, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.15609286237213288;  // std dev = 0.086, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1136027177615401;  // std dev = 4.222, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return -0.04993045171749242;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07071184716014967;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5874165298982199;  // std dev = 0.373, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.13978282601374187;  // std dev = 0.141, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6272079831762641;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.24567698114627395;  // std dev = 0.128, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21546663462245616;  // std dev = 2.868, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28033910952189184;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then return 0.029211564720846152;  // std dev = 2.279, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return -0.36550549963518314;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09182057106103775;  // std dev = 3.774, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.12398424812228577;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return -0.30619924637793194;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.5023412419927363;  // std dev = 0.676, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.19040576503123544;  // std dev = 0.511, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2899983554140819;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.25627326481610113;  // std dev = 0.452, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.004421665187903301;  // std dev = 3.126, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | else if ( interaction(A, H) )
%   | | then return -0.07061469271688674;  // std dev = 0.346, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05510413614132564;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19823155885846444;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.13541627836824244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2337479683412073;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 4.2373552003288845E-4;  // std dev = 1.877, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2697862991616372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07249940207298196;  // std dev = 3.489, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.13512104447708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.159467998279717;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.14162606008778833;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18336822981688197;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then return 0.012247129186331527;  // std dev = 1.820, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.42553289400437944;  // std dev = 2.094, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return -0.26475992085826294;  // std dev = 0.661, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1504074036774129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15564092405536312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19357375076016048;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.05408010457182637;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.016807561469517236;  // std dev = 2.016, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.001736841669470922;  // std dev = 3.302, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98565
   AUC PR    = 0.328513
   CLL	      = -0.173483
   Precision = 0.397516 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.518219


Total learning time: 1.684 seconds
Total inference time: 2.781 seconds
AUC ROC: 0.98565


Results scoring model
   AUC ROC   = 0.985685
   AUC PR    = 0.267668
   CLL	      = -0.211518
   Precision = 0.232558 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.350877


Total scoring time: 3.635 seconds
Parameter learned model CLL: -0.211518


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.047, 41, 12], 'false,false,true,false': [2.473, 26, 8], 'false,false,false,true': [4.035, 41, 27], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.928, 30, 12], 'false,false,true,false': [2.449, 24, 8], 'false,false,false,true': [4.268, 56, 27], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.0, 0, 6], 'false,true,true,true': [0.926, 1, 6], 'false,true,true,false': [2.263, 35, 6], 'false,true,false,true': [2.98e-08, 0, 8], 'false,true,false,false': [0.0, 26, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [4.125, 46, 27], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.927, 1, 20], 'false,true,false': [0.086, 59, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [4.222, 52, 27], 'false,false,false,false': [1.317, 13, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 3], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.373, 0, 20], 'false,true,false': [0.141, 55, 0], 'false,false,true,true': [1.323, 2, 14], 'false,false,true,false': [0.128, 31, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [2.868, 18, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.062, 0, 6], 'false,true': [2.279, 52, 20], 'false,false,true,true': [0.78, 2, 1], 'false,false,true,false': [3.774, 45, 27], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.678, 2, 1], 'true,true,false': [0.676, 0, 30], 'true,false': [0.511, 44, 0], 'false,true,true,true': [0.057, 0, 2], 'false,true,true,false': [0.452, 1, 4], 'false,true,false': [3.126, 46, 16], 'false,false,true': [0.346, 6, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.088, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.041, 0, 2], 'false,true': [1.877, 56, 20], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.489, 39, 27], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.039, 0, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.085, 0, 4], 'false,true': [1.82, 53, 20], 'false,false,true,true': [2.094, 5, 30], 'false,false,true,false': [0.661, 57, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 1], 'false,true': [0.846, 1, 4], 'false,false,true': [2.016, 62, 20], 'false,false,false,true': [3.302, 54, 29], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.21192742415229066], 'false': [0.0, 0.21024502239452092], 'false,false': [0.17703791782269743, 0.23597645429363018], 'false,false,false': [0.2394031141868526, 0.18750000000000003], 'false,false,true': [0.1751512993948019, 0.17993079584775074], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [7.401486830834377e-17, 0.21058626847349113], 'false': [0.0, 0.20980170344612334], 'false,false': [0.1972447520391225, 0.21971567003715053], 'false,false,false': [0.21948033096240271, 0.22222222222222224], 'false,false,true': [0.20408163265306062, 0.18749999999999978], 'true': [0.0, 0.0], 'false,true': [0.0, nan], 'false,true,true': [nan, 0.0]}, {'': [-7.401486830834377e-17, 0.20710972378825238], 'false': [0.18438977817573773, 0.2259035273519901], 'false,false': [0.2318811972289664, 0.15999999999999992], 'false,false,true': [0.0, 0.23306436479639722], 'false,true': [0.18749999999999947, 0.17993079584775074], 'false,true,true': [0.1224489795918368, 0.12492563950029756], 'false,true,false': [1.1102230246251565e-16, -8.540177112501205e-18], 'false,false,false': [0.15999999999999992, nan]}, {'': [7.401486830834377e-17, 0.18334814176406533], 'false': [0.15067931126257944, 0.21059606468376527], 'false,false': [0.0, 0.21169008681274437], 'false,false,false': [0.22567596326192385, 0.1155555555555556], 'false,true': [0.04092594693206097, 0.00012531661552659353], 'false,true,true': [nan, 0.040925946932061225], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0]}, {'': [0.12244897959183673, 0.17107134723971373], 'false': [0.10553472066571314, 0.22956462254801796], 'false,false': [0.20866138699233974, 0.24226095171956927], 'false,false,false': [0.0, 0.24927641165835351], 'false,false,true': [0.10937499999999972, 0.0005261743580374539], 'true': [0.0, 0.1875], 'false,true': [0.00696392911944006, 0.0003602706673519181], 'false,true,true': [nan, 0.006963929119440282]}, {'': [0.0006333711921999255, 0.14432488651759934], 'false': [0.07216688458549403, 0.2073786791732643], 'false,false': [0.20600261198253556, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,false,true': [0.20267016112430927, 0.19777557870409052], 'true': [nan, 0.0006333711921999071]}, {'': [0.13236518507733622, 0.14522719452029506], 'false': [0.15128884375311058, 0.11456542049247408], 'false,true': [0.02993163932543327, 0.15757668536639455], 'true': [0.08182520054739352, 0.005929188994249879], 'false,false': [0.017146596367146764, 0.20408163265306115], 'false,false,false': [0.20408163265306115, nan], 'true,true': [0.15323558169063242, 0.015253460493553413], 'false,true,true': [0.0016442533662240771, 0.04092162749887636]}, {'': [0.002655642329796329, 0.11572314698799004], 'false': [0.04637165299460287, 0.18483013196424602], 'false,false': [0.18229199073193825, 0.21205315334893973], 'false,false,false': [0.0, 0.24000000000000005], 'false,false,true': [0.0, 0.18447306343087322], 'true': [0.002592194465694022, 0.0027153386417545825], 'true,false': [nan, 0.0027153386417545825], 'true,false,false': [0.0, 0.0008499675449854457]}, {'': [0.001838869244204409, 0.1119689187408616], 'false': [0.045351652433540876, 0.16473658564259824], 'false,false': [0.16473658564259824, nan], 'false,false,true': [0.12531189505683024, 0.007665968563164345], 'true': [0.0007721916044027555, 0.0017914051528744104], 'true,false': [nan, 0.0017914051528744104]}, {'': [0.0003699580664256463, 0.09241842468265672], 'false': [0.1432509844179164, 0.09081417209658026], 'false,false': [0.04956210822338355, 0.1313983178138575], 'false,false,false': [0.1313983178138575, nan], 'true': [6.847433886604526e-06, 0.0], 'true,true': [0.0, 0.0], 'true,true,true': [nan, 0.0], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(H, A), interaction(I, H).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;phenotype(A, J).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.3112739350995115;  // std dev = 3.982, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F) )
%   | | then if ( phenotype(F, G), location(A, H) )
%   | | | then return 0.1693492922757475;  // std dev = 3.170, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return -0.05795720554085585;  // std dev = 1.546, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.11528301163253156;  // std dev = 2.208, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.32910274979802195;  // std dev = 3.138, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.09771472131088707;  // std dev = 0.805, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return 0.12487362192584454;  // std dev = 2.608, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.77766529981356;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.15860918708516977;  // std dev = 0.133, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.05536643674628447;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15605471459231965;  // std dev = 3.924, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.20983051897353985;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10668565279198938;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4526097669978938;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.4526097669978938;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5810735306305488;  // std dev = 0.891, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.6965484600242475;  // std dev = 0.367, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.13322895767379772;  // std dev = 0.093, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.17257454275554868;  // std dev = 0.293, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5416560238925399;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11098655291884173;  // std dev = 3.976, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | | else return -0.08692852930572156;  // std dev = 1.257, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.09462710350360215;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.34462710350360215;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.29054486783962125;  // std dev = 0.890, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.6085576708212281;  // std dev = 0.233, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1371566472548454;  // std dev = 0.050, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5663159445946521;  // std dev = 1.176, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.22906339372212337;  // std dev = 0.290, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.4074191508109307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07648708532891128;  // std dev = 3.061, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.29750600234783253;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.027136049898952352;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, E) )
%   | | then if ( phenotype(F, H), enzyme(F, I) )
%   | | | then return 0.1368369021817559;  // std dev = 1.168, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.010163135838780814;  // std dev = 1.039, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else return -0.08259239901798146;  // std dev = 0.114, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5023563901119263;  // std dev = 1.396, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.22960273942828976;  // std dev = 0.276, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return -0.12962472484747953;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16667744505847226;  // std dev = 2.543, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), location(A, E) )
%   | then return -0.015567571825760821;  // std dev = 0.269, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( complex(A, F) )
%   | | then return -0.09109853049125909;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.3259981893964117;  // std dev = 0.598, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1349551523358816;  // std dev = 0.696, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.30190320796685827;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.1009669234545139;  // std dev = 1.631, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.04399070322758248;  // std dev = 2.190, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then return 0.12762482331062908;  // std dev = 1.021, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.09487397794235235;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2478373388286912;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4000636592279961;  // std dev = 0.289, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.01863384042065678;  // std dev = 1.394, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.012456590977809916;  // std dev = 0.655, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.11718722739391706;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.039001463950500886;  // std dev = 0.370, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.025148839292836823;  // std dev = 3.290, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.1401002808165245;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.012029725047500796;  // std dev = 1.137, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return -0.10630517648905598;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.20742786799987192;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), phenotype(F, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.35605210323648245;  // std dev = 0.249, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.0781970830020308;  // std dev = 0.851, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | else return -0.15565831195804897;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.434449097597999;  // std dev = 0.964, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.23272173582250266;  // std dev = 0.578, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1592136590857797;  // std dev = 2.021, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -0.11686902837185571;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.18488996354263554;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.2557075014656699;  // std dev = 0.625, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, E), phenotype(A, F) )
%   | | then return -0.3004272160648306;  // std dev = 0.617, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(E, G) )
%   | | | then return -0.006387702184268;  // std dev = 2.140, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return -0.09764210938711561;  // std dev = 1.326, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.002941299081411269;  // std dev = 0.550, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.21065305266504195;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.06548612282554292;  // std dev = 1.498, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.036758841182831285;  // std dev = 1.877, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */


Results
   AUC ROC   = 0.990623
   AUC PR    = 0.368952
   CLL	      = -0.172626
   Precision = 0.386364 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.519084


Total learning time: 5.471 seconds
Total inference time: 3.291 seconds
AUC ROC: 0.990623


Results scoring model
   AUC ROC   = 0.988336
   AUC PR    = 0.305219
   CLL	      = -0.201814
   Precision = 0.269663 at threshold = 0.5
   Recall    = 0.857143
   F1        = 0.410256


Total scoring time: 4.672 seconds
Refined model CLL: -0.201814


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990623
   AUC PR    = 0.368952
   CLL	      = -0.172626
   Precision = 0.386364 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.519084


Total learning time: 15.462 seconds
Total inference time: 3.291 seconds
AUC ROC: 0.990623
Total revision time: 15.462
Best scored revision CLL: -0.201814


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:03:44
{'AUC ROC': 0.990623, 'AUC PR': 0.368952, 'CLL': -0.172626, 'Precision': [0.386364, 0.5], 'Recall': 0.790698, 'F1': 0.519084, 'Learning time': 15.462, 'Inference time': 3.291, 'parameter_0.2': {'AUC ROC': 0.98565, 'AUC PR': 0.328513, 'CLL': -0.173483, 'Precision': [0.397516, 0.5], 'Recall': 0.744186, 'F1': 0.518219, 'Learning time': 1.684, 'Inference time': 2.781}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.1769895148096573;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17112603433615278;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.17633075328133055;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6200800801353155;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6200800801353155;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10831547848962268;  // std dev = 4.105, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return 0.1685432274892887;  // std dev = 3.830, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11877394565448146;  // std dev = 5.423, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
%   | | | else return 0.24706524821730516;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4829053734073503;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7670165452990944;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.07956533069454648;  // std dev = 2.518, 74.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.803066500324851;  // std dev = 0.171, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.18931500264192339;  // std dev = 5.58e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30019660121879477;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11700583616884527;  // std dev = 5.339, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1317783670261538;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4744445731156559;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14111123978232257;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4744445731156559;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4384745038377714;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6960749241879806;  // std dev = 0.416, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1639794293076224;  // std dev = 0.149, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5681099277621622;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07894956574071187;  // std dev = 5.440, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
%   | | | else return 0.16529175705169807;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.24963520200505984;  // std dev = 1.291, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.35967950985009245;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3349613475703733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5148761500507198;  // std dev = 1.136, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.14272396806350132;  // std dev = 0.136, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4521465746949081;  // std dev = 3.927, 73.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=50 */
%   | | | else return -0.21376119003218072;  // std dev = 0.082, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return -0.535982018634334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.11171805482446191;  // std dev = 0.963, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.3168695950963176;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3044087919962136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.307652046911538;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 0.005240880959700962;  // std dev = 3.251, 182.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=46 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2338869442306422;  // std dev = 0.721, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.077377257117579;  // std dev = 4.860, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08928292917787943;  // std dev = 1.881, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21154454928954589;  // std dev = 0.680, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.2925006521150503;  // std dev = 4.509, 141.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=95 */
%   | else return -0.16054883048496;  // std dev = 0.463, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22372538740571846;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0057179205295689;  // std dev = 0.851, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.11868340107270717;  // std dev = 0.345, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.24937114492384804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.21172010514456296;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.20712485689018523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.196876568775774;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return -0.008649323319937086;  // std dev = 3.019, 168.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=46 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.325249642173617;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.001075252126537277;  // std dev = 4.830, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
%   | | else if ( location(A, J) )
%   | | | then return 0.09384214673903604;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17964848386304005;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17051548840307065;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.02585846635176111;  // std dev = 2.732, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5319109042838142;  // std dev = 1.787, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | | else return -0.23464766702833917;  // std dev = 1.098, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.15575888151104758;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13479854565278448;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0.1295205674885072;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.10626344733327253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.016599935615497753;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.15312739445847134;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.002221552418836985;  // std dev = 2.807, 167.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=45 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015462406672237184;  // std dev = 4.008, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.989113
   AUC PR    = 0.276104
   CLL	      = -0.187734
   Precision = 0.292181 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.431611


Total learning time: 4.409 seconds
Total inference time: 5.108 seconds
AUC ROC: 0.989113


Results scoring model
   AUC ROC   = 0.985489
   AUC PR    = 0.219315
   CLL	      = -0.203621
   Precision = 0.179795 at threshold = 0.5
   Recall    = 0.929204
   F1        = 0.301291


Total scoring time: 17.615 seconds
Parameter learned model CLL: -0.203621


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.97, 1, 16], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.816, 1, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [4.078, 60, 23], 'false,false,true,false': [3.871, 47, 22], 'false,false,false,true': [5.307, 90, 41], 'false,false,false,false': [2.185, 15, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.816, 1, 2], 'false,false,true,true': [4.105, 63, 23], 'false,false,true,false': [3.83, 44, 22], 'false,false,false,true': [5.423, 104, 41], 'false,false,false,false': [2.029, 10, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.333, 2, 16], 'false,true,true,true': [0.97, 1, 16], 'false,true,true,false': [2.518, 67, 7], 'false,true,false,true': [0.171, 0, 23], 'false,true,false,false': [5.58e-08, 64, 0], 'false,false,true,true': [1.081, 2, 3], 'false,false,true,false': [5.339, 96, 41], 'false,false,false,true': [2.16, 14, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false': [0.816, 1, 2], 'true,false': [1.49e-08, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.416, 0, 45], 'false,true,false': [0.149, 106, 0], 'false,false,true': [0.049, 0, 3], 'false,false,false,true': [5.44, 106, 41], 'false,false,false,false': [2.068, 11, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.291, 2, 14], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.136, 1, 45], 'false,true,false': [0.136, 97, 0], 'false,false,true,true': [3.927, 23, 50], 'false,false,true,false': [0.082, 85, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.963, 7, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.068, 0, 6], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [0.081, 0, 9], 'false,true': [3.251, 136, 46], 'false,false,true,true': [0.721, 1, 3], 'false,false,true,false': [4.86, 88, 41], 'false,false,false,true': [1.881, 12, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.68, 1, 14], 'true,true,false': [4.509, 46, 95], 'true,false': [0.463, 172, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.851, 6, 1], 'false,false,true': [0.345, 1, 1], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.076, 0, 11], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.011, 0, 4], 'true,false,false,false': [0.0, 0, 0], 'false,true': [3.019, 122, 46], 'false,false,true,true': [0.261, 0, 3], 'false,false,true,false': [4.83, 105, 41], 'false,false,false,true': [1.581, 11, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.067, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.013, 0, 7], 'false,true': [2.732, 95, 46], 'false,false,true,true': [1.787, 3, 51], 'false,false,true,false': [1.098, 89, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.043, 0, 7], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.033, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.883, 1, 4], 'false,true': [0.036, 0, 4], 'false,false,true': [2.807, 122, 45], 'false,false,false,true': [4.008, 106, 48], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.055363321799307655, 0.2149947970863692], 'false': [0.15999999999999986, 0.21194302606826154], 'false,false': [0.20840547091412845, 0.21530180699730955], 'false,false,false': [0.21502243459006007, 0.2169421487603307], 'false,false,true': [0.2003193496879092, 0.21718126444024338], 'false,true': [0.22222222222222224, 0.0], 'false,true,true': [nan, 0.22222222222222224], 'false,true,false': [0.0, 0.0]}, {'': [0.09876543209876558, 0.21038286115408406], 'false': [0.17087207867796006, 0.20836410008820824], 'false,false': [0.20822998649401928, 0.20848752696429163], 'false,false,false': [0.202806183115339, 0.24221453287197234], 'false,false,true': [0.19591671173607442, 0.22222222222222257], 'false,true': [0.0, 0.22222222222222224], 'true': [0.09876543209876533, 0.09876543209876533], 'false,true,true': [nan, 0.0]}, {'': [0.09876543209876562, 0.20113025336911902], 'false': [0.19033860024293264, 0.21167938241608225], 'false,false': [0.21011130721342372, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,false,true': [0.23357095520399254, 0.20807346580769634], 'false,true': [0.18886607897596885, 0.19186308423844106], 'false,true,false': [0.001276912934995105, 4.85722573273506e-17], 'false,true,true': [0.05536332179930776, 0.08564645726807857]}, {'': [0.05536332179930784, 0.18235211446982855], 'false': [0.15579534188299582, 0.20637709170813], 'false,false': [0.0007936336325179058, 0.20600512218737954], 'false,false,false': [0.2013164401984356, 0.23765432098765396], 'false,true': [0.005175348961244623, 0.00020977172713330022], 'true': [0.09000000000000001, 3.172065784643304e-17], 'true,true': [3.172065784643304e-17, 0.22222222222222224], 'false,true,true': [0.0, 0.0038477920080125395]}, {'': [0.0937406558512095, 0.15868619826042896], 'false': [0.103287061393572, 0.20641263636649965], 'false,false': [0.20784171151657263, 0.12087815749156412], 'false,false,true': [0.21120214039310006, 7.83541535616393e-05], 'false,false,false': [0.0, 0.11598793706826913], 'false,true': [0.028145409953909236, 0.00019141156475490135], 'true': [0.10411271008937824, 0.0], 'false,true,true': [0.0, 0.028068557412217497]}, {'': [0.0007214198007958056, 0.11629019277188733], 'false': [0.058073272912146895, 0.18270384907257226], 'false,false': [0.18220276698266358, 0.18616608116635674], 'false,false,false': [0.18616608116635674, nan], 'false,false,true': [0.12995820207870967, 0.18308605327596805], 'true': [0.0006844626245368555, 0.000725963776537824], 'true,true': [0.000776358069497792, 0.0], 'true,true,true': [0.000776358069497792, nan]}, {'': [0.11376952053281013, 0.08461869275311157], 'true': [0.1338687498588328, 0.0012450565721370756], 'true,true': [0.03079304057045163, 0.14420406905996896], 'false': [0.08874094068578149, 0.06971453236647698], 'false,true': [0.0, 0.10353388280882103], 'false,false': [0.059417082273472005, 0.0], 'false,true,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.0004122201716123333, 0.10598234303550541], 'false': [0.05426538058212912, 0.15772809288565484], 'false,false': [0.1591572738829267, 0.13893372039656796], 'false,false,true': [0.022638021447538053, 0.15981841158589147], 'false,false,false': [0.13893372039656796, nan], 'true': [0.0005293606663740811, 4.197879144804961e-05], 'true,false': [0.0, 3.146800745487677e-05], 'true,false,false': [3.146800745487677e-05, nan]}, {'': [0.0003129961616028104, 0.1115135733016179], 'false': [0.0529213342298065, 0.1688698510888567], 'false,false': [0.1688698510888567, nan], 'false,false,true': [0.0591306397213932, 0.01355773592501839], 'true': [0.0005000903205415649, 2.5527500266171138e-05], 'true,false': [nan, 2.5527500266171138e-05]}, {'': [0.05152285512946848, 0.07401128796737853], 'false': [0.00033305248205713067, 0.07466392797145761], 'false,false': [0.04718721780221152, 0.10429740709765914], 'false,false,false': [0.10429740709765914, nan], 'true': [0.0004950236993072898, 0.1558358972772243], 'true,true': [0.0002846630152657792, 0.0004807943448133535], 'true,true,false': [0.0005408936379150235, 0.0], 'true,true,true': [0.0002683651543881179, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,false;interaction(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;location(A, E), interaction(C, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(C, D), location(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.03314893509951235;  // std dev = 2.403, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | | else return 0.1520264861199206;  // std dev = 7.130, 245.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=72 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1679375484335663;  // std dev = 4.905, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.12207726586644287;  // std dev = 6.264, 194.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.16401741065374686;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.16138302309160935;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5652240616236504;  // std dev = 0.017, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.09486408979167318;  // std dev = 3.903, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return -0.050891140537375285;  // std dev = 1.311, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7978076155408655;  // std dev = 0.211, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.18065195718815305;  // std dev = 0.123, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.48783122649574284;  // std dev = 3.989, 74.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | | | else return -0.17810857773610203;  // std dev = 0.023, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.14071591204446784;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.018163950096878028;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4195246202364745;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.43211434541458477;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.43976973421521337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6700869056157788;  // std dev = 1.644, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.1688580689232317;  // std dev = 0.204, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.18837423571287673;  // std dev = 0.099, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.46167019208593846;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.11758308427914514;  // std dev = 5.255, 150.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
%   | | | else return -0.15394293532640432;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.047898383697397566;  // std dev = 0.449, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.3245852393286429;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.31813171161277964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5784277939173883;  // std dev = 0.102, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else return -0.1522287229189475;  // std dev = 0.021, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.25389817537394627;  // std dev = 4.675, 91.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=50 */
%   | | | else return -0.1694799914941044;  // std dev = 0.022, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03070732598088424;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2770087421135113;  // std dev = 0.033, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), phenotype(A, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.25010746450745924;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.15777072313578172;  // std dev = 0.320, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.0794025396931061;  // std dev = 1.399, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.014276266867489638;  // std dev = 1.638, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J) )
%   | | | then return 0.11299061848162546;  // std dev = 3.904, 103.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=39 */
%   | | | else return 0.3965524926959419;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.022118539493249215;  // std dev = 3.352, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | | else return 0.14671748670503768;  // std dev = 1.262, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4370451934771262;  // std dev = 1.007, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.2581664738913964;  // std dev = 0.360, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.22700762576515277;  // std dev = 2.302, 67.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=48 */
%   | | | else return 0.3383160378497022;  // std dev = 3.425, 58.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   | else return -0.14716396247607158;  // std dev = 0.034, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.20464504920159887;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1346843620169053;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10875801775169089;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.026952514323760085;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.11538083184236675;  // std dev = 0.241, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.17402580232177867;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), interaction(A, H) )
%   | | | then return 0.44734382660721334;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.166320376733228;  // std dev = 1.948, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else return -0.20590146691707306;  // std dev = 0.152, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1481759670380681;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.012760539107083975;  // std dev = 4.376, 175.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=50 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17602194178941394;  // std dev = 0.981, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.008002216316624325;  // std dev = 0.746, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1705841645303834;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1566078193519019;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(A, G), interaction(E, A) )
%   | | then return 0.13522814079232232;  // std dev = 0.507, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, H), complex(E, I) )
%   | | | then return -0.09507468732904598;  // std dev = 0.653, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return -0.02491734921497495;  // std dev = 1.726, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( enzyme(J, K), location(J, L) )
%   | | | then return -0.18019625693319866;  // std dev = 0.755, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12333400213964278;  // std dev = 1.625, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.052504486736745674;  // std dev = 2.243, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return -0.0018669457859745468;  // std dev = 4.009, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then return 0.13821285835315125;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), location(C, F) )
%   | | | then return 0.12824361339765028;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16367823623295674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.06066889867723563;  // std dev = 0.491, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.16024273143300324;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I), enzyme(A, J) )
%   | | | then return -0.14927045054772362;  // std dev = 1.006, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.011552398797235486;  // std dev = 2.145, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.039670170553762985;  // std dev = 3.148, 105.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=37 */
%   | | | else return -0.0017191210850024416;  // std dev = 3.557, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */


Results
   AUC ROC   = 0.977975
   AUC PR    = 0.315216
   CLL	      = -0.200221
   Precision = 0.283582 at threshold = 0.5
   Recall    = 0.662791
   F1        = 0.397213


Total learning time: 13.948 seconds
Total inference time: 7.719 seconds
AUC ROC: 0.977975


Results scoring model
   AUC ROC   = 0.978158
   AUC PR    = 0.263642
   CLL	      = -0.211804
   Precision = 0.214706 at threshold = 0.5
   Recall    = 0.646018
   F1        = 0.322296


Total scoring time: 28.883 seconds
Refined model CLL: -0.211804


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989113
   AUC PR    = 0.276104
   CLL	      = -0.187734
   Precision = 0.292181 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.431611


Total learning time: 64.85499999999999 seconds
Total inference time: 5.108 seconds
AUC ROC: 0.989113
Total revision time: 64.85499999999999
Best scored revision CLL: -0.203621


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:05:02
{'AUC ROC': 0.989113, 'AUC PR': 0.276104, 'CLL': -0.187734, 'Precision': [0.292181, 0.5], 'Recall': 0.825581, 'F1': 0.431611, 'Learning time': 64.85499999999999, 'Inference time': 5.108, 'parameter_0.4': {'AUC ROC': 0.989113, 'AUC PR': 0.276104, 'CLL': -0.187734, 'Precision': [0.292181, 0.5], 'Recall': 0.825581, 'F1': 0.431611, 'Learning time': 4.409, 'Inference time': 5.108}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7840748610254378;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.12214893509951097;  // std dev = 4.928, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.1674272856149761;  // std dev = 4.552, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14186986533207166;  // std dev = 6.610, 215.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=61 */
%   | | | else return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7341781063237719;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7341781063237718;  // std dev = 4.21e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.191258864214365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.41589598673584804;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5825626534025147;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10043226696015492;  // std dev = 4.949, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | | | else return 0.11954063803627982;  // std dev = 4.638, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14963150621626903;  // std dev = 6.489, 197.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=61 */
%   | | | else return 0.17596325891009368;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5315129416654394;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.776207067181067;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.027860096381153474;  // std dev = 3.598, 103.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.812070062598477;  // std dev = 0.227, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.1804898742362669;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2187300213968022;  // std dev = 1.289, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12186642476802649;  // std dev = 6.561, 206.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=63 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.29769476645589416;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43788111772253174;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4378811177225317;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4378811177225317;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.15119661437208962;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6841340821478994;  // std dev = 1.448, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.16363205496445768;  // std dev = 0.222, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5803476280809043;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07725429465715365;  // std dev = 6.638, 220.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=61 */
%   | | | else return 0.04773058102455632;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.33455670811254196;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3345567081125419;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4251700535812748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5290768983323394;  // std dev = 1.625, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.14248722711158127;  // std dev = 0.150, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4906882559443434;  // std dev = 4.518, 105.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=77 */
%   | | | else return -0.22134447738357016;  // std dev = 0.300, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return -0.6268563597446485;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.041529848167124156;  // std dev = 1.482, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.26459836203672316;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.26459836203672316;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20209836203672316;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F) )
%   | then return 0.018778602981580222;  // std dev = 3.965, 243.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=64 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.15624896432360333;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06735130443843948;  // std dev = 5.914, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07038949172290453;  // std dev = 2.574, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24840966437950404;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.22881984033953218;  // std dev = 6.117, 235.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=140 */
%   | else return -0.16343970552485185;  // std dev = 0.714, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22718024769159073;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5922535521484056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.053654075682760816;  // std dev = 1.311, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.03930954998430783;  // std dev = 0.449, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.7139413026796962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1826021810081256;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.17723242220886626;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, F) )
%   | | | then return 0.07807814263657574;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.017857833769998326;  // std dev = 3.688, 210.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=64 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.14720190207153883;  // std dev = 0.663, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.015466734281588483;  // std dev = 5.786, 220.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=63 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06940282543697937;  // std dev = 2.258, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return -0.11666871434919206;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15923642210648667;  // std dev = 0.034, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07667163931202725;  // std dev = 0.969, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, F) )
%   | then return -0.01585974211918556;  // std dev = 3.871, 257.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=64 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.47108600215677343;  // std dev = 3.116, 91.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=80 */
%   | | | else return -0.22223086557311306;  // std dev = 1.145, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.13481866590904037;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.14266604801935268;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(C, D), location(C, G) )
%   | | | then return 0.15382457103219843;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13382561176359997;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.07580507143035733;  // std dev = 0.749, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return -0.002595904297239456;  // std dev = 1.240, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else if ( interaction(A, I) )
%   | | then return 0.016736743928426508;  // std dev = 3.517, 223.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=63 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.005265899858052495;  // std dev = 5.340, 256.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=74 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990404
   AUC PR    = 0.360388
   CLL	      = -0.18817
   Precision = 0.288889 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.390977


Total learning time: 5.894 seconds
Total inference time: 5.19 seconds
AUC ROC: 0.990404


Results scoring model
   AUC ROC   = 0.986319
   AUC PR    = 0.262236
   CLL	      = -0.201117
   Precision = 0.209713 at threshold = 0.5
   Recall    = 0.56213
   F1        = 0.305466


Total scoring time: 25.479 seconds
Parameter learned model CLL: -0.201117


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.361, 2, 25], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [4.928, 92, 33], 'false,false,true,false': [4.552, 67, 30], 'false,false,false,true': [6.61, 154, 61], 'false,false,false,false': [2.807, 20, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 10], 'true,false': [4.21e-08, 0, 15], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.744, 1, 2], 'false,true,false': [0.851, 1, 5], 'false,false,true,true': [4.949, 95, 33], 'false,false,true,false': [4.638, 76, 30], 'false,false,false,true': [6.489, 136, 61], 'false,false,false,false': [2.904, 24, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.981, 1, 25], 'false,true,true,true': [0.973, 1, 18], 'false,true,true,false': [3.598, 88, 15], 'false,true,false,true': [0.227, 0, 31], 'false,true,false,false': [0.0, 62, 0], 'false,false,true,true': [1.289, 4, 4], 'false,false,true,false': [6.561, 143, 63], 'false,false,false,true': [2.55, 13, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 4], 'true,false': [0.0, 0, 10], 'false,true,true,true': [0.662, 2, 1], 'false,true,true,false': [1.448, 2, 63], 'false,true,false': [0.222, 182, 0], 'false,false,true': [0.111, 0, 6], 'false,false,false,true': [6.638, 159, 61], 'false,false,false,false': [3.012, 30, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 23], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.625, 2, 63], 'false,true,false': [0.15, 176, 0], 'false,false,true,true': [4.518, 28, 77], 'false,false,true,false': [0.3, 114, 0], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.482, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.968, 1, 15], 'false,true': [3.965, 179, 64], 'false,false,true,true': [0.896, 2, 4], 'false,false,true,false': [5.914, 141, 63], 'false,false,false,true': [2.574, 23, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.215, 0, 20], 'true,true,false': [6.117, 95, 140], 'true,false': [0.714, 254, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [1.311, 9, 4], 'false,false,true': [0.449, 5, 1], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.023, 0, 15], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.942, 1, 8], 'true,false,false,false': [0.0, 0, 0], 'false,true': [3.688, 146, 64], 'false,false,true,true': [0.663, 2, 4], 'false,false,true,false': [5.786, 157, 63], 'false,false,false,true': [2.258, 17, 12], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.034, 0, 15], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.969, 1, 10], 'false,true': [3.871, 193, 64], 'false,false,true,true': [3.116, 11, 80], 'false,false,true,false': [1.145, 152, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(C, D), location(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.013, 0, 10], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.015, 0, 2], 'true,true,false,false': [0.014, 0, 2], 'true,false': [0.749, 1, 6], 'false,true': [1.24, 2, 10], 'false,false,true': [3.517, 160, 63], 'false,false,false,true': [5.34, 182, 74], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06858710562414343, 0.21050051644754159], 'false': [0.10937499999999978, 0.20652331371661567], 'false,false': [0.20325054784514282, 0.2093522372528618], 'false,false,false': [0.20322336398053045, 0.23875114784205645], 'false,false,true': [0.19430400000000128, 0.21362525241789754], 'false,true': [1.4802973661668753e-16, 0.15999999999999998], 'false,true,false': [0.25, 1.4802973661668753e-16], 'false,true,true': [nan, 1.4802973661668753e-16]}, {'': [4.973799150320702e-16, 0.20846495868988338], 'false': [0.17977611386644443, 0.20688535618890888], 'false,false': [0.19667860150320096, 0.21609275839489753], 'false,false,false': [0.21376484835991852, 0.22790357925493035], 'false,false,true': [0.19134521484374997, 0.20291918832324732], 'false,true': [0.20735831983071107, 0.1208224450883389], 'false,true,true': [0.0, 0.18431850651618764], 'true': [-8.881784197001253e-17, 1.1842378929335003e-16]}, {'': [0.036982248520709894, 0.21287193425139264], 'false': [0.20846841282928624, 0.21654787570427372], 'false,false': [0.20927093657219248, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.2076355421725436, 0.20898369726415178], 'false,true': [0.19885823280544257, 0.2194813738900054], 'false,true,false': [0.0016606361970896353, -1.1460366705808067e-16], 'false,true,true': [0.04986149584487545, 0.12565490329628462]}, {'': [2.1316282072803005e-16, 0.17711096746086635], 'false': [0.14854842246003205, 0.20330959565760956], 'false,false': [0.0020367032593550474, 0.20214710195047567], 'false,false,false': [0.20028894316896892, 0.21092482422931336], 'false,true': [0.06668749291217747, 0.0002719559059554366], 'false,true,true': [0.1459308013954004, 0.03224581359598948], 'true': [8.881784197001253e-17, -2.2204460492503132e-17], 'true,true': [0.0, 0.0]}, {'': [-3.552713678800501e-17, 0.16039595845697574], 'false': [0.10007862580856432, 0.2208716244407005], 'false,false': [0.22013300463558483, 0.21727479601833244], 'false,false,true': [0.1943636498295626, 0.0007902453709586258], 'false,false,false': [0.0, 0.19979870662459395], 'false,true': [0.04015081610016187, 0.0001280168905850032], 'false,true,true': [0.0, 0.04060493562405758], 'true': [-3.8616453030440226e-17, 0.0]}, {'': [0.036982248520709984, 0.11961497656878765], 'false': [0.06471010491211787, 0.1725483330525101], 'false,false': [0.1705659828723274, 0.18411183051003588], 'false,false,false': [0.18411183051003588, nan], 'false,false,true': [0.13371915493072908, 0.17142391899353068], 'true': [-2.2204460492503132e-17, 0.05859374999999998], 'true,true': [-1.3877787807814457e-17, 0.0], 'true,true,true': [-1.3877787807814457e-17, nan]}, {'': [0.11339947235422256, 0.11805289499035604], 'false': [0.12621882426833914, 0.09823502925183071], 'false,true': [0.029617448361559606, 0.1321702172458169], 'true': [0.1469686107091589, 0.002008192892537008], 'true,true': [0.0023125567294223657, 0.1592496653212379], 'false,false': [0.033552270264414534, 0.0], 'false,true,true': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.03662720716505773, 0.1143213992632723], 'false': [0.06475086175497104, 0.1546573842279663], 'false,false': [0.15049951790416993, 0.18306870340860967], 'false,false,false': [0.1757724689635587, 0.2222222222222222], 'false,false,true': [0.07324324015859394, 0.15214577753353248], 'true': [3.386883851136761e-05, 0.08221093174673927], 'true,false': [0.0, 0.09869246929818636], 'true,false,false': [0.09869246929818636, nan]}, {'': [0.03785850734221062, 0.10743744463337354], 'false': [0.058301543669839404, 0.15794586229028976], 'false,false': [0.15794586229028976, nan], 'false,false,true': [0.10667182583730073, 0.00863198130337168], 'true': [7.787397750983102e-05, 0.08544470090228205], 'true,false': [nan, 0.08544470090228205]}, {'': [0.02525339319853511, 0.08651653203094174], 'false': [0.12812729524525887, 0.08547268941102214], 'false,false': [0.055455914201613665, 0.1113947327654318], 'false,false,false': [0.1113947327654318, nan], 'true': [7.848031153670845e-05, 0.08010069129200882], 'true,true': [2.312199683292271e-05, 0.00020010475019004853], 'true,true,false': [0.00010720179844031508, 9.302851602625839e-05], 'true,true,true': [1.7482828535303475e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
1;false,true,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;location(A, E), interaction(C, A).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(C, D), location(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(D, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8105298874804647;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, I), interaction(I, G) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.2452457092930597;  // std dev = 3.835, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | | else return 0.15396045342412015;  // std dev = 8.920, 382.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7384544879012147;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7270812799991553;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7468466669310441;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.11828320960364251;  // std dev = 9.163, 414.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=117 */
%   | | | else return 0.2229704497691067;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5292466837262988;  // std dev = 0.195, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), location(F, G) )
%   | | | then return 0.02490910672071614;  // std dev = 4.134, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
%   | | | else return 0.1752842030858441;  // std dev = 2.630, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8059762386824578;  // std dev = 0.265, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.18359663710320143;  // std dev = 0.062, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), complex(K, L) )
%   | | | then return 0.12930872479064126;  // std dev = 6.113, 176.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=55 */
%   | | | else return 0.35676291033743884;  // std dev = 2.158, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( location(A, M) )
%   | | | then return 0.3434169327692137;  // std dev = 2.396, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.15501113566776445;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3470496313324416;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.47135620286817953;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.43018176194627855;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.6518999111829685;  // std dev = 1.342, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.6875735507850104;  // std dev = 1.348, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.17124280498970082;  // std dev = 0.032, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5376122094935468;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.13459570004907392;  // std dev = 5.843, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.08297642593145418;  // std dev = 3.938, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.3058606159038905;  // std dev = 0.177, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.3432146204480225;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.20539905613696896;  // std dev = 0.602, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5615185810826371;  // std dev = 1.349, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.15049210709136607;  // std dev = 0.032, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4032883175313458;  // std dev = 5.132, 118.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=77 */
%   | | | else return -0.2248520699703765;  // std dev = 0.157, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2069894127502412;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then return 0.288970242379244;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15094709056479813;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(A, G), interaction(F, F) )
%   | | then if ( location(F, G) )
%   | | | then return 0.10430926876012457;  // std dev = 4.282, 135.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=50 */
%   | | | else return 0.027334639031692573;  // std dev = 2.610, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | else if ( interaction(H, F), interaction(I, H) )
%   | | | then return -0.0012495093806033292;  // std dev = 4.281, 153.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=36 */
%   | | | else return 0.09677807593538539;  // std dev = 2.015, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return -0.06496035794090398;  // std dev = 0.345, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.1836243230433003;  // std dev = 2.060, 31.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=16 */
%   | | | else return 0.1070887337473766;  // std dev = 2.224, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2576520271507385;  // std dev = 0.052, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.26095423499557546;  // std dev = 5.328, 171.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=104 */
%   | | | else return 0.3304912849604626;  // std dev = 1.989, 45.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | else return -0.16919726691232218;  // std dev = 0.038, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.34144664582977646;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0756629157725844;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.04834666664657396;  // std dev = 0.686, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, K) )
%   | | then return -0.04279360128743255;  // std dev = 0.418, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.05046751141589634;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, G) )
%   | | | then return 0.05202953757110677;  // std dev = 0.959, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.4667990842990724;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.19108448784276805;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.186887916758067;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, H) )
%   | then return -0.005859366796857095;  // std dev = 0.229, 242.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=64 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.014283315374935726;  // std dev = 4.071, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.12944493941997193;  // std dev = 2.553, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.157260078749115;  // std dev = 2.165, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.13123090216195993;  // std dev = 2.685, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.02527475253605514;  // std dev = 0.936, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.11981820871531468;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16578114745023648;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.029505876246493933;  // std dev = 0.320, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, H) )
%   | then return -0.008104530258518804;  // std dev = 0.232, 244.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=64 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5639490542771723;  // std dev = 0.426, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.24449156810132783;  // std dev = 0.563, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.11478917059346246;  // std dev = 4.045, 100.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
%   | | | else return 0.01867956563788416;  // std dev = 3.409, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1780483181135873;  // std dev = 0.047, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.05574317407035564;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22137316179201588;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.08536953317336848;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.118808793996288;  // std dev = 0.100, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3113719837471129;  // std dev = 1.469, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.14333956255069308;  // std dev = 0.302, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.009500332376997881;  // std dev = 6.185, 295.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=92 */
%   | | | else return -0.07473285697853023;  // std dev = 1.104, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */


Results
   AUC ROC   = 0.981321
   AUC PR    = 0.285378
   CLL	      = -0.21353
   Precision = 0.243028 at threshold = 0.5
   Recall    = 0.709302
   F1        = 0.362018


Total learning time: 13.355 seconds
Total inference time: 5.973 seconds
AUC ROC: 0.981321


Results scoring model
   AUC ROC   = 0.972313
   AUC PR    = 0.240022
   CLL	      = -0.230243
   Precision = 0.158892 at threshold = 0.5
   Recall    = 0.64497
   F1        = 0.254971


Total scoring time: 31.953 seconds
Refined model CLL: -0.230243


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990404
   AUC PR    = 0.360388
   CLL	      = -0.18817
   Precision = 0.288889 at threshold = 0.5
   Recall    = 0.604651
   F1        = 0.390977


Total learning time: 76.681 seconds
Total inference time: 5.19 seconds
AUC ROC: 0.990404
Total revision time: 76.681
Best scored revision CLL: -0.201117


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:06:31
{'AUC ROC': 0.990404, 'AUC PR': 0.360388, 'CLL': -0.18817, 'Precision': [0.288889, 0.5], 'Recall': 0.604651, 'F1': 0.390977, 'Learning time': 76.681, 'Inference time': 5.19, 'parameter_0.6': {'AUC ROC': 0.990404, 'AUC PR': 0.360388, 'CLL': -0.18817, 'Precision': [0.288889, 0.5], 'Recall': 0.604651, 'F1': 0.390977, 'Learning time': 5.894, 'Inference time': 5.19}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.07672817007218889;  // std dev = 5.591, 183.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=40 */
%   | | | else return 0.1396304165809933;  // std dev = 5.225, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15951879811321015;  // std dev = 7.841, 292.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=88 */
%   | | | else return 0.27920156667845974;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.725371134946398;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.6727395559990296;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6137463734164046;  // std dev = 0.957, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.0732688899695602;  // std dev = 5.569, 178.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=40 */
%   | | | else return 0.09532116604141308;  // std dev = 5.321, 149.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=38 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1647379504738247;  // std dev = 7.695, 269.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=88 */
%   | | | else return 0.19274904712415747;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5114030095027605;  // std dev = 1.366, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6081222169975423;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=20 */
%   | | | else return -0.01825140937608403;  // std dev = 4.140, 140.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=20 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7918615981037248;  // std dev = 1.024, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.17292342508887362;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.38724077089746445;  // std dev = 1.225, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.13368756555486883;  // std dev = 7.750, 279.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=90 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15415416098004406;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.435738824501364;  // std dev = 0.017, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.4432742141477303;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3636468101486754;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return -0.0645600151794329;  // std dev = 0.961, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7142080129925992;  // std dev = 1.481, 80.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   | | else return -0.1581500480401436;  // std dev = 0.383, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.26061870598491055;  // std dev = 1.557, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.11451675949701262;  // std dev = 7.719, 273.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=88 */
%   | | | else return 0.12748473779341338;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.29969208805120046;  // std dev = 0.964, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.3406561741020176;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.42593505197200976;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5607403626709851;  // std dev = 1.551, 80.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   | | else return -0.1374617796240692;  // std dev = 0.221, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.711018767525798;  // std dev = 0.751, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.2311616567035104;  // std dev = 0.098, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.21430276880665855;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17762752201952356;  // std dev = 6.607, 181.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.26775947460754346;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29396198319435307;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.12975935833186691;  // std dev = 1.841, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   else if ( interaction(A, F) )
%   | then return 0.0061075024144558706;  // std dev = 4.689, 338.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=80 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.26963070230634156;  // std dev = 0.721, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09048727852246621;  // std dev = 7.168, 258.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=90 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.023899285216193295;  // std dev = 3.154, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24516456026604852;  // std dev = 0.199, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.4902823632719012;  // std dev = 1.087, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return -0.1610456510808243;  // std dev = 0.693, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2392026914610705;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.29297830485292564;  // std dev = 1.303, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.03541202111072107;  // std dev = 6.685, 265.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=77 */
%   | else if ( interaction(A, H) )
%   | | then return 0.11809490133404366;  // std dev = 1.988, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.08658955169280817;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15188151930273452;  // std dev = 0.875, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0.19539235021429557;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.05773943225159258;  // std dev = 0.819, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.24795827074812146;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 3.575425768028969E-4;  // std dev = 4.101, 315.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=80 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0857925570650852;  // std dev = 0.881, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.05966475970647174;  // std dev = 6.919, 259.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=90 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.129965157234272;  // std dev = 0.921, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.16098325609889702;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16242815609084257;  // std dev = 0.038, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.11148871544540963;  // std dev = 0.945, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, F) )
%   | then return 0.011305215562723278;  // std dev = 3.927, 300.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=80 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5131336539784146;  // std dev = 3.354, 124.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=113 */
%   | | | else return -0.258986977494242;  // std dev = 0.847, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.14137325150770774;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.14885521387344336;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.14496689388211698;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11096615034894097;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07435657605783975;  // std dev = 1.162, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.018113335078468944;  // std dev = 1.239, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then return 0.009036362496318395;  // std dev = 3.889, 295.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=78 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004933890923449154;  // std dev = 6.351, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991456
   AUC PR    = 0.37902
   CLL	      = -0.204302
   Precision = 0.335404 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.437247


Total learning time: 3.425 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.991456


Results scoring model
   AUC ROC   = 0.989034
   AUC PR    = 0.323164
   CLL	      = -0.210935
   Precision = 0.244863 at threshold = 0.5
   Recall    = 0.632743
   F1        = 0.353086


Total scoring time: 10.001 seconds
Parameter learned model CLL: -0.210935


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.985, 1, 33], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.894, 1, 4], 'false,false,true,true': [5.591, 143, 40], 'false,false,true,false': [5.225, 97, 38], 'false,false,false,true': [7.841, 204, 88], 'false,false,false,false': [3.044, 22, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.973, 1, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.957, 1, 7], 'false,false,true,true': [5.569, 138, 40], 'false,false,true,false': [5.321, 111, 38], 'false,false,false,true': [7.695, 181, 88], 'false,false,false,false': [3.17, 27, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.366, 2, 33], 'false,true,true,true': [2.148, 6, 20], 'false,true,true,false': [4.14, 120, 20], 'false,true,false,true': [1.024, 1, 40], 'false,true,false,false': [0.0, 104, 0], 'false,false,true,true': [1.225, 3, 7], 'false,false,true,false': [7.75, 189, 90], 'false,false,false,true': [3.191, 28, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.017, 0, 15], 'true,true,false': [0.016, 0, 7], 'true,false': [0.957, 1, 11], 'false,true,true,true': [0.961, 2, 2], 'false,true,true,false': [1.481, 2, 78], 'false,true,false': [0.383, 222, 0], 'false,false,true': [1.557, 3, 9], 'false,false,false,true': [7.719, 185, 88], 'false,false,false,false': [3.191, 28, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.964, 1, 21], 'true,false': [0.047, 0, 12], 'false,true,true,true': [0.035, 0, 2], 'false,true,true,false': [1.551, 2, 78], 'false,true,false': [0.221, 228, 0], 'false,false,true,true': [0.751, 0, 36], 'false,false,true,false': [0.098, 69, 0], 'false,false,false,true': [0.953, 1, 3], 'false,false,false,false': [6.607, 107, 74]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.007, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.841, 4, 23], 'false,true': [4.689, 258, 80], 'false,false,true,true': [0.721, 1, 7], 'false,false,true,false': [7.168, 168, 90], 'false,false,false,true': [3.154, 35, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.199, 0, 20], 'true,true,false': [1.087, 0, 74], 'true,false': [0.693, 200, 0], 'false,true,true,true': [0.055, 0, 9], 'false,true,true,false': [1.303, 3, 14], 'false,true,false': [6.685, 188, 77], 'false,false,true': [1.988, 26, 20], 'false,false,false,true': [2.712, 19, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.875, 1, 22], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.819, 1, 6], 'true,false,false,false': [0.012, 0, 3], 'false,true': [4.101, 235, 80], 'false,false,true,true': [0.881, 2, 7], 'false,false,true,false': [6.919, 169, 90], 'false,false,false,true': [0.921, 4, 4], 'false,false,false,false': [2.498, 13, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.038, 0, 22], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.945, 1, 11], 'false,true': [3.927, 220, 80], 'false,false,true,true': [3.354, 11, 113], 'false,false,true,false': [0.847, 199, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.016, 0, 9], 'true,true,true,false': [0.016, 0, 8], 'true,true,false,true': [0.07, 0, 2], 'true,true,false,false': [0.044, 0, 4], 'true,false': [1.162, 2, 9], 'false,true': [1.239, 2, 12], 'false,false,true': [3.889, 217, 78], 'false,false,false,true': [6.351, 225, 104], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.028546712802769686, 0.20691230486685167], 'false': [0.07638888888888877, 0.2019795000762103], 'false,false': [0.18511925952296243, 0.21583103764922135], 'false,false,false': [0.210546068680804, 0.24376731301939009], 'false,false,true': [0.17080235301143779, 0.20224965706447234], 'false,true': [0.0, 0.1224489795918368], 'false,true,false': [0.0, 0.15999999999999986], 'false,true,true': [nan, 0.0]}, {'': [0.028546712802766966, 0.20582027710362566], 'false': [0.07886050416382943, 0.20314257396241578], 'false,false': [0.1815272274352117, 0.22207530889805197], 'false,false,false': [0.2201185721590347, 0.2336398053001625], 'false,false,true': [0.17422042671379734, 0.18999144182694555], 'false,true': [0.0, 0.11456468733498931], 'true': [-5.921189464667501e-17, 0.04986149584487536], 'false,true,true': [nan, 0.0]}, {'': [0.05328576693268202, 0.2044422624681374], 'false': [0.18911090879416442, 0.2173096879402596], 'false,false': [0.21514562883695193, 0.23140495867768615], 'false,false,false': [0.23140495867768615, nan], 'false,false,true': [0.15009084842504578, 0.21525280063736368], 'false,true': [0.18290027580200396, 0.19600702613490564], 'false,true,false': [0.02558003084298806, -8.967185968126265e-17], 'false,true,true': [0.17751479289940814, 0.12244897959183738]}, {'': [0.028251579533716493, 0.1904310087587577], 'false': [0.15715666400208475, 0.22015320120734116], 'false,false': [0.201952905460567, 0.22008266768830573], 'false,false,false': [0.21823448758552647, 0.23140495867768643], 'false,true': [0.06459371692575534, 0.0006598129459641147], 'false,true,true': [0.23067941607480014, 0.02740944903006808], 'true': [3.6498439270166664e-05, 0.0763888888888889], 'true,true': [1.9441115757778958e-05, 3.433478057665188e-05]}, {'': [0.027754700631682193, 0.16629244922443562], 'false': [0.10198515364362852, 0.2297923965624168], 'false,false': [0.20546884526067388, 0.2408855029916285], 'false,false,false': [0.22682291076883215, 0.2411671958351882], 'false,false,true': [0.015666423438856825, 0.00014055515894495656], 'false,true': [0.02978997769130006, 0.00021372399548999938], 'false,true,true': [0.0005968122618944804, 0.030076575807702753], 'true': [0.042201939100613456, 0.00018229560692993121]}, {'': [0.0957283039811371, 0.1302227887690041], 'false': [0.06504736862344726, 0.19656115337108018], 'false,false': [0.1960282520580816, 0.19499354619827491], 'false,false,true': [0.064965902377761, 0.19912701693695706], 'false,false,false': [0.19499354619827491, nan], 'true': [0.00011541491296352957, 0.1255951135923551], 'true,true': [6.954349956012074e-06, 0.0], 'true,true,true': [6.954349956012074e-06, nan]}, {'': [0.0870881055534513, 0.16095766175386766], 'false': [0.16413079523270144, 0.147094154825201], 'false,true': [0.06610006891864219, 0.1686473745171082], 'false,false': [0.08593541337424507, 0.23725286160249742], 'false,false,false': [0.23725286160249742, nan], 'true': [0.0230443574913835, 0.0024028280930371657], 'false,true,true': [0.00034155085328873506, 0.09991238857510179], 'true,true': [0.0019715081617246, 0.015956161036688763]}, {'': [0.04367516492635463, 0.11944676987157178], 'false': [0.053397205726708225, 0.1860360185114877], 'false,false': [0.1815296292449259, 0.21494558045139944], 'false,false,false': [0.10592163871264734, 0.2495999999999999], 'false,false,true': [0.08631937668026984, 0.18481516841023224], 'true': [0.03331892131351859, 0.0631572254885157], 'true,false': [0.0, 0.07470628600154558], 'true,false,false': [0.09584598749901893, 5.207127749643862e-05]}, {'': [0.026882293568088408, 0.11724287080789197], 'false': [0.05141710658475847, 0.17805267633634947], 'false,false': [0.17805267633634947, nan], 'false,false,true': [0.09070832801989853, 0.0036079802158084495], 'true': [6.55238100763612e-05, 0.07436736600213206], 'true,false': [nan, 0.07436736600213206]}, {'': [0.040959863502402084, 0.08934028310052988], 'false': [0.10963395226406718, 0.08888220413476403], 'false,false': [0.051273050708265905, 0.12259674070928647], 'false,false,false': [0.12259674070928647, nan], 'true': [0.0004958714952462453, 0.12273957813601352], 'true,true': [4.397469023930253e-05, 0.0013989131295878883], 'true,true,false': [0.002463790288639068, 0.0004811243631260304], 'true,true,true': [2.9792081328808592e-05, 3.0293781288302096e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6581489350995116;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return -0.028214701264124138;  // std dev = 4.707, 220.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.14299741994799714;  // std dev = 5.798, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
%   | | | else return 0.2070851053122794;  // std dev = 7.307, 235.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=82 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6623305550680977;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return -0.25980807866759853;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.0942437637871817;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6190532224930069;  // std dev = 1.945, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return -0.012787056676305107;  // std dev = 4.668, 194.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=25 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.13041183375538942;  // std dev = 4.606, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | | else return 0.16572376809166342;  // std dev = 8.130, 298.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=99 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5122858094757616;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.024298738010541478;  // std dev = 3.857, 125.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | | | else return 0.12491703605174072;  // std dev = 2.993, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.8001667866737312;  // std dev = 0.534, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.1520839757238808;  // std dev = 0.289, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), complex(A, K) )
%   | | | then return 0.6663975469580254;  // std dev = 0.264, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12586608766557128;  // std dev = 7.797, 287.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=91 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.14448356352143915;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.30935139819274066;  // std dev = 1.736, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3985917308088969;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.4420699916784621;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.4610632883488107;  // std dev = 1.699, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.7089769622082366;  // std dev = 1.131, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | else return -0.14325778554516952;  // std dev = 0.443, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A), phenotype(H, J) )
%   | | | then return 0.045149115848264254;  // std dev = 3.677, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.1320661772295444;  // std dev = 6.950, 221.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=77 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11690383360694824;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.27525147280505136;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.3450278070117476;  // std dev = 0.017, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.08741498512270893;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3439402610275993;  // std dev = 0.016, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5276195967520554;  // std dev = 0.154, 81.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=80 */
%   | | else return -0.1302572274393821;  // std dev = 0.474, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.714639712375793;  // std dev = 0.754, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.22138220950839044;  // std dev = 0.111, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5131863054335066;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09530560345668458;  // std dev = 7.036, 223.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27566354214234984;  // std dev = 0.014, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), complex(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.16663808325250604;  // std dev = 0.779, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.11715440306797606;  // std dev = 0.202, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32036558318452196;  // std dev = 0.608, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.11839107340715327;  // std dev = 0.369, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), complex(I, K) )
%   | | | then return 0.032865917546207074;  // std dev = 3.465, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.09138922683039058;  // std dev = 7.392, 288.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=98 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.09774886543723814;  // std dev = 1.610, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.013168650805770437;  // std dev = 2.713, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4064097515872968;  // std dev = 0.184, 95.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=94 */
%   | else return -0.15088475615150715;  // std dev = 0.666, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2457725245244948;  // std dev = 0.197, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.15373770545086;  // std dev = 1.031, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.09992201310768549;  // std dev = 0.149, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.07011758460768841;  // std dev = 6.621, 233.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=77 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.2672854008434536;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return -0.17499603233764296;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03161753655984856;  // std dev = 3.253, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), interaction(A, E) )
%   | | | then return 0.03496908308149971;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1828996237766888;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14920326695881025;  // std dev = 1.071, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.1764647361381056;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then if ( complex(G, H), phenotype(A, I) )
%   | | then return -0.05515876896245457;  // std dev = 0.135, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else return 0.007932228072520186;  // std dev = 0.195, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09041887763678648;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06731539123776117;  // std dev = 7.229, 334.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=121 */
%   | | | else return 0.01148542301785256;  // std dev = 3.728, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.15806114691229686;  // std dev = 0.039, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.15935105591597742;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.5008343472682384;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.23783732028123633;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.16706440914079787;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.032231630093402866;  // std dev = 0.155, 125.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then return 0.005793290357456505;  // std dev = 0.264, 207.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=59 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.012978960181835622;  // std dev = 5.995, 198.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=59 */
%   | | | else return 0.06513242574095564;  // std dev = 4.584, 126.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.11338849955310808;  // std dev = 0.160, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.041400002564815935;  // std dev = 0.310, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, A) )
%   | | | then return 0.20137743950711723;  // std dev = 0.866, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.12260247313643673;  // std dev = 1.140, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.0317827688721407;  // std dev = 0.212, 294.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=56 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return -0.008288606387148796;  // std dev = 3.243, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.04289583785061419;  // std dev = 5.338, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2312762405409933;  // std dev = 1.605, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.05151657246416968;  // std dev = 3.848, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */


Results
   AUC ROC   = 0.955312
   AUC PR    = 0.311126
   CLL	      = -0.220775
   Precision = 0.316456 at threshold = 0.5
   Recall    = 0.581395
   F1        = 0.409836


Total learning time: 13.529 seconds
Total inference time: 2.822 seconds
AUC ROC: 0.955312


Results scoring model
   AUC ROC   = 0.941261
   AUC PR    = 0.28959
   CLL	      = -0.231079
   Precision = 0.304536 at threshold = 0.5
   Recall    = 0.623894
   F1        = 0.409289


Total scoring time: 15.418 seconds
Refined model CLL: -0.231079


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991456
   AUC PR    = 0.37902
   CLL	      = -0.204302
   Precision = 0.335404 at threshold = 0.5
   Recall    = 0.627907
   F1        = 0.437247


Total learning time: 42.373 seconds
Total inference time: 2.821 seconds
AUC ROC: 0.991456
Total revision time: 42.373
Best scored revision CLL: -0.210935


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:07:20
{'AUC ROC': 0.991456, 'AUC PR': 0.37902, 'CLL': -0.204302, 'Precision': [0.335404, 0.5], 'Recall': 0.627907, 'F1': 0.437247, 'Learning time': 42.373, 'Inference time': 2.821, 'parameter_0.8': {'AUC ROC': 0.991456, 'AUC PR': 0.37902, 'CLL': -0.204302, 'Precision': [0.335404, 0.5], 'Recall': 0.627907, 'F1': 0.437247, 'Learning time': 3.425, 'Inference time': 2.821}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8348931211460235;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10989718684776552;  // std dev = 7.340, 286.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=72 */
%   | | | else return 0.16377240698215054;  // std dev = 9.316, 409.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=125 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17460463130204304;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7241431213873055;  // std dev = 9.42e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.6087585060026902;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4888586558685362;  // std dev = 1.135, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09166036073977402;  // std dev = 7.361, 291.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=72 */
%   | | | else return 0.13895333869163173;  // std dev = 9.341, 414.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=125 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14417984894656963;  // std dev = 4.157, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return 0.058753152121469844;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5089539457459654;  // std dev = 1.670, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6574551908150359;  // std dev = 2.232, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return 0.0022466351367140805;  // std dev = 6.091, 266.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=46 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7876680248548377;  // std dev = 1.542, 135.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=133 */
%   | | | else return -0.1828324110636267;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1622018793987703;  // std dev = 1.111, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.12933907867628697;  // std dev = 4.133, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05534492444479705;  // std dev = 1.644, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3560092981112047;  // std dev = 1.364, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return 0.34130406154470494;  // std dev = 0.964, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.31906533249778446;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3726410004486312;  // std dev = 0.869, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6007220145343485;  // std dev = 4.708, 223.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=197 */
%   | | else return -0.1627865085601361;  // std dev = 0.331, 499.000 (wgt'ed) examples reached here.  /* #neg=499 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5400841951792777;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10301131207835726;  // std dev = 4.156, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | | | else return 0.20388605088708545;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.16001337494215695;  // std dev = 1.755, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return 0.2982231312673257;  // std dev = 1.342, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2894725300267425;  // std dev = 0.844, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.48301835229609563;  // std dev = 4.384, 220.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=197 */
%   | | else return -0.14072242305656574;  // std dev = 0.104, 435.000 (wgt'ed) examples reached here.  /* #neg=435 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7290845634143941;  // std dev = 0.502, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.21968113696678812;  // std dev = 0.038, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.41403039249109935;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04089383229965541;  // std dev = 3.328, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.31436230546322036;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.347128730506728;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.250622102497668;  // std dev = 1.393, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(F, A) )
%   | then return 0.03893268744411313;  // std dev = 7.478, 695.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.09663469033362089;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.053563271643845875;  // std dev = 3.881, 85.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.20959976832146088;  // std dev = 1.145, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2652868093880484;  // std dev = 0.192, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.44211534775838285;  // std dev = 1.543, 94.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=91 */
%   | else return -0.16035620734538714;  // std dev = 1.288, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2678941777089558;  // std dev = 0.269, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.25516405816634175;  // std dev = 1.919, 37.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | else return -0.03403932910401383;  // std dev = 3.900, 188.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=33 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03624946687847146;  // std dev = 5.094, 312.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=99 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.7546138995493101;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.13701823343066558;  // std dev = 1.392, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.223723159002708;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.03905013079288101;  // std dev = 1.065, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1537234460598032;  // std dev = 0.952, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A) )
%   | then return 0.009148831161898768;  // std dev = 6.991, 750.000 (wgt'ed) examples reached here.  /* #neg=541 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18934370584877536;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09483277507812454;  // std dev = 3.498, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.012476536918727184;  // std dev = 0.843, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.15884081923430737;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1943698331978635;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14268243811059328;  // std dev = 0.901, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(F, A) )
%   | then return 0.016795172097850357;  // std dev = 6.977, 695.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=209 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5690756382527495;  // std dev = 1.040, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.2273872150143281;  // std dev = 0.325, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.15807787372234935;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10820433143010749;  // std dev = 1.038, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18733155630455836;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.08345635012007457;  // std dev = 1.270, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.04746295432210795;  // std dev = 1.574, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.004643170419850776;  // std dev = 7.062, 688.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=197 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04447499462340779;  // std dev = 3.033, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990541
   AUC PR    = 0.370326
   CLL	      = -0.180414
   Precision = 0.242754 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.370166


Total learning time: 5.271 seconds
Total inference time: 3.091 seconds
AUC ROC: 0.990541


Results scoring model
   AUC ROC   = 0.986285
   AUC PR    = 0.280643
   CLL	      = -0.182446
   Precision = 0.154477 at threshold = 0.5
   Recall    = 0.798587
   F1        = 0.258877


Total scoring time: 15.431 seconds
Parameter learned model CLL: -0.182446


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.988, 1, 42], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 11], 'false,false,true,true': [7.34, 214, 72], 'false,false,true,false': [9.316, 284, 125], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [9.42e-08, 0, 19], 'true,false': [1.629, 3, 23], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.135, 2, 6], 'false,true,false': [4.21e-08, 0, 10], 'false,false,true,true': [7.361, 219, 72], 'false,false,true,false': [9.341, 289, 125], 'false,false,false,true': [4.157, 56, 25], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.67, 3, 42], 'false,true,true,true': [2.232, 6, 30], 'false,true,true,false': [6.091, 220, 46], 'false,true,false,true': [1.542, 2, 133], 'false,true,false,false': [0.0, 277, 0], 'false,false,true,true': [1.111, 2, 2], 'false,false,true,false': [4.133, 55, 26], 'false,false,false,true': [1.644, 13, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [1.364, 2, 22], 'true,true,false': [0.964, 1, 8], 'true,false': [1.309, 2, 12], 'false,true,true,true': [0.869, 1, 12], 'false,true,true,false': [4.708, 26, 197], 'false,true,false': [0.331, 499, 0], 'false,false,true': [0.04, 0, 4], 'false,false,false,true': [4.156, 56, 25], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.755, 4, 15], 'true,false': [1.342, 2, 27], 'false,true,true,true': [0.844, 1, 12], 'false,true,true,false': [4.384, 23, 197], 'false,true,false': [0.104, 435, 0], 'false,false,true,true': [0.502, 0, 15], 'false,false,true,false': [0.038, 26, 0], 'false,false,false,true': [0.034, 0, 2], 'false,false,false,false': [3.328, 42, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.004, 0, 7], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.393, 2, 33], 'false,true': [7.478, 486, 209], 'false,false,true,true': [0.802, 2, 2], 'false,false,true,false': [3.881, 59, 26], 'false,false,false,true': [1.145, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.192, 0, 14], 'true,true,false': [1.543, 3, 91], 'true,false': [1.288, 208, 0], 'false,true,true,true': [0.269, 0, 17], 'false,true,true,false': [1.919, 9, 28], 'false,true,false': [3.9, 155, 33], 'false,false,true': [5.094, 213, 99], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [1.392, 2, 26], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [1.065, 2, 5], 'true,false,false,false': [0.952, 1, 9], 'false,true': [6.991, 541, 209], 'false,false,true,true': [0.482, 1, 2], 'false,false,true,false': [3.498, 46, 26], 'false,false,false,true': [0.843, 6, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.141, 0, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.901, 1, 12], 'false,true': [6.977, 486, 209], 'false,false,true,true': [1.04, 0, 32], 'false,false,true,false': [0.325, 67, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.014, 0, 9], 'true,true,true,false': [1.038, 1, 14], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.054, 0, 3], 'true,false': [1.27, 2, 15], 'false,true': [1.574, 3, 17], 'false,false,true': [7.062, 491, 197], 'false,false,false,true': [3.033, 52, 28], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.022714981070850387, 0.21004979769203197], 'false': [0.055363321799307655, 0.20431501660742568], 'false,false': [0.20310749961182367, 0.21301775147929117], 'false,false,false': [0.21631148854350374, 0.1874999999999999], 'false,false,true': [0.18837106948995105, 0.21221776531704287], 'false,true': [0.0, 0.07638888888888877], 'false,true,false': [0.0, -1.6148698540002277e-16], 'false,true,true': [0.0, 0.0]}, {'': [0.062222222222221214, 0.2046750856502765], 'false': [0.0847106006494733, 0.20195850988593056], 'false,false': [0.20117195340160807, 0.20766531802238955], 'false,false,false': [0.21338210638622032, 0.16836734693877567], 'false,false,true': [0.18620469762992864, 0.21076921281710298], 'false,true': [0.16105264821527412, 1.7763568394002506e-16], 'false,true,true': [nan, 0.16105264821527412], 'true': [4.674623261579606e-16, 0.10207100591716015]}, {'': [0.06200079551464594, 0.2024359715642748], 'false': [0.20179356783390764, 0.20689794282903334], 'false,false': [0.21552472720768434, 0.15900869748894322], 'false,false,true': [0.3086090069083032, 0.21087715083474023], 'false,true': [0.1844036398774723, 0.21326941431249433], 'false,true,false': [0.017618371516191875, -1.987980578390172e-16], 'false,true,true': [0.13839301277259056, 0.13945601604327942], 'false,false,false': [0.15900869748894322, nan]}, {'': [0.09606871112941004, 0.16205075005287756], 'false': [0.15513612548742142, 0.21428402615774877], 'false,false': [0.00040012698319347173, 0.21601770179179597], 'false,false,false': [0.21328996447695273, 0.23437499999999986], 'false,true': [0.09984093157174083, 0.00022021193417668024], 'false,true,true': [0.05812020851437179, 0.09940752059713681], 'true': [0.08455400619914631, 0.12244897959183666], 'true,true': [0.07751340380189307, 0.10317167757426213]}, {'': [0.10628184987240784, 0.12722916791351338], 'false': [0.11587861784868551, 0.20295009431359784], 'false,false': [0.21503519659707007, 0.19231374055265674], 'false,false,true': [0.016833441657734836, 5.686746195784268e-05], 'false,false,false': [0.0005744155184099486, 0.19432174489496115], 'false,true': [0.08751847622316546, 2.4861856718886288e-05], 'true': [0.16216928994920823, 0.06210475756228572], 'false,true,true': [0.05482529514725568, 0.08736030391473096]}, {'': [0.04497083287164961, 0.09242655368872374], 'false': [0.08047075599775355, 0.1773371295226815], 'false,false': [0.17658593913393955, 0.16390561371443868], 'false,false,true': [0.16092301931109754, 0.1772396403157279], 'false,false,false': [0.16390561371443868, nan], 'true': [0.00018716548514936045, 0.05545489104962839], 'true,true': [2.0549802421467234e-06, 0.0], 'true,true,true': [2.0549802421467234e-06, nan]}, {'': [0.08966382023174933, 0.08835758339149223], 'true': [0.025908678013964084, 0.007973898303536496], 'false': [0.09326214354950361, 0.08454322658116058], 'false,true': [0.06954936871200211, 0.0808892686427642], 'false,false': [0.08316548453750154, 0.0], 'false,true,true': [0.004252678063943595, 0.09949953328978622], 'true,true': [0.0026378265230462034, 0.025321247218624353], 'false,false,false': [0.0, nan]}, {'': [0.0892894071270326, 0.07577182124476053], 'true': [0.06921621865156098, 0.11755784496648546], 'true,false': [0.0, 0.12903938930217315], 'true,false,false': [0.16213243905931302, 0.090572397794055], 'false': [0.06516175117798709, 0.16194338214062823], 'false,false': [0.166613540601161, 0.11856898858278173], 'false,false,true': [0.07746785559031903, 0.169970651501874], 'false,false,false': [0.0789023261179192, 0.18749999999999997]}, {'': [0.01989119351537225, 0.08012034457092197], 'false': [0.070034595034698, 0.15077043581643002], 'false,false': [0.15077043581643002, nan], 'false,false,true': [0.03383182552130243, 0.0015782936652094996], 'true': [0.0006604789710445388, 0.06240586776569206], 'true,false': [nan, 0.06240586776569206]}, {'': [0.062383416568637266, 0.07828157309133038], 'false': [0.12380019741391476, 0.07705823747666057], 'false,false': [0.07247929021786854, 0.11501587783074137], 'false,false,false': [0.11501587783074137, nan], 'true': [0.04091476173533528, 0.09493649564476303], 'true,true': [0.04550351592598419, 0.0009592722933031891], 'true,true,true': [2.0950781045917274e-05, 0.07186029118015616], 'true,true,false': [nan, 0.0009592722933031891]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7711924133603816;  // std dev = 0.282, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6536034805540568;  // std dev = 2.676, 44.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=35 */
%   | | | else return 0.0036713231592131095;  // std dev = 5.773, 268.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=39 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.10304689428318518;  // std dev = 4.257, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return 0.16790503266048587;  // std dev = 9.363, 410.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=127 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6866846563336451;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.13668465633364488;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.736684656333645;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.48668465633364477;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6813720863478684;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1422985605472953;  // std dev = 2.36e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.08118783900031831;  // std dev = 4.581, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.11984410481019363;  // std dev = 5.365, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   | | | else return 0.18301483709343197;  // std dev = 9.978, 442.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=151 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4886984551200812;  // std dev = 0.305, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.020207327568137923;  // std dev = 3.220, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return 0.10571980973127067;  // std dev = 6.315, 206.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=60 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7251609101891443;  // std dev = 3.235, 144.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=133 */
%   | | | else return -0.17916067922186535;  // std dev = 0.326, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6691359561563599;  // std dev = 1.321, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.18537431510633084;  // std dev = 0.024, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.027849456397013722;  // std dev = 1.787, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.10985682476539016;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), interaction(F, F) )
%   | | then return 0.12181636862586338;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5005125566991756;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4685836406000478;  // std dev = 0.125, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5570888980248022;  // std dev = 4.545, 163.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=137 */
%   | | | else return 0.6512641141569115;  // std dev = 1.692, 75.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=72 */
%   | | else return -0.16199909097490797;  // std dev = 0.483, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4937485864809401;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.21026503239283198;  // std dev = 2.354, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.07037625754180579;  // std dev = 3.274, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3344506556311047;  // std dev = 0.162, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.22418829087917805;  // std dev = 0.348, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.19346574130926936;  // std dev = 1.297, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.47590666978916035;  // std dev = 4.666, 222.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=197 */
%   | | else return -0.14159897313418468;  // std dev = 0.466, 446.000 (wgt'ed) examples reached here.  /* #neg=446 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6158751260876049;  // std dev = 0.475, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.17864309749766635;  // std dev = 0.062, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44537945337899304;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.033653110418998045;  // std dev = 3.332, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.3127768138649481;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.14986618778549615;  // std dev = 0.809, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.4605509461331918;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.11294543854235439;  // std dev = 1.515, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.30047122010704946;  // std dev = 0.098, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2478082878715643;  // std dev = 0.164, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11514130500469223;  // std dev = 0.069, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.024471239951797685;  // std dev = 7.439, 623.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=176 */
%   | | | else return 0.0835356011709275;  // std dev = 4.198, 142.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.0184297371295035;  // std dev = 0.259, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then return 0.03391232208603855;  // std dev = 0.296, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | | else return 0.07244601638377147;  // std dev = 0.278, 111.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2097546871036544;  // std dev = 0.204, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.01074390361152581;  // std dev = 2.832, 114.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=24 */
%   | | | else return 0.08553448208548918;  // std dev = 3.585, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | else if ( interaction(M, A) )
%   | | then if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.2633441055521734;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.027453520802815646;  // std dev = 5.061, 287.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=87 */
%   | | else return 0.7598136884868162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return 0.23757583969798132;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.6999246647034285;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.17451060764736323;  // std dev = 0.188, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( enzyme(A, H), interaction(A, C) )
%   | | then return 0.3180505314147124;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16301407590222133;  // std dev = 0.873, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.43575361358625203;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.012757817539917815;  // std dev = 0.293, 492.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=137 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.010951971389652645;  // std dev = 0.323, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else return 0.038947028060694125;  // std dev = 0.291, 263.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=85 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.11928144002815977;  // std dev = 0.236, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | else return 0.21862671849561502;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.24993704838191558;  // std dev = 2.053, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return -0.06044880942315692;  // std dev = 2.660, 176.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=21 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.06597678008992426;  // std dev = 3.108, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.015069719996898698;  // std dev = 5.757, 449.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=134 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.1793007455426721;  // std dev = 1.289, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.30580961342517027;  // std dev = 2.658, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | else return -0.21449388774632977;  // std dev = 0.057, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13368638201759617;  // std dev = 0.213, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( location(A, G), location(D, G) )
%   | | | then return -0.1119874967699235;  // std dev = 1.007, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return -0.013263798990001808;  // std dev = 0.587, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.041092372340671444;  // std dev = 1.895, 78.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=12 */
%   | | | else return 0.014015950262455423;  // std dev = 1.946, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.39804669609826393;  // std dev = 1.441, 80.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=77 */
%   | | | else return -0.14945751511847416;  // std dev = 0.617, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03622779574737711;  // std dev = 4.207, 184.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=59 */
%   | | | else return -0.0015682415632389752;  // std dev = 4.727, 242.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=72 */


Results
   AUC ROC   = 0.985397
   AUC PR    = 0.313076
   CLL	      = -0.1905
   Precision = 0.255474 at threshold = 0.5
   Recall    = 0.813953
   F1        = 0.388889


Total learning time: 23.6 seconds
Total inference time: 4.419 seconds
AUC ROC: 0.985397


Results scoring model
   AUC ROC   = 0.984869
   AUC PR    = 0.266167
   CLL	      = -0.187159
   Precision = 0.168914 at threshold = 0.5
   Recall    = 0.840989
   F1        = 0.281324


Total scoring time: 57.164 seconds
Refined model CLL: -0.187159


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990541
   AUC PR    = 0.370326
   CLL	      = -0.180414
   Precision = 0.242754 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.370166


Total learning time: 101.46600000000001 seconds
Total inference time: 3.091 seconds
AUC ROC: 0.990541
Total revision time: 101.46600000000001
Best scored revision CLL: -0.182446


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:09:09
{'AUC ROC': 0.990541, 'AUC PR': 0.370326, 'CLL': -0.180414, 'Precision': [0.242754, 0.5], 'Recall': 0.77907, 'F1': 0.370166, 'Learning time': 101.46600000000001, 'Inference time': 3.091, 'parameter_1.0': {'AUC ROC': 0.990541, 'AUC PR': 0.370326, 'CLL': -0.180414, 'Precision': [0.242754, 0.5], 'Recall': 0.77907, 'F1': 0.370166, 'Learning time': 5.271, 'Inference time': 3.091}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.10814893509951232;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10814893509951237;  // std dev = 3.464, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.17393840878372288;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5766162693538116;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.055490127738493024;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.0944674378357556;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1251691922217201;  // std dev = 3.392, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.21062940169864786;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4763307970054414;  // std dev = 0.972, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6721593419089866;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.06361301581459058;  // std dev = 1.900, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.782625527461094;  // std dev = 0.357, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16834760679113833;  // std dev = 1.49e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20652349811048862;  // std dev = 3.229, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.3046213289373554;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4457016846280718;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.472254530725417;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.47225453072541707;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.41084335633488184;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6828265739481383;  // std dev = 1.048, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.15035172109027303;  // std dev = 0.023, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16441466780319205;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1034777442194852;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.12728025000909243;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3581620011957013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3490753781061996;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.31668011301486354;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.535658079334981;  // std dev = 1.047, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.13312866171565904;  // std dev = 0.115, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7639838924566872;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2373726958360049;  // std dev = 0.094, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.45675265491388983;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13277388591829475;  // std dev = 3.078, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2751753627805627;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E) )
%   | then return 0.02062347381107201;  // std dev = 2.370, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0308122071266068;  // std dev = 3.323, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.21962429744411024;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.26895642400095177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.44628338591116695;  // std dev = 0.748, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return -0.15457704719825735;  // std dev = 0.253, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.21016924231063772;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32592155193903966;  // std dev = 0.602, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.012615327040236117;  // std dev = 3.174, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | else if ( interaction(A, H) )
%   | | then return 7.02454423620358E-4;  // std dev = 0.783, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.016382555900148647;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.007454652785697606;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15936354078965864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2323803248202768;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return -0.008519068123192228;  // std dev = 2.192, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.13526890829015728;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.05756787341807078;  // std dev = 3.117, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.08200922576554256;  // std dev = 0.771, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.14902354905830492;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17990210801105944;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07111444675655137;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.004281395237203977;  // std dev = 2.198, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5125061122019664;  // std dev = 1.538, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.25237000827840844;  // std dev = 0.485, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15168685990754005;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05236185200603192;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17124701606408832;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then return 0.030538801675026254;  // std dev = 2.013, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.016069195465005418;  // std dev = 2.946, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990214
   AUC PR    = 0.303912
   CLL	      = -0.192183
   Precision = 0.347561 at threshold = 0.5
   Recall    = 0.655172
   F1        = 0.454183


Total learning time: 1.43 seconds
Total inference time: 5.351 seconds
AUC ROC: 0.990214


Results scoring model
   AUC ROC   = 0.990568
   AUC PR    = 0.288025
   CLL	      = -0.195868
   Precision = 0.301471 at threshold = 0.5
   Recall    = 0.732143
   F1        = 0.427083


Total scoring time: 2.753 seconds
Parameter learned model CLL: -0.195868


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [0.0, 0, 9], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.621, 29, 9], 'false,false,true,false': [2.872, 33, 11], 'false,false,false,true': [3.464, 48, 16], 'false,false,false,false': [2.026, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 3], 'true,false': [0.926, 1, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.068, 0, 5], 'false,false,true,true': [2.668, 34, 9], 'false,false,true,false': [2.872, 33, 11], 'false,false,false,true': [3.392, 41, 16], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.972, 1, 9], 'false,true,true,true': [0.913, 1, 5], 'false,true,true,false': [1.9, 37, 4], 'false,true,false,true': [0.357, 0, 14], 'false,true,false,false': [1.49e-08, 27, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.229, 28, 18], 'false,false,false,true': [1.732, 6, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.031, 0, 4], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.065, 0, 3], 'false,true,true,false': [1.048, 1, 20], 'false,true,false': [0.023, 50, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false,true': [3.328, 36, 16], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.038, 0, 8], 'false,true,true,true': [0.057, 0, 3], 'false,true,true,false': [1.047, 1, 20], 'false,true,false': [0.115, 75, 0], 'false,false,true,true': [0.061, 0, 7], 'false,false,true,false': [0.094, 16, 0], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [3.078, 26, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'false': 'interaction(A, E)', 'false,false': 'interaction(F, A), interaction(G, F)', 'false,false,true': 'recursion_proteinclass(G, B)', 'false,false,false': 'interaction(H, A)'}, {'true,true': [0.0, 0, 0], 'true,false': [0.034, 0, 9], 'false,true': [2.37, 65, 23], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [3.323, 43, 18], 'false,false,false,true': [1.58, 5, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.748, 1, 17], 'true,false': [0.253, 34, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.602, 1, 9], 'false,true,false': [3.174, 62, 19], 'false,false,true': [0.783, 9, 3], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.931, 1, 5], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.006, 0, 3], 'false,true': [2.192, 70, 23], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [3.117, 36, 18], 'false,false,false,true': [0.771, 6, 2], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.019, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.85, 1, 3], 'false,true': [2.198, 59, 23], 'false,false,true,true': [1.538, 3, 24], 'false,false,true,false': [0.485, 56, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 0], 'true,true,true,false': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.932, 1, 5], 'false,true': [0.057, 0, 6], 'false,false,true': [2.013, 45, 20], 'false,false,false,true': [2.946, 47, 22], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.19930918915221874], 'false': [0.1388888888888887, 0.18975206611570355], 'false,false': [0.18441403926234334, 0.19480330962403924], 'false,false,false': [0.18749999999999947, 0.21606648199445994], 'false,false,true': [0.18074792243767326, 0.18750000000000008], 'false,true': [nan, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16]}, {'': [0.09000000000000008, 0.19947601487404093], 'false': [0.0009271942996655014, 0.19335413138982008], 'false,false': [0.1770036548498801, 0.21027417806520876], 'false,false,false': [0.20190827947060624, 0.23437499999999983], 'false,false,true': [0.16549486208761513, 0.18749999999999972], 'true': [1.4802973661668753e-16, 0.12244897959183675], 'false,true': [nan, 0.0009271942996655014]}, {'': [0.09448587498588172, 0.20734561732414386], 'false': [0.1828402313738607, 0.23308553583796165], 'false,false': [0.22668206325448373, 0.24999999999999992], 'false,false,false': [0.24999999999999992, nan], 'false,false,true': [nan, 0.22668206325448373], 'false,true': [0.1548211860570391, 0.206472379844686], 'false,true,false': [0.009121615917492372, 8.22387425648264e-18], 'false,true,true': [0.13888888888888898, 0.08804283164782871]}, {'': [0.00027853970799775044, 0.18733788494670367], 'false': [0.15749234057556277, 0.21844112588513587], 'false,false': [0.2222222222222222, 0.21814492788781983], 'false,false,false': [0.2130177514792894, 0.234375], 'false,true': [0.05403311485020298, 1.0293152478251243e-05], 'false,true,true': [0.0014090480955281093, 0.052303979839391716], 'true': [0.000313357171497497, -3.700743415417188e-17], 'true,true': [0.00023501787862309498, 0.0]}, {'': [0.00016902724468000527, 0.14400692843173596], 'false': [0.08806432963080049, 0.22222413257147391], 'false,false': [0.21283772645817578, 0.22498904254077712], 'false,false,false': [0.0, 0.23108215300713844], 'false,false,true': [0.0005234721552694412, 0.0005510771322074504], 'false,true': [0.0510371821374113, 0.00017663992433531857], 'false,true,true': [0.001101791950946877, 0.052176890590194196], 'true': [0.0, 0.000180981570357161]}, {'': [0.00012673821024828454, 0.12217441746320583], 'false': [0.06384635219915707, 0.19262622176558658], 'false,false': [0.18098736613962957, 0.22696548976080094], 'false,false,false': [0.22696548976080094, nan], 'false,false,true': [nan, 0.18098736613962957], 'true': [nan, 0.00012673821024827218]}, {'': [0.09280537043302739, 0.1258818730459152], 'false': [0.12297337737122202, 0.1373689586331212], 'false,false': [0.05105170403840976, 0.23140495867768598], 'false,false,false': [0.23140495867768598, nan], 'false,true': [0.030239021322072304, 0.12440931549072073], 'true': [0.031054831568336362, 0.0018754882146277832], 'true,true': [0.0, 0.031125107808783303], 'false,true,true': [-9.25185853854297e-18, 0.036218743753084204]}, {'': [0.09732976517499378, 0.10676068248122791], 'false': [0.05167332565628563, 0.17701309357899597], 'false,false': [0.17735463243133798, 0.17551177193055387], 'false,false,true': [0.0, 0.1799628679421884], 'false,false,false': [0.0743354723397044, 0.25000000000000006], 'true': [0.14445894470378104, 0.0010081364799243084], 'true,false': [nan, 0.0010081364799243084], 'true,false,false': [0.0, 1.1319285688926595e-05]}, {'': [0.08744619197274117, 0.10965877170729448], 'false': [0.05893773645974378, 0.15973819258530422], 'false,false': [0.15973819258530422, nan], 'false,false,true': [0.08762360460974764, 0.004194979671230313], 'true': [6.326222431874325e-05, 0.18071500013493422], 'true,false': [nan, 0.18071500013493422]}, {'': [0.09867336606509441, 0.0919165655660995], 'true': [0.0, 0.14472156336609676], 'false': [0.0005470995009775326, 0.09506697495079426], 'false,false': [0.062350685211877074, 0.1257851083491393], 'false,false,false': [0.1257851083491393, nan], 'true,true': [0.0, nan], 'true,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, F), interaction(F, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, F).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.09639651944594235;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.10814893509951236;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.08228686613399507;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.05181784654393886;  // std dev = 1.998, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return -0.09326551635167216;  // std dev = 0.963, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.22435101434086602;  // std dev = 4.611, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return -0.07730580754438078;  // std dev = 0.963, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.47014438962887706;  // std dev = 0.306, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.1854127578462199;  // std dev = 2.034, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.07275828104821055;  // std dev = 1.376, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7643603453812788;  // std dev = 0.339, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16543688329649348;  // std dev = 0.177, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7078957484326603;  // std dev = 0.989, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1996744789526212;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.027928342176452396;  // std dev = 1.299, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.07605421139073769;  // std dev = 2.273, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.45513571255341884;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.4072571095211519;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6439334715792442;  // std dev = 1.220, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( interaction(G, A), location(A, H) )
%   | | | then return -0.17911821596921154;  // std dev = 0.245, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.1337872848771318;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7049679900317167;  // std dev = 0.198, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1984962220570436;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.2230387043397798;  // std dev = 1.550, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.043271175772333706;  // std dev = 2.568, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3465870009903305;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3137655815803445;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4998277663439646;  // std dev = 1.312, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.15408740741311008;  // std dev = 0.147, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.12100061437144656;  // std dev = 0.120, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6755269699262441;  // std dev = 0.291, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2075546315737639;  // std dev = 0.262, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3890969195783763;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.025836186204435948;  // std dev = 2.841, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.039863842415503364;  // std dev = 0.901, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.259323152389722;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( interaction(G, A), phenotype(D, H) )
%   | | | then return 0.02792604080397687;  // std dev = 1.461, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.43711400567630015;  // std dev = 0.644, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.016308597029502804;  // std dev = 0.197, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5243256199041566;  // std dev = 0.324, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17112631748439303;  // std dev = 0.167, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.10983744456621274;  // std dev = 2.207, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.39749457725889786;  // std dev = 1.052, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34979042312901515;  // std dev = 0.200, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.15535351446907245;  // std dev = 0.092, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.29173926034269215;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22899113625581827;  // std dev = 1.126, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1309818409317259;  // std dev = 0.096, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.035438031225718605;  // std dev = 2.507, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.14983418340361002;  // std dev = 0.781, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01727165802842707;  // std dev = 1.054, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.25002501919091014;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2051055065769599;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( location(A, E), phenotype(A, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2382045999259044;  // std dev = 1.166, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.13574655638843416;  // std dev = 0.174, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.08911941983698764;  // std dev = 0.318, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.0013731161216453819;  // std dev = 0.872, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04957393721898878;  // std dev = 2.407, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | else if ( location(A, L) )
%   | | | then return 0.011551216046246583;  // std dev = 1.135, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.27048359383722775;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17379748826840075;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, E) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return 0.039408335892819446;  // std dev = 1.955, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return -0.03618234110476599;  // std dev = 1.596, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( phenotype(D, H), complex(D, I) )
%   | | | then return 0.23612565405258115;  // std dev = 1.019, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07940778529786476;  // std dev = 1.510, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(A, K), complex(J, L) )
%   | | | then return 0.14652785734701346;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10820298473670614;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.12585886211822847;  // std dev = 0.414, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.08854034968808834;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17399214938791163;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11044413984416201;  // std dev = 0.587, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.13847914891149135;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.37238116826135;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0044226665240027245;  // std dev = 2.469, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | else if ( location(A, I) )
%   | | | then return -0.07881428925826718;  // std dev = 1.974, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return 0.14842045607779253;  // std dev = 0.603, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */


Results
   AUC ROC   = 0.971219
   AUC PR    = 0.285753
   CLL	      = -0.190553
   Precision = 0.320442 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.432836


Total learning time: 5.568 seconds
Total inference time: 9.841 seconds
AUC ROC: 0.971219


Results scoring model
   AUC ROC   = 0.989155
   AUC PR    = 0.28561
   CLL	      = -0.190389
   Precision = 0.288344 at threshold = 0.5
   Recall    = 0.839286
   F1        = 0.429224


Total scoring time: 16.794 seconds
Refined model CLL: -0.190389


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971219
   AUC PR    = 0.285753
   CLL	      = -0.190553
   Precision = 0.320442 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.432836


Total learning time: 26.545 seconds
Total inference time: 9.841 seconds
AUC ROC: 0.971219
Total revision time: 26.545
Best scored revision CLL: -0.190389


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:09:52
{'AUC ROC': 0.971219, 'AUC PR': 0.285753, 'CLL': -0.190553, 'Precision': [0.320442, 0.5], 'Recall': 0.666667, 'F1': 0.432836, 'Learning time': 26.545, 'Inference time': 9.841, 'parameter_0.2': {'AUC ROC': 0.990214, 'AUC PR': 0.303912, 'CLL': -0.192183, 'Precision': [0.347561, 0.5], 'Recall': 0.655172, 'F1': 0.454183, 'Learning time': 1.43, 'Inference time': 5.351}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.04564893509951238;  // std dev = 3.491, 80.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=15 */
%   | | | else return 0.0977322684328455;  // std dev = 4.182, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15279179224236805;  // std dev = 4.825, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5766162693538116;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.6100122940520396;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.06678647271038267;  // std dev = 3.433, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | | else return 0.22287986199479035;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13054877287993852;  // std dev = 4.834, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | | else return 0.2274206780435813;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4921379249536099;  // std dev = 1.384, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5105702781591873;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.018937189926564506;  // std dev = 2.865, 71.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.79369583269015;  // std dev = 0.300, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.18551989578161812;  // std dev = 1.49e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14083223871141914;  // std dev = 4.840, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.13406937307200142;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.44384311108904445;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.4565331337706322;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3388978790769108;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.47729438816569136;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6965146051068067;  // std dev = 1.147, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.1587591950050809;  // std dev = 0.251, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5476069818759743;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12206240568117292;  // std dev = 4.723, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.05348020355328624;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.2694648517605736;  // std dev = 1.374, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0.328803113646295;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.23850516316879888;  // std dev = 0.577, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5273243812535646;  // std dev = 1.382, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.13671378391293185;  // std dev = 0.028, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46248329159979706;  // std dev = 3.614, 64.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=45 */
%   | | | else return -0.2234201954886957;  // std dev = 0.040, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.044244771429836155;  // std dev = 1.272, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.27200482674213133;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3240402360109269;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3045020285477859;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then return 0.02333523127618098;  // std dev = 3.174, 161.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=42 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.28249607980799707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07119945734287506;  // std dev = 4.361, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.028409675220806903;  // std dev = 2.602, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23140227064945454;  // std dev = 0.529, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.24249604543153105;  // std dev = 4.805, 141.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=89 */
%   | else return -0.15636646558504333;  // std dev = 0.529, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.20637624962883738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.22674021964311294;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( interaction(A, H) )
%   | | then return -0.12597279700796155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.17192035591612362;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18879243141180543;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, E), interaction(C, A) )
%   | | then return 0.21573293650802416;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, F) )
%   | | | then return 0.2072728543360945;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.012192533047770536;  // std dev = 2.872, 155.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.27445938316602797;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.036859496174625285;  // std dev = 4.111, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( location(A, J) )
%   | | | then return 0.06787198583202544;  // std dev = 2.090, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.24024957732183752;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.10297646579865338;  // std dev = 0.962, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1675878870606371;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.04129187510946074;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, G) )
%   | then return -0.0052705519085684644;  // std dev = 2.944, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5085049885120728;  // std dev = 1.849, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | | else return -0.22407417152913456;  // std dev = 0.857, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.14999514634186387;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13645469921361286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20459325433065503;  // std dev = 0.187, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.064451163377174;  // std dev = 0.932, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0017382340760275776;  // std dev = 2.799, 158.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=38 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.030158512665200563;  // std dev = 3.794, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.984685
   AUC PR    = 0.276101
   CLL	      = -0.195024
   Precision = 0.204724 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.333333


Total learning time: 4.138 seconds
Total inference time: 7.928 seconds
AUC ROC: 0.984685


Results scoring model
   AUC ROC   = 0.989716
   AUC PR    = 0.284531
   CLL	      = -0.19721
   Precision = 0.231121 at threshold = 0.5
   Recall    = 0.901786
   F1        = 0.367942


Total scoring time: 15.924 seconds
Parameter learned model CLL: -0.19721


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,false': 'interaction(D, F), interaction(F, D)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true': [8.43e-08, 0, 23], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 5], 'false,false,true,true': [3.491, 65, 15], 'false,false,true,false': [4.182, 73, 23], 'false,false,false,true': [4.825, 79, 33], 'false,false,false,false': [2.728, 23, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.98e-08, 0, 11], 'true,false': [1.309, 2, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.955, 1, 7], 'false,false,true,true': [3.433, 55, 15], 'false,false,true,false': [3.785, 38, 23], 'false,false,false,true': [4.834, 80, 33], 'false,false,false,false': [2.584, 17, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.384, 2, 23], 'false,true,true,true': [1.414, 3, 6], 'false,true,true,false': [2.865, 61, 10], 'false,true,false,true': [0.3, 0, 26], 'false,true,false,false': [1.49e-08, 49, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [4.84, 74, 36], 'false,false,false,true': [2.708, 22, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.059, 0, 13], 'true,true,false': [0.029, 0, 3], 'true,false': [0.931, 1, 7], 'false,true,true,true': [0.143, 0, 4], 'false,true,true,false': [1.147, 1, 38], 'false,true,false': [0.251, 126, 0], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [4.723, 69, 33], 'false,false,false,false': [2.824, 29, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.374, 2, 22], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.577, 1, 4], 'false,true,true,false': [1.382, 2, 38], 'false,true,false': [0.028, 129, 0], 'false,false,true,true': [3.614, 19, 45], 'false,false,true,false': [0.04, 86, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.272, 9, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.002, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.061, 0, 12], 'false,true': [3.174, 119, 42], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [4.361, 73, 36], 'false,false,false,true': [2.602, 30, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.529, 1, 20], 'true,true,false': [4.805, 52, 89], 'true,false': [0.529, 171, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 2, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'location(A, E), interaction(C, A)', 'true,false,false': 'location(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.039, 0, 14], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.023, 0, 7], 'true,false,false,false': [0.0, 0, 0], 'false,true': [2.872, 113, 42], 'false,false,true,true': [0.0, 2, 0], 'false,false,true,false': [4.111, 77, 36], 'false,false,false,true': [2.09, 16, 9], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.962, 1, 16], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.924, 1, 6], 'false,true': [2.944, 127, 42], 'false,false,true,true': [1.849, 5, 47], 'false,false,true,false': [0.857, 99, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'location(A, F), location(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.04, 0, 11], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.187, 0, 9], 'false,true': [0.932, 1, 9], 'false,false,true': [2.799, 120, 38], 'false,false,false,true': [3.794, 90, 44], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [3.089316242435218e-16, 0.1969605142332426], 'false': [0.10937499999999978, 0.18980749199490796], 'false,false': [0.16929235537190201, 0.21054606868080425], 'false,false,false': [0.20782844387755237, 0.2188581314878888], 'false,false,true': [0.15234374999999947, 0.18218315972222177], 'false,true': [nan, 0.10937499999999978], 'false,true,false': [0.22222222222222224, 0.0]}, {'': [0.07360000000000007, 0.21317390877845216], 'false': [0.16909390627517132, 0.2101727256540004], 'false,false': [0.20540286494272003, 0.21455305893665846], 'false,false,false': [0.20675072441068318, 0.23852040816326542], 'false,false,true': [0.1683673469387751, 0.23488309594195161], 'false,true': [0.0, 0.11398409100688517], 'true': [8.074349270001139e-17, 0.12244897959183675], 'false,true,true': [nan, 0.0]}, {'': [0.07658816116458461, 0.20209564899789964], 'false': [0.18918701663603776, 0.2150891225238676], 'false,false': [0.21293863807167254, 0.22222222222222246], 'false,false,false': [0.22222222222222246, nan], 'false,false,true': [nan, 0.21293863807167254], 'false,true': [0.1556114270101044, 0.21837441634794766], 'false,true,false': [0.0034687516511856787, 4.5315225494904345e-18], 'false,true,true': [0.2222222222222222, 0.11562526222146799]}, {'': [0.0388906020374031, 0.1757554402202778], 'false': [0.14154209916327, 0.21380351084753876], 'false,false': [-3.700743415417188e-17, 0.21422593044328073], 'false,false,false': [0.21872488996047842, 0.19937499999999983], 'false,true': [0.0351485609276636, 0.0005010278884609834], 'true': [0.00029289315650216086, 0.10840697167709255], 'false,true,true': [0.00510103296244685, 0.03375989322436341], 'true,true': [0.00026620348425288043, 0.00027770610394288003]}, {'': [0.07569859920680991, 0.1436097895134484], 'false': [0.09158642430584417, 0.19920629623822067], 'false,false': [0.20215289921859436, 0.14702817102486823], 'false,false,true': [0.20403789230254674, 1.89803983472252e-05], 'false,false,false': [nan, 0.14702817102486823], 'false,true': [0.05804186928717334, 5.981644534578889e-06], 'true': [0.0787118663341489, 0.0], 'false,true,true': [0.06647741192904252, 0.04771892193081802]}, {'': [0.0004847414483361833, 0.11578189216563821], 'false': [0.06258591999708568, 0.17190763372686765], 'false,false': [0.17399689176224106, 0.16516141743901555], 'false,false,true': [0.0, 0.1744559159487964], 'false,false,false': [0.16516141743901555, nan], 'true': [0.0004033038986464515, 0.0003055951055364603], 'true,true': [6.208385489283843e-07, 0.0], 'true,true,true': [6.208385489283843e-07, nan]}, {'': [0.1104653922425142, 0.1647516546733808], 'false': [0.04168663910102229, 0.21232504591097956], 'false,false': [0.0, 0.24000000000000005], 'false,false,false': [0.24000000000000005, nan], 'true': [0.14423067364927036, 0.0016385502821292214], 'true,true': [0.013301495747120303, 0.16371481021822584], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan]}, {'': [0.0001918520833153832, 0.10356928208072257], 'false': [0.05320475641958658, 0.15727073237618278], 'false,false': [0.14863742808716102, 0.18861176706243205], 'false,false,false': [0.17469116233754822, 0.25], 'false,false,true': [0.0, 0.149582623467906], 'true': [0.00010832256218728678, 6.945359338045298e-05], 'true,false': [0.0, 7.339236823547932e-05], 'true,false,false': [7.339236823547932e-05, nan]}, {'': [0.07223644457306093, 0.09751274019560366], 'false': [0.051271577521831334, 0.14867427996356927], 'false,false': [0.14867427996356927, nan], 'false,false,true': [0.06573627484160349, 0.007423400184100762], 'true': [0.054490793866590045, 0.10851347201243232], 'true,false': [0.0, 0.12202156125629048], 'true,false,true': [nan, 0.0]}, {'': [0.0025087929937759853, 0.07674723594710547], 'false': [0.08690521279630711, 0.07631766522384222], 'false,false': [0.049568104766657343, 0.10742114196202043], 'false,false,false': [0.10742114196202043, nan], 'true': [0.00014580182681107426, 0.003884910502925048], 'true,true': [0.00014580182681107426, nan], 'true,true,true': [0.000143777895969926, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, F), interaction(F, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(A, F).;true;true
5;false,false;interaction(G, A), interaction(H, G).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,false;interaction(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;location(A, E), interaction(C, A).;true;true
7;false;interaction(A, G).;true;true
7;false,false;interaction(H, A), interaction(I, H).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;location(A, F), location(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(G, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.03672036367094094;  // std dev = 2.866, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | | | else return 0.16716181063599392;  // std dev = 7.053, 233.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=72 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4020062622195435;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7313730497173961;  // std dev = 0.071, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.0179230205508287;  // std dev = 2.712, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.059906314174013084;  // std dev = 3.418, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.17022905929429097;  // std dev = 6.229, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5260622620656796;  // std dev = 0.205, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.06817077670481803;  // std dev = 3.198, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return -0.08351595946520228;  // std dev = 1.346, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7972587141934467;  // std dev = 0.364, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.17433729592583022;  // std dev = 0.071, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), phenotype(J, L) )
%   | | | then return 0.11485293487643533;  // std dev = 4.610, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return -0.03921253601348166;  // std dev = 1.844, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.5667097738500417;  // std dev = 0.849, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2128870828477763;  // std dev = 2.187, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43622420567049136;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.10903812162979783;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.43809093696781803;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.23933824474468177;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7119533003972037;  // std dev = 1.009, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.15596658768898816;  // std dev = 0.019, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3019235228496478;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.1490953241885492;  // std dev = 3.977, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.041743008438750756;  // std dev = 3.776, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.36572555418758795;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2591893050372717;  // std dev = 0.246, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3230240837219749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5393966316849905;  // std dev = 0.191, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.1367882100987977;  // std dev = 0.017, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37994648721021346;  // std dev = 4.048, 73.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | | else return -0.22607859551746298;  // std dev = 0.236, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.18845529502699707;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.10327450125677957;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(C, D) )
%   | then return 0.26700477541787565;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.29231369059036094;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.04339243513483506;  // std dev = 1.112, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.16388797326361754;  // std dev = 0.298, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else return -0.0067432571388135725;  // std dev = 0.230, 129.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05333976558576367;  // std dev = 4.555, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.24897762063339174;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10353980373244095;  // std dev = 2.447, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(E, F) )
%   | | then if ( interaction(E, E), location(A, F) )
%   | | | then return 0.0755281846139264;  // std dev = 1.719, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
%   | | | else return 0.2220345862337835;  // std dev = 2.015, 64.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=44 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.23517234142304308;  // std dev = 2.587, 27.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=15 */
%   | | | else return 0.40875378569168114;  // std dev = 2.712, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else return -0.1588415585944617;  // std dev = 0.045, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.26511692231173956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.14151690427227326;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, J) )
%   | | then return -0.12137516978048221;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.06462085088795962;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17191489522648795;  // std dev = 0.189, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(E, G), location(A, H) )
%   | | | then return 0.01312238735531467;  // std dev = 2.725, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | | else return -0.08533359809767757;  // std dev = 0.630, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.14611779526765087;  // std dev = 0.851, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.0061842799272036324;  // std dev = 0.671, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return -0.4394759607110128;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.07302773289696304;  // std dev = 4.010, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | else if ( location(A, L) )
%   | | | then return 0.052682122297767586;  // std dev = 1.915, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.38506767619059773;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18033969448663278;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.06963143877319206;  // std dev = 0.326, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.20615605811550286;  // std dev = 0.749, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.08286705404418787;  // std dev = 1.186, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | | else return 0.03991386522950401;  // std dev = 1.086, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4659917747737902;  // std dev = 0.262, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03023346494864399;  // std dev = 4.247, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.036654915944809935;  // std dev = 1.415, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.04492145202885953;  // std dev = 2.301, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16108687574482097;  // std dev = 0.109, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), phenotype(E, F) )
%   | | | then return -0.3077244437160951;  // std dev = 0.947, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.24621965972284815;  // std dev = 0.920, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else if ( interaction(G, A), complex(D, H) )
%   | | | then return -0.07760413933541849;  // std dev = 1.408, 77.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=6 */
%   | | | else return -0.010020665843588948;  // std dev = 1.794, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5936831022949896;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18593015021995632;  // std dev = 0.189, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.050108802565829884;  // std dev = 1.945, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.03922721457861281;  // std dev = 3.686, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */


Results
   AUC ROC   = 0.97135
   AUC PR    = 0.265471
   CLL	      = -0.202968
   Precision = 0.278107 at threshold = 0.5
   Recall    = 0.54023
   F1        = 0.367187


Total learning time: 15.309 seconds
Total inference time: 9.977 seconds
AUC ROC: 0.97135


Results scoring model
   AUC ROC   = 0.97755
   AUC PR    = 0.296645
   CLL	      = -0.209818
   Precision = 0.229102 at threshold = 0.5
   Recall    = 0.660714
   F1        = 0.34023


Total scoring time: 24.598 seconds
Refined model CLL: -0.209818


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984685
   AUC PR    = 0.276101
   CLL	      = -0.195024
   Precision = 0.204724 at threshold = 0.5
   Recall    = 0.896552
   F1        = 0.333333


Total learning time: 59.968999999999994 seconds
Total inference time: 7.928 seconds
AUC ROC: 0.984685
Total revision time: 59.968999999999994
Best scored revision CLL: -0.19721


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:11:10
{'AUC ROC': 0.984685, 'AUC PR': 0.276101, 'CLL': -0.195024, 'Precision': [0.204724, 0.5], 'Recall': 0.896552, 'F1': 0.333333, 'Learning time': 59.968999999999994, 'Inference time': 7.928, 'parameter_0.4': {'AUC ROC': 0.984685, 'AUC PR': 0.276101, 'CLL': -0.195024, 'Precision': [0.204724, 0.5], 'Recall': 0.896552, 'F1': 0.333333, 'Learning time': 4.138, 'Inference time': 7.928}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0972793698821198;  // std dev = 5.011, 138.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | | else return 0.17541801140473423;  // std dev = 7.344, 249.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=79 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182005;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6545092049196706;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.725937776348242;  // std dev = 5.96e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5607398372152491;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.6004052955700551;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.1017036843927719;  // std dev = 4.956, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   | | | else return 0.14522999461391775;  // std dev = 7.384, 255.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=79 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1126006195978467;  // std dev = 3.404, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.023937365911308732;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.47824167450507177;  // std dev = 1.655, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5820327364359899;  // std dev = 1.762, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.00504883298714621;  // std dev = 4.193, 129.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=21 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.76903789216246;  // std dev = 1.733, 87.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=84 */
%   | | | else return -0.18552531672580463;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4139240121042139;  // std dev = 1.215, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.05237607522017723;  // std dev = 3.353, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3365056849987329;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.38520373151266957;  // std dev = 0.978, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.44863070779256625;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4427347955777533;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3062162909224059;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6048522509779692;  // std dev = 3.453, 125.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=112 */
%   | | else return -0.16213997570353686;  // std dev = 0.164, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5423188577289182;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06101911747662908;  // std dev = 3.439, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.03515248653482342;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.31482028992059924;  // std dev = 0.997, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.3590752677284962;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2604979644633117;  // std dev = 0.732, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.48048170358888664;  // std dev = 3.272, 124.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=112 */
%   | | else return -0.14125635678059376;  // std dev = 0.060, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2686232892260899;  // std dev = 2.870, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return -0.19652396987863394;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19861347682461733;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.29543709540976665;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2713813593068014;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.27304195942775344;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.019822785509169518;  // std dev = 5.743, 431.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=118 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.24260733359933237;  // std dev = 1.016, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.03680238251111294;  // std dev = 3.155, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06981917728681677;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20470033498477702;  // std dev = 1.183, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.2137121572184734;  // std dev = 4.959, 220.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=133 */
%   | else return -0.13222675507824827;  // std dev = 0.234, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23577888829515792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10950483435339578;  // std dev = 1.180, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.00217399867667674;  // std dev = 0.707, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.7562082873249301;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19847663040239608;  // std dev = 0.032, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, E), interaction(A, C) )
%   | | then return 0.1879009884486943;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, F) )
%   | | | then return 0.02523846181222782;  // std dev = 1.255, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.22277540022053666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.012400650400734197;  // std dev = 5.147, 422.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=118 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3703509000508719;  // std dev = 0.384, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.056647422888674595;  // std dev = 2.958, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( location(A, J) )
%   | | | then return -0.19483367161080467;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15714165046804346;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17208109521593912;  // std dev = 0.038, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17656712609502354;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then return 0.01738720182306193;  // std dev = 5.191, 395.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=118 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5844628863340804;  // std dev = 0.877, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.2052933916628758;  // std dev = 0.491, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.14779053867157854;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.14401944647808163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, C), location(C, G) )
%   | | | then return 0.14043268690243918;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2935292564652646;  // std dev = 0.740, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.07007860195111905;  // std dev = 1.019, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1550040352063958;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A) )
%   | | then return 0.020541689450658925;  // std dev = 4.984, 378.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=112 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.005214788139134495;  // std dev = 2.549, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.979514
   AUC PR    = 0.199334
   CLL	      = -0.183884
   Precision = 0.145882 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.242187


Total learning time: 5.236 seconds
Total inference time: 8.969 seconds
AUC ROC: 0.979514


Results scoring model
   AUC ROC   = 0.985226
   AUC PR    = 0.218757
   CLL	      = -0.181835
   Precision = 0.173127 at threshold = 0.5
   Recall    = 0.792899
   F1        = 0.284199


Total scoring time: 21.949 seconds
Parameter learned model CLL: -0.181835


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.984, 1, 30], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.225, 2, 6], 'false,false,true,true': [5.011, 105, 33], 'false,false,true,false': [7.344, 170, 79], 'false,false,false,true': [3.328, 36, 16], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.964, 1, 13], 'true,false': [5.96e-08, 0, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.923, 1, 5], 'false,true,false': [0.913, 1, 5], 'false,false,true,true': [4.956, 96, 33], 'false,false,true,false': [7.384, 176, 79], 'false,false,false,true': [3.404, 42, 16], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.655, 3, 30], 'false,true,true,true': [1.762, 4, 13], 'false,true,true,false': [4.193, 108, 21], 'false,true,false,true': [1.733, 3, 84], 'false,true,false,false': [0.0, 166, 0], 'false,false,true,true': [1.215, 2, 5], 'false,false,true,false': [3.353, 49, 15], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.978, 1, 13], 'true,true,false': [0.02, 0, 6], 'true,false': [0.0, 0, 11], 'false,true,true,true': [0.912, 1, 6], 'false,true,true,false': [3.453, 13, 112], 'false,true,false': [0.164, 250, 0], 'false,false,true': [0.115, 0, 4], 'false,false,false,true': [3.439, 48, 16], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.997, 1, 28], 'true,false': [0.012, 0, 2], 'false,true,true,true': [0.732, 1, 6], 'false,true,true,false': [3.272, 12, 112], 'false,true,false': [0.06, 299, 0], 'false,false,true,true': [2.87, 18, 19], 'false,false,true,false': [0.0, 25, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.082, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.017, 0, 12], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.02, 0, 16], 'false,true': [5.743, 313, 118], 'false,false,true,true': [1.016, 2, 5], 'false,false,true,false': [3.155, 45, 15], 'false,false,false,true': [0.894, 5, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [1.183, 2, 27], 'true,true,false': [4.959, 87, 133], 'true,false': [0.234, 242, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [1.18, 6, 4], 'false,false,true': [0.707, 8, 3], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'location(A, E), interaction(A, C)', 'true,false,false': 'location(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.032, 0, 17], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [1.255, 2, 10], 'true,false,false,false': [0.0, 0, 1], 'false,true': [5.147, 304, 118], 'false,false,true,true': [0.384, 0, 5], 'false,false,true,false': [2.958, 36, 15], 'false,false,false,true': [0.121, 4, 0], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.038, 0, 19], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.033, 0, 11], 'false,true': [5.191, 277, 118], 'false,false,true,true': [0.877, 0, 21], 'false,false,true,false': [0.491, 52, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(D, C), location(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.018, 0, 14], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.11, 0, 3], 'true,true,false,false': [0.74, 1, 1], 'true,false': [1.019, 2, 9], 'false,true': [0.031, 0, 12], 'false,false,true': [4.984, 266, 112], 'false,false,false,true': [2.549, 54, 17], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.03121748178980358, 0.21242892351879725], 'false': [0.1388888888888887, 0.206675743739891], 'false,false': [0.20565003438629015, 0.21355371900826395], 'false,false,false': [0.21301775147928942, 0.22222222222222224], 'false,false,true': [0.18194706994329043, 0.2166094095256529], 'false,true': [0.0, 0.18750000000000006], 'false,true,false': [nan, 0.1874999999999999], 'false,true,true': [0.0, 0.0]}, {'': [0.031217481789801688, 0.20817958225456593], 'false': [0.140761742839323, 0.20459955775959893], 'false,false': [0.20636959296001292, 0.19322760670149744], 'false,false,true': [0.1903731746890216, 0.213825451749326], 'false,false,false': [0.19976218787158107, 0.12244897959183673], 'false,true': [0.14184792249650868, 0.13888888888888884], 'false,true,true': [nan, 0.14184792249650868], 'true': [0.06632653061224511, 2.0898315757650005e-16]}, {'': [0.08300869894721914, 0.20265254330850657], 'false': [0.20417088948811188, 0.19405372787610264], 'false,true': [0.17713599900860622, 0.2174643962025295], 'false,true,false': [0.03453996971103804, -2.7822456520726815e-16], 'false,false': [0.1907861514142198, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.21098745719794373, 0.17568905085249503], 'false,true,true': [0.18255334213431565, 0.13628988642509518]}, {'': [0.031772205476810096, 0.16649911291611413], 'false': [0.1626000152991546, 0.18708230982416646], 'false,false': [0.0033034096843731486, 0.18494192145740782], 'false,false,false': [0.18474268374871472, 0.1875], 'false,true': [0.10108789750877806, 0.00010731522710543473], 'false,true,true': [0.1187730935773139, 0.09536810185872485], 'true': [0.048720877628168256, 0.0], 'true,true': [0.06836456354637023, 6.952356168954399e-05]}, {'': [0.03218276656704468, 0.1172566674913641], 'false': [0.10571582810788965, 0.1895523835573366], 'false,false': [0.1849157832260219, 0.2342595137421563], 'false,false,false': [nan, 0.2342595137421563], 'false,false,true': [0.22261614909203908, -3.552713678800501e-17], 'false,true': [0.08825369780925876, 1.2005299402289464e-05], 'false,true,true': [0.07652161371182206, 0.08633011563990457], 'true': [0.03427125481095681, 6.753900571981886e-05]}, {'': [0.00014511944133706046, 0.08963167967388021], 'false': [0.07652297119490717, 0.16635883582504726], 'false,false': [0.16797519566042202, 0.13324306667170993], 'false,false,true': [0.1475324694646825, 0.1659349603049453], 'false,false,false': [0.13324306667170993, nan], 'true': [9.124627677357746e-05, 2.452511394884782e-05], 'true,true': [2.3785641075561397e-05, 0.0], 'true,true,true': [2.3785641075561397e-05, nan]}, {'': [0.08278513044230308, 0.10636119081992249], 'false': [0.1279247496791059, 0.08509615589449541], 'false,true': [0.0, 0.1392676667652995], 'false,false': [0.045451527695282476, 0.0], 'true': [0.10439730201582693, 0.0002255812148877852], 'true,true': [0.04826899095043443, 0.11178657539381585], 'false,true,true': [0.0, nan], 'false,false,false': [0.0, nan]}, {'': [0.056350659812781936, 0.07647532935863517], 'false': [0.06276961245652538, 0.16548055172381704], 'false,false': [0.1669228016919803, 0.09594127174160787], 'false,false,true': [0.029500162697262078, 0.1716090137594484], 'false,false,false': [0.0036721992543024898, 0.18750000000000003], 'true': [5.8443033803410574e-05, 0.10997548299838729], 'true,false': [0.0, 0.1239952377503922], 'true,false,false': [0.131326570996074, 0.0]}, {'': [8.95910845782888e-05, 0.07967796106770056], 'false': [0.06822402675130995, 0.14163756483548198], 'false,false': [0.14163756483548198, nan], 'false,false,true': [0.03660233743154382, 0.004630780573141599], 'true': [7.675754528452554e-05, 9.901260739765675e-05], 'true,false': [nan, 9.901260739765675e-05]}, {'': [0.06306641779170931, 0.06847187414164631], 'false': [8.00619222610562e-05, 0.06981196660115419], 'false,false': [0.06570317583781152, 0.0914891699822359], 'false,false,false': [0.0914891699822359, nan], 'true': [0.04543376664986162, 0.09445320468170189], 'true,true': [2.144103196403124e-05, 0.15718375495976203], 'true,true,false': [0.004000997171283954, 0.27396411066759463], 'true,true,true': [2.2024458491726184e-05, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;location(A, E), interaction(A, C).;true;true
7;true,false,false;location(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.38446472457319614;  // std dev = 4.353, 76.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=40 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.24276431971489668;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.14327290204166226;  // std dev = 7.023, 242.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=69 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6605275396803482;  // std dev = 0.244, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.7933364850709766;  // std dev = 0.219, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.3631701688075401;  // std dev = 1.434, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15129489859778625;  // std dev = 0.195, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.0686790704320509;  // std dev = 5.347, 169.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=39 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.03503478877331962;  // std dev = 2.797, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.16714457063539276;  // std dev = 4.192, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1602018344947714;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.26979946611520905;  // std dev = 4.342, 79.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5167981823646244;  // std dev = 0.227, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( location(A, F), complex(A, G) )
%   | | | then return -0.045582680993885974;  // std dev = 2.486, 78.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=10 */
%   | | | else return 0.10606681417437966;  // std dev = 3.965, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7134041672549368;  // std dev = 2.424, 90.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=84 */
%   | | | else return -0.17773510250673138;  // std dev = 0.414, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), interaction(I, I) )
%   | | | then return 0.06372914458198897;  // std dev = 0.742, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.38070036638056176;  // std dev = 1.931, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.19024217438008445;  // std dev = 1.347, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.01088391158552647;  // std dev = 2.187, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4500732405825317;  // std dev = 0.037, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.4414018498733663;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return 0.5502306727153063;  // std dev = 1.470, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | | else return 0.6644610897455134;  // std dev = 1.723, 82.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=79 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return -0.13099492344135014;  // std dev = 0.282, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return -0.16603954291929654;  // std dev = 0.337, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5314376802563494;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, L) )
%   | | | then return 0.04933163523438554;  // std dev = 3.205, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.2983548527232471;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.34283615984853405;  // std dev = 0.033, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.1938252766276714;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.33502419627223623;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.37494613175042446;  // std dev = 1.137, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.49452721212174067;  // std dev = 2.296, 102.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=97 */
%   | | else return -0.13086148969930542;  // std dev = 0.027, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.283668518469669;  // std dev = 2.698, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return -0.18501844345108764;  // std dev = 0.144, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0.14605637387199674;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then return 0.28057451872897243;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.27016528921122784;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.40347171086098427;  // std dev = 0.910, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.22017161640039604;  // std dev = 0.790, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.10055680340846954;  // std dev = 0.023, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.0066615703008761;  // std dev = 1.188, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.25446506158994414;  // std dev = 1.404, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.11508893510993551;  // std dev = 2.107, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.02004429893621174;  // std dev = 4.057, 209.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=59 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then return 0.09751210875491052;  // std dev = 0.215, 91.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=53 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.14635303159991078;  // std dev = 2.084, 49.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=29 */
%   | | | else return 0.25687102047986127;  // std dev = 3.276, 108.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=78 */
%   | else return -0.12419177569097715;  // std dev = 0.059, 252.000 (wgt'ed) examples reached here.  /* #neg=252 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.21572802721486173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.042325718948463036;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10673480794405993;  // std dev = 0.842, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(L, A) )
%   | | then return 0.008087357735883297;  // std dev = 0.227, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return 0.713325046545332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16802335876683389;  // std dev = 0.179, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13531729018231267;  // std dev = 0.581, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.024461945559024954;  // std dev = 1.532, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.02373235872213272;  // std dev = 1.375, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.013873385633687191;  // std dev = 4.102, 294.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=94 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), location(A, L) )
%   | | | then return 0.07346818986281412;  // std dev = 2.092, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return -0.15655978821551578;  // std dev = 0.925, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.017634412286783984;  // std dev = 1.050, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.30206171032952983;  // std dev = 1.003, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.028126404268563943;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17505569697650117;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then return -0.13359285501747728;  // std dev = 0.719, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1791858948325775;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.10102066204599298;  // std dev = 0.062, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(A, J), complex(I, K) )
%   | | | then return -0.010154153290359808;  // std dev = 1.789, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.07397247662438662;  // std dev = 1.751, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( location(A, L) )
%   | | | then return -0.013172364524607124;  // std dev = 4.885, 382.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=108 */
%   | | | else return 0.056805639739816165;  // std dev = 1.238, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15487548862745268;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return -0.03885139778015958;  // std dev = 0.263, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.2292773217692351;  // std dev = 0.164, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), interaction(A, I) )
%   | | then return -0.17448468958428584;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1544811692917461;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.011440439910238152;  // std dev = 1.640, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.12095030631871057;  // std dev = 1.433, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.06825640896498746;  // std dev = 2.035, 82.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=12 */
%   | | | else return -0.0048736783286444756;  // std dev = 4.535, 338.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=94 */


Results
   AUC ROC   = 0.987216
   AUC PR    = 0.265761
   CLL	      = -0.173271
   Precision = 0.177243 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.297794


Total learning time: 29.119 seconds
Total inference time: 11.558 seconds
AUC ROC: 0.987216


Results scoring model
   AUC ROC   = 0.987716
   AUC PR    = 0.317046
   CLL	      = -0.174225
   Precision = 0.174888 at threshold = 0.5
   Recall    = 0.923077
   F1        = 0.294062


Total scoring time: 39.401 seconds
Refined model CLL: -0.174225


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987216
   AUC PR    = 0.265761
   CLL	      = -0.173271
   Precision = 0.177243 at threshold = 0.5
   Recall    = 0.931034
   F1        = 0.297794


Total learning time: 95.70500000000001 seconds
Total inference time: 11.558 seconds
AUC ROC: 0.987216
Total revision time: 95.70500000000001
Best scored revision CLL: -0.174225


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:13:07
{'AUC ROC': 0.987216, 'AUC PR': 0.265761, 'CLL': -0.173271, 'Precision': [0.177243, 0.5], 'Recall': 0.931034, 'F1': 0.297794, 'Learning time': 95.70500000000001, 'Inference time': 11.558, 'parameter_0.6': {'AUC ROC': 0.979514, 'AUC PR': 0.199334, 'CLL': -0.183884, 'Precision': [0.145882, 0.5], 'Recall': 0.712644, 'F1': 0.242187, 'Learning time': 5.236, 'Inference time': 8.969}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8068668838174602;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07169060176617809;  // std dev = 5.678, 192.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=41 */
%   | | | else return 0.1874540710511735;  // std dev = 8.550, 331.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=109 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15544623239680913;  // std dev = 3.932, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7297063270878136;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6427498053486834;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7455109622650138;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5169847901392886;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.12071922480177241;  // std dev = 5.465, 151.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=41 */
%   | | | else return 0.11111824476579031;  // std dev = 8.875, 393.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=109 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09396757080690236;  // std dev = 4.046, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.12543301544918353;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4803460222366568;  // std dev = 1.894, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5728369655006504;  // std dev = 1.920, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return -0.012809727187586158;  // std dev = 4.824, 180.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7711119507181096;  // std dev = 2.050, 121.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=117 */
%   | | | else return -0.18298933530934489;  // std dev = 0.189, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6642800477544013;  // std dev = 0.294, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05874317374534144;  // std dev = 3.973, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.02210925991348938;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.44867848187828685;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.3154522036229393;  // std dev = 0.939, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.34990791767427637;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.35458667808613936;  // std dev = 1.029, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6772022027155615;  // std dev = 2.335, 155.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=150 */
%   | | else return -0.1609388354083531;  // std dev = 0.245, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.44842813185463726;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05313240356589617;  // std dev = 4.054, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return 0.018852818974992844;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.37193504529513655;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.28117396630280433;  // std dev = 1.355, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.29611759651724473;  // std dev = 0.756, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.468902494248958;  // std dev = 3.740, 165.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=150 */
%   | | else return -0.13905001401775255;  // std dev = 0.069, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7958960906263194;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1917450959347232;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3455889472853238;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06139860306537892;  // std dev = 3.323, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.27224232539915494;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29905421335076676;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.236636158640403;  // std dev = 1.375, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(F, A) )
%   | then return 0.03478788264171053;  // std dev = 6.281, 537.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=160 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.37456186768929406;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06224229951992945;  // std dev = 3.605, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06120030338057934;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.25729406349633843;  // std dev = 0.186, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4054850771921646;  // std dev = 1.799, 72.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=68 */
%   | else return -0.13866200099713358;  // std dev = 0.700, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23159395444983616;  // std dev = 0.115, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2947822366747707;  // std dev = 1.584, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return -0.013268780894367343;  // std dev = 3.764, 163.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=34 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04742756325053034;  // std dev = 4.217, 212.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=74 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.13025146751356642;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.20619087505402148;  // std dev = 0.150, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return 0.19652539000750313;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.045285287831748046;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.25655674523021926;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.015736221763080524;  // std dev = 5.833, 543.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=160 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.12986224499840657;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.05272427760630627;  // std dev = 3.457, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.1469220843725907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.025022438433094377;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17497009716318002;  // std dev = 0.123, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1350280393467648;  // std dev = 0.898, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(F, A) )
%   | then return 0.004740063020095693;  // std dev = 6.090, 543.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=160 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5967983342655188;  // std dev = 1.153, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.19987432479380088;  // std dev = 0.237, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.1361440770898799;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14231881103715524;  // std dev = 1.18e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1601336169309191;  // std dev = 0.166, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09516791281606334;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.029466449106098806;  // std dev = 1.743, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.00403709389758646;  // std dev = 5.865, 538.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=150 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.037653150565187775;  // std dev = 2.992, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983471
   AUC PR    = 0.287701
   CLL	      = -0.181281
   Precision = 0.151163 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.251451


Total learning time: 3.35 seconds
Total inference time: 7.267 seconds
AUC ROC: 0.983471


Results scoring model
   AUC ROC   = 0.987401
   AUC PR    = 0.290915
   CLL	      = -0.176882
   Precision = 0.178641 at threshold = 0.5
   Recall    = 0.817778
   F1        = 0.293227


Total scoring time: 9.711 seconds
Parameter learned model CLL: -0.176882


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.377, 2, 37], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.949, 1, 9], 'false,false,true,true': [5.678, 151, 41], 'false,false,true,false': [8.55, 222, 109], 'false,false,false,true': [3.932, 52, 22], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [4.21e-08, 0, 16], 'true,false': [1.351, 2, 21], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.053, 0, 7], 'false,true,false': [1.247, 2, 7], 'false,false,true,true': [5.465, 110, 41], 'false,false,true,false': [8.875, 284, 109], 'false,false,false,true': [4.046, 64, 22], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.894, 4, 37], 'false,true,true,true': [1.92, 5, 15], 'false,true,true,false': [4.824, 152, 28], 'false,true,false,true': [2.05, 4, 117], 'false,true,false,false': [0.189, 244, 0], 'false,false,true,true': [0.294, 0, 5], 'false,false,true,false': [3.973, 68, 21], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.029, 0, 16], 'true,true,false': [0.939, 1, 6], 'true,false': [1.328, 2, 15], 'false,true,true,true': [1.029, 1, 10], 'false,true,true,false': [2.335, 5, 150], 'false,true,false': [0.245, 343, 0], 'false,false,true': [0.193, 0, 4], 'false,false,false,true': [4.054, 70, 22], 'false,false,false,false': [1.265, 8, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.066, 0, 14], 'true,false': [1.355, 2, 23], 'false,true,true,true': [0.756, 1, 10], 'false,true,true,false': [3.74, 15, 150], 'false,true,false': [0.069, 355, 0], 'false,false,true,true': [0.105, 0, 9], 'false,false,true,false': [0.0, 16, 0], 'false,false,false,true': [0.184, 0, 4], 'false,false,false,false': [3.323, 44, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.029, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.375, 2, 30], 'false,true': [6.281, 377, 160], 'false,false,true,true': [0.424, 0, 5], 'false,false,true,false': [3.605, 55, 21], 'false,false,false,true': [1.218, 6, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.186, 0, 10], 'true,true,false': [1.799, 4, 68], 'true,false': [0.7, 165, 0], 'false,true,true,true': [0.115, 0, 16], 'false,true,true,false': [1.584, 3, 21], 'false,true,false': [3.764, 129, 34], 'false,false,true': [4.217, 138, 74], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'enzyme(A, E), interaction(A, C)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.15, 0, 22], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.926, 1, 6], 'true,false,false,false': [0.027, 0, 7], 'false,true': [5.833, 383, 160], 'false,false,true,true': [0.748, 1, 5], 'false,false,true,false': [3.457, 53, 21], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [1.225, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.123, 0, 22], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.898, 1, 15], 'false,true': [6.09, 383, 160], 'false,false,true,true': [1.153, 0, 28], 'false,false,true,false': [0.237, 68, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(D, C), enzyme(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.028, 0, 7], 'true,true,true,false': [1.18e-08, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.166, 0, 5], 'true,false': [1.316, 2, 13], 'false,true': [1.743, 4, 15], 'false,false,true': [5.865, 388, 150], 'false,false,false,true': [2.992, 60, 24], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.04865220249835817, 0.2112799167533845], 'false': [0.10937499999999967, 0.2050896890487268], 'false,false': [0.20454869501954348, 0.2085048010973947], 'false,false,false': [0.20891161431702063, 0.20408163265306126], 'false,false,true': [0.16794162326389003, 0.22086326338752002], 'false,true': [0.1388888888888887, 0.08999999999999994], 'false,true,true': [0.18750000000000006, 0.0], 'false,true,false': [nan, 0.08999999999999977]}, {'': [0.04865220249835608, 0.2025011375477205], 'false': [0.11025115034286836, 0.19855149614146206], 'false,false': [0.19971700911971732, 0.19147390665883443], 'false,false,true': [0.1977983421779749, 0.2004286204507598], 'false,false,false': [0.19037317468902032, 0.20408163265306117], 'false,true': [0.000404288250535131, 0.17283950617283964], 'true': [1.1102230246251565e-16, 0.07939508506616223], 'false,true,true': [nan, 0.000404288250535131]}, {'': [0.08747019390214548, 0.1962229117675262], 'false': [0.1982246569734978, 0.18507506047044406], 'false,true': [0.16567116822834493, 0.21334910607240926], 'false,true,false': [0.03474267176785884, 0.00014657363075938965], 'false,false': [0.18728690826925976, 0.15999999999999998], 'false,false,true': [0.01730107188772694, 0.1773326900078619], 'false,true,true': [0.1843723410473169, 0.129295055271681], 'false,false,false': [0.15999999999999998, nan]}, {'': [0.06919210155084124, 0.16438840185168427], 'false': [0.16161497368741745, 0.17634072999619935], 'false,false': [0.009284975736381679, 0.1768946914203707], 'false,false,false': [0.1786158660284951, 0.15999999999999995], 'false,true': [0.045653819453304656, 0.0001744815221961636], 'true': [0.042167010328342844, 0.10380622837370236], 'false,true,true': [0.09620197236869421, 0.03516961224182458], 'true,true': [5.090314987429845e-05, 0.12608509992639283]}, {'': [0.049116029467820344, 0.11973463324352146], 'false': [0.10702839877659535, 0.19470397946227488], 'false,false': [0.22518014210195147, 0.18058834201427917], 'false,false,true': [0.0012219221569517282, -1.3877787807814457e-17], 'false,false,false': [0.008481846202074358, 0.1871286963678393], 'false,true': [0.08448283210883177, 1.3385829256146879e-05], 'false,true,true': [0.05192561652298169, 0.0847873993426296], 'true': [0.000311897545734923, 0.07348926569193337]}, {'': [0.04878955967466215, 0.08742602463166785], 'false': [0.0734755584725603, 0.16986914958097218], 'false,false': [0.16830140505521082, 0.1853667390110305], 'false,false,false': [0.1853667390110305, nan], 'false,false,true': [0.03596040276335064, 0.1709868454575555], 'true': [0.00026745897414421585, 0.059067767791574056], 'true,true': [0.0001690490393648214, 0.0], 'true,true,true': [0.0001690490393648214, nan]}, {'': [0.07739082546065594, 0.09136020055901141], 'false': [0.09507041487344334, 0.08787988553742082], 'false,true': [0.06401965228005076, 0.08693415526318124], 'false,false': [0.08388894212256398, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'true': [0.04225555034057246, 0.0029738445137852897], 'false,true,true': [0.0008288468280823122, 0.10454975231048115], 'true,true': [0.00344748710496019, 0.04496744003302819]}, {'': [0.027966729703700878, 0.07628893547657466], 'false': [0.0626488921762745, 0.15830319923338526], 'false,false': [0.15675410900586578, 0.16958665865904934], 'false,false,false': [0.0, 0.18749999999999997], 'false,false,true': [0.09315260867918589, 0.1614647174597279], 'true': [0.0010276884543182006, 0.06358537018804754], 'true,false': [0.0, 0.07240902464060252], 'true,false,false': [0.12239480691134288, 0.0001054280142251158]}, {'': [0.022012572240159966, 0.080007851081802], 'false': [0.06830407803210374, 0.14555301713997365], 'false,false': [0.14555301713997365, nan], 'false,false,true': [0.04745736867875561, 0.0008282063165901639], 'true': [0.0006830456732877017, 0.050417037174414175], 'true,false': [nan, 0.050417037174414175]}, {'': [0.04696529506590769, 0.07253913113181293], 'false': [0.15985628050372558, 0.06982898747611793], 'false,false': [0.06393504875742802, 0.10660083218910027], 'false,false,false': [0.10660083218910027, nan], 'true': [0.0013011908815561233, 0.11552177257823572], 'true,true': [5.177138018730432e-05, 0.005479256466180226], 'true,true,false': [nan, 0.005479256466180226], 'true,true,true': [0.00010982636550056966, 1.2616170734376778e-17]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;enzyme(A, E), interaction(A, C).;true;true
7;true,false,false;enzyme(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;enzyme(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), interaction(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.02161047356105017;  // std dev = 5.333, 208.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=34 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.15311296387648654;  // std dev = 9.312, 417.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=123 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6606498827991895;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.22910989281367947;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.7280391727467099;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5592310659461043;  // std dev = 1.302, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6528067455442876;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return -0.02488510117392235;  // std dev = 2.927, 84.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=11 */
%   | | | else return 0.09783631715373026;  // std dev = 6.506, 235.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=60 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.4554978911157644;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17444033711504398;  // std dev = 8.151, 298.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=100 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.48939917773945213;  // std dev = 0.287, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15817466164316069;  // std dev = 0.279, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.07967465330051375;  // std dev = 5.349, 160.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=43 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7025267519501615;  // std dev = 3.424, 130.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=117 */
%   | | | else return -0.17582385055204078;  // std dev = 0.286, 233.000 (wgt'ed) examples reached here.  /* #neg=233 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6407971411008346;  // std dev = 1.635, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.160865103382101;  // std dev = 0.052, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0747008428986607;  // std dev = 2.496, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.22502427996982033;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4515626783055625;  // std dev = 0.012, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.4199271830766269;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.4572620503143111;  // std dev = 2.400, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return 0.6273330501291967;  // std dev = 3.249, 141.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=129 */
%   | | else return -0.1589915900735242;  // std dev = 0.023, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return 0.04725964460238618;  // std dev = 1.164, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.21447442934896385;  // std dev = 2.246, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.1014791053287795;  // std dev = 1.614, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.016406705059456638;  // std dev = 2.579, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3662848105679098;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.2739000666908924;  // std dev = 0.264, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31692664844736007;  // std dev = 0.196, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5162456169427116;  // std dev = 3.074, 160.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=150 */
%   | | else return -0.1395907477854759;  // std dev = 0.021, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7052905858308457;  // std dev = 0.243, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18867735534634086;  // std dev = 0.248, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2987475918057935;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06815032735407849;  // std dev = 3.074, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.292146393213856;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2288209932665874;  // std dev = 0.235, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(E, E), location(E, F) )
%   | | then return -0.05393117424564717;  // std dev = 0.211, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.13340198077350426;  // std dev = 0.956, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.01590587954455499;  // std dev = 1.616, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3728401706337641;  // std dev = 2.778, 103.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=88 */
%   | | | else return -0.14107272384696237;  // std dev = 0.766, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.21626050338952668;  // std dev = 0.849, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.026042638876271146;  // std dev = 4.676, 257.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=70 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.24816876319692643;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then return -0.003680995849535627;  // std dev = 0.226, 96.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=21 */
%   | | else if ( location(A, G) )
%   | | | then return 0.062216663074291155;  // std dev = 2.983, 111.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=43 */
%   | | | else return -1.6679477161173593E-4;  // std dev = 1.143, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.2694073408300799;  // std dev = 0.243, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | else return -0.011437174551069611;  // std dev = 0.259, 176.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=34 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2625679151303946;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.031438789506707907;  // std dev = 2.755, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.007052448262556298;  // std dev = 2.984, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15712235228359347;  // std dev = 0.221, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.044483810319199346;  // std dev = 1.093, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.04215957582313238;  // std dev = 2.174, 84.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=18 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.007676491190996665;  // std dev = 3.888, 233.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=72 */
%   | | | else return 0.05624048321060878;  // std dev = 3.640, 187.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=64 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3164356986491944;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03702227506294997;  // std dev = 3.147, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.15152665435856164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22414378897537912;  // std dev = 0.931, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.12705990052334465;  // std dev = 0.205, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.20251418313997138;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), complex(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.12001538245780381;  // std dev = 2.842, 105.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=56 */
%   | | | else return -0.11927059637517809;  // std dev = 0.495, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.05691001676900712;  // std dev = 1.734, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.02355165807265309;  // std dev = 4.324, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( location(A, M) )
%   | | | then return 0.2586497600221423;  // std dev = 2.550, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | | else return 0.6300401183378036;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.158626220726556;  // std dev = 0.037, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12264261018070444;  // std dev = 0.177, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.05067376631301966;  // std dev = 0.585, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.09476130595626354;  // std dev = 0.805, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.0202837118125724;  // std dev = 0.882, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.05878808359656997;  // std dev = 1.699, 73.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=10 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3493713378612801;  // std dev = 0.867, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return -0.14289259098655038;  // std dev = 0.716, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.015273053210914465;  // std dev = 4.035, 230.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=77 */
%   | | | else return -0.015312776588775065;  // std dev = 3.294, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */


Results
   AUC ROC   = 0.984292
   AUC PR    = 0.263615
   CLL	      = -0.177276
   Precision = 0.167064 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.27668


Total learning time: 14.289 seconds
Total inference time: 10.492 seconds
AUC ROC: 0.984292


Results scoring model
   AUC ROC   = 0.988666
   AUC PR    = 0.316294
   CLL	      = -0.171265
   Precision = 0.179982 at threshold = 0.5
   Recall    = 0.911111
   F1        = 0.300587


Total scoring time: 31.647 seconds
Refined model CLL: -0.171265


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984292
   AUC PR    = 0.263615
   CLL	      = -0.177276
   Precision = 0.167064 at threshold = 0.5
   Recall    = 0.804598
   F1        = 0.27668


Total learning time: 58.997 seconds
Total inference time: 10.492 seconds
AUC ROC: 0.984292
Total revision time: 58.997
Best scored revision CLL: -0.171265


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:14:25
{'AUC ROC': 0.984292, 'AUC PR': 0.263615, 'CLL': -0.177276, 'Precision': [0.167064, 0.5], 'Recall': 0.804598, 'F1': 0.27668, 'Learning time': 58.997, 'Inference time': 10.492, 'parameter_0.8': {'AUC ROC': 0.983471, 'AUC PR': 0.287701, 'CLL': -0.181281, 'Precision': [0.151163, 0.5], 'Recall': 0.747126, 'F1': 0.251451, 'Learning time': 3.35, 'Inference time': 7.267}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8368723393548312;  // std dev = 0.989, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09888967584025321;  // std dev = 6.283, 216.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=52 */
%   | | | else return 0.16003572755234088;  // std dev = 9.453, 424.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=128 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1629108398614157;  // std dev = 4.717, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6782930322330172;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.6852860392260239;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7256044627444209;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.49246485171145404;  // std dev = 1.743, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.0669562897481528;  // std dev = 6.363, 235.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=52 */
%   | | | else return 0.12843916681578976;  // std dev = 9.527, 440.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=128 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.15397015287079804;  // std dev = 4.676, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.41589600926432696;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.47175080256535523;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.682468518939451;  // std dev = 1.598, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.004778778522985178;  // std dev = 5.472, 217.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=37 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7378486531160425;  // std dev = 3.075, 148.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=138 */
%   | | | else return -0.1812919550154753;  // std dev = 0.179, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6644567352618375;  // std dev = 0.276, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0999045795248114;  // std dev = 4.774, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06747473650686668;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3729907333884202;  // std dev = 1.358, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.32710715904426946;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3929524166430595;  // std dev = 0.968, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4581445398248198;  // std dev = 0.217, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6472718487023001;  // std dev = 3.598, 194.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=180 */
%   | | else return -0.15938530281146648;  // std dev = 0.300, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.508133045797658;  // std dev = 0.266, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09940195433009405;  // std dev = 4.698, 106.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | | else return 0.0366966152476892;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2525785850398718;  // std dev = 1.621, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else return 0.3625314810300925;  // std dev = 0.022, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3037558022525936;  // std dev = 0.697, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.46883454394997337;  // std dev = 4.407, 202.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=180 */
%   | | else return -0.13851463856108007;  // std dev = 0.134, 448.000 (wgt'ed) examples reached here.  /* #neg=448 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5816202459738552;  // std dev = 2.096, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return -0.217883493499271;  // std dev = 0.027, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.33754274365792725;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1268115883118937;  // std dev = 3.206, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.3071155111568682;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23459176978898497;  // std dev = 1.360, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(F, A) )
%   | then return 0.02042405205663296;  // std dev = 7.407, 698.000 (wgt'ed) examples reached here.  /* #neg=504 #pos=194 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.36914612474227504;  // std dev = 0.409, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04539372231619687;  // std dev = 4.393, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04861112952283382;  // std dev = 1.556, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21618663296800755;  // std dev = 0.882, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.38328427082251826;  // std dev = 3.188, 153.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=133 */
%   | else return -0.14270535876833118;  // std dev = 1.037, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23304562627191044;  // std dev = 0.167, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25865675850109615;  // std dev = 1.052, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return -0.014086219933691043;  // std dev = 3.916, 145.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03184699821123627;  // std dev = 4.158, 208.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=68 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009343631277295724;  // std dev = 1.280, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17758961821951152;  // std dev = 0.857, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return -0.7418539375358095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.021780477802713614;  // std dev = 1.184, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.07256589517056874;  // std dev = 1.289, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(G, A) )
%   | then return 0.006474591011061437;  // std dev = 6.684, 704.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=194 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.011247713337105345;  // std dev = 1.138, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.09193206520899282;  // std dev = 3.905, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10839848394098753;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.061831725020900015;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.153252287864758;  // std dev = 1.009, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19592757493889987;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.0024778688608369146;  // std dev = 6.699, 722.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=194 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5595242592298613;  // std dev = 1.118, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.23206182968763747;  // std dev = 0.476, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1599120577833716;  // std dev = 0.008, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.16590323594337864;  // std dev = 0.149, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.17813044988074667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12837772836758635;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11764495094764951;  // std dev = 1.433, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return -0.022781449849636645;  // std dev = 1.958, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008625988270073008;  // std dev = 6.431, 672.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=180 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.005045465475299683;  // std dev = 3.661, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.98349
   AUC PR    = 0.240841
   CLL	      = -0.178451
   Precision = 0.149083 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.248566


Total learning time: 4.246 seconds
Total inference time: 6.77 seconds
AUC ROC: 0.98349


Results scoring model
   AUC ROC   = 0.987297
   AUC PR    = 0.275734
   CLL	      = -0.175551
   Precision = 0.174699 at threshold = 0.5
   Recall    = 0.822695
   F1        = 0.288199


Total scoring time: 13.751 seconds
Parameter learned model CLL: -0.175551


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.989, 1, 46], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.323, 2, 14], 'false,false,true,true': [6.283, 164, 52], 'false,false,true,false': [9.453, 296, 128], 'false,false,false,true': [4.717, 73, 32], 'false,false,false,false': [1.732, 12, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.977, 1, 21], 'true,false': [0.981, 1, 25], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.03, 0, 8], 'false,true,false': [1.743, 4, 12], 'false,false,true,true': [6.363, 183, 52], 'false,false,true,false': [9.527, 312, 128], 'false,false,false,true': [4.676, 69, 32], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [2.124, 5, 46], 'false,true,true,true': [1.598, 3, 19], 'false,true,true,false': [5.472, 180, 37], 'false,true,false,true': [3.075, 10, 138], 'false,true,false,false': [0.179, 310, 0], 'false,false,true,true': [0.276, 0, 5], 'false,false,true,false': [4.774, 81, 33], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [1.358, 2, 23], 'true,true,false': [0.936, 1, 7], 'true,false': [0.968, 1, 16], 'false,true,true,true': [0.217, 0, 14], 'false,true,true,false': [3.598, 14, 180], 'false,true,false': [0.3, 482, 0], 'false,false,true': [0.266, 0, 6], 'false,false,false,true': [4.698, 74, 32], 'false,false,false,false': [1.713, 11, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.621, 3, 24], 'true,false': [0.022, 0, 22], 'false,true,true,true': [0.697, 1, 14], 'false,true,true,false': [4.407, 22, 180], 'false,true,false': [0.134, 448, 0], 'false,false,true,true': [2.096, 4, 22], 'false,false,true,false': [0.027, 40, 0], 'false,false,false,true': [0.179, 0, 4], 'false,false,false,false': [3.206, 30, 16]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.027, 0, 13], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.36, 2, 33], 'false,true': [7.407, 504, 194], 'false,false,true,true': [0.409, 0, 5], 'false,false,true,false': [4.393, 78, 33], 'false,false,false,true': [1.556, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.882, 2, 23], 'true,true,false': [3.188, 20, 133], 'true,false': [1.037, 258, 0], 'false,true,true,true': [0.167, 0, 14], 'false,true,true,false': [1.052, 3, 10], 'false,true,false': [3.916, 113, 32], 'false,false,true': [4.158, 140, 68], 'false,false,false,true': [1.28, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.857, 1, 28], 'true,false,true': [0.0, 1, 0], 'true,false,false,true': [1.184, 2, 7], 'true,false,false,false': [1.289, 2, 11], 'false,true': [6.684, 510, 194], 'false,false,true,true': [1.138, 2, 5], 'false,false,true,false': [3.905, 57, 33], 'false,false,false,true': [0.884, 2, 2], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.009, 1, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.057, 0, 16], 'false,true': [6.699, 528, 194], 'false,false,true,true': [1.118, 0, 42], 'false,false,true,false': [0.476, 76, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.008, 0, 12], 'true,true,true,false': [0.149, 0, 11], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.097, 0, 4], 'true,false': [1.433, 2, 18], 'false,true': [1.958, 5, 20], 'false,false,true': [6.431, 492, 180], 'false,false,false,true': [3.661, 87, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.020823902218199193, 0.21055996763928467], 'false': [0.08264462809917356, 0.2032735818594059], 'false,false': [0.20214843750000258, 0.209002117341713], 'false,false,false': [0.2118820861678018, 0.18749999999999983], 'false,false,true': [0.18278463648834112, 0.21075115699537333], 'false,true': [-1.4802973661668753e-16, 0.10937499999999978], 'false,true,false': [nan, 0.10937499999999967], 'false,true,true': [0.0, 0.0]}, {'': [0.0399305555555558, 0.20368793887501704], 'false': [0.1386725300786029, 0.1995420311344204], 'false,false': [0.19531305995556109, 0.22245168074126612], 'false,false,false': [0.21644936770904835, 0.2448979591836735], 'false,false,true': [0.17231326392032412, 0.20628099173553452], 'false,true': [0.00011276934193193977, 0.18983438436940367], 'true': [0.04338842975206598, 0.03698224852071027], 'false,true,true': [nan, 0.00011276934193193977]}, {'': [0.08844538983823601, 0.19697486464128436], 'false': [0.1953528331851456, 0.20518339201616762], 'false,false': [0.20498112854352327, 0.20408163265306128], 'false,false,true': [0.015242713111509331, 0.19991142851035754], 'false,false,false': [0.20408163265306128, nan], 'false,true': [0.1743663194627724, 0.20549564347453542], 'false,true,false': [0.06388764505616655, 0.00010361539973176158], 'false,true,true': [0.11609136752201034, 0.13799908850467235]}, {'': [0.07365340754326807, 0.16077224921643318], 'false': [0.15236380274730793, 0.20562523223644807], 'false,false': [0.011831967732590062, 0.2070390998978403], 'false,false,false': [0.2081766967556012, 0.19555555555555565], 'false,true': [0.06469393053953375, 0.00018670768416721747], 'true': [0.08284577706980602, 0.055171654207543434], 'true,true': [0.0738112193266722, 0.10948384396058773], 'false,true,true': [0.0033623920825309106, 0.06671237965141674]}, {'': [0.056651619864907465, 0.12496218675865092], 'false': [0.10860373635246458, 0.21555123337489995], 'false,false': [0.21919863027901937, 0.20950125631697047], 'false,false,true': [0.16900141600236016, 1.830493431315139e-05], 'false,false,false': [0.008020486287437262, 0.2234687136893824], 'false,true': [0.09348197201978671, 3.978475259816142e-05], 'false,true,true': [0.03236725689910473, 0.09613648438707643], 'true': [0.0973655860867832, 2.2841499876756867e-05]}, {'': [0.039602094995996456, 0.09360606967557224], 'false': [0.07860980258175514, 0.17353999046466895], 'false,false': [0.1721058619645709, 0.186233155450688], 'false,false,false': [0.186233155450688, nan], 'false,false,true': [0.03352954965178068, 0.17383012362260702], 'true': [5.52154162720868e-05, 0.0528664357784607], 'true,true': [5.52154162720868e-05, nan], 'true,true,true': [5.52154162720868e-05, nan]}, {'': [0.08994585343109383, 0.09568985657634768], 'false': [0.10468645974828485, 0.08844962504037351], 'false,true': [0.04219072968581286, 0.10575574594252787], 'true': [0.06484454461048289, 0.00416783759715628], 'false,false': [0.08310598425141334, 0.27320363570784845], 'false,false,false': [0.27320363570784845, nan], 'true,true': [0.031150675939112096, 0.0664285027834388], 'false,true,true': [0.0019957030407108073, 0.08513756955683706]}, {'': [0.09277016617118763, 0.07888701127446558], 'true': [0.025307663661542253, 0.16029019140824619], 'true,false': [0.0, 0.14140644652187678], 'true,false,false': [0.15570687991580742, 0.1278647308963374], 'false': [0.06346737607763857, 0.17510756167218436], 'false,false': [0.17130402455111304, 0.21198716568394388], 'false,false,false': [0.1953335030547335, 0.22222222222222224], 'false,false,true': [0.18499780702572335, 0.16947067972616733]}, {'': [0.022158334232391635, 0.07562467291062812], 'false': [0.062149664984804266, 0.15615765315502833], 'false,false': [0.15615765315502833, nan], 'false,false,true': [0.029745335588075978, 0.0029869348694032158], 'true': [0.03286949520875083, 0.00020425592723458813], 'true,false': [nan, 0.00020425592723458813]}, {'': [0.043954718083232945, 0.07150532823824948], 'false': [0.1533900826648937, 0.06890417636130468], 'false,false': [0.061539052018242155, 0.10898491377367864], 'false,false,false': [0.10898491377367864, nan], 'true': [0.0012942908492865018, 0.10270986841403222], 'true,true': [0.0009731715985112331, 0.002280422246910155], 'true,true,false': [0.0, 0.0023554611490444743], 'true,true,true': [5.387136822826433e-06, 0.00201020904889727]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, E), interaction(A, C).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.8025933795439567;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.07672817007218889;  // std dev = 5.591, 183.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=40 */
%   | | | else return 0.16003572755234063;  // std dev = 11.085, 583.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=176 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6959248677739451;  // std dev = 0.168, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6851160190858249;  // std dev = 0.217, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6618428328659078;  // std dev = 2.206, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return 0.00674558499830667;  // std dev = 5.690, 245.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=39 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.21257435023494395;  // std dev = 4.264, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.15064716998170727;  // std dev = 9.120, 387.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=121 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5032972463029017;  // std dev = 0.240, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.09488876932444942;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
%   | | | else return 0.01773061569796341;  // std dev = 3.706, 99.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=19 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7249969578554538;  // std dev = 3.284, 149.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=138 */
%   | | | else return -0.17538893378017026;  // std dev = 0.268, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5638335250478633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10946701746946107;  // std dev = 3.970, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.06902117656844908;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2748507577819051;  // std dev = 2.588, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4394598556477316;  // std dev = 0.042, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.30863214246217013;  // std dev = 0.323, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.640317650317988;  // std dev = 3.252, 196.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=186 */
%   | | | else return 0.43418874182889516;  // std dev = 1.514, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return -0.16050607407157116;  // std dev = 0.574, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5387685138992635;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09440036516543132;  // std dev = 4.766, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | else if ( location(A, J) )
%   | | | then return 0.5593921524923622;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.13230025549713473;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3485228829424712;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.34594144203837535;  // std dev = 0.072, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.3529259535383167;  // std dev = 2.032, 36.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=30 */
%   | | | else return 0.4891075365741156;  // std dev = 3.501, 177.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=164 */
%   | | else return -0.13844699926121298;  // std dev = 0.453, 477.000 (wgt'ed) examples reached here.  /* #neg=477 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6141004999289672;  // std dev = 1.706, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.22814652618519562;  // std dev = 0.296, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.04277778019142289;  // std dev = 2.183, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.1613469067968909;  // std dev = 2.593, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.27529000538273896;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.18830520220947533;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.2752692711562327;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.1908896849853624;  // std dev = 0.947, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4692255037411242;  // std dev = 0.145, 87.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=85 */
%   | | else return -0.1441262454472157;  // std dev = 0.069, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12071302588078715;  // std dev = 0.070, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.21910024449683346;  // std dev = 0.715, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.024271964481202567;  // std dev = 6.774, 478.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=135 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.01158561950504885;  // std dev = 0.227, 158.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=48 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(F, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3362853083184726;  // std dev = 0.610, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.008047840923083398;  // std dev = 3.377, 146.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.03394198189181452;  // std dev = 3.324, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return -0.11162377300522934;  // std dev = 1.123, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.2637584276191097;  // std dev = 0.224, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.03370542328605629;  // std dev = 2.337, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | | else return 0.03605648283470094;  // std dev = 2.832, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else return 0.027423783042786542;  // std dev = 0.246, 226.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=70 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16145802111506313;  // std dev = 0.188, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return -0.8214351845349348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.0856051923565558;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1754667206014486;  // std dev = 0.891, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.040358460534596484;  // std dev = 0.220, 140.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=30 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.21289126711705442;  // std dev = 5.603, 299.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=195 */
%   | | | else return -0.14487789198784518;  // std dev = 0.959, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.08546440176836224;  // std dev = 0.782, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.029752212722493874;  // std dev = 1.888, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.14490911587480412;  // std dev = 0.152, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return 0.10649696799165126;  // std dev = 0.304, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08875215084784514;  // std dev = 0.021, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.2001334275766871;  // std dev = 1.902, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | else return -0.02203463489557387;  // std dev = 5.255, 544.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=126 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4345659437761103;  // std dev = 0.915, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1871872895022141;  // std dev = 0.532, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.018392281855869108;  // std dev = 1.970, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.08854311317003488;  // std dev = 3.113, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12172534720368988;  // std dev = 0.134, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E), interaction(D, A) )
%   | | then if ( interaction(E, D), location(D, F) )
%   | | | then return -0.07409598934690655;  // std dev = 2.017, 86.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | | else return 0.08413329660873504;  // std dev = 0.612, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(D, G), phenotype(E, H) )
%   | | | then return 0.0448967612884475;  // std dev = 1.565, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return -0.016127167288527745;  // std dev = 2.926, 174.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=42 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.33184462255879155;  // std dev = 1.172, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | | else return -0.15785023907649004;  // std dev = 1.012, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0023639342535854086;  // std dev = 2.134, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.040262443508559516;  // std dev = 4.647, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */


Results
   AUC ROC   = 0.988034
   AUC PR    = 0.319343
   CLL	      = -0.170059
   Precision = 0.181609 at threshold = 0.5
   Recall    = 0.908046
   F1        = 0.302682


Total learning time: 15.754 seconds
Total inference time: 9.845 seconds
AUC ROC: 0.988034


Results scoring model
   AUC ROC   = 0.98924
   AUC PR    = 0.360709
   CLL	      = -0.168619
   Precision = 0.18615 at threshold = 0.5
   Recall    = 0.886525
   F1        = 0.307692


Total scoring time: 20.976 seconds
Refined model CLL: -0.168619


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988034
   AUC PR    = 0.319343
   CLL	      = -0.170059
   Precision = 0.181609 at threshold = 0.5
   Recall    = 0.908046
   F1        = 0.302682


Total learning time: 54.727 seconds
Total inference time: 9.845 seconds
AUC ROC: 0.988034
Total revision time: 54.727
Best scored revision CLL: -0.168619


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:15:37
{'AUC ROC': 0.988034, 'AUC PR': 0.319343, 'CLL': -0.170059, 'Precision': [0.181609, 0.5], 'Recall': 0.908046, 'F1': 0.302682, 'Learning time': 54.727, 'Inference time': 9.845, 'parameter_1.0': {'AUC ROC': 0.98349, 'AUC PR': 0.240841, 'CLL': -0.178451, 'Precision': [0.149083, 0.5], 'Recall': 0.747126, 'F1': 0.248566, 'Learning time': 4.246, 'Inference time': 6.77}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951236;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.10520775862892412;  // std dev = 3.976, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.08891188228020006;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.10735334711958862;  // std dev = 3.935, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.09407505644893964;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.47844335982320774;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8324287756618846;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04173110124327975;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7656813823065659;  // std dev = 1.025, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.17513451274361103;  // std dev = 0.272, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6875425573854546;  // std dev = 0.187, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09749645580240254;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43633108928260317;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.5636689107173968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.4363310892826032;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.36741938578159605;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7036158761104893;  // std dev = 0.953, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.15547000893022467;  // std dev = 0.125, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3857612823992964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05031089366407906;  // std dev = 2.085, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3335001062147216;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33350010621472165;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2868518882648132;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.47008075958302;  // std dev = 1.880, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else return -0.13753147340727992;  // std dev = 0.107, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16699357183350014;  // std dev = 1.096, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.19527309501470097;  // std dev = 0.106, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.2992386047447634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05604323268882889;  // std dev = 1.668, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2638803480780505;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1638803480780505;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.029066053891553742;  // std dev = 2.917, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4565931105974079;  // std dev = 0.306, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06653311263993361;  // std dev = 1.878, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09751329963721662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2186103518460809;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.41658408311783074;  // std dev = 1.105, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.13700639803732997;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22004686591210482;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.47959819185096514;  // std dev = 0.122, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.013056820568764615;  // std dev = 1.760, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then return 0.029094537854476396;  // std dev = 1.770, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08926207449699147;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19542305738181578;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.16709440757311744;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2175106369376195;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.018494232367118498;  // std dev = 2.697, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2924579905111645;  // std dev = 0.218, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06699527232628669;  // std dev = 1.767, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.062327312761242926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.0822666897645858;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.053959739965444675;  // std dev = 0.832, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.02335679536553605;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A) )
%   | then return 0.009842787453678949;  // std dev = 2.852, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5852819306148017;  // std dev = 0.618, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20938524362378844;  // std dev = 0.275, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.1470698014283991;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16015524269420023;  // std dev = 0.000993, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0627057163604442;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20059556482902482;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.16421415534759165;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then return -0.007214009533727601;  // std dev = 2.698, 134.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0693652313658925;  // std dev = 1.450, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.978615
   AUC PR    = 0.14408
   CLL	      = -0.196705
   Precision = 0.096172 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.175319


Total learning time: 1.936 seconds
Total inference time: 7.376 seconds
AUC ROC: 0.978615


Results scoring model
   AUC ROC   = 0.990824
   AUC PR    = 0.426799
   CLL	      = -0.162741
   Precision = 0.244792 at threshold = 0.5
   Recall    = 0.886792
   F1        = 0.383673


Total scoring time: 3.216 seconds
Parameter learned model CLL: -0.162741


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [2.872, 33, 11], 'false,false,true,false': [3.976, 64, 21], 'false,false,false,true': [2.0, 12, 6], 'false,false,false,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.98e-08, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 2], 'false,false,true,true': [2.883, 34, 11], 'false,false,true,false': [3.935, 59, 21], 'false,false,false,true': [2.106, 17, 6], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.961, 1, 12], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [2.668, 34, 9], 'false,true,false,true': [1.025, 1, 23], 'false,true,false,false': [0.272, 51, 0], 'false,false,true,true': [0.187, 0, 2], 'false,false,true,false': [1.9, 13, 5], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.953, 1, 32], 'false,true,false': [0.125, 96, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [2.085, 18, 6], 'false,false,false,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [1.88, 4, 32], 'false,true,false': [0.107, 82, 0], 'false,false,true,true': [1.096, 4, 2], 'false,false,true,false': [0.106, 14, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.668, 11, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 9], 'false,true': [2.917, 95, 34], 'false,false,true,true': [0.306, 0, 2], 'false,false,true,false': [1.878, 13, 5], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.009, 0, 4], 'true,true,false': [1.105, 2, 21], 'true,false': [0.158, 39, 0], 'false,true,true,true': [0.059, 0, 5], 'false,true,true,false': [0.122, 0, 2], 'false,true,false': [1.76, 26, 7], 'false,false,true': [1.77, 33, 14], 'false,false,false,true': [0.0, 4, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.047, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.026, 0, 3], 'false,true': [2.697, 83, 34], 'false,false,true,true': [0.218, 0, 2], 'false,false,true,false': [1.767, 13, 5], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.832, 1, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.804, 1, 5], 'false,true': [2.852, 80, 34], 'false,false,true,true': [0.618, 0, 7], 'false,false,true,false': [0.275, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.000993, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.022, 0, 3], 'false,true': [0.044, 0, 4], 'false,false,true': [2.698, 102, 32], 'false,false,false,true': [1.45, 13, 6], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-1.4802973661668753e-16, 0.19374589086127658], 'false': [0.18750000000000006, 0.18750000000000022], 'false,false': [0.186527251968032, 0.19281663516068068], 'false,false,false': [0.22222222222222232, -2.7755575615628915e-18], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [0.0, 0.0], 'false,false,true': [0.18749999999999947, 0.18602076124567432], 'false,true,true': [nan, 0.0]}, {'': [1.4802973661668753e-16, 0.19271145823894656], 'false': [0.0, 0.18896038395366832], 'false,false': [0.190467245077786, 0.18093800712897035], 'false,false,true': [0.1846913580246911, 0.19359374999999995], 'false,false,false': [0.19281663516068037, 0.0], 'true': [7.401486830834377e-17, 1.4802973661668753e-16], 'false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}, {'': [0.07100591715976314, 0.20081027601883053], 'false': [0.19957764159928015, 0.20674056286335263], 'false,false': [0.21363650442167947, 0.0], 'false,false,true': [0.01747052686722056, 0.20061728395061731], 'false,true': [0.18469135802469122, 0.20760707493300407], 'false,true,false': [0.0437938523932743, 0.001452594764516953], 'false,true,true': [0.0, 0.1654948620876152], 'false,false,false': [0.0, nan]}, {'': [0.07100591715976323, 0.14873404514818714], 'false': [0.14678533723233705, 0.15689499541548832], 'false,false': [0.0, 0.1580998661348764], 'false,false,false': [0.1811533003317759, 0.0], 'false,true': [0.03202542727363016, 0.00016206038873384695], 'true': [0.109375, 0.0], 'true,true': [0.0, 0.0], 'false,true,true': [0.0, 0.02750761482508442]}, {'': [1.850371707708594e-17, 0.11440900496731465], 'false': [0.10746752495598551, 0.1339621517010765], 'false,false': [0.08824185667311214, 0.1772724010312454], 'false,false,false': [0.0, 0.18539406178815604], 'false,true': [0.0947328510866975, 0.00013958133645346644], 'false,true,true': [0.0, 0.09822879676952054], 'false,false,true': [0.20038477681296887, 0.000809463811810399], 'true': [0.0, -3.172065784643304e-17]}, {'': [0.07100591715976336, 0.08348034241436016], 'false': [0.06595115083455112, 0.18732168806362443], 'false,false': [0.19472442570258558, 0.0], 'false,false,true': [0.04671396049174867, 0.1959553527475757], 'true': [-9.25185853854297e-18, 0.09000000000000001], 'false,false,false': [0.0, nan], 'true,true': [-9.25185853854297e-18, nan], 'true,true,true': [-9.25185853854297e-18, nan]}, {'': [0.08735775033812145, 0.07637290951192835], 'true': [0.050201168256367446, 0.0006430498559272332], 'false': [0.09389950426557785, 0.06243451541443362], 'false,true': [0.01636370938452287, 0.09382483729963688], 'false,false': [0.0666494019640077, 0.0], 'true,true': [2.2192523743407022e-05, 0.053121487641144965], 'false,true,true': [0.0007024525551548478, 0.007397643746071075], 'false,false,false': [0.0, nan]}, {'': [0.0004972224798863214, 0.07519694934418067], 'false': [0.06218388760718923, 0.13494044295970276], 'false,false': [0.16302691600342004, 6.361260084503037e-05], 'false,false,true': [0.023666325360388485, 0.17342808234573662], 'true': [0.00031835435694688163, 0.0007454850146168535], 'true,false': [nan, 0.0007454850146168535], 'true,false,false': [0.0, 0.0002257565510277911], 'false,false,false': [0.0, 0.0]}, {'': [0.09585537033467752, 0.08390131650022092], 'true': [0.08661768152935291, 0.10763712290281413], 'true,false': [nan, 0.10763712290281413], 'false': [0.07133167585735246, 0.1347383080696916], 'false,false': [0.1347383080696916, nan], 'false,false,true': [0.054505876515089584, 0.0036084724681391123]}, {'': [0.0013969202054920865, 0.06103177480009229], 'false': [0.0004855723159091531, 0.06194671915492392], 'false,false': [0.05431177273157604, 0.1106570596238892], 'false,false,false': [0.1106570596238892, nan], 'true': [0.0009593777572912549, 0.0001567659172249843], 'true,true': [4.2074539777198217e-05, 0.0], 'true,true,true': [0.0, 2.466847012043416e-07], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;phenotype(A, J).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5248156017661788;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.01685106490048774;  // std dev = 1.871, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.13814893509951237;  // std dev = 4.490, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7609104304538484;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.16508462295667473;  // std dev = 3.183, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.07687153232384153;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17479229827352707;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.552436639554595;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6117195726347102;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8281106771763536;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07387274237734974;  // std dev = 2.602, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7239678575803998;  // std dev = 1.378, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.17140055496502904;  // std dev = 0.087, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.3782807595914613;  // std dev = 1.662, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.18327248378624997;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.42438070599327293;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4486665480659357;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37716703758359993;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.626729764997784;  // std dev = 1.778, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else return -0.1590530639375017;  // std dev = 0.015, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4611029765811252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12196100373391318;  // std dev = 1.927, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3386195661968382;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3282082347911441;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.293435374975592;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.536309319091181;  // std dev = 1.394, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return -0.13747316725680375;  // std dev = 0.015, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.39656163013178053;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.22218888884739307;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3504626768626238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3150138628043976;  // std dev = 1.270, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25104263782285985;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.180040721372677;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.4656907166335169;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08097329544139445;  // std dev = 1.175, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.11370560917265102;  // std dev = 2.152, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | | else return -0.004099797292665896;  // std dev = 1.173, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.11807031285720808;  // std dev = 1.282, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.13376498841935905;  // std dev = 1.416, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.12279821751444604;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20926420621578337;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, F), interaction(A, G) )
%   | | | then return 0.10477659929087726;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.40233102854824504;  // std dev = 0.973, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.1374845196326946;  // std dev = 0.056, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.28862209657090415;  // std dev = 0.142, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.11648817883069548;  // std dev = 1.460, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.16760221867643368;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(L, A) )
%   | | then return -0.003768264624558756;  // std dev = 0.248, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else return -0.11017127835837379;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17584141688442617;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2126585783060965;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(G, A), complex(A, H) )
%   | | | then return -0.15325340655898145;  // std dev = 0.248, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.00918384138597072;  // std dev = 1.083, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.11579285657222343;  // std dev = 1.379, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.006226340811328375;  // std dev = 1.863, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.046262252975521084;  // std dev = 1.725, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.21849364684023578;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09982558334897018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.332449489421995;  // std dev = 0.409, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1460052296387287;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.04754856213351489;  // std dev = 0.232, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   else if ( enzyme(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.09157791235506808;  // std dev = 0.226, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.332842868992006;  // std dev = 0.258, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1717818729885586;  // std dev = 0.472, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.3740445147831096;  // std dev = 0.401, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25796878818964336;  // std dev = 0.420, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.044861400721216534;  // std dev = 0.245, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.134096034424066;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12508948809595472;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.14061847361954516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.042354916067111226;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.17354778189252715;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, K) )
%   | | | then return 0.002284435583045907;  // std dev = 1.918, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.3663307589419073;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.07468679282049695;  // std dev = 0.842, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.05395903139257068;  // std dev = 1.815, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */


Results
   AUC ROC   = 0.981593
   AUC PR    = 0.200271
   CLL	      = -0.192839
   Precision = 0.09919 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.179487


Total learning time: 3.579 seconds
Total inference time: 9.842 seconds
AUC ROC: 0.981593


Results scoring model
   AUC ROC   = 0.992042
   AUC PR    = 0.545006
   CLL	      = -0.167056
   Precision = 0.261111 at threshold = 0.5
   Recall    = 0.886792
   F1        = 0.403433


Total scoring time: 4.235 seconds
Refined model CLL: -0.167056


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978615
   AUC PR    = 0.14408
   CLL	      = -0.196705
   Precision = 0.096172 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.175319


Total learning time: 12.966000000000001 seconds
Total inference time: 7.376 seconds
AUC ROC: 0.978615
Total revision time: 12.966000000000001
Best scored revision CLL: -0.162741


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:16:07
{'AUC ROC': 0.978615, 'AUC PR': 0.14408, 'CLL': -0.196705, 'Precision': [0.096172, 0.5], 'Recall': 0.990385, 'F1': 0.175319, 'Learning time': 12.966000000000001, 'Inference time': 7.376, 'parameter_0.2': {'AUC ROC': 0.978615, 'AUC PR': 0.14408, 'CLL': -0.196705, 'Precision': [0.096172, 0.5], 'Recall': 0.990385, 'F1': 0.175319, 'Learning time': 1.936, 'Inference time': 7.376}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07554023944733847;  // std dev = 3.426, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return 0.1766202726791292;  // std dev = 5.838, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11396288858788445;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7366846563336448;  // std dev = 5.16e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6533513230003115;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.03857580794597019;  // std dev = 3.486, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | | else return 0.16420807667907003;  // std dev = 5.792, 152.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=50 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08283272504869585;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.11184985278353765;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.583128666355372;  // std dev = 0.046, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.59368209234486;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04221595069756212;  // std dev = 3.158, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7609762037754914;  // std dev = 1.435, 55.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   | | | else return -0.18859405178381325;  // std dev = 1.60e-07, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6835053425723739;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10741193701050093;  // std dev = 2.752, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06140839630606362;  // std dev = 1.066, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.42962221198058076;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.44826769098772534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.44826769098772534;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4099356092179194;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.622554951768338;  // std dev = 2.300, 71.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=65 */
%   | | else return -0.16160290373842845;  // std dev = 0.003, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4886108170731128;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12831851575341066;  // std dev = 2.723, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.006566328825082078;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.2871826615334768;  // std dev = 0.988, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.32725471948557705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.31759481331865175;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4734333200007066;  // std dev = 2.432, 72.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=65 */
%   | | else return -0.1408993714989965;  // std dev = 0.003, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47460924880778504;  // std dev = 1.889, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.19937236359941143;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.18200677467271187;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2674085365268711;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28026999237180894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12512679288591155;  // std dev = 1.299, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(F, A) )
%   | then return 0.03522109889881582;  // std dev = 4.243, 224.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=69 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1567864635376911;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06906084256817262;  // std dev = 2.444, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.008761531594975289;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2354461854140415;  // std dev = 0.179, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.22674697379103595;  // std dev = 3.796, 135.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=85 */
%   | else return -0.14646218416612405;  // std dev = 0.815, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23631144101447288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12887425446128914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A) )
%   | | then return -0.12841492249967026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1368522881155658;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18758253952269674;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), interaction(A, C) )
%   | | then return 0.18864497161707583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, F) )
%   | | | then return 0.10424870935060432;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.016038166512241967;  // std dev = 3.724, 241.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2760629539539993;  // std dev = 0.259, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06452565184921316;  // std dev = 2.253, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( location(A, J) )
%   | | | then return 0.005967813352984334;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1621088049988289;  // std dev = 0.050, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19230340048140343;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.001688008331471598;  // std dev = 3.841, 250.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=69 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5125965942152501;  // std dev = 0.787, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20693543924630933;  // std dev = 0.489, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( location(A, F), location(C, F) )
%   | | | then return 0.14970642137349308;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.14691409218536255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, C), location(C, G) )
%   | | | then return 0.10644714815818046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.171243571061236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1513682179700425;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.17003809538285664;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then return 0.007352653006654504;  // std dev = 3.784, 230.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=65 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.00975569973689412;  // std dev = 2.040, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.974076
   AUC PR    = 0.12562
   CLL	      = -0.197291
   Precision = 0.099078 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.176955


Total learning time: 3.785 seconds
Total inference time: 10.506 seconds
AUC ROC: 0.974076


Results scoring model
   AUC ROC   = 0.990918
   AUC PR    = 0.375636
   CLL	      = -0.170396
   Precision = 0.257764 at threshold = 0.5
   Recall    = 0.783019
   F1        = 0.38785


Total scoring time: 13.833 seconds
Parameter learned model CLL: -0.170396


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.351, 2, 21], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 5], 'false,false,true,true': [3.426, 54, 15], 'false,false,true,false': [5.838, 107, 50], 'false,false,false,true': [2.861, 32, 11], 'false,false,false,false': [0.943, 8, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [5.16e-08, 0, 10], 'true,false': [0.957, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.077, 0, 4], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [3.486, 64, 15], 'false,false,true,false': [5.792, 102, 50], 'false,false,false,true': [2.893, 35, 11], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.046, 0, 21], 'false,true,true,true': [0.866, 1, 3], 'false,true,true,false': [3.158, 51, 13], 'false,true,false,true': [1.435, 2, 53], 'false,true,false,false': [1.6e-07, 130, 0], 'false,false,true,true': [0.201, 0, 3], 'false,false,true,false': [2.752, 28, 11], 'false,false,false,true': [1.066, 6, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.02, 0, 11], 'true,true,false': [0.0, 0, 1], 'true,false': [1.49e-08, 0, 9], 'false,true,true,true': [0.15, 0, 4], 'false,true,true,false': [2.3, 6, 65], 'false,true,false': [0.003, 168, 0], 'false,false,true': [0.126, 0, 4], 'false,false,false,true': [2.723, 24, 11], 'false,false,false,false': [0.913, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.988, 1, 20], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.138, 0, 4], 'false,true,true,false': [2.432, 7, 65], 'false,true,false': [0.003, 161, 0], 'false,false,true,true': [1.889, 5, 16], 'false,false,true,false': [0.057, 23, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.042, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [1.83e-08, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.299, 2, 11], 'false,true': [4.243, 155, 69], 'false,false,true,true': [0.727, 1, 3], 'false,false,true,false': [2.444, 25, 11], 'false,false,false,true': [0.94, 7, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'location(A, C)', 'true': 'location(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.179, 0, 20], 'true,true,false': [3.796, 50, 85], 'true,false': [0.815, 127, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 3, 0], 'false,false,true': [0.0, 1, 0], 'false,false,false,true': [3.73e-09, 3, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'location(A, E), interaction(A, C)', 'true,false,false': 'location(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true': [0.043, 0, 12], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.943, 1, 8], 'true,false,false,false': [0.0, 0, 0], 'false,true': [3.724, 172, 69], 'false,false,true,true': [0.259, 0, 3], 'false,false,true,false': [2.253, 23, 11], 'false,false,false,true': [0.914, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.05, 0, 12], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.035, 0, 9], 'false,true': [3.841, 181, 69], 'false,false,true,true': [0.787, 0, 16], 'false,false,true,false': [0.489, 41, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'location(A, F), location(C, F)', 'true,true,false': 'interaction(D, C), location(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.155, 0, 11], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.094, 0, 7], 'false,true': [0.007, 0, 8], 'false,false,true': [3.784, 165, 65], 'false,false,false,true': [2.04, 31, 12], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.07939508506616269, 0.20845220896210964], 'false': [0.09876543209876527, 0.20026137363490606], 'false,false': [0.20489075103766968, 0.17751479289940775], 'false,false,true': [0.1701323251417764, 0.21704734471986786], 'false,false,false': [0.19037317468902057, 0.09876543209876548], 'false,true': [0.18750000000000006, 0.0], 'false,true,true': [0.0, 0.25], 'false,true,false': [nan, 0.0]}, {'': [0.04338842975206565, 0.20296874275810572], 'false': [0.0008715794578975089, 0.19822488972536195], 'false,false': [0.20140691466486194, 0.18245327508429127], 'false,false,true': [0.15382150296426875, 0.22074099722991872], 'false,false,false': [0.18194706994328877, 0.18749999999999997], 'true': [2.6645352591003756e-16, 0.07638888888888906], 'false,true': [0.001494136213538555, 0.0], 'false,true,true': [nan, 0.001494136213538555]}, {'': [0.00010239392599282431, 0.1934396118580087], 'false': [0.1928756196458429, 0.1945244367258276], 'false,false': [0.20331393454762228, 0.14199922081650615], 'false,false,true': [0.013429144721755382, 0.19421448456107146], 'false,true': [0.17457309656320266, 0.19950543836514215], 'false,true,false': [0.0374481951655849, 1.9813210901002795e-16], 'false,true,true': [0.18750000000000006, 0.15587605301702886], 'false,false,false': [0.14199922081650615, nan]}, {'': [0.00010492683087007105, 0.1579204065294784], 'false': [0.1500010879243892, 0.19687566010863905], 'false,false': [0.003997925337030361, 0.20298482754443647], 'false,false,false': [0.21180339615396976, 0.13888888888888887], 'false,true': [0.07309123739978379, 6.973527304816279e-08], 'false,true,true': [0.005589705885845786, 0.07448310139291632], 'true': [5.8425167188976466e-05, 2.4671622769447922e-17], 'true,true': [3.476538874053697e-05, 0.0]}, {'': [0.044474121518796, 0.11919654715093753], 'false': [0.10546520088608458, 0.1854236778974773], 'false,false': [0.1945232839895548, 0.00044190356252054447], 'false,false,true': [0.16996939128310842, 0.00014033988374943012], 'false,true': [0.07930463044879246, 5.756151666287153e-08], 'false,true,true': [0.004780485734886208, 0.0821666691230502], 'true': [0.04651894729155502, 0.0], 'false,false,false': [nan, 0.00044190356252054447]}, {'': [0.07844294958135163, 0.09340093633391104], 'false': [0.08037660773977062, 0.15235547709069852], 'false,false': [0.16317807205805687, 0.09813368114751714], 'false,false,true': [0.13211397935395744, 0.16586005945661916], 'false,false,false': [0.09813368114751714, nan], 'true': [1.4887534180663131e-05, 0.1298106025067181], 'true,true': [3.700743415417188e-17, 0.0], 'true,true,true': [3.700743415417188e-17, nan]}, {'': [0.08824490581348568, 0.014869494446240163], 'true': [0.09315649934530133, 0.005231834788764198], 'true,true': [0.0016014541560591344, 0.10671044506204844], 'false': [0.02500511103377175, 1.334796347556011e-05], 'false,true': [0.0, -2.3129646346357427e-18], 'false,false': [0.0, 4.625929269271485e-18], 'false,false,false': [4.625929269271485e-18, nan], 'false,true,true': [0.0, nan]}, {'': [0.04220183691577337, 0.07081684042537688], 'false': [0.05753998214514327, 0.14265500074080312], 'false,false': [0.1423899872712444, 0.13935712452436214], 'false,false,true': [0.022305444328719826, 0.14935746357337437], 'false,false,false': [0.13935712452436214, nan], 'true': [0.00015281727151192823, 0.08960112860636608], 'true,false': [0.0, 0.09884453665417386], 'true,false,false': [0.09884453665417386, nan]}, {'': [0.00040210152625958217, 0.07026309044451474], 'false': [0.05901100054080868, 0.11957835508874855], 'false,false': [0.11957835508874855, nan], 'false,false,true': [0.038678471658518676, 0.005822347360910517], 'true': [0.0002089802770614685, 0.00013861732727250676], 'true,false': [nan, 0.00013861732727250676]}, {'': [0.001679837588107588, 0.06649732303926281], 'false': [5.322303954901492e-06, 0.0676958124723032], 'false,false': [0.06225453298237586, 0.09679546559832378], 'false,false,false': [0.09679546559832378, nan], 'true': [0.0018864956330301005, 0.0012587565640435577], 'true,true': [0.002009833430627698, 0.0010496441052579054], 'true,true,true': [0.0021918958021601986, 0.0], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;location(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;location(A, H).;true;true
4;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- location(A, C).;true;true
6;true;location(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;location(A, E), interaction(A, C).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;location(A, F), location(C, F).;true;true
9;true,true,false;interaction(D, C), location(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( location(A, H) )
%   | | | then return 0.03414893509951206;  // std dev = 4.258, 125.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=22 */
%   | | | else return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.24657868716562859;  // std dev = 5.361, 121.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=47 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, E), interaction(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7397104467804846;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8539409513340754;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.006095079435836936;  // std dev = 3.567, 103.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=15 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.30276799402062254;  // std dev = 3.230, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.21078052812849987;  // std dev = 4.846, 100.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.572681539669353;  // std dev = 0.027, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.12638989421030764;  // std dev = 0.905, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.03888554616686432;  // std dev = 3.248, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7885534995580921;  // std dev = 0.436, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return -0.19203418683577633;  // std dev = 0.327, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6557264642675009;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17927938357518405;  // std dev = 2.384, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.18486888279456656;  // std dev = 1.343, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.19538977919605333;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4170278717046596;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06623599612297032;  // std dev = 0.736, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.4452675201446007;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5673378543463877;  // std dev = 1.638, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.5124540581198385;  // std dev = 2.449, 47.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   | | else return -0.16860283946382634;  // std dev = 0.032, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.47793702673934013;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.14851754088250263;  // std dev = 2.374, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.0308503009709286;  // std dev = 1.519, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.22269584717137686;  // std dev = 0.301, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.3374119614808848;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.31705658287768423;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.5380445621739979;  // std dev = 0.563, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.4508212749995865;  // std dev = 1.868, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return -0.14182957912559765;  // std dev = 0.030, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.416855014419502;  // std dev = 1.957, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return -0.2229143514407714;  // std dev = 0.175, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.1805144149202269;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(C, D) )
%   | then return 0.2663048092385878;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.291930036850806;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1130419738448627;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), interaction(I, G) )
%   | | | then return 0.1561502627876738;  // std dev = 3.378, 105.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=57 */
%   | | | else return 0.27144806527935733;  // std dev = 2.049, 41.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=28 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.12782501534250718;  // std dev = 0.320, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | | else return -0.18295474644697166;  // std dev = 0.165, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then return -0.13268700333181277;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.18089609669185777;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22300020789094352;  // std dev = 0.047, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.13581476032506506;  // std dev = 1.739, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.2658473601475675;  // std dev = 2.609, 88.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=66 */
%   | else if ( interaction(A, H) )
%   | | then return -0.10760472132710457;  // std dev = 0.030, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else return -0.14067888431454584;  // std dev = 0.066, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return -0.18220811046927388;  // std dev = 0.586, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.12581659722378719;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A) )
%   | | then return -0.11751464250348535;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.3462680869830896;  // std dev = 0.192, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19507059674422197;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), interaction(A, C) )
%   | | then return 0.23608963115037196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08143793245603959;  // std dev = 0.303, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.08331886460782399;  // std dev = 0.204, 58.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=7 */
%   | | else if ( enzyme(A, J), complex(F, K) )
%   | | | then return 0.053790967068558904;  // std dev = 1.343, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.026061720989425014;  // std dev = 2.271, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.18366645167375154;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.06027334957938179;  // std dev = 2.122, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.04424977859619924;  // std dev = 2.202, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.1578379979372001;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1710282210313157;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.13334358071165764;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17309022710084046;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( complex(J, K), complex(A, K) )
%   | | | then return 0.34822134143044803;  // std dev = 0.828, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return 0.064011042961359;  // std dev = 3.021, 92.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=46 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.08026416359144861;  // std dev = 0.164, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return -0.13250220375798177;  // std dev = 0.593, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else return -0.1068099237291457;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.14404176923065773;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0788428305810065;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16179002583955496;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return -0.4542290724017774;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.14829358273088175;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return -0.10331292110007728;  // std dev = 0.525, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.007320067908346314;  // std dev = 1.174, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.03126309973355485;  // std dev = 1.965, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return -0.010467145911910397;  // std dev = 2.909, 147.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=39 */


Results
   AUC ROC   = 0.979491
   AUC PR    = 0.177662
   CLL	      = -0.182468
   Precision = 0.108889 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.195219


Total learning time: 24.519 seconds
Total inference time: 22.069 seconds
AUC ROC: 0.979491


Results scoring model
   AUC ROC   = 0.992354
   AUC PR    = 0.486784
   CLL	      = -0.1631
   Precision = 0.255208 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.4


Total scoring time: 35.969 seconds
Refined model CLL: -0.1631


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979491
   AUC PR    = 0.177662
   CLL	      = -0.182468
   Precision = 0.108889 at threshold = 0.5
   Recall    = 0.942308
   F1        = 0.195219


Total learning time: 78.106 seconds
Total inference time: 22.069 seconds
AUC ROC: 0.979491
Total revision time: 78.106
Best scored revision CLL: -0.1631


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:17:59
{'AUC ROC': 0.979491, 'AUC PR': 0.177662, 'CLL': -0.182468, 'Precision': [0.108889, 0.5], 'Recall': 0.942308, 'F1': 0.195219, 'Learning time': 78.106, 'Inference time': 22.069, 'parameter_0.4': {'AUC ROC': 0.974076, 'AUC PR': 0.12562, 'CLL': -0.197291, 'Precision': [0.099078, 0.5], 'Recall': 0.826923, 'F1': 0.176955, 'Learning time': 3.785, 'Inference time': 10.506}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7547006592374428;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0883647624376407;  // std dev = 4.963, 139.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=32 */
%   | | | else return 0.15200858422231986;  // std dev = 6.878, 228.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=67 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6629481455441483;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.7398712224672251;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7279931426280416;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4287387309630564;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11151107170065487;  // std dev = 4.852, 121.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=32 */
%   | | | else return 0.13906783020371274;  // std dev = 6.846, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10581652846954703;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.17559914592443418;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5123422680779951;  // std dev = 1.375, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8320357383101719;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.061805545529837747;  // std dev = 4.682, 125.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=29 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.764914953284939;  // std dev = 1.732, 76.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=73 */
%   | | | else return -0.18109837250311767;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6613095888052292;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11791489298256194;  // std dev = 3.630, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10330450407199367;  // std dev = 1.830, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.46607924801966116;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.4484552323080093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3715321553849324;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.35401145755143676;  // std dev = 0.831, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.621761887198421;  // std dev = 3.143, 110.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=99 */
%   | | else return -0.16317767586763124;  // std dev = 0.162, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5341193466145271;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10085913521380507;  // std dev = 3.637, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.3015930360970928;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2454076791616687;  // std dev = 1.329, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.2630070633595807;  // std dev = 0.971, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3781063901029062;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5279357766087813;  // std dev = 2.436, 105.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=99 */
%   | | else return -0.1422168903480853;  // std dev = 0.148, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44845757147387333;  // std dev = 1.875, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return -0.2305422605371961;  // std dev = 0.447, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.371941993159572;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18474242723015738;  // std dev = 2.751, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.3012235914453231;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.7111091627715495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.24751180289961966;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(F, A) )
%   | then return 0.03603139058358384;  // std dev = 5.276, 350.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=106 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.07617243824967522;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04225125940912501;  // std dev = 3.456, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.23956249323513998;  // std dev = 1.385, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.264568411305865;  // std dev = 0.201, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.3693285612745626;  // std dev = 2.315, 71.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=61 */
%   | else return -0.14815464576086718;  // std dev = 0.738, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24154333600377229;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24755765553478049;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.014576172705282081;  // std dev = 3.109, 91.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0729891662036761;  // std dev = 3.201, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.1256841886923195;  // std dev = 1.336, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.20345546690129854;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.19143784774678516;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22327039498863327;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.013993729691473429;  // std dev = 4.739, 380.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30473986043712264;  // std dev = 0.322, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.058388857599083376;  // std dev = 3.215, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.07854379426920877;  // std dev = 0.657, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.004155255967226523;  // std dev = 1.459, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17017909685076424;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10119029947931471;  // std dev = 0.937, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(F, A) )
%   | then return 0.007635839294343967;  // std dev = 4.878, 382.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=106 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5105607270872836;  // std dev = 1.566, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.2406517015358004;  // std dev = 0.445, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.14419147438350044;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17002779158686715;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return -0.1169046226424596;  // std dev = 0.402, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12201779226738069;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22305212818661582;  // std dev = 0.194, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1581178050535975;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then return -0.010549199745477746;  // std dev = 4.960, 394.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=99 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.025937063416596854;  // std dev = 2.978, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980448
   AUC PR    = 0.162432
   CLL	      = -0.201264
   Precision = 0.099134 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180227


Total learning time: 3.182 seconds
Total inference time: 7.255 seconds
AUC ROC: 0.980448


Results scoring model
   AUC ROC   = 0.989167
   AUC PR    = 0.333202
   CLL	      = -0.176939
   Precision = 0.234043 at threshold = 0.5
   Recall    = 0.830189
   F1        = 0.365145


Total scoring time: 8.019 seconds
Parameter learned model CLL: -0.176939


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.64, 3, 26], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.247, 2, 7], 'false,false,true,true': [4.963, 107, 32], 'false,false,true,false': [6.878, 161, 67], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [1.713, 11, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.961, 1, 12], 'true,false': [4.21e-08, 0, 14], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.038, 0, 5], 'false,true,false': [1.414, 3, 6], 'false,false,true,true': [4.852, 89, 32], 'false,false,true,false': [6.846, 156, 67], 'false,false,false,true': [3.73, 52, 19], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.375, 2, 26], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [4.682, 96, 29], 'false,true,false,true': [1.732, 3, 73], 'false,true,false,false': [0.0, 168, 0], 'false,false,true,true': [0.202, 0, 3], 'false,false,true,false': [3.63, 45, 19], 'false,false,false,true': [1.83, 12, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.018, 0, 13], 'true,true,false': [0.0, 0, 1], 'true,false': [0.961, 1, 12], 'false,true,true,true': [0.831, 1, 7], 'false,true,true,false': [3.143, 11, 99], 'false,true,false': [0.162, 261, 0], 'false,false,true': [0.237, 0, 4], 'false,false,false,true': [3.637, 45, 19], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.329, 2, 16], 'true,false': [0.971, 1, 10], 'false,true,true,true': [0.156, 0, 7], 'false,true,true,false': [2.436, 6, 99], 'false,true,false': [0.148, 271, 0], 'false,false,true,true': [1.875, 5, 11], 'false,false,true,false': [0.447, 31, 0], 'false,false,false,true': [0.19, 0, 3], 'false,false,false,false': [2.751, 19, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 1, 0], 'true,false': [0.973, 1, 18], 'false,true': [5.276, 244, 106], 'false,false,true,true': [0.861, 2, 3], 'false,false,true,false': [3.456, 51, 19], 'false,false,false,true': [1.385, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.201, 0, 15], 'true,true,false': [2.315, 10, 61], 'true,false': [0.738, 148, 0], 'false,true,true,true': [0.052, 0, 7], 'false,true,true,false': [1.002, 1, 4], 'false,true,false': [3.109, 71, 20], 'false,false,true': [3.201, 81, 48], 'false,false,false,true': [1.336, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.055, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [7.45e-09, 0, 7], 'true,false,false,false': [0.029, 0, 5], 'false,true': [4.739, 274, 106], 'false,false,true,true': [0.322, 0, 3], 'false,false,true,false': [3.215, 43, 19], 'false,false,false,true': [0.657, 4, 1], 'false,false,false,false': [1.459, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.021, 0, 14], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.937, 1, 12], 'false,true': [4.878, 276, 106], 'false,false,true,true': [1.566, 3, 27], 'false,false,true,false': [0.445, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.128, 0, 8], 'true,true,false,true': [0.402, 1, 1], 'true,true,false,false': [0.064, 0, 2], 'true,false': [0.194, 0, 9], 'false,true': [0.043, 0, 10], 'false,false,true': [4.96, 295, 99], 'false,false,false,true': [2.978, 52, 23], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.09274673008323524, 0.2057992889724291], 'false': [0.13017751479289916, 0.1987170463914422], 'false,false': [0.19698713332195036, 0.20637718314372794], 'false,false,false': [0.2087402343749995, 0.1955555555555554], 'false,false,true': [0.1772165001811512, 0.20750615574022813], 'false,true': [0.0, 0.17283950617283939], 'false,true,false': [nan, 0.17283950617283939], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.03566529492455408, 0.20786010785056167], 'false': [0.16352152120576222, 0.20400699627795638], 'false,false': [0.20484508667189533, 0.2003873072576167], 'false,false,true': [0.19452223208797156, 0.2101791711074036], 'false,false,false': [0.19599285855980902, 0.2222222222222223], 'false,true': [0.0002903432255194183, 0.22222222222222232], 'true': [0.0710059171597634, 1.2688263138573217e-16], 'false,true,true': [nan, 0.0002903432255194183]}, {'': [0.06755503523843008, 0.20046099272383439], 'false': [0.1987066836746667, 0.20749452531140766], 'false,false': [0.2098586520371386, 0.19696754325073595], 'false,false,true': [0.013614468464400028, 0.20583620431607158], 'false,true': [0.18775451553073072, 0.20422828389879238], 'false,true,false': [0.03949124828099982, -2.431917101559867e-16], 'false,false,false': [0.19696754325073595, nan], 'false,true,true': [0.0, 0.17536717010925118]}, {'': [0.03638386819091096, 0.1657645004327764], 'false': [0.1554271456924619, 0.21332254808250614], 'false,false': [0.014094462070611047, 0.21550208037854576], 'false,false,false': [0.20671271831877217, 0.2499999999999999], 'false,true': [0.09408534664455435, 0.00010072019560440333], 'false,true,true': [0.08635563264672352, 0.08978714884385791], 'true': [4.463639637511793e-05, 0.07100591715976333], 'true,true': [2.588382748385926e-05, 0.0]}, {'': [0.09348430884262635, 0.12450731439722114], 'false': [0.10634091653142491, 0.20834676335064997], 'false,false': [0.18258920551628957, 0.2199670267698862], 'false,false,false': [0.01198644304273542, 0.23646146270994983], 'false,false,true': [0.21977011664585624, 0.0064490078378544], 'false,true': [0.05449698262496134, 8.098721514603585e-05], 'true': [0.09816619924013421, 0.08563078227309649], 'false,true,true': [0.0034724452143620266, 0.05649556563604027]}, {'': [0.06706793382602927, 0.09863562227812475], 'false': [0.07952563050106864, 0.17756449639712932], 'false,false': [0.1692380161806664, 0.2129835877624337], 'false,false,false': [0.2129835877624337, nan], 'false,false,true': [0.14817163313791626, 0.17066604806831492], 'true': [0.10121655360595737, 0.049782099567834366], 'true,true': [-4.163336342344337e-17, 0.0], 'true,true,true': [-4.163336342344337e-17, nan]}, {'': [0.08391062285871663, 0.09853057618093089], 'false': [0.11050466445823558, 0.08795671544668365], 'false,true': [0.08396691786440232, 0.10621147143869122], 'false,false': [0.07941239011047693, 0.22311934298232255], 'false,false,false': [0.22311934298232255, nan], 'false,true,true': [0.0003924379392810492, 0.20095008940324322], 'true': [0.0643602878576444, 0.0036803241079153724], 'true,true': [0.0026868945119475165, 0.0754756880554974]}, {'': [0.0002651492023468645, 0.07795169138852184], 'false': [0.05909238354632284, 0.16632189072475353], 'false,false': [0.1633194581084476, 0.17227940513431303], 'false,false,false': [0.08639998328694223, 0.21293940508799553], 'false,false,true': [0.0344790368630671, 0.16675264973509232], 'true': [0.00021928321482550528, 0.0003178236285299267], 'true,false': [nan, 0.00031782362852995444], 'true,false,false': [7.93016446160826e-18, 0.00017167858786091284]}, {'': [0.03369698110824999, 0.08046009695445014], 'false': [0.062282244453647564, 0.17076852704805875], 'false,false': [0.17076852704805875, nan], 'false,false,true': [0.0817267133744588, 0.004401690996674695], 'true': [3.21451008332022e-05, 0.0674835547640375], 'true,false': [nan, 0.0674835547640375]}, {'': [0.014772656457406885, 0.07060141357946273], 'false': [0.000183979605051382, 0.07154931564928528], 'false,false': [0.06244171031024736, 0.11827624100886697], 'false,false,false': [0.11827624100886697, nan], 'true': [0.01671886238398864, 0.004173562278626907], 'true,true': [0.0012499869183635326, 0.0556585202577504], 'true,true,false': [0.0807311490032835, 0.0020439313390423555], 'true,true,true': [0.0, 0.0020322183381695814]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 4.21e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.24703782398840074;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.1363858497000639;  // std dev = 8.538, 363.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=101 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6425503352878774;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6528067455442879;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6698825646068323;  // std dev = 3.017, 65.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=54 */
%   | | | else return -0.15949611988572393;  // std dev = 0.124, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.07705529396495954;  // std dev = 2.884, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.16262845777676274;  // std dev = 6.197, 176.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.535840408948806;  // std dev = 0.189, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5409400156686556;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10843740419162012;  // std dev = 4.183, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7269328404610572;  // std dev = 1.745, 76.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=73 */
%   | | | else return -0.16626903119350783;  // std dev = 0.311, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7301511893959097;  // std dev = 0.293, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.16270191413468788;  // std dev = 0.085, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.08291774011605323;  // std dev = 1.364, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.3653804171413428;  // std dev = 2.237, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4407782648021877;  // std dev = 0.000884, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3616891701905744;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.4550535675715445;  // std dev = 1.694, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.6170351723283898;  // std dev = 2.135, 88.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=83 */
%   | | else return -0.15191539367668466;  // std dev = 0.029, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.0849593761503555;  // std dev = 2.458, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.3886197327809082;  // std dev = 1.099, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.15035444875909945;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03622633557315315;  // std dev = 2.365, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.2309306064389286;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.34437834738266054;  // std dev = 0.008, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.3537401581610081;  // std dev = 1.952, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | | else return 0.5059624971478494;  // std dev = 1.564, 73.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=70 */
%   | | else return -0.13437743544718755;  // std dev = 0.031, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( location(A, L) )
%   | | | then return 0.0782570627996497;  // std dev = 3.055, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.08318961379720274;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.10447375422162487;  // std dev = 0.844, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.05374261891924651;  // std dev = 1.568, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.2731950863843856;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.28133347615048393;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2054919023905166;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.060225236038876084;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2783092922549638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then return -0.008316135368016911;  // std dev = 0.215, 209.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=49 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then return 0.013416915221065775;  // std dev = 0.264, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | else if ( location(A, M) )
%   | | | then return 0.0961525911462631;  // std dev = 4.416, 169.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=65 */
%   | | | else return -0.009271022701661642;  // std dev = 1.190, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.22857727217696153;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.015592512574080515;  // std dev = 0.248, 216.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=60 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.31649372269551557;  // std dev = 0.232, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13561184027913292;  // std dev = 0.112, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.022023460493615404;  // std dev = 2.918, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3737369908324212;  // std dev = 1.428, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.14448623066655172;  // std dev = 0.186, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.006802947072419278;  // std dev = 0.467, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.42933168144278494;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.19536140947927852;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.2938713598382646;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.12604247107044098;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19200052780958243;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.18494605810849146;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, H), enzyme(A, I) )
%   | then return 0.03503620433326114;  // std dev = 0.263, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return -0.017963947668365208;  // std dev = 0.248, 223.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=58 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.055679242785110966;  // std dev = 2.477, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return -0.011326760913902214;  // std dev = 1.937, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.19189284995987;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1601320777499253;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, F) )
%   | | then return 0.20447899039809694;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1604871212214356;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10682904340170843;  // std dev = 0.028, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.12818697281973526;  // std dev = 1.429, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 4.51064466032928E-4;  // std dev = 3.988, 278.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=77 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08343500240052998;  // std dev = 3.147, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return -0.010514189567709317;  // std dev = 1.977, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.15592445589812634;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.20986720181523896;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then return 0.1980361293607825;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3451969191675099;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.15232973365581187;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.10764563225436759;  // std dev = 0.118, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.0037660482717365848;  // std dev = 1.213, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.019191245927760225;  // std dev = 3.934, 245.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=77 */
%   | | | else return -0.011834760997821254;  // std dev = 3.888, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */


Results
   AUC ROC   = 0.980639
   AUC PR    = 0.173934
   CLL	      = -0.196794
   Precision = 0.114607 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.205231


Total learning time: 7.077 seconds
Total inference time: 6.986 seconds
AUC ROC: 0.980639


Results scoring model
   AUC ROC   = 0.98763
   AUC PR    = 0.295084
   CLL	      = -0.178455
   Precision = 0.245931 at threshold = 0.5
   Recall    = 0.855346
   F1        = 0.382022


Total scoring time: 7.312 seconds
Refined model CLL: -0.178455


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980448
   AUC PR    = 0.162432
   CLL	      = -0.201264
   Precision = 0.099134 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180227


Total learning time: 25.59 seconds
Total inference time: 7.255 seconds
AUC ROC: 0.980448
Total revision time: 25.59
Best scored revision CLL: -0.176939


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:18:39
{'AUC ROC': 0.980448, 'AUC PR': 0.162432, 'CLL': -0.201264, 'Precision': [0.099134, 0.5], 'Recall': 0.990385, 'F1': 0.180227, 'Learning time': 25.59, 'Inference time': 7.255, 'parameter_0.6': {'AUC ROC': 0.980448, 'AUC PR': 0.162432, 'CLL': -0.201264, 'Precision': [0.099134, 0.5], 'Recall': 0.990385, 'F1': 0.180227, 'Learning time': 3.182, 'Inference time': 7.255}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7230137999643763;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.06760839455897082;  // std dev = 4.950, 148.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=31 */
%   | | | else return 0.1562855810622445;  // std dev = 5.804, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19777157660894767;  // std dev = 6.895, 212.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=72 */
%   | | | else return 0.2534977723088147;  // std dev = 3.206, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7459232260998327;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7459232260998326;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276481462555765;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6490714591775291;  // std dev = 0.956, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10805141056678427;  // std dev = 4.795, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.13251825317162194;  // std dev = 5.819, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14951022438184808;  // std dev = 7.012, 227.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=72 */
%   | | | else return 0.1279793991521738;  // std dev = 3.441, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.582017992274658;  // std dev = 1.19e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7103928262875884;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.008175347144421998;  // std dev = 4.517, 142.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=25 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7767358452206881;  // std dev = 1.391, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return -0.18076158910092485;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.40599541912347137;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.1434360734658149;  // std dev = 7.004, 224.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=76 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.19147037443615175;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4375884505263467;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.43758845052634654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2500884505263467;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5317041440511086;  // std dev = 0.098, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7161360902837977;  // std dev = 1.091, 80.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=79 */
%   | | else return -0.16084899275530667;  // std dev = 0.147, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3035015773165294;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10962733765032269;  // std dev = 6.976, 223.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=72 */
%   | | | else return 0.10022534538929473;  // std dev = 3.383, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.24938557507308973;  // std dev = 1.303, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0.2905909331816076;  // std dev = 0.993, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.40262751124693935;  // std dev = 0.095, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5474493358145066;  // std dev = 1.587, 81.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=79 */
%   | | else return -0.1413336198897353;  // std dev = 0.189, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5914032611475512;  // std dev = 2.301, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return -0.23881211440995614;  // std dev = 0.388, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.1820647065378816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1042541063676479;  // std dev = 6.038, 162.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.28131885580669547;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2572356879565667;  // std dev = 0.970, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, F) )
%   | then return 0.024730411424631327;  // std dev = 4.478, 299.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=81 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.22316356123463968;  // std dev = 1.036, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.06237769849279792;  // std dev = 6.684, 240.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=76 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.016466494520539682;  // std dev = 3.195, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2687692245954088;  // std dev = 0.245, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.42307941899561635;  // std dev = 2.561, 90.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=81 */
%   | else return -0.1593923473917798;  // std dev = 0.679, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.25254379985704833;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3725977267702095;  // std dev = 0.618, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.05224180754975136;  // std dev = 5.894, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0412428965502089;  // std dev = 2.334, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.008483245152502636;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.18577197527948514;  // std dev = 0.040, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.18118179291088105;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23133530425414403;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then return 0.0042307560377372495;  // std dev = 3.999, 310.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=81 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0849083734729395;  // std dev = 1.155, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.061164482676404834;  // std dev = 6.275, 226.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=76 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09004179411835599;  // std dev = 1.749, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.052099228268150076;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1569365120268136;  // std dev = 0.046, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, E), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16697218489629762;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.007237736270817593;  // std dev = 1.385, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( interaction(A, G) )
%   | then return -0.0024625443732937376;  // std dev = 4.045, 323.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=81 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5376899996939036;  // std dev = 2.747, 106.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=99 */
%   | | | else return -0.24186781173971222;  // std dev = 0.680, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.13815185486801007;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14905809507377357;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, D), phenotype(C, G) )
%   | | | then return 0.1448393042030902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10603432584366718;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.10526254068596179;  // std dev = 1.042, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.09834589581320612;  // std dev = 0.973, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then return -0.00343754179215514;  // std dev = 4.032, 323.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=79 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0023601435510856154;  // std dev = 5.951, 291.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=89 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.981311
   AUC PR    = 0.162827
   CLL	      = -0.217463
   Precision = 0.156364 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.262997


Total learning time: 2.937 seconds
Total inference time: 6.569 seconds
AUC ROC: 0.981311


Results scoring model
   AUC ROC   = 0.989995
   AUC PR    = 0.335886
   CLL	      = -0.194085
   Precision = 0.336364 at threshold = 0.5
   Recall    = 0.698113
   F1        = 0.453988


Total scoring time: 8.749 seconds
Parameter learned model CLL: -0.194085


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [2.08, 5, 32], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [4.95, 117, 31], 'false,false,true,false': [5.804, 113, 48], 'false,false,false,true': [6.895, 140, 72], 'false,false,false,false': [3.206, 26, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 14], 'true,false': [7.3e-08, 0, 18], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.02, 0, 3], 'false,true,false': [0.956, 1, 9], 'false,false,true,true': [4.795, 89, 31], 'false,false,true,false': [5.819, 115, 48], 'false,false,false,true': [7.012, 155, 72], 'false,false,false,false': [3.441, 39, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.19e-07, 0, 32], 'false,true,true,true': [0.935, 1, 7], 'false,true,true,false': [4.517, 117, 25], 'false,true,false,true': [1.391, 2, 49], 'false,true,false,false': [0.0, 91, 0], 'false,false,true,true': [1.23, 2, 6], 'false,false,true,false': [7.004, 148, 76], 'false,false,false,true': [3.23, 27, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 1], 'true,false': [1.561, 3, 13], 'false,true,true,true': [0.098, 0, 2], 'false,true,true,false': [1.091, 1, 79], 'false,true,false': [0.147, 220, 0], 'false,false,true': [1.519, 3, 10], 'false,false,false,true': [6.976, 151, 72], 'false,false,false,false': [3.383, 35, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.303, 2, 18], 'true,false': [0.993, 1, 14], 'false,true,true,true': [0.095, 0, 2], 'false,true,true,false': [1.587, 2, 79], 'false,true,false': [0.189, 226, 0], 'false,false,true,true': [2.301, 6, 41], 'false,false,true,false': [0.388, 79, 0], 'false,false,false,true': [0.839, 1, 3], 'false,false,false,false': [6.038, 107, 55]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.05e-08, 0, 9], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.97, 1, 23], 'false,true': [4.478, 218, 81], 'false,false,true,true': [1.036, 2, 6], 'false,false,true,false': [6.684, 164, 76], 'false,false,false,true': [3.195, 45, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.245, 0, 19], 'true,true,false': [2.561, 9, 81], 'true,false': [0.679, 193, 0], 'false,true,true,true': [0.085, 0, 9], 'false,true,true,false': [0.618, 1, 9], 'false,true,false': [5.894, 144, 63], 'false,false,true': [2.334, 47, 24], 'false,false,false,true': [2.277, 20, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'phenotype(A, E), interaction(C, A)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.04, 0, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.036, 0, 7], 'true,false,false,false': [0.053, 0, 9], 'false,true': [3.999, 229, 81], 'false,false,true,true': [1.155, 2, 6], 'false,false,true,false': [6.275, 150, 76], 'false,false,false,true': [1.749, 16, 10], 'false,false,false,false': [2.185, 15, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'true,false,true': 'interaction(F, E), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)'}, {'true,true': [0.046, 0, 19], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.385, 3, 12], 'false,true': [4.045, 242, 81], 'false,false,true,true': [2.747, 7, 99], 'false,false,true,false': [0.68, 179, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(C, D), phenotype(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.046, 0, 7], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.867, 1, 3], 'true,false': [1.042, 1, 11], 'false,true': [0.973, 1, 14], 'false,false,true': [4.032, 244, 79], 'false,false,false,true': [5.951, 202, 89], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.11687363038714549, 0.21443708767854897], 'false': [0.1224489795918365, 0.20914440923495034], 'false,false': [0.19029964076622627, 0.22720492118416105], 'false,false,false': [0.22427910288358854, 0.2390481341265544], 'false,false,true': [0.16558619430241164, 0.20925118629682563], 'false,true': [1.4802973661668753e-16, 0.14876033057851226], 'false,true,false': [0.22222222222222224, 0.10937499999999978], 'false,true,true': [nan, 1.4802973661668753e-16]}, {'': [-3.3306690738754696e-16, 0.21164389567400196], 'false': [0.07138255791476475, 0.20847477483265894], 'false,false': [0.20105325924632603, 0.21562934478005102], 'false,false,false': [0.21657707310446586, 0.2114158163265301], 'false,false,true': [0.19159722222222186, 0.20776092438556032], 'false,true': [0.00013365255340066126, 0.09133239204190584], 'false,true,true': [nan, 0.00013365255340066126], 'true': [1.2688263138573217e-16, 2.9605947323337506e-16]}, {'': [4.440892098500626e-16, 0.21117205717906354], 'false': [0.19835760308796832, 0.22312088630311885], 'false,false': [0.2202299467002993, 0.2370867768595045], 'false,false,false': [0.2370867768595045, nan], 'false,false,true': [0.1889660676221494, 0.2189693617415375], 'false,true': [0.16675611900494197, 0.22464703314420312], 'false,true,false': [0.0379602005722615, -8.784182172858381e-17], 'false,true,true': [0.10937500000000022, 0.14368969074305557]}, {'': [0.07836734693877541, 0.1862614101877075], 'false': [0.15483636633974268, 0.21836909103455968], 'false,false': [0.1774293170325453, 0.21857652119733587], 'false,false,false': [0.21821752536869787, 0.22004437869822474], 'false,true': [0.01544849789508973, 9.759078669977697e-05], 'true': [-1.1686558153949016e-16, 0.1523437499999999], 'false,true,true': [0.004800943297714744, 0.014885049130972928], 'true,true': [-1.7270135938613546e-16, 0.0]}, {'': [0.07706628071111446, 0.15722723185904391], 'false': [0.10068500521916486, 0.21586814967137843], 'false,false': [0.20442059818767763, 0.22402084767538763], 'false,false,false': [0.1758577823577448, 0.22506416785148675], 'false,false,true': [0.11267149065834281, 0.0019014961258360826], 'false,true': [0.030928131788632376, 0.00015795106661815233], 'true': [0.08483746033260518, 0.06573448986140194], 'false,true,true': [0.004473654605402805, 0.031075946566455508]}, {'': [0.028649222352525306, 0.1256155250950421], 'false': [0.06705194160024254, 0.18157880420132508], 'false,false': [0.18528313478034542, 0.16467269009837662], 'false,false,true': [0.13414211699948506, 0.18615389686795572], 'false,false,false': [0.16467269009837662, nan], 'true': [1.2335811384723961e-17, 0.039234499196441126], 'true,true': [1.2335811384723961e-17, nan], 'true,true,true': [1.2335811384723961e-17, nan]}, {'': [0.0958803210893931, 0.14578712728627102], 'false': [0.16108669140530363, 0.10897339105028282], 'false,true': [0.024090246662956775, 0.16782453945294465], 'false,false': [0.07670194802565236, 0.19204389574759928], 'false,false,false': [0.19204389574759928, nan], 'true': [0.06415938942278583, 0.002390721986523337], 'true,true': [0.0031682079068648247, 0.07288465335709825], 'false,true,true': [0.0008084258889383689, 0.03821670071191892]}, {'': [0.0006271116769963753, 0.109936864680781], 'false': [0.05158379293262381, 0.17222611208330496], 'false,false': [0.1739907487143277, 0.16352894583173797], 'false,false,true': [0.1668500426813655, 0.17422424280109533], 'false,false,false': [0.11767332451596871, 0.21694214876033072], 'true': [9.812554424741549e-05, 0.0008771180265255557], 'true,false': [nan, 0.0008771180265255557], 'true,false,false': [0.00018568387217139857, 0.0003144237153030595]}, {'': [0.0603817964854773, 0.10726304997641867], 'false': [0.050660257026061875, 0.1700561544534592], 'false,false': [0.1700561544534592, nan], 'false,false,true': [0.07118529008344512, 0.002579765872796443], 'true': [0.00011041366599332993, 0.12135728295232759], 'true,false': [0.0, 0.1278530751026274], 'true,false,true': [nan, 0.0]}, {'': [0.06377212175109914, 0.08389048008591274], 'false': [0.06315475206831574, 0.08416315662767421], 'false,false': [0.050329832174830856, 0.12169930162262031], 'false,false,false': [0.12169930162262031, nan], 'true': [0.0476480264985544, 0.09055864244045002], 'true,true': [0.00017055693030576896, 0.1603495190581724], 'true,true,false': [0.0, 0.18784938317214805], 'true,true,true': [0.0, 0.00030204122947571514]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;true,false;interaction(C, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(C, D), phenotype(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.10546076305650105;  // std dev = 4.161, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return 0.18769438964496651;  // std dev = 9.860, 440.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=145 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.728352773263003;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7263795819181033;  // std dev = 0.020, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.07413535258794841;  // std dev = 1.634, 44.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=3 */
%   | | | else return 0.12229340240210229;  // std dev = 3.784, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.3153534700220245;  // std dev = 3.606, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | | else return 0.12771238795485826;  // std dev = 9.208, 410.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=120 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.5657945041512161;  // std dev = 0.029, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.41059427596684334;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), interaction(A, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.06033482728523378;  // std dev = 2.076, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | | | else return 0.09398403511305298;  // std dev = 4.389, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.7884929856231203;  // std dev = 1.018, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | | else return -0.18415912547645016;  // std dev = 0.093, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5970932019317674;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10362378280013608;  // std dev = 4.760, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | | | else return 0.1610175523516357;  // std dev = 6.078, 162.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=57 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43200275414855555;  // std dev = 0.031, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.42839473604494993;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.8018882897563312;  // std dev = 0.286, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.6622357898362299;  // std dev = 1.122, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | else return -0.163167961802245;  // std dev = 0.025, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7438183235921287;  // std dev = 0.284, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2393223451280088;  // std dev = 0.025, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.44858818913319465;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09452071308650925;  // std dev = 7.094, 239.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=72 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A) )
%   | | then return 0.262453882053144;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.019255335274130148;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.33608780957251455;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5486492971984831;  // std dev = 0.154, 82.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=81 */
%   | | else return -0.14183815600618788;  // std dev = 0.023, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5992511370903839;  // std dev = 2.040, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.2200630795312851;  // std dev = 0.072, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.15324915342353843;  // std dev = 3.002, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.06297953620914228;  // std dev = 5.138, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2409440865614622;  // std dev = 0.175, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), interaction(D, A) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.08599009900425417;  // std dev = 0.591, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04794975651060924;  // std dev = 1.212, 45.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | | else if ( complex(A, H), enzyme(E, I) )
%   | | | then return -0.043862754530428046;  // std dev = 1.001, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.04482382411101064;  // std dev = 3.030, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.59566116891697;  // std dev = 1.242, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.19251859766997942;  // std dev = 0.466, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.030985908218588855;  // std dev = 2.450, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.10217740840969798;  // std dev = 5.426, 191.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=73 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3591069107142736;  // std dev = 0.235, 109.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=100 */
%   | else return -0.15537900803566837;  // std dev = 0.066, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.22703610683276365;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3220731271460586;  // std dev = 1.272, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return -0.036388825658167645;  // std dev = 1.802, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | | else return 0.06671500887617174;  // std dev = 5.102, 147.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=50 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.21662207189824687;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08532665922328306;  // std dev = 1.434, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.013499875309565956;  // std dev = 2.392, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1732641653675509;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.1269507687466949;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, E), phenotype(A, F) )
%   | then if ( complex(A, G) )
%   | | then return -0.035833446575667616;  // std dev = 0.170, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | else if ( enzyme(A, H), interaction(E, E) )
%   | | | then return 0.08128460331261289;  // std dev = 0.826, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.01177960335847767;  // std dev = 1.676, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07885559230684613;  // std dev = 0.007, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.007010053675946989;  // std dev = 1.258, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.0917827101568876;  // std dev = 2.417, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.028814070485487796;  // std dev = 6.485, 344.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1553499533501055;  // std dev = 0.018, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.13551400204289;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return -0.1894546697217082;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17044401102260537;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.08202583062764825;  // std dev = 0.042, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( location(H, I), interaction(H, J) )
%   | | | then return 0.021326837940892185;  // std dev = 2.950, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | | | else return -0.016045209420766073;  // std dev = 2.153, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.02250987499640158;  // std dev = 1.548, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.044514400562929345;  // std dev = 6.310, 268.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=95 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.14068196027824642;  // std dev = 0.022, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.21730993608820715;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.016301917456562526;  // std dev = 0.930, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.19846586264527458;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, I), interaction(A, J) )
%   | then return 0.004213213019662799;  // std dev = 0.219, 293.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=86 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3780316881002348;  // std dev = 1.771, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.1671916013655039;  // std dev = 0.258, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( location(A, M) )
%   | | | then return 0.09335297798745776;  // std dev = 5.163, 138.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=55 */
%   | | | else return 0.017802035171642236;  // std dev = 1.113, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */


Results
   AUC ROC   = 0.976062
   AUC PR    = 0.206918
   CLL	      = -0.216924
   Precision = 0.161616 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.267112


Total learning time: 9.409 seconds
Total inference time: 5.423 seconds
AUC ROC: 0.976062


Results scoring model
   AUC ROC   = 0.98353
   AUC PR    = 0.379976
   CLL	      = -0.204226
   Precision = 0.285217 at threshold = 0.5
   Recall    = 0.773585
   F1        = 0.416773


Total scoring time: 7.315 seconds
Refined model CLL: -0.204226


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981311
   AUC PR    = 0.162827
   CLL	      = -0.217463
   Precision = 0.156364 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.262997


Total learning time: 28.41 seconds
Total inference time: 6.569 seconds
AUC ROC: 0.981311
Total revision time: 28.41
Best scored revision CLL: -0.194085


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:19:20
{'AUC ROC': 0.981311, 'AUC PR': 0.162827, 'CLL': -0.217463, 'Precision': [0.156364, 0.5], 'Recall': 0.826923, 'F1': 0.262997, 'Learning time': 28.41, 'Inference time': 6.569, 'parameter_0.8': {'AUC ROC': 0.981311, 'AUC PR': 0.162827, 'CLL': -0.217463, 'Precision': [0.156364, 0.5], 'Recall': 0.826923, 'F1': 0.262997, 'Learning time': 2.937, 'Inference time': 6.569}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11652214084113957;  // std dev = 6.328, 209.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=54 */
%   | | | else return 0.14839283753853577;  // std dev = 9.190, 410.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=119 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.138522766875212;  // std dev = 4.646, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5883753055642628;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.6697209480384423;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09808148910329019;  // std dev = 6.344, 212.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=54 */
%   | | | else return 0.12109866605926722;  // std dev = 9.244, 422.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=119 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1892734136742946;  // std dev = 4.420, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.3397187297348978;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.485598994885819;  // std dev = 1.671, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7492537059261587;  // std dev = 0.973, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.06217843426631124;  // std dev = 5.653, 179.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=42 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7572586500131118;  // std dev = 2.607, 134.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=127 */
%   | | | else return -0.17860682080857343;  // std dev = 0.202, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6566397462983653;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1513655559750876;  // std dev = 4.478, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.24396358499666318;  // std dev = 1.892, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43457199646447714;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.06542800353552303;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.32346088535336603;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4403988709701128;  // std dev = 0.145, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6247160534026169;  // std dev = 3.969, 192.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=173 */
%   | | else return -0.1624182607866773;  // std dev = 0.288, 427.000 (wgt'ed) examples reached here.  /* #neg=427 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5089427807799511;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.10308898565056651;  // std dev = 4.525, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.17363483537508986;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3070760032048897;  // std dev = 1.002, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.2838112831491397;  // std dev = 0.956, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3371145265441053;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5208352657757795;  // std dev = 3.305, 184.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=173 */
%   | | else return -0.1424179127194294;  // std dev = 0.258, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4405050885487564;  // std dev = 2.484, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return -0.24368726671316374;  // std dev = 0.168, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3508736755691111;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04306436019732753;  // std dev = 3.499, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.26798512846990125;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19878018775759165;  // std dev = 1.551, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   else if ( interaction(F, A) )
%   | then return 0.03739061966294944;  // std dev = 6.837, 605.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=183 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1391836570151141;  // std dev = 1.025, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11096422005863707;  // std dev = 4.107, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10559008799594244;  // std dev = 1.822, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20450354807919613;  // std dev = 0.980, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.34591397987697314;  // std dev = 3.262, 135.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=113 */
%   | else return -0.15590227259876419;  // std dev = 1.200, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2348870491800382;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2318963555062447;  // std dev = 1.423, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return -0.015274964933177057;  // std dev = 3.677, 140.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=29 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05487461273583709;  // std dev = 4.151, 221.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=74 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04396749701566367;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19647917098769174;  // std dev = 0.118, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.1901215381400702;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09045199097247954;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A) )
%   | then return 0.020649351749561038;  // std dev = 6.213, 617.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.28470472206624753;  // std dev = 0.335, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04644600655820403;  // std dev = 3.991, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.0389720301665426;  // std dev = 1.146, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.049856101657554705;  // std dev = 1.548, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16628329862231708;  // std dev = 0.100, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18412591675535067;  // std dev = 0.110, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.003826779796526278;  // std dev = 6.439, 654.000 (wgt'ed) examples reached here.  /* #neg=471 #pos=183 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5732268165937571;  // std dev = 1.088, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.23637410882048546;  // std dev = 0.469, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.13703704329249122;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1615505888377902;  // std dev = 0.169, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0.19036094025963446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11915770849669016;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09898018686367688;  // std dev = 1.093, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.03742389992419078;  // std dev = 1.267, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then return 0.01248931988515201;  // std dev = 6.181, 609.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=173 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.0022570764615995964;  // std dev = 3.636, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.980871
   AUC PR    = 0.169373
   CLL	      = -0.202082
   Precision = 0.099229 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180385


Total learning time: 4.171 seconds
Total inference time: 7.136 seconds
AUC ROC: 0.980871


Results scoring model
   AUC ROC   = 0.990076
   AUC PR    = 0.366452
   CLL	      = -0.177933
   Precision = 0.239958 at threshold = 0.5
   Recall    = 0.856604
   F1        = 0.374897


Total scoring time: 12.912 seconds
Parameter learned model CLL: -0.177933


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [2.46e-07, 0, 40], 'false,true,true,true': [2.11e-08, 0, 3], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.535, 3, 11], 'false,false,true,true': [6.328, 155, 54], 'false,false,true,false': [9.19, 291, 119], 'false,false,false,true': [4.646, 77, 30], 'false,false,false,false': [2.07, 15, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [7.3e-08, 0, 21], 'true,false': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.895, 1, 6], 'false,true,false': [0.953, 1, 10], 'false,false,true,true': [6.344, 158, 54], 'false,false,true,false': [9.244, 303, 119], 'false,false,false,true': [4.42, 56, 30], 'false,false,false,false': [1.732, 6, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.671, 3, 40], 'false,true,true,true': [0.973, 1, 14], 'false,true,true,false': [5.653, 137, 42], 'false,true,false,true': [2.607, 7, 127], 'false,true,false,false': [0.202, 295, 0], 'false,false,true,true': [0.186, 0, 4], 'false,false,true,false': [4.478, 59, 31], 'false,false,false,true': [1.892, 8, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 23], 'true,true,false': [0.707, 1, 1], 'true,false': [1.333, 2, 16], 'false,true,true,true': [0.145, 0, 10], 'false,true,true,false': [3.969, 19, 173], 'false,true,false': [0.288, 427, 0], 'false,false,true': [0.17, 0, 6], 'false,false,false,true': [4.525, 65, 30], 'false,false,false,false': [1.852, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.002, 1, 24], 'true,false': [0.956, 1, 16], 'false,true,true,true': [0.137, 0, 10], 'false,true,true,false': [3.305, 11, 173], 'false,true,false': [0.258, 406, 0], 'false,false,true,true': [2.484, 9, 21], 'false,false,true,false': [0.168, 29, 0], 'false,false,false,true': [0.103, 0, 4], 'false,false,false,false': [3.499, 41, 17]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.551, 3, 29], 'false,true': [6.837, 422, 183], 'false,false,true,true': [1.025, 1, 4], 'false,false,true,false': [4.107, 56, 31], 'false,false,false,true': [1.822, 9, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.98, 1, 21], 'true,true,false': [3.262, 22, 113], 'true,false': [1.2, 256, 0], 'false,true,true,true': [0.042, 0, 13], 'false,true,true,false': [1.423, 3, 11], 'false,true,false': [3.677, 111, 29], 'false,false,true': [4.151, 147, 74], 'false,false,false,true': [1.445, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.118, 0, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.016, 0, 10], 'true,false,false,false': [0.914, 1, 6], 'false,true': [6.213, 434, 183], 'false,false,true,true': [0.335, 0, 4], 'false,false,true,false': [3.991, 68, 31], 'false,false,false,true': [1.146, 7, 3], 'false,false,false,false': [1.548, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.1, 0, 24], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.11, 0, 16], 'false,true': [6.439, 471, 183], 'false,false,true,true': [1.088, 0, 42], 'false,false,true,false': [0.469, 85, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [5.27e-09, 0, 10], 'true,true,true,false': [0.169, 0, 13], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.087, 0, 3], 'true,false': [1.093, 2, 14], 'false,true': [1.267, 2, 15], 'false,false,true': [6.181, 436, 173], 'false,false,false,true': [3.636, 89, 36], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [1.5099033134902129e-15, 0.2074542058368409], 'false': [0.13296398891966726, 0.20150571048137372], 'false,false': [0.20137226909837125, 0.20214843750000136], 'false,false,false': [0.20176434623111314, 0.20408163265306134], 'false,false,true': [0.19161649229642258, 0.20600237953599146], 'false,true': [0.0, 0.16836734693877536], 'false,true,false': [nan, 0.16836734693877523], 'false,true,true': [1.4802973661668753e-16, 0.0]}, {'': [-8.881784197001252e-16, 0.2075142462158429], 'false': [0.09656471876651265, 0.20394957021500038], 'false,false': [0.19836462133517851, 0.23237991244853526], 'false,false,false': [0.22714981070849205, 0.24999999999999992], 'false,false,true': [0.18983624065503724, 0.20247186720873217], 'false,true': [0.11439535534443987, 0.08264462809917372], 'false,true,true': [nan, 0.11439535534443987], 'true': [2.5376526277146434e-16, 0.0]}, {'': [0.06489994591671226, 0.20782247740510013], 'false': [0.2038173466566827, 0.22672749132159334], 'false,false': [0.22413221533193464, 0.23863204988691739], 'false,false,false': [0.23863204988691739, nan], 'false,false,true': [0.00862031074448566, 0.22284660699368605], 'false,true': [0.20329267110421284, 0.20405382724608045], 'false,true,false': [0.05070039108601108, 0.00013896980386175238], 'false,true,true': [0.06311175572884314, 0.17853922965039737]}, {'': [0.0648999459167115, 0.16702704507623967], 'false': [0.1576797269771743, 0.21640895859798417], 'false,false': [0.004790034599865674, 0.21984320719561], 'false,false,false': [0.2155117166085944, 0.2448979591836733], 'false,true': [0.07967112992102, 0.0001945107536687477], 'false,true,true': [0.0020989216948988252, 0.08202952614204724], 'true': [0.038399999999999906, 0.0987654320987654], 'true,true': [-1.1584935909132068e-16, 0.24999999999999997]}, {'': [0.045812699578352864, 0.12928985744098617], 'false': [0.11239644897259929, 0.21289381684583206], 'false,false': [0.2220669730435395, 0.20333346220069554], 'false,false,true': [0.20569535595154637, 0.0009764274700881275], 'false,false,false': [0.002665007349599152, 0.21105998374935905], 'false,true': [0.05804569057662719, 0.00016391104903346602], 'false,true,true': [0.0018854172727140739, 0.05935801800171131], 'true': [0.04017640910507689, 0.05377919108710449]}, {'': [0.0568199465309776, 0.09606764848213967], 'false': [0.07727025744840964, 0.1967107716797388], 'false,false': [0.19484930127480954, 0.2073735781302116], 'false,false,false': [0.2073735781302116, nan], 'false,false,true': [0.2103022551398391, 0.19391792131372187], 'true': [-2.0185873175002847e-17, 0.07512662729032826], 'true,true': [-2.0185873175002847e-17, nan], 'true,true,true': [-2.0185873175002847e-17, nan]}, {'': [0.08723773291226994, 0.09132251876632146], 'false': [0.10146120890926252, 0.08362808765844289], 'false,true': [0.07508398008347184, 0.09655540514754378], 'true': [0.0763008013725989, 0.005627991197247318], 'false,false': [0.07795521990579417, 0.20888464982613758], 'false,false,false': [0.20888464982613758, nan], 'true,true': [0.04365122326313409, 0.07881935855273722], 'false,true,true': [0.00013403953484987413, 0.14467604695995848]}, {'': [0.022245057463184174, 0.079130791298304], 'false': [0.06256724198527516, 0.16000952033036822], 'false,false': [0.157866168284674, 0.16129835367637613], 'false,false,false': [0.13132783157101854, 0.18430109579224055], 'false,false,true': [0.02809532463348749, 0.160904882635967], 'true': [0.0005766483200576461, 0.051520685200511514], 'true,false': [nan, 0.051520685200511535], 'true,false,false': [2.490747991296671e-05, 0.11924254157211048]}, {'': [0.0006285142609554594, 0.07857849835660537], 'false': [0.06339721162733822, 0.1561209768570514], 'false,false': [0.1561209768570514, nan], 'false,false,true': [0.028161730605436305, 0.0025836965333186322], 'true': [0.0004205292446251054, 0.0007494763723463194], 'true,false': [nan, 0.0007494763723463194]}, {'': [0.02936728858608337, 0.07065649761589417], 'false': [0.09439191461890774, 0.07008971571215956], 'false,false': [0.06272704337139685, 0.10578023188363585], 'false,false,false': [0.10578023188363585, nan], 'true': [0.0016308992375453852, 0.07461220527928075], 'true,true': [0.0013898014461632099, 0.002851818870086755], 'true,true,false': [0.0, 0.0025349501067437816], 'true,true,true': [2.7755575615628915e-18, 0.0021976125620205866]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;true,true,false;interaction(D, C), phenotype(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.11455919150976768;  // std dev = 5.454, 156.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=40 */
%   | | | else return 0.1825251347156335;  // std dev = 10.686, 521.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6718543645919074;  // std dev = 0.213, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.10289379089037355;  // std dev = 0.967, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | | else return 0.1371997040107312;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.33719970401073124;  // std dev = 1.584, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.10188145272862345;  // std dev = 4.183, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.711580352382763;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.09565085074288172;  // std dev = 6.912, 251.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=66 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1165558507811034;  // std dev = 5.236, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | | else return 0.17725106859121043;  // std dev = 7.168, 229.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=79 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5427018509934031;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.005234789187246538;  // std dev = 3.424, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return 0.1218223776736096;  // std dev = 5.242, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7692955954185272;  // std dev = 2.201, 132.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=127 */
%   | | | else return -0.18275216921812157;  // std dev = 0.171, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8108082940152913;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1775941225190076;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7149609776323425;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07863561228396912;  // std dev = 4.458, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3922431054019061;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.37341957599014153;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5337324950106372;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6539097187158134;  // std dev = 3.112, 184.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=173 */
%   | | else return -0.16509720029561697;  // std dev = 0.024, 416.000 (wgt'ed) examples reached here.  /* #neg=416 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), complex(H, J) )
%   | | | then return 0.6033041420060968;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11274767616566074;  // std dev = 4.337, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.15368533957299702;  // std dev = 1.276, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3618043798365062;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return 0.28155265316487765;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.3419225761159133;  // std dev = 0.002, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3321230772984402;  // std dev = 0.760, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5230594679252032;  // std dev = 2.722, 181.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=173 */
%   | | else return -0.14403134431962353;  // std dev = 0.020, 442.000 (wgt'ed) examples reached here.  /* #neg=442 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5206080850493097;  // std dev = 1.836, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return -0.19740575754786133;  // std dev = 0.242, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.19046487872769108;  // std dev = 1.945, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.02153424313698124;  // std dev = 2.965, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.27958906154553864;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3858085718803667;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2795890615455386;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20717275019643855;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then return 0.022082304829428728;  // std dev = 0.263, 555.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=150 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), phenotype(A, K) )
%   | | | then return 0.022419747663041112;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37496675164897336;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, L) )
%   | | | then return 0.05807355017808589;  // std dev = 4.832, 183.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=61 */
%   | | | else return 0.21992526989627523;  // std dev = 1.359, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.004767934487923395;  // std dev = 0.260, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then return 0.13180591147183793;  // std dev = 0.283, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | | else return 0.04026131222144041;  // std dev = 0.274, 236.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=78 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.3239409394331012;  // std dev = 0.215, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.04151131641310583;  // std dev = 1.813, 81.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=13 */
%   | | | else return 0.04248540694158739;  // std dev = 3.098, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5257023495205126;  // std dev = 0.308, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15698727857470565;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 6.920663041525372E-4;  // std dev = 0.260, 230.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=64 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21511686668374294;  // std dev = 0.034, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), interaction(A, D) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.11990108794110901;  // std dev = 0.895, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return -0.016191032494521203;  // std dev = 1.658, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( enzyme(A, G), enzyme(D, H) )
%   | | | then return -0.055893326388091434;  // std dev = 1.953, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return 0.02503396293696468;  // std dev = 5.927, 508.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=159 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), complex(K, L) )
%   | | | then return 0.21885008926487648;  // std dev = 1.172, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.012048067555275706;  // std dev = 2.153, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.078083674886813;  // std dev = 2.420, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.125106905539355;  // std dev = 2.738, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17721432152173877;  // std dev = 0.037, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.07700823026960757;  // std dev = 0.312, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, A), enzyme(A, F) )
%   | | then return -0.08937516679569968;  // std dev = 0.008, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(G, A), interaction(E, E) )
%   | | | then return 0.1340834404507752;  // std dev = 0.921, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.018683967114380133;  // std dev = 3.503, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, I), phenotype(A, J) )
%   | | | then return -0.022660415656099813;  // std dev = 1.536, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.027422512838082228;  // std dev = 3.012, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03565550811708392;  // std dev = 3.917, 207.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=70 */
%   | | | else return 0.05702377085282173;  // std dev = 4.458, 174.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1770162226878286;  // std dev = 0.070, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.07549875826315734;  // std dev = 0.391, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.18158998512351401;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3010201769518282;  // std dev = 0.198, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.09040181920068299;  // std dev = 0.012, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.18105659623873524;  // std dev = 6.335, 338.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=216 */
%   | | | else return -0.16401018072590148;  // std dev = 1.229, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1503037797611393;  // std dev = 0.748, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.09813033420687103;  // std dev = 1.674, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */


Results
   AUC ROC   = 0.974869
   AUC PR    = 0.145664
   CLL	      = -0.2058
   Precision = 0.098242 at threshold = 0.5
   Recall    = 0.913462
   F1        = 0.177404


Total learning time: 13.942 seconds
Total inference time: 8.457 seconds
AUC ROC: 0.974869


Results scoring model
   AUC ROC   = 0.987829
   AUC PR    = 0.283193
   CLL	      = -0.185028
   Precision = 0.225121 at threshold = 0.5
   Recall    = 0.879245
   F1        = 0.358462


Total scoring time: 19.146 seconds
Refined model CLL: -0.185028


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980871
   AUC PR    = 0.169373
   CLL	      = -0.202082
   Precision = 0.099229 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.180385


Total learning time: 50.17100000000001 seconds
Total inference time: 7.136 seconds
AUC ROC: 0.980871
Total revision time: 50.17100000000001
Best scored revision CLL: -0.177933


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:20:26
{'AUC ROC': 0.980871, 'AUC PR': 0.169373, 'CLL': -0.202082, 'Precision': [0.099229, 0.5], 'Recall': 0.990385, 'F1': 0.180385, 'Learning time': 50.17100000000001, 'Inference time': 7.136, 'parameter_1.0': {'AUC ROC': 0.980871, 'AUC PR': 0.169373, 'CLL': -0.202082, 'Precision': [0.099229, 0.5], 'Recall': 0.990385, 'F1': 0.180385, 'Learning time': 4.171, 'Inference time': 7.136}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09191516886574615;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return 0.09952824544433993;  // std dev = 3.259, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7336614886487065;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7336614886487064;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23874637341640453;  // std dev = 0.680, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.16237718668542195;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.06434633872956044;  // std dev = 3.307, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08316269088342;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.03052658778904553;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43611927193738037;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7825663754406339;  // std dev = 0.294, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.030545792195699615;  // std dev = 2.774, 62.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.616489964067366;  // std dev = 1.765, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.16299296763027285;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.21631697878337267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.0918315432218434;  // std dev = 1.808, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.024406839349084428;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.46095438049064613;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2609543804906461;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.12762104715731273;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44174233486804815;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5916303286619211;  // std dev = 2.229, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | else return -0.15528013136545388;  // std dev = 0.144, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5724857411701769;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16771049803680346;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.10290743145512826;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3777827913716365;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21784897394454159;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33813009940444694;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.40045598452251335;  // std dev = 2.716, 41.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=32 */
%   | | else return -0.13620323536307474;  // std dev = 0.141, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6633708777720297;  // std dev = 0.269, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25895040964494914;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.03520272300075786;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2698786585834768;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23194211562520065;  // std dev = 0.901, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.030989422379582212;  // std dev = 3.481, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11260109679202672;  // std dev = 1.447, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.011199744027499445;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24346760291650815;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.46093769260978873;  // std dev = 0.609, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.1640690864736423;  // std dev = 0.607, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.25592705835052754;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05746414380443554;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.026786116021610056;  // std dev = 1.512, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0257582264785838;  // std dev = 2.523, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.2412031814379715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.19188125967693043;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.10454794778599848;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3103620369748769;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.048575118151844794;  // std dev = 2.981, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10174352527757714;  // std dev = 1.320, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.49664582460104933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17056725692945351;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2440879560960315;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A) )
%   | then return -1.1360869816513955E-4;  // std dev = 3.186, 149.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4717039175691377;  // std dev = 0.446, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24114275116989753;  // std dev = 0.153, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.13342223248589014;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15635243543300326;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2657728912141941;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.09510542699835722;  // std dev = 1.003, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.045361401480087465;  // std dev = 0.906, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then return 0.008992479199216537;  // std dev = 3.137, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.012376452439067352;  // std dev = 1.187, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997306
   AUC PR    = 0.598782
   CLL	      = -0.164832
   Precision = 0.59322 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.666667


Total learning time: 2.092 seconds
Total inference time: 2.554 seconds
AUC ROC: 0.997306


Results scoring model
   AUC ROC   = 0.987215
   AUC PR    = 0.443088
   CLL	      = -0.176325
   Precision = 0.173228 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.28479


Total scoring time: 3.927 seconds
Parameter learned model CLL: -0.176325


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.964, 1, 13], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.894, 1, 4], 'false,false,true,true': [3.714, 59, 18], 'false,false,true,false': [3.259, 44, 14], 'false,false,false,true': [1.309, 3, 4], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.68, 1, 1], 'false,true,false': [0.0, 0, 4], 'false,false,true,true': [3.509, 39, 18], 'false,false,true,false': [3.307, 50, 14], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.317, 2, 13], 'false,true,true,true': [0.294, 0, 11], 'false,true,true,false': [2.774, 53, 9], 'false,true,false,true': [1.765, 4, 16], 'false,true,false,false': [0.0, 54, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.808, 10, 5], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.894, 1, 4], 'true,false': [0.816, 1, 2], 'false,true,true,true': [0.098, 0, 4], 'false,true,true,false': [2.229, 6, 32], 'false,true,false': [0.144, 97, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.913, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.082, 0, 8], 'true,false': [0.867, 1, 5], 'false,true,true,true': [0.09, 0, 4], 'false,true,true,false': [2.716, 9, 32], 'false,true,false': [0.141, 115, 0], 'false,false,true,true': [0.269, 0, 4], 'false,false,true,false': [0.011, 3, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.238, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.901, 1, 10], 'false,true': [3.481, 94, 36], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.447, 7, 5], 'false,false,false,true': [0.715, 3, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.095, 0, 7], 'true,true,false': [0.609, 0, 19], 'true,false': [0.607, 39, 0], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [1.055, 2, 3], 'false,true,false': [1.512, 28, 6], 'false,false,true': [2.523, 48, 17], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.039, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.699, 1, 2], 'true,false,false,false': [0.028, 0, 2], 'false,true': [2.981, 83, 36], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.32, 6, 5], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.072, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.03, 0, 2], 'false,true': [3.186, 113, 36], 'false,false,true,true': [0.446, 0, 6], 'false,false,true,false': [0.153, 14, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [1.003, 2, 4], 'false,true': [0.906, 1, 7], 'false,false,true': [3.137, 93, 32], 'false,false,false,true': [1.187, 9, 5], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06632653061224467, 0.20242331426512447], 'false': [0.1388888888888887, 0.1917942197662472], 'false,false': [0.18085048010974056, 0.23437499999999983], 'false,false,false': [0.24489795918367332, 0.0], 'false,false,true': [0.17911958171698378, 0.18311533888228257], 'false,true': [0.0, 0.15999999999999998], 'false,true,false': [nan, 0.15999999999999986], 'false,true,true': [0.0, nan]}, {'': [-4.099285014000578e-16, 0.20267188702891753], 'false': [0.1369538082180759, 0.1959264283144597], 'false,false': [0.19457041720664023, 0.2026308195843677], 'false,false,false': [0.2040816326530614, 0.1875], 'false,false,true': [0.21606648199446005, 0.17089843750000003], 'false,true': [0.23109848582817671, 0.0], 'false,true,true': [nan, 0.23109848582817671], 'true': [0.0, 0.0]}, {'': [0.1155555555555557, 0.18056142124340496], 'false': [0.17694283153672008, 0.20691838404170512], 'false,false': [0.20989199088687974, 0.18750000000000003], 'false,false,true': [0.0, 0.21795007080346346], 'false,false,false': [0.18750000000000003, nan], 'false,true': [0.19118516898981652, 0.161918394218666], 'false,true,true': [0.00783496939817908, 0.12408949011446398], 'false,true,false': [0.1557189153167779, -2.878355989768924e-17]}, {'': [0.11555555555555555, 0.15751983565037878], 'false': [0.14971479255239292, 0.22054005568417562], 'false,false': [0.0, 0.21924756702766934], 'false,false,false': [0.23999999999999994, 0.1388888888888889], 'false,true': [0.12042117690189791, 0.00021376834889686006], 'false,true,true': [0.002400992350415493, 0.13070469606276855], 'true': [0.07638888888888885, 0.22222222222222224], 'true,true': [-6.344131569286608e-17, 0.15999999999999998]}, {'': [0.06040510976041891, 0.11403231306214744], 'false': [0.10338474642882681, 0.2140453936402589], 'false,false': [0.2187088255272667, 0.17017411025672613], 'false,false,true': [0.018133362228653194, 4.188675064848805e-05], 'false,false,false': [nan, 0.17017411025672613], 'false,true': [0.16440001456981376, 0.00017208548955273853], 'false,true,true': [0.002042734467574095, 0.17989445890675687], 'true': [0.0008499042679048774, 0.1251955784417881]}, {'': [0.058230746407789254, 0.10141517752710995], 'false': [0.09322520777655637, 0.16567336726929582], 'false,false': [0.17446659562080735, 0.12779869607404495], 'false,false,true': [nan, 0.17446659562080735], 'false,false,false': [0.12779869607404495, nan], 'true': [0.0, 0.07380346307339652], 'true,true': [0.0, nan], 'true,true,true': [0.0, nan]}, {'': [0.09223857087894466, 0.09334404500791776], 'false': [0.08653814503464963, 0.097545180321545], 'false,false': [0.09796605126225144, 0.0], 'true': [0.023920039502696302, 0.009434782083959684], 'false,true': [0.14832975888502561, 0.06720324814596379], 'false,true,true': [0.0, 0.22255729104724237], 'true,true': [0.001301762589408387, 0.019520293531093774], 'false,false,false': [0.0, nan]}, {'': [0.05375218949402633, 0.08283391606098477], 'false': [0.07466126272888239, 0.1571488655491002], 'false,false': [0.15843947388598345, 0.0], 'false,false,true': [nan, 0.15843947388598345], 'true': [0.00017101116090373965, 0.13925612852650632], 'true,false': [nan, 0.13925612852650632], 'true,false,false': [0.16297016750081778, 0.0003948927924772583], 'false,false,false': [0.0, nan]}, {'': [0.0011776260235889556, 0.07408020720897228], 'false': [0.06812057351384267, 0.11782838497229871], 'false,false': [0.11782838497229871, nan], 'false,false,true': [0.03315021334165946, 0.0016739180171564552], 'true': [0.0004766664777235873, 0.0004591938900510781], 'true,false': [nan, 0.0004591938900510781]}, {'': [0.09480711254549175, 0.08218468793199649], 'true': [0.0019020560590265506, 0.16755891347254023], 'false': [0.10256968785916872, 0.08094080980225088], 'false,false': [0.07873094748469292, 0.10066142544280368], 'false,false,false': [0.10066142544280368, nan], 'true,true': [0.0001314485517989461, 0.0], 'true,true,true': [0.0, -4.625929269271485e-18], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.12933537577747709;  // std dev = 4.829, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7492293200691812;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5580193346218546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.17743411261013234;  // std dev = 2.441, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.5916644127012141;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return -0.15854787099222029;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.09390486930714412;  // std dev = 4.321, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5526066830056151;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5983679505652482;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), interaction(A, H) )
%   | | | then return -0.08409617136497786;  // std dev = 1.107, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.16894335135559965;  // std dev = 3.382, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6466306456578459;  // std dev = 1.575, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.1666456836352908;  // std dev = 0.081, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23066507277725837;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.3479525388508328;  // std dev = 0.684, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.44258558734180525;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41541226102822604;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4126396244585168;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5504707443357818;  // std dev = 0.230, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5939408440693302;  // std dev = 2.283, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | else return -0.17406645853460903;  // std dev = 0.032, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.587385273901143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.08745014033785133;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.45411100830120626;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.31649885729582194;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.35033749382836293;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4209787052956173;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5467007947002291;  // std dev = 1.622, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | else return -0.14718049100410288;  // std dev = 0.032, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6870963856463723;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23822182834995598;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23707733548337354;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.23820542222033095;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return -0.002546690096778853;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.09459231629958247;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2732619568297788;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, G), interaction(A, H) )
%   | then if ( complex(H, G), interaction(I, A) )
%   | | then return -0.04475597274812573;  // std dev = 0.245, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( enzyme(H, J), interaction(H, K) )
%   | | | then return 0.09913436029784915;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.38400517997652517;  // std dev = 0.894, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, L), interaction(L, A) )
%   | | then if ( phenotype(L, M) )
%   | | | then return -0.1184963725431144;  // std dev = 0.761, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.33656095374406103;  // std dev = 0.538, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.021020978292880226;  // std dev = 0.286, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38218243492667486;  // std dev = 0.144, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.1828589797088129;  // std dev = 0.111, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2659894120432227;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.273609485867356;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.22634564019752806;  // std dev = 0.382, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.036749142456694965;  // std dev = 1.475, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.05766963676943764;  // std dev = 2.154, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.044351542650040925;  // std dev = 1.508, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return -0.20105269406692083;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.20001026236691746;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06233427091937535;  // std dev = 0.743, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1933422877588801;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.028625219688018923;  // std dev = 0.214, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.11755670921104802;  // std dev = 0.351, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.038308373544991385;  // std dev = 2.630, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.06481970174256442;  // std dev = 1.300, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.22216264477272757;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.02248491250299368;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1638076526797759;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.18024568850608114;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.2956582446586474;  // std dev = 1.053, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.03664342283043768;  // std dev = 2.539, 95.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=19 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10331829878409798;  // std dev = 0.280, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13610511151222562;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3584751483011713;  // std dev = 0.731, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.029654515219472342;  // std dev = 0.522, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.24692182757184492;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14709974731904277;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21363123451687027;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( complex(G, F), interaction(G, H) )
%   | | then if ( enzyme(H, E), phenotype(A, I) )
%   | | | then return -0.38153092806200783;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1077131032759911;  // std dev = 0.126, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07675164712802689;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.101688967291468;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13671702440767725;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08162052532172961;  // std dev = 1.692, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.007448445429571878;  // std dev = 2.603, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */


Results
   AUC ROC   = 0.99072
   AUC PR    = 0.488458
   CLL	      = -0.169179
   Precision = 0.533333 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.634361


Total learning time: 6.777 seconds
Total inference time: 4.666 seconds
AUC ROC: 0.99072


Results scoring model
   AUC ROC   = 0.988139
   AUC PR    = 0.377328
   CLL	      = -0.18188
   Precision = 0.163399 at threshold = 0.5
   Recall    = 0.909091
   F1        = 0.277008


Total scoring time: 6.703 seconds
Refined model CLL: -0.18188


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997306
   AUC PR    = 0.598782
   CLL	      = -0.164832
   Precision = 0.59322 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.666667


Total learning time: 19.499 seconds
Total inference time: 2.554 seconds
AUC ROC: 0.997306
Total revision time: 19.499
Best scored revision CLL: -0.176325


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:20:54
{'AUC ROC': 0.997306, 'AUC PR': 0.598782, 'CLL': -0.164832, 'Precision': [0.59322, 0.5], 'Recall': 0.76087, 'F1': 0.666667, 'Learning time': 19.499, 'Inference time': 2.554, 'parameter_0.2': {'AUC ROC': 0.997306, 'AUC PR': 0.598782, 'CLL': -0.164832, 'Precision': [0.59322, 0.5], 'Recall': 0.76087, 'F1': 0.666667, 'Learning time': 2.092, 'Inference time': 2.554}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13234248348660765;  // std dev = 4.968, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | | else return 0.11642708079487545;  // std dev = 5.378, 151.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.6385442963349347;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5476352054258435;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7287769192988289;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4616696477602919;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.10080524208143535;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | | | else return 0.13661014777765942;  // std dev = 5.250, 133.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=39 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08874113578563492;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.11051392751025163;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5483411786217308;  // std dev = 0.965, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6966205113110032;  // std dev = 1.325, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.048844249590834915;  // std dev = 4.043, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8136216521102543;  // std dev = 0.315, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.17552537131288307;  // std dev = 2.98e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2531925150453029;  // std dev = 2.115, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.5722018691422429;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3718281691869754;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.30355936521794613;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.4739921642256888;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.351893654619826;  // std dev = 0.855, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6148948083303423;  // std dev = 2.790, 82.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=73 */
%   | | else return -0.16687428659052028;  // std dev = 0.241, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.31871156037203446;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.054592457246416974;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.7229486380209811;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.215745219120739;  // std dev = 1.318, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.37399354495679926;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39640695236900836;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.43763396767042584;  // std dev = 3.341, 86.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=73 */
%   | | else return -0.14338831414560804;  // std dev = 0.251, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4921767450860903;  // std dev = 1.177, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.3506750780582696;  // std dev = 0.256, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.512780836390788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15280943073170733;  // std dev = 1.393, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.3167346526945903;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24053440843376767;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then return 0.04314318665335245;  // std dev = 4.676, 261.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=79 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.146950878076494;  // std dev = 1.918, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.12856451992382184;  // std dev = 1.171, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2773364724358379;  // std dev = 0.164, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.37057393316268844;  // std dev = 2.239, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | else return -0.150164060022089;  // std dev = 0.577, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2536923134326879;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.32219952678223546;  // std dev = 0.789, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.035928704808131026;  // std dev = 1.642, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02758892306361069;  // std dev = 2.488, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.3734228281605551;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.20696183442426427;  // std dev = 0.068, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.20119459352650554;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2528162974371105;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.0038720297335635397;  // std dev = 4.393, 290.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=79 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.24432217655703306;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.08667860087973153;  // std dev = 1.753, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.0537820697652513;  // std dev = 1.029, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.29090692802602564;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.0679122647769253;  // std dev = 1.343, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08307865820873148;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 5.762535075714803E-4;  // std dev = 4.401, 296.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=79 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47417161716513595;  // std dev = 0.458, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.24846781576076157;  // std dev = 0.121, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.16325708826336163;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17411644171484436;  // std dev = 0.128, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1579213816926499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1264201126467665;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.09438045992337002;  // std dev = 0.871, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then return 0.013791762816107769;  // std dev = 4.161, 260.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=73 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.00998358514602743;  // std dev = 1.702, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996928
   AUC PR    = 0.620293
   CLL	      = -0.160475
   Precision = 0.532374 at threshold = 0.5
   Recall    = 0.804348
   F1        = 0.640693


Total learning time: 3.015 seconds
Total inference time: 2.687 seconds
AUC ROC: 0.996928


Results scoring model
   AUC ROC   = 0.984566
   AUC PR    = 0.266994
   CLL	      = -0.187684
   Precision = 0.136012 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.232497


Total scoring time: 7.399 seconds
Parameter learned model CLL: -0.187684


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.975, 1, 19], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.926, 1, 6], 'false,false,true,true': [4.968, 90, 34], 'false,false,true,false': [5.378, 112, 39], 'false,false,false,true': [1.871, 7, 7], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.953, 1, 10], 'true,false': [1.279, 2, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.023, 0, 3], 'false,true,false': [1.195, 2, 5], 'false,false,true,true': [5.018, 97, 34], 'false,false,true,false': [5.25, 94, 39], 'false,false,false,true': [2.245, 18, 7], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.965, 1, 19], 'false,true,true,true': [1.325, 2, 16], 'false,true,true,false': [4.043, 75, 22], 'false,true,false,true': [0.315, 0, 41], 'false,true,false,false': [2.98e-08, 114, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.115, 10, 9], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.962, 1, 11], 'true,true,false': [0.909, 1, 5], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.855, 1, 6], 'false,true,true,false': [2.79, 9, 73], 'false,true,false': [0.241, 210, 0], 'false,false,true': [0.668, 1, 2], 'false,false,false,true': [2.207, 16, 7], 'false,false,false,false': [0.0, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [1.318, 2, 11], 'true,false': [0.046, 0, 8], 'false,true,true,true': [0.163, 0, 6], 'false,true,true,false': [3.341, 13, 73], 'false,true,false': [0.251, 197, 0], 'false,false,true,true': [1.177, 2, 9], 'false,false,true,false': [0.256, 8, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.393, 12, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.013, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.966, 1, 14], 'false,true': [4.676, 182, 79], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.918, 11, 9], 'false,false,false,true': [1.171, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.164, 0, 9], 'true,true,false': [2.239, 10, 56], 'true,false': [0.577, 112, 0], 'false,true,true,true': [0.103, 0, 6], 'false,true,true,false': [0.789, 1, 6], 'false,true,false': [1.642, 33, 8], 'false,false,true': [2.488, 57, 25], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.068, 0, 13], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.014, 0, 4], 'true,false,false,false': [0.009, 0, 2], 'false,true': [4.393, 211, 79], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.753, 13, 9], 'false,false,false,true': [1.029, 4, 3], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.343, 2, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.867, 1, 3], 'false,true': [4.401, 217, 79], 'false,false,true,true': [0.458, 0, 12], 'false,false,true,false': [0.121, 16, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.008, 0, 4], 'true,true,true,false': [0.128, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.89, 1, 6], 'false,true': [0.871, 1, 9], 'false,false,true': [4.161, 187, 73], 'false,false,false,true': [1.702, 18, 10], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.047499999999999785, 0.20776908494883836], 'false': [0.15999999999999986, 0.20053466963456906], 'false,false': [0.19498842975206648, 0.24305555555555558], 'false,false,false': [0.25, 0.20999999999999988], 'false,false,true': [0.19901144640999094, 0.1915705451515295], 'false,true': [0.0, 0.18750000000000006], 'false,true,false': [0.0, 0.12244897959183662], 'false,true,true': [0.0, nan]}, {'': [0.11776859504132275, 0.20451680588604354], 'false': [0.1578917978504631, 0.20022316097334736], 'false,false': [0.2000912456872694, 0.20070665086559616], 'false,false,false': [0.20159999999999997, 0.1983471074380165], 'false,false,true': [0.19217994289376947, 0.20724744191305203], 'false,true': [0.000173110488268143, 0.2040816326530612], 'true': [0.0826446280991734, 0.14876033057851232], 'false,true,true': [nan, 0.000173110488268143]}, {'': [0.04652709420403358, 0.2072051022556682], 'false': [0.2012802140452068, 0.24163027454023506], 'false,false': [0.23532751868119425, 0.1875000000000001], 'false,false,true': [nan, 0.23532751868119425], 'false,true': [0.21279532211172283, 0.19098586000253678], 'false,true,true': [0.09748341151111045, 0.1685146822282626], 'false,true,false': [0.0024135916118539816, 7.791038769299344e-18], 'false,false,false': [0.1875000000000001, nan]}, {'': [0.08619268497287225, 0.15867841883582479], 'false': [0.15127231718801218, 0.22742479540007982], 'false,false': [0.14874172444297096, 0.23288608664846677], 'false,false,false': [0.21172022684309993, 0.0], 'false,true': [0.10072504610950334, 0.0002763528417642528], 'false,true,true': [0.10451020662800707, 0.09496161649362417], 'true': [0.0983288364519106, 0.0], 'true,true': [0.077087496376454, 0.13770443020591602]}, {'': [0.08867291928871164, 0.12335315205758397], 'false': [0.11155131425392902, 0.22354343433792417], 'false,false': [0.2495578255494971, 0.15684870914910906], 'false,false,true': [0.1259756839210297, 0.008199525364667073], 'false,false,false': [0.0, 0.1385181614614992], 'false,true': [0.1217379699668013, 0.0003193075661797981], 'false,true,true': [0.004420575623889682, 0.12981205662166706], 'true': [0.13353880754098477, 0.0002633306792960144]}, {'': [0.047746295986030494, 0.09425787659912171], 'false': [0.08378823055306467, 0.18521530415776852], 'false,false': [0.18398032521342897, 0.13707943902293238], 'false,false,true': [nan, 0.18398032521342897], 'false,false,false': [0.13707943902293238, nan], 'true': [3.5439031733441874e-05, 0.062198295664443945], 'true,true': [3.5439031733441874e-05, nan], 'true,true,true': [3.5439031733441874e-05, nan]}, {'': [0.09146522460014471, 0.07913267153617276], 'true': [0.06811464212453847, 0.0029678084635954122], 'false': [0.0813800284325766, 0.07745047735347105], 'false,true': [0.0498230332390826, 0.0657209040824406], 'false,false': [0.07551069375267613, 0.0], 'true,true': [0.0029848984669165438, 0.07595278391518798], 'false,true,true': [0.0017841692924952246, 0.08883309236034806], 'false,false,false': [0.0, nan]}, {'': [0.0004747846809637591, 0.07403886697125428], 'false': [0.06655405649389112, 0.1415736715432999], 'false,false': [0.13816167627980827, 0.12732449737739301], 'false,false,true': [0.0, 0.13967820835853012], 'false,false,false': [0.15120776999835148, 0.0], 'true': [0.0003568590145071732, 0.000640745294895421], 'true,false': [nan, 0.0006407452948954118], 'true,false,false': [5.2069840265588085e-05, 4.1562661065613904e-05]}, {'': [0.11951568070744441, 0.07181958214257511], 'true': [0.10019612169751638, 0.18780057539607103], 'true,false': [nan, 0.18780057539607103], 'false': [0.06543934115334248, 0.13590636290997463], 'false,false': [0.13590636290997463, nan], 'false,false,true': [0.017488934419494617, 0.000916112840922044]}, {'': [0.04301978596337423, 0.07062814433870304], 'false': [0.0759179826680121, 0.07021385055842305], 'false,false': [0.06657759019532462, 0.10346881471838908], 'false,false,false': [0.10346881471838908, nan], 'true': [0.0013988233747124813, 0.11321700157111003], 'true,true': [0.0015134916762301054, 0.0], 'true,true,true': [1.6679412330630056e-05, 0.0023259309490199615], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;phenotype(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47178529873587466;  // std dev = 5.594, 132.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=81 */
%   | | | else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.011995088945666053;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.43375912649666876;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.5111199232489998;  // std dev = 0.754, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5807172668079109;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.029323141122711612;  // std dev = 1.763, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.10027378586730398;  // std dev = 6.613, 256.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=67 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12426528031505361;  // std dev = 1.935, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.48521523522807847;  // std dev = 1.295, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.4059479293633183;  // std dev = 0.381, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.5706981338873516;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16671488659354952;  // std dev = 0.266, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.11182305567778486;  // std dev = 4.798, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6615904970830983;  // std dev = 2.038, 46.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=41 */
%   | | | else return -0.16087191164440537;  // std dev = 0.402, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then return 0.5674949234433159;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.15841560994625878;  // std dev = 1.404, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4827691531693533;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.442877925253244;  // std dev = 0.124, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.2372927416978013;  // std dev = 0.951, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.39201179591906515;  // std dev = 1.809, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.5676441319408215;  // std dev = 2.762, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | | else return -0.1477858684333887;  // std dev = 0.553, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5454247232121692;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.046043466655011474;  // std dev = 2.030, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.25917933354282685;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.34721733784156106;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.6318226939999061;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.39303100845804684;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3346644853562487;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return 0.052964130680624756;  // std dev = 0.319, 287.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=79 */
%   | else if ( phenotype(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.018921389175120443;  // std dev = 1.633, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.2167580514918654;  // std dev = 1.138, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3718699731734024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08247458045133384;  // std dev = 1.214, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.27360253100060933;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.2785969625104478;  // std dev = 0.157, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.03290448756613801;  // std dev = 0.911, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.5021158642141615;  // std dev = 1.841, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | | else return -0.05884664436402529;  // std dev = 2.526, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else return -0.12848015342968783;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.15434994837449562;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.19395003304917827;  // std dev = 0.238, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.11649065302976001;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.09013681796234882;  // std dev = 0.273, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, F), phenotype(F, H) )
%   | | | then return -0.21400001250977532;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.20484428717209413;  // std dev = 1.494, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.05577206101700424;  // std dev = 2.121, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return -0.05828803520504636;  // std dev = 2.578, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   else if ( interaction(A, J), interaction(J, K) )
%   | then if ( recursion_proteinclass(K, B) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.23252395904135903;  // std dev = 0.105, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24263357020029586;  // std dev = 1.454, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.0569269594810412;  // std dev = 0.260, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | else return 0.014821560274733499;  // std dev = 0.257, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17754475761191724;  // std dev = 0.181, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.39401789664130943;  // std dev = 0.368, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.12440869231387582;  // std dev = 0.287, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( location(A, G) )
%   | | | then return 0.009828933483874305;  // std dev = 3.635, 180.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=49 */
%   | | | else return -0.08796537900616823;  // std dev = 0.689, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13601873826372907;  // std dev = 1.831, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.003591763989443949;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(D, A) )
%   | | then return -0.12504440592799837;  // std dev = 1.036, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.15383163946679854;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.22151460474036946;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( enzyme(A, H), location(A, I) )
%   | | then return -0.024294376110524832;  // std dev = 0.216, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.051302539601276675;  // std dev = 2.160, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.005529643677120159;  // std dev = 2.846, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | else if ( interaction(L, M), recursion_proteinclass(L, B) )
%   | | then if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.31388848109627704;  // std dev = 1.393, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.09024394716714361;  // std dev = 1.296, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.2060430294203908;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17157154532917884;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return -0.11380461624466091;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2639205184449298;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.3056655231359332;  // std dev = 2.276, 85.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=79 */
%   | | | else return -0.053167453290395426;  // std dev = 2.218, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | else return -0.11872876418782545;  // std dev = 0.446, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.14186298600248712;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.013749581433307947;  // std dev = 0.680, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10892572958751905;  // std dev = 0.587, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */


Results
   AUC ROC   = 0.992607
   AUC PR    = 0.559544
   CLL	      = -0.157529
   Precision = 0.453416 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.577075


Total learning time: 25.585 seconds
Total inference time: 11.346 seconds
AUC ROC: 0.992607


Results scoring model
   AUC ROC   = 0.98606
   AUC PR    = 0.282674
   CLL	      = -0.179549
   Precision = 0.146724 at threshold = 0.5
   Recall    = 0.936364
   F1        = 0.253695


Total scoring time: 33.366 seconds
Refined model CLL: -0.179549


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.992607
   AUC PR    = 0.559544
   CLL	      = -0.157529
   Precision = 0.453416 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.577075


Total learning time: 69.36500000000001 seconds
Total inference time: 11.346 seconds
AUC ROC: 0.992607
Total revision time: 69.36500000000001
Best scored revision CLL: -0.179549


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:22:18
{'AUC ROC': 0.992607, 'AUC PR': 0.559544, 'CLL': -0.157529, 'Precision': [0.453416, 0.5], 'Recall': 0.793478, 'F1': 0.577075, 'Learning time': 69.36500000000001, 'Inference time': 11.346, 'parameter_0.4': {'AUC ROC': 0.996928, 'AUC PR': 0.620293, 'CLL': -0.160475, 'Precision': [0.532374, 0.5], 'Recall': 0.804348, 'F1': 0.640693, 'Learning time': 3.015, 'Inference time': 2.687}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.10452574669371391;  // std dev = 5.062, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | | | else return 0.1914822684328454;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12415878731626162;  // std dev = 6.296, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | | else return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5676846994734013;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.10251847918319588;  // std dev = 5.024, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | | else return 0.19110022807365437;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10967978615053003;  // std dev = 6.290, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
%   | | | else return 0.09492951192583635;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.44425532563517356;  // std dev = 1.633, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7199204423694545;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.03758158520556574;  // std dev = 3.954, 137.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=18 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7767899463157537;  // std dev = 0.478, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.19506675683807714;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6707221230359396;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09056703785600387;  // std dev = 6.244, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.14589723505741706;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4447570289458413;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.016185600374412554;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.33364591783473013;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.39673804159887116;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6435655993388211;  // std dev = 2.329, 73.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=68 */
%   | | else return -0.16565914381876923;  // std dev = 0.130, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.46190145678064565;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0985210861444115;  // std dev = 6.188, 189.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=54 */
%   | | | else return 0.17734638203108324;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.16212533563451637;  // std dev = 1.224, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.30341880010378297;  // std dev = 0.975, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3080655407574825;  // std dev = 0.132, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5078381644876919;  // std dev = 2.227, 73.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=68 */
%   | | else return -0.1439907793417295;  // std dev = 0.119, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7476533029419474;  // std dev = 0.735, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.218923687773695;  // std dev = 0.526, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.11859991770956174;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0696484726228161;  // std dev = 5.103, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.3363605534926714;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21663725998216618;  // std dev = 1.348, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, F) )
%   | then return 0.031121944944537475;  // std dev = 4.288, 252.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=73 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2673270399614645;  // std dev = 0.725, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07536511893470751;  // std dev = 5.679, 179.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=54 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.016205464324017;  // std dev = 2.435, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22074048033054425;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.48930640125886615;  // std dev = 1.587, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | else return -0.16225572026220414;  // std dev = 0.805, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2454016139523228;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2433564783135038;  // std dev = 1.856, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return -0.004748599813899866;  // std dev = 5.136, 225.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=49 */
%   | else if ( interaction(A, H) )
%   | | then return 0.08648311920365469;  // std dev = 1.917, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.057279898608661825;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.21625171749254754;  // std dev = 0.128, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19409899692537147;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08156730792581433;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G) )
%   | then return -0.012147714268016262;  // std dev = 4.012, 300.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=73 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17654132426637256;  // std dev = 0.623, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.023469073673140523;  // std dev = 5.461, 206.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=54 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.01675771907116289;  // std dev = 1.006, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.09953811193427937;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18674448155928286;  // std dev = 0.143, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12309360180834698;  // std dev = 1.595, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.02168962268646178;  // std dev = 3.812, 243.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=73 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5159611462295891;  // std dev = 2.838, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.21526743432776912;  // std dev = 0.641, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.16353987155261562;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1546061279413181;  // std dev = 0.144, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11083026519271866;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.0375354049715335;  // std dev = 1.320, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.12804892701348955;  // std dev = 0.910, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, I) )
%   | | then return 0.010141300854468594;  // std dev = 3.749, 246.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=68 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01702392266148122;  // std dev = 4.995, 225.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=63 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996157
   AUC PR    = 0.5204
   CLL	      = -0.173525
   Precision = 0.547009 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.61244


Total learning time: 2.847 seconds
Total inference time: 2.728 seconds
AUC ROC: 0.996157


Results scoring model
   AUC ROC   = 0.986346
   AUC PR    = 0.244103
   CLL	      = -0.193714
   Precision = 0.244399 at threshold = 0.5
   Recall    = 0.722892
   F1        = 0.365297


Total scoring time: 8.276 seconds
Parameter learned model CLL: -0.193714


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.03e-07, 0, 24], 'false,true,true,true': [0.707, 1, 1], 'false,true,true,false': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 5], 'false,false,true,true': [5.062, 104, 34], 'false,false,true,false': [4.761, 68, 34], 'false,false,false,true': [6.296, 149, 54], 'false,false,false,false': [2.51, 21, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.98e-08, 0, 11], 'true,false': [0.0, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.933, 1, 5], 'false,true,false': [2.11e-08, 0, 6], 'false,false,true,true': [5.024, 98, 34], 'false,false,true,false': [4.672, 61, 34], 'false,false,false,true': [6.29, 148, 54], 'false,false,false,false': [2.586, 26, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [1.633, 3, 24], 'false,true,true,true': [1.333, 2, 16], 'false,true,true,false': [3.954, 119, 18], 'false,true,false,true': [0.478, 0, 39], 'false,true,false,false': [0.0, 65, 0], 'false,false,true,true': [0.271, 0, 6], 'false,false,true,false': [6.244, 149, 54], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false': [1.309, 3, 4], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.143, 0, 5], 'false,true,true,false': [2.329, 5, 68], 'false,true,false': [0.13, 176, 0], 'false,false,true': [0.123, 0, 6], 'false,false,false,true': [6.188, 135, 54], 'false,false,false,false': [2.372, 15, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.224, 2, 7], 'true,false': [0.975, 1, 17], 'false,true,true,true': [0.132, 0, 5], 'false,true,true,false': [2.227, 5, 68], 'false,true,false': [0.119, 165, 0], 'false,false,true,true': [0.735, 0, 30], 'false,false,true,false': [0.526, 51, 0], 'false,false,false,true': [0.813, 1, 3], 'false,false,false,false': [5.103, 93, 36]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.079, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.348, 2, 21], 'false,true': [4.288, 179, 73], 'false,false,true,true': [0.725, 1, 6], 'false,false,true,false': [5.679, 125, 54], 'false,false,false,true': [2.435, 26, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.152, 0, 7], 'true,true,false': [1.587, 2, 57], 'true,false': [0.805, 131, 0], 'false,true,true,true': [0.106, 0, 11], 'false,true,true,false': [1.856, 6, 21], 'false,true,false': [5.136, 176, 49], 'false,false,true': [1.917, 22, 15], 'false,false,false,true': [2.049, 14, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.128, 0, 17], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 2], 'true,false,false,false': [0.926, 1, 5], 'false,true': [4.012, 227, 73], 'false,false,true,true': [0.623, 1, 6], 'false,false,true,false': [5.461, 152, 54], 'false,false,false,true': [1.006, 10, 3], 'false,false,false,false': [1.97, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.143, 0, 16], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.595, 4, 8], 'false,true': [3.812, 170, 73], 'false,false,true,true': [2.838, 8, 69], 'false,false,true,false': [0.641, 152, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.05, 0, 3], 'true,true,true,false': [0.144, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.32, 4, 10], 'false,true': [0.91, 1, 11], 'false,false,true': [3.749, 178, 68], 'false,false,false,true': [4.995, 162, 63], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [4.440892098500626e-16, 0.20706132426400284], 'false': [0.07638888888888877, 0.20025119676036798], 'false,false': [0.20305555555555588, 0.19727753320193825], 'false,false,true': [0.18567527830287878, 0.2222222222222221], 'false,false,false': [0.195248610740373, 0.21000000000000008], 'false,true': [0.18750000000000006, 0.0], 'false,true,true': [0.25, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}, {'': [7.401486830834377e-17, 0.20586109969518207], 'false': [0.07823744054405306, 0.20233496355560163], 'false,false': [0.20928402785011319, 0.1951753633682457], 'false,false,true': [0.19123048668503062, 0.22980609418282608], 'false,false,false': [0.19586315067150234, 0.1910204081632656], 'false,true': [0.14495497443084415, 7.401486830834377e-17], 'false,true,true': [nan, 0.14495497443084415], 'true': [8.074349270001139e-17, 0.0]}, {'': [0.09876543209876522, 0.19729700689012838], 'false': [0.19565110076790437, 0.1989987744602605], 'false,false': [0.19626140413954843, 0.2181122448979592], 'false,false,false': [0.2181122448979592, nan], 'false,false,true': [0.012248249973690376, 0.19203763506043228], 'false,true': [0.17123829344432984, 0.22356182415973438], 'false,true,false': [0.005848957260311202, -1.3664283380001927e-16], 'false,true,true': [0.09876543209876518, 0.11412435398795831]}, {'': [0.12244897959183683, 0.17918153494788713], 'false': [0.15657890208478212, 0.20457419199899696], 'false,false': [0.0025207534492903325, 0.2068228438858619], 'false,false,false': [0.2026240529138682, 0.23437500000000033], 'false,true': [0.07348694721299154, 9.657002084378918e-05], 'true': [0.1329639889196675, 0.09876543209876537], 'true,true': [-1.1102230246251565e-16, 0.24489795918367346], 'false,true,true': [0.004069600764641956, 0.07433618541548616]}, {'': [0.09510723774335685, 0.15833371606179372], 'false': [0.11030048507593176, 0.21219801231068913], 'false,false': [0.22796615896673775, 0.20084737209430908], 'false,false,true': [0.018028183156492853, 0.0054327603654571715], 'false,false,false': [0.16515270451707756, 0.2018821160040503], 'false,true': [0.06617311704057685, 8.52575090491505e-05], 'true': [0.16638099137102552, 0.05281574656227991], 'false,true,true': [0.0034602633601807818, 0.06791024226015174]}, {'': [0.07163494115104728, 0.12190047551549307], 'false': [0.07294713783974038, 0.17682698335768074], 'false,false': [0.17753752413570764, 0.16934204318623597], 'false,false,true': [0.07513734467028255, 0.18015519583695264], 'false,false,false': [0.16934204318623597, nan], 'true': [0.002106425047927, 0.07904999337917806], 'true,true': [0.002106425047927, nan], 'true,true,true': [0.002106425047927, nan]}, {'': [0.1049725982865414, 0.12446201377353257], 'false': [0.12109544171884251, 0.13832738284483218], 'false,false': [0.09928618969841188, 0.21000000000000002], 'false,false,false': [0.21000000000000002, nan], 'false,true': [0.09098068063021415, 0.11724495323104064], 'true': [0.04534150598350141, 0.0049501751785528], 'false,true,true': [0.0010120083140915089, 0.12763337341963343], 'true,true': [0.0032887689052949237, 0.04268091108776619]}, {'': [0.038170702458312944, 0.09525257785855222], 'false': [0.053655171810021364, 0.14557652267176419], 'false,false': [0.14258193800393337, 0.16646452646221788], 'false,false,false': [0.07784236510861185, 0.2283737024221453], 'false,false,true': [0.055462919973120105, 0.14477225637846558], 'true': [0.0009611359549569945, 0.10952084205233079], 'true,false': [nan, 0.10952084205233079], 'true,false,false': [0.0, 0.14286194414583445]}, {'': [0.11511827898418561, 0.10664353917080954], 'true': [0.0012810600740513628, 0.21204430158535914], 'true,false': [nan, 0.21204430158535914], 'false': [0.05980148312304334, 0.15630838842423503], 'false,false': [0.15630838842423503, nan], 'false,false,true': [0.10461616702837268, 0.0027062247189142815]}, {'': [0.07201226411943974, 0.08278603985298982], 'false': [0.0690561736516798, 0.08280944320042548], 'false,false': [0.05712209532995754, 0.11086953560079348], 'false,false,false': [0.11086953560079348, nan], 'true': [0.0019306703560471555, 0.12445902249205042], 'true,true': [0.0019500408112365503, 0.0], 'true,true,true': [0.000826372958417749, 0.0023046438184480484], 'true,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.15551735615214043;  // std dev = 8.911, 380.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=113 */
%   | | | else return 0.3081489350995123;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6723869276883461;  // std dev = 0.253, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.40200626221954355;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7432726872238382;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), interaction(H, A) )
%   | | | then return -0.10098748178766283;  // std dev = 0.962, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.1189948603123075;  // std dev = 3.463, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.08086241559944492;  // std dev = 4.351, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | | | else return 0.16976233830181803;  // std dev = 7.650, 263.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=88 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4986560408794839;  // std dev = 0.274, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.10088259014244441;  // std dev = 4.605, 108.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=30 */
%   | | | else return -0.01797232160527231;  // std dev = 1.812, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7843701236960159;  // std dev = 0.455, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.18642967716257605;  // std dev = 0.103, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K), enzyme(A, L) )
%   | | | then return 0.32038229848935634;  // std dev = 1.548, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.01956179107212312;  // std dev = 2.529, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.06611279447763853;  // std dev = 2.290, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.14121199079520086;  // std dev = 5.613, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4488132768992952;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.35642088870199085;  // std dev = 0.304, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5741950666010115;  // std dev = 2.115, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return 0.6956242205339336;  // std dev = 0.704, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return -0.1746533625318651;  // std dev = 0.432, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6045440121298259;  // std dev = 1.515, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.18627911520142157;  // std dev = 0.117, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08484062927648388;  // std dev = 4.982, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.17480882288341384;  // std dev = 3.377, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.14509436943238269;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.35642258631215784;  // std dev = 0.146, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.6122809286462462;  // std dev = 0.623, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.5041981189001529;  // std dev = 1.435, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else return -0.14858111597762996;  // std dev = 0.290, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6837791525104722;  // std dev = 1.443, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return -0.20640767083779168;  // std dev = 0.217, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.04787680515334139;  // std dev = 3.026, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.11074036040970504;  // std dev = 3.120, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.2812169175802128;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.01823509226934698;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2811282365492089;  // std dev = 0.126, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.363697436200299;  // std dev = 1.157, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.6064476506760963;  // std dev = 1.115, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else return -0.17800309770370712;  // std dev = 0.056, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.23919829512755006;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.006723635912440475;  // std dev = 5.521, 283.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=67 */
%   | | | else return 0.07108764686627153;  // std dev = 1.755, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.0327225506604713;  // std dev = 0.273, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then return 0.034544682507737255;  // std dev = 0.318, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else return 0.11619782669365225;  // std dev = 0.318, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.3170884057170738;  // std dev = 0.286, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.16120581385025126;  // std dev = 0.935, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.008330203892620618;  // std dev = 4.532, 193.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=49 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return -0.16153353464311757;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.045271403803261334;  // std dev = 1.409, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1243837982232187;  // std dev = 1.949, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return -0.12804910347308596;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17320606512910475;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.24388380231366044;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2510816275216369;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.08880953622583815;  // std dev = 0.040, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I), interaction(A, H) )
%   | | | then return -0.08748309595675846;  // std dev = 0.735, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.13372460318483115;  // std dev = 2.609, 55.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.014550119211319691;  // std dev = 3.339, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | | else return 0.0526932041589673;  // std dev = 5.004, 216.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=75 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.16587812699528026;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.21330370352090913;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.08211613704651627;  // std dev = 0.036, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3587299229326894;  // std dev = 0.630, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.1558655227757358;  // std dev = 0.319, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.0300021353396346;  // std dev = 2.984, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | | else return 0.0036571806140290974;  // std dev = 5.363, 236.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1482433516341385;  // std dev = 0.044, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return -0.030142921020425633;  // std dev = 1.919, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.4000613150423244;  // std dev = 0.409, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, E), location(A, I) )
%   | | | then return -0.09544713373231667;  // std dev = 0.685, 68.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=2 */
%   | | | else return 9.179187664784944E-4;  // std dev = 5.423, 297.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=80 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2970137926354855;  // std dev = 0.971, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.15882740293598227;  // std dev = 0.153, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.14517116751234946;  // std dev = 0.672, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.02077186758151282;  // std dev = 1.793, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */


Results
   AUC ROC   = 0.978573
   AUC PR    = 0.482311
   CLL	      = -0.201067
   Precision = 0.504065 at threshold = 0.5
   Recall    = 0.673913
   F1        = 0.576744


Total learning time: 9.56 seconds
Total inference time: 2.688 seconds
AUC ROC: 0.978573


Results scoring model
   AUC ROC   = 0.984519
   AUC PR    = 0.260261
   CLL	      = -0.199771
   Precision = 0.263039 at threshold = 0.5
   Recall    = 0.698795
   F1        = 0.382208


Total scoring time: 7.851 seconds
Refined model CLL: -0.199771


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996157
   AUC PR    = 0.5204
   CLL	      = -0.173525
   Precision = 0.547009 at threshold = 0.5
   Recall    = 0.695652
   F1        = 0.61244


Total learning time: 28.534 seconds
Total inference time: 2.728 seconds
AUC ROC: 0.996157
Total revision time: 28.534
Best scored revision CLL: -0.193714


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:22:52
{'AUC ROC': 0.996157, 'AUC PR': 0.5204, 'CLL': -0.173525, 'Precision': [0.547009, 0.5], 'Recall': 0.695652, 'F1': 0.61244, 'Learning time': 28.534, 'Inference time': 2.728, 'parameter_0.6': {'AUC ROC': 0.996157, 'AUC PR': 0.5204, 'CLL': -0.173525, 'Precision': [0.547009, 0.5], 'Recall': 0.695652, 'F1': 0.61244, 'Learning time': 2.847, 'Inference time': 2.728}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7699136409818645;  // std dev = 1.654, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.09148226843284478;  // std dev = 5.675, 180.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=42 */
%   | | | else return 0.16697246451127642;  // std dev = 5.388, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1646623450611986;  // std dev = 7.448, 261.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=80 */
%   | | | else return 0.12345505754849195;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6744326379878363;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.7369326379878363;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4873228684706173;  // std dev = 1.217, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.6242225059770591;  // std dev = 0.918, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.07615212507820177;  // std dev = 5.689, 183.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=42 */
%   | | | else return 0.16991729212066317;  // std dev = 5.292, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1661176395602869;  // std dev = 7.325, 243.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=80 */
%   | | | else return 0.21387505375569052;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5486523573383126;  // std dev = 0.992, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6764934454912727;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.0375487331728585;  // std dev = 4.307, 162.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=21 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7651816262477821;  // std dev = 1.227, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.18799208246648286;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3682873352861273;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.11893055605034587;  // std dev = 7.444, 263.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=81 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10082957657927757;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4499709301566788;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4395563614146255;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.27108964582957923;  // std dev = 1.281, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4087110190281196;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.681969860403078;  // std dev = 1.958, 88.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=84 */
%   | | else return -0.15995264571305312;  // std dev = 0.120, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.46408994448853946;  // std dev = 0.908, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08641610242427643;  // std dev = 7.518, 273.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=80 */
%   | | | else return 0.09838421525622415;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.28664106183458016;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.2960780860573235;  // std dev = 0.955, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.15369391170642394;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5260411245220424;  // std dev = 2.123, 89.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=84 */
%   | | else return -0.14127253495875058;  // std dev = 0.239, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6954384021488672;  // std dev = 1.115, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.2203159129379067;  // std dev = 0.000191, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.45974006400020595;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08363340955076833;  // std dev = 6.976, 230.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=70 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2827307214329725;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17828615375108978;  // std dev = 1.631, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   else if ( interaction(A, F) )
%   | then return 0.022520431626927958;  // std dev = 4.826, 326.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=89 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.32462415637575237;  // std dev = 0.731, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08369472645034833;  // std dev = 7.001, 250.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=81 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12028308942350951;  // std dev = 2.806, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2529319937616363;  // std dev = 0.147, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.495863947005472;  // std dev = 1.078, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else return -0.16014918636231654;  // std dev = 0.981, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24398778637578586;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.31174681320376935;  // std dev = 1.558, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return 0.01157983304633506;  // std dev = 6.891, 324.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=84 */
%   | else if ( interaction(A, H) )
%   | | then return 0.11635752982463762;  // std dev = 1.828, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021995928279814246;  // std dev = 2.860, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.19708595425377953;  // std dev = 0.110, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.12329916416808613;  // std dev = 1.023, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2545001722306453;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then return -0.0013357582429289376;  // std dev = 4.330, 340.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=89 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.04972813504729328;  // std dev = 1.520, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.07424492427342547;  // std dev = 6.712, 238.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=81 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.030727214079476997;  // std dev = 0.832, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.03567307478616039;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.12241594395139459;  // std dev = 0.922, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20312514933881198;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then return 0.007981090762116585;  // std dev = 4.260, 326.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=89 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5188023266024211;  // std dev = 3.590, 116.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=101 */
%   | | | else return -0.24143682170668918;  // std dev = 0.509, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.15740507059826728;  // std dev = 0.089, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.1556587457390484;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.10717593328785613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12005422045770653;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11481375011078737;  // std dev = 0.969, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.03586797176530243;  // std dev = 1.310, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then return 0.002094192647505212;  // std dev = 4.246, 320.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=84 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02467511589099837;  // std dev = 6.296, 297.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=93 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.997174
   AUC PR    = 0.599999
   CLL	      = -0.178588
   Precision = 0.585586 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.640394


Total learning time: 3.662 seconds
Total inference time: 2.544 seconds
AUC ROC: 0.997174


Results scoring model
   AUC ROC   = 0.986719
   AUC PR    = 0.241165
   CLL	      = -0.204825
   Precision = 0.222571 at threshold = 0.5
   Recall    = 0.642534
   F1        = 0.330617


Total scoring time: 9.843 seconds
Parameter learned model CLL: -0.204825


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [1.654, 3, 31], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [2.11e-08, 0, 3], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [1.225, 2, 6], 'false,false,true,true': [5.675, 138, 42], 'false,false,true,false': [5.388, 94, 42], 'false,false,false,true': [7.448, 181, 80], 'false,false,false,false': [3.09, 36, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.968, 1, 15], 'true,false': [0.0, 0, 16], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.217, 2, 6], 'false,true,false': [0.918, 1, 7], 'false,false,true,true': [5.689, 141, 42], 'false,false,true,false': [5.292, 84, 42], 'false,false,false,true': [7.325, 163, 80], 'false,false,false,false': [2.859, 22, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.992, 1, 31], 'false,true,true,true': [1.833, 4, 21], 'false,true,true,false': [4.307, 141, 21], 'false,true,false,true': [1.227, 1, 47], 'false,true,false,false': [0.0, 107, 0], 'false,false,true,true': [1.41, 4, 7], 'false,false,true,false': [7.444, 182, 81], 'false,false,false,true': [3.04, 32, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.02, 0, 16], 'true,true,false': [0.014, 0, 5], 'true,false': [1.281, 2, 10], 'false,true,true,true': [0.055, 0, 5], 'false,true,true,false': [1.958, 4, 84], 'false,true,false': [0.12, 260, 0], 'false,false,true': [0.908, 1, 8], 'false,false,false,true': [7.518, 193, 80], 'false,false,false,false': [3.012, 30, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.947, 1, 15], 'true,false': [0.955, 1, 16], 'false,true,true,true': [0.885, 1, 5], 'false,true,true,false': [2.123, 5, 84], 'false,true,false': [0.239, 268, 0], 'false,false,true,true': [1.115, 1, 27], 'false,false,true,false': [0.000191, 71, 0], 'false,false,false,true': [0.065, 0, 4], 'false,false,false,false': [6.976, 160, 70]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.002, 0, 7], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.631, 3, 24], 'false,true': [4.826, 237, 89], 'false,false,true,true': [0.731, 1, 7], 'false,false,true,false': [7.001, 169, 81], 'false,false,false,true': [2.806, 24, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.147, 0, 15], 'true,true,false': [1.078, 0, 62], 'true,false': [0.981, 183, 0], 'false,true,true,true': [0.019, 0, 10], 'false,true,true,false': [1.558, 4, 23], 'false,true,false': [6.891, 240, 84], 'false,false,true': [1.828, 21, 16], 'false,false,false,true': [2.86, 27, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.11, 0, 22], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [1.023, 2, 4], 'true,false,false,false': [0.022, 0, 5], 'false,true': [4.33, 251, 89], 'false,false,true,true': [1.52, 4, 7], 'false,false,true,false': [6.712, 157, 81], 'false,false,false,true': [0.832, 7, 2], 'false,false,false,false': [2.78, 26, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.922, 1, 21], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.06, 0, 10], 'false,true': [4.26, 237, 89], 'false,false,true,true': [3.59, 15, 101], 'false,false,true,false': [0.509, 175, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.089, 0, 7], 'true,true,true,false': [0.013, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.018, 0, 2], 'true,false': [0.969, 1, 11], 'false,true': [1.31, 2, 14], 'false,false,true': [4.246, 236, 84], 'false,false,false,true': [6.296, 204, 93], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.08044982698962092, 0.2085518678157435], 'false': [0.11555555555555533, 0.2028013963600754], 'false,false': [0.19516103188591635, 0.21000000000000119], 'false,false,false': [0.2125629394753458, 0.1949187838400661], 'false,false,true': [0.1788888888888901, 0.21345155709342617], 'false,true': [0.0, 0.14876033057851235], 'false,true,false': [1.4802973661668753e-16, 0.1874999999999999], 'false,true,true': [0.0, 1.4802973661668753e-16]}, {'': [0.030273437500000444, 0.21306379095063577], 'false': [0.14993524611452846, 0.21023582146441902], 'false,false': [0.19746511247465218, 0.22267538426209896], 'false,false,false': [0.22083354502193092, 0.23346938775510176], 'false,false,true': [0.17683418435904313, 0.22222222222222285], 'false,true': [0.18505609577133225, 0.105443641083027], 'false,true,true': [nan, 0.18505609577133225], 'true': [0.058593749999999944, -1.1102230246251565e-16]}, {'': [0.030777017270271267, 0.20035532791563276], 'false': [0.18937678913221945, 0.2110900916589455], 'false,false': [0.21190784467418866, 0.20543209876543164], 'false,false,true': [0.18072139579751878, 0.21071599153134352], 'false,false,false': [0.20543209876543164, nan], 'false,true': [0.17620370354931414, 0.203941991178248], 'false,true,false': [0.031376920289654775, -8.715769539113378e-17], 'false,true,true': [0.1344000000000004, 0.11449229438584207]}, {'': [0.05696408874185379, 0.17553125932091462], 'false': [0.1446942004765398, 0.20817224412995672], 'false,false': [0.0915624941429807, 0.20757743742124798], 'false,false,false': [0.207030702408022, 0.21092482422931302], 'false,true': [0.04503622527408826, 5.508286010625149e-05], 'true': [4.8582398962226405e-05, 0.13676415817169932], 'false,true,true': [0.0006057501621510753, 0.043546146754492684], 'true,true': [2.6037129443934326e-05, 3.808860078637899e-05]}, {'': [0.054836879856225755, 0.14810335181887233], 'false': [0.09696108769852463, 0.20267260784802776], 'false,false': [0.1826498565265012, 0.2103590186531427], 'false,false,false': [0.001070996987263123, 0.21158075536811496], 'false,false,true': [0.044373225321911125, 5.137303352673313e-10], 'false,true': [0.0638895710919805, 0.0002128940647098038], 'false,true,true': [0.1304439635409087, 0.05064639305106012], 'true': [0.0560710510152677, 0.0536321276425087]}, {'': [0.08006369314190788, 0.13202741754550706], 'false': [0.07143600707501128, 0.19624217013132872], 'false,false': [0.193762713111603, 0.2127898566424051], 'false,false,false': [0.2127898566424051, nan], 'false,false,true': [0.06672010975554009, 0.1960281697459992], 'true': [4.471570540192411e-07, 0.09857492881254508], 'true,true': [4.471570540192411e-07, nan], 'true,true,true': [4.471570540192411e-07, nan]}, {'': [0.08823029397298716, 0.14752952929404442], 'false': [0.14566332110880947, 0.1558593700953012], 'false,false': [0.09032720983543802, 0.21527430464459882], 'false,false,false': [0.21527430464459882, nan], 'false,true': [0.066550295717187, 0.146555627111965], 'true': [0.02463929751484766, 0.0052615790241175115], 'false,true,true': [3.6480017769557896e-05, 0.08994415424099299], 'true,true': [0.0014480627539293098, 0.018753469616958438]}, {'': [0.04882649328805716, 0.11880012663683254], 'false': [0.055147129378659676, 0.19004332517804712], 'false,false': [0.19087081072624162, 0.18377133993035144], 'false,false,true': [0.2099082164176112, 0.18931196471234382], 'false,false,false': [0.07687051031569161, 0.20891161431701977], 'true': [0.000548442885370648, 0.13064976424806762], 'true,false': [nan, 0.1306497642480676], 'true,false,false': [0.17456644013146028, 9.575032436626163e-05]}, {'': [0.028053773206436268, 0.11678213177618522], 'false': [0.055662457164428934, 0.18373314886449998], 'false,false': [0.18373314886449998, nan], 'false,false,true': [0.11111302106553099, 0.0014789458750094804], 'true': [0.03860718537108778, 0.0003579080581434746], 'true,false': [nan, 0.0003579080581434746]}, {'': [0.03099122743424189, 0.09394073006391973], 'false': [0.10721584721428853, 0.09358322058826324], 'false,false': [0.05632843922803747, 0.1334585995363556], 'false,false,false': [0.1334585995363556, nan], 'true': [0.0006666889167383315, 0.07824615136865576], 'true,true': [0.0005029974213570446, 0.0001474224714925615], 'true,true,true': [0.001124592074173417, 1.8200691511128302e-05], 'true,true,false': [0.0, 0.0001658502804291334]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(A, F), interaction(E, A).;true;true
0;false,true,false;interaction(D, G), interaction(G, D).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
4;false,false,false;interaction(J, A), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I), interaction(J, A) )
%   | | | then return 0.0010060779566551897;  // std dev = 2.619, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   | | | else return 0.15814893509951233;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22561881461758587;  // std dev = 6.212, 166.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=61 */
%   | | | else return 0.14696881087590852;  // std dev = 8.133, 322.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=93 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6882234122109547;  // std dev = 0.174, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(A, E), phenotype(D, E) )
%   | | | then return -0.14647130423552046;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.005514896494219495;  // std dev = 2.444, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.11441491038168114;  // std dev = 3.473, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return 0.230413060829333;  // std dev = 2.336, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7905623777183979;  // std dev = 1.076, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.16417456996508623;  // std dev = 0.070, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19045417053077757;  // std dev = 7.823, 269.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=96 */
%   | | | else return 0.15810541595416422;  // std dev = 4.200, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.47483389340669824;  // std dev = 0.284, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14273660056328405;  // std dev = 0.104, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.07029295689972581;  // std dev = 5.421, 171.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=42 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7569098445924288;  // std dev = 1.006, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.18412572459773316;  // std dev = 0.156, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), complex(I, J) )
%   | | | then return 0.12554904502052683;  // std dev = 2.806, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.26843802187275656;  // std dev = 2.036, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.26768968965320844;  // std dev = 2.416, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.09934418413893138;  // std dev = 6.750, 233.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.4449228440797561;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.44492284407975596;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.11158951074642266;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6611323360889156;  // std dev = 0.206, 93.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=89 */
%   | | else return -0.1589675979018674;  // std dev = 0.027, 245.000 (wgt'ed) examples reached here.  /* #neg=245 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(I, A) )
%   | | | then return 0.6294549437209593;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10596179367436398;  // std dev = 7.288, 258.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=83 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12892503605229438;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.016625832235881155;  // std dev = 2.466, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.34515646941432376;  // std dev = 0.020, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.17064269862026862;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.45129956654145614;  // std dev = 0.978, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.5693779639575283;  // std dev = 1.123, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   | | else return -0.14150431564268579;  // std dev = 0.026, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6659916045712153;  // std dev = 0.528, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.20126977924034703;  // std dev = 0.253, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5529354923618796;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11582628847107418;  // std dev = 6.766, 203.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=70 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.26672834110907506;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A) )
%   | | then if ( phenotype(E, F), complex(A, G) )
%   | | | then return 0.11172670072706938;  // std dev = 0.849, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2760603621368038;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.006140706754403739;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.09964794712735418;  // std dev = 0.012, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.27487557985909883;  // std dev = 4.914, 165.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=107 */
%   | | | else return -0.17816902405781027;  // std dev = 0.942, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.03935429472367785;  // std dev = 4.426, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   | | | else return 0.12272891767802765;  // std dev = 4.069, 97.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3770683993079595;  // std dev = 0.146, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | else return -0.1435859614654985;  // std dev = 0.084, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.33139907424212844;  // std dev = 0.245, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.04380163000303999;  // std dev = 2.164, 124.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=25 */
%   | | | else return 0.05217725851337762;  // std dev = 6.115, 186.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=59 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4280028979019755;  // std dev = 1.043, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.19710037337855765;  // std dev = 0.389, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( location(A, J) )
%   | | | then return 0.19712153465537394;  // std dev = 1.681, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.005891802129454723;  // std dev = 1.356, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.13646917782170034;  // std dev = 0.183, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( complex(A, E) )
%   | | then return -0.1143914590475051;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.0671213656762354;  // std dev = 0.992, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08172376009128175;  // std dev = 0.013, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return 0.0057329823331917105;  // std dev = 0.219, 309.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=89 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(G, J) )
%   | | | then return 0.018474363976761575;  // std dev = 4.780, 152.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=46 */
%   | | | else return 0.05398594194576954;  // std dev = 3.616, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.14762479468330375;  // std dev = 2.088, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.03882868360660211;  // std dev = 3.040, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11118040083681778;  // std dev = 0.212, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.17484403007855165;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.25033356258193473;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.02231459366050362;  // std dev = 0.209, 154.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=36 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.007039691702446789;  // std dev = 1.960, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.04405283159366065;  // std dev = 2.038, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.25374942413352913;  // std dev = 5.189, 145.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=88 */
%   | | | else return 0.12117734291593737;  // std dev = 2.364, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | else return -0.23547284578554253;  // std dev = 0.061, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.13585811268688627;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return -0.28825206107495616;  // std dev = 0.967, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.07105044505052997;  // std dev = 0.996, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2717009292465053;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.010307465260992514;  // std dev = 0.277, 210.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=51 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.218664229036512;  // std dev = 4.903, 197.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=133 */
%   | | | else return -0.16785157773888523;  // std dev = 1.091, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.25907282636245094;  // std dev = 0.987, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.05826525236658935;  // std dev = 0.591, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */


Results
   AUC ROC   = 0.993227
   AUC PR    = 0.628792
   CLL	      = -0.182674
   Precision = 0.591667 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.669811


Total learning time: 32.591 seconds
Total inference time: 7.928 seconds
AUC ROC: 0.993227


Results scoring model
   AUC ROC   = 0.979188
   AUC PR    = 0.306263
   CLL	      = -0.207632
   Precision = 0.290566 at threshold = 0.5
   Recall    = 0.696833
   F1        = 0.41012


Total scoring time: 79.051 seconds
Refined model CLL: -0.207632


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.997174
   AUC PR    = 0.599999
   CLL	      = -0.178588
   Precision = 0.585586 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.640394


Total learning time: 125.147 seconds
Total inference time: 2.544 seconds
AUC ROC: 0.997174
Total revision time: 125.147
Best scored revision CLL: -0.204825


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:25:09
{'AUC ROC': 0.997174, 'AUC PR': 0.599999, 'CLL': -0.178588, 'Precision': [0.585586, 0.5], 'Recall': 0.706522, 'F1': 0.640394, 'Learning time': 125.147, 'Inference time': 2.544, 'parameter_0.8': {'AUC ROC': 0.997174, 'AUC PR': 0.599999, 'CLL': -0.178588, 'Precision': [0.585586, 0.5], 'Recall': 0.706522, 'F1': 0.640394, 'Learning time': 3.662, 'Inference time': 2.544}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7929315437951642;  // std dev = 1.675, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11481560176618011;  // std dev = 7.565, 300.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=77 */
%   | | | else return 0.19334446582576728;  // std dev = 8.932, 358.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=120 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15226658215833588;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.21529179224236947;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.690779382970223;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5324460496368897;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.730486532899783;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7580193346218546;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09522379802696376;  // std dev = 7.591, 306.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=77 */
%   | | | else return 0.17385562432575233;  // std dev = 8.893, 352.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=120 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12704601848006203;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.21448566648333467;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5322310279355954;  // std dev = 1.645, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6256709814910179;  // std dev = 2.407, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.029582859089048275;  // std dev = 6.370, 256.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=52 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.709696298996002;  // std dev = 3.321, 139.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=127 */
%   | | | else return -0.19266280068695524;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6988349176125657;  // std dev = 0.246, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07639810571048533;  // std dev = 3.254, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08728514758901443;  // std dev = 1.989, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.377983099129816;  // std dev = 1.371, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return 0.36136454666923146;  // std dev = 0.972, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.25483259566740263;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3854626633505539;  // std dev = 0.856, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.5692330233528163;  // std dev = 5.485, 232.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=197 */
%   | | else return -0.1687831447560889;  // std dev = 0.144, 450.000 (wgt'ed) examples reached here.  /* #neg=450 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.507045689082456;  // std dev = 0.190, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07560043635866923;  // std dev = 3.267, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.060727148736516426;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34223424730297297;  // std dev = 0.949, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.37876823335979404;  // std dev = 0.128, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3604289504163632;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.474355230564384;  // std dev = 4.997, 224.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=197 */
%   | | else return -0.1465432998472577;  // std dev = 0.161, 422.000 (wgt'ed) examples reached here.  /* #neg=422 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6992386264382452;  // std dev = 0.630, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.20763764469162582;  // std dev = 0.059, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3807309145545595;  // std dev = 0.098, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.09451907750364948;  // std dev = 2.565, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2810101801298254;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24853206791990937;  // std dev = 1.377, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( interaction(F, A) )
%   | then return 0.027774541953997322;  // std dev = 7.994, 715.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.42649808197705774;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08780714516124336;  // std dev = 2.756, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09001379522645382;  // std dev = 1.710, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.25019297170273797;  // std dev = 0.258, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.4741856243097609;  // std dev = 1.065, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else return -0.1676478878643618;  // std dev = 1.499, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2376202806947145;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.34747477840341867;  // std dev = 1.723, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else return -0.05262430226814511;  // std dev = 3.466, 165.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=30 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04747500389178835;  // std dev = 5.423, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07173493826705234;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1643586395123677;  // std dev = 0.893, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06789903394578241;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.27093033954816986;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then return 0.02262550717908579;  // std dev = 7.247, 690.000 (wgt'ed) examples reached here.  /* #neg=481 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.064905709645814;  // std dev = 1.172, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.04571414887929084;  // std dev = 2.548, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.0681213875419224;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.002962726778631469;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16888615198252124;  // std dev = 0.085, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0010324555497795386;  // std dev = 1.416, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.01802956711841674;  // std dev = 7.196, 703.000 (wgt'ed) examples reached here.  /* #neg=494 #pos=209 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.44471183904603;  // std dev = 1.542, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.23286184260894277;  // std dev = 0.712, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.15548940609685757;  // std dev = 0.144, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.0931717577507125;  // std dev = 0.841, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.06007242627578213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1732386482594379;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.040061093816560846;  // std dev = 1.568, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.17978453116579518;  // std dev = 0.154, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.006741563637814363;  // std dev = 7.122, 716.000 (wgt'ed) examples reached here.  /* #neg=519 #pos=197 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0036572622710013825;  // std dev = 2.659, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.996636
   AUC PR    = 0.546335
   CLL	      = -0.159807
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 5.047 seconds
Total inference time: 2.666 seconds
AUC ROC: 0.996636


Results scoring model
   AUC ROC   = 0.983677
   AUC PR    = 0.229426
   CLL	      = -0.18716
   Precision = 0.156707 at threshold = 0.5
   Recall    = 0.851986
   F1        = 0.264722


Total scoring time: 15.185 seconds
Parameter learned model CLL: -0.18716


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.675, 3, 43], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.549, 3, 12], 'false,false,true,true': [7.565, 223, 77], 'false,false,true,false': [8.932, 238, 120], 'false,false,false,true': [3.254, 36, 15], 'false,false,false,false': [1.793, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.979, 1, 23], 'true,false': [2.0, 5, 20], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.046, 0, 7], 'false,true,false': [0.0, 0, 10], 'false,false,true,true': [7.591, 229, 77], 'false,false,true,false': [8.893, 232, 120], 'false,false,false,true': [3.267, 37, 15], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.645, 3, 43], 'false,true,true,true': [2.407, 7, 30], 'false,true,true,false': [6.37, 204, 52], 'false,true,false,true': [3.321, 12, 127], 'false,true,false,false': [0.0, 262, 0], 'false,false,true,true': [0.246, 0, 4], 'false,false,true,false': [3.254, 41, 15], 'false,false,false,true': [1.989, 14, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [1.371, 2, 25], 'true,true,false': [0.972, 1, 8], 'true,false': [1.519, 3, 10], 'false,true,true,true': [0.856, 1, 12], 'false,true,true,false': [5.485, 35, 197], 'false,true,false': [0.144, 450, 0], 'false,false,true': [0.19, 0, 5], 'false,false,false,true': [3.267, 40, 15], 'false,false,false,false': [1.9, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.949, 1, 23], 'true,false': [0.128, 0, 20], 'false,true,true,true': [0.222, 0, 12], 'false,true,true,false': [4.997, 27, 197], 'false,true,false': [0.161, 422, 0], 'false,false,true,true': [0.63, 0, 13], 'false,false,true,false': [0.059, 36, 0], 'false,false,false,true': [0.098, 0, 2], 'false,false,false,false': [2.565, 22, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.007, 0, 11], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [1.377, 2, 32], 'false,true': [7.994, 506, 209], 'false,false,true,true': [0.465, 0, 4], 'false,false,true,false': [2.756, 30, 15], 'false,false,false,true': [1.71, 11, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.258, 0, 24], 'true,true,false': [1.065, 0, 80], 'true,false': [1.499, 226, 0], 'false,true,true,true': [0.124, 0, 13], 'false,true,true,false': [1.723, 4, 23], 'false,true,false': [3.466, 135, 30], 'false,false,true': [5.423, 213, 104], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.893, 1, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.804, 1, 6], 'true,false,false,false': [0.042, 0, 7], 'false,true': [7.247, 481, 209], 'false,false,true,true': [1.172, 3, 4], 'false,false,true,false': [2.548, 35, 15], 'false,false,false,true': [0.793, 4, 3], 'false,false,false,false': [1.477, 8, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.085, 0, 33], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.416, 3, 10], 'false,true': [7.196, 494, 209], 'false,false,true,true': [1.542, 3, 25], 'false,false,true,false': [0.712, 46, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.144, 0, 11], 'true,true,true,false': [0.841, 1, 13], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.568, 4, 16], 'false,true': [0.154, 0, 17], 'false,false,true': [7.122, 519, 197], 'false,false,false,true': [2.659, 57, 20], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.06096408317580449, 0.2157525871797635], 'false': [0.12749999999999959, 0.21005530590420837], 'false,false': [0.20975646936004164, 0.21301775147928947], 'false,false,false': [0.2076124567474043, 0.2295918367346937], 'false,false,true': [0.19078888888888937, 0.2228394869074014], 'false,true': [0.0, 0.15999999999999998], 'false,true,false': [nan, 0.15999999999999973], 'false,true,true': [0.0, 0.0]}, {'': [0.10745522698875389, 0.21313515061501645], 'false': [0.0003084681248111774, 0.20962633445379678], 'false,false': [0.20931188281246657, 0.21276177226533072], 'false,false,false': [0.20525147928994011, 0.23668639053254437], 'false,false,true': [0.18831432355077193, 0.22469008264463097], 'true': [0.039930555555555435, 0.16000000000000011], 'false,true': [0.00030322206826686023, 0.0], 'false,true,true': [nan, 0.00030322206826686023]}, {'': [0.05884415975388597, 0.20534865400637056], 'false': [0.205873400773443, 0.20078588250153567], 'false,true': [0.19746609145127234, 0.21191797685310393], 'false,true,false': [0.07935548307171615, -1.491597346061279e-16], 'false,false': [0.20155803677840922, 0.19776674819135293], 'false,false,true': [0.015133711383871262, 0.18904555436682124], 'false,false,false': [0.19776674819135293, nan], 'false,true,true': [0.1565360365890961, 0.15851186979890045]}, {'': [0.10754622473906697, 0.1689718586529303], 'false': [0.16603376210297432, 0.19502412730208166], 'false,false': [0.0072353222026678935, 0.195750283946723], 'false,false,false': [0.19410290149517584, 0.2006172839506174], 'false,true': [0.12750377838572172, 4.6220228827533244e-05], 'false,true,true': [0.05633769463300583, 0.12969957353672262], 'true': [0.07852305841708401, 0.17751479289940825], 'true,true': [0.06964707467061365, 0.10494387744208147]}, {'': [0.02115205216467809, 0.1317031393306034], 'false': [0.1253221119414611, 0.18221819735280334], 'false,false': [0.16847827696684978, 0.1983918138155608], 'false,false,false': [0.0048345753204031006, 0.20567048147632833], 'false,false,true': [0.03053823320480216, 9.568546097877334e-05], 'false,true': [0.10665267320117534, 6.105325660574188e-05], 'false,true,true': [0.004117368855839336, 0.11148567674879097], 'true': [0.037486283743385196, 0.0008229385590295957]}, {'': [0.04235187575249497, 0.09662360066069547], 'false': [0.08937499906655556, 0.1691246136136626], 'false,false': [0.1679845312224151, 0.17193018117795528], 'false,false,false': [0.17193018117795528, nan], 'false,false,true': [0.054128653022817774, 0.1687408455101747], 'true': [4.4437976768543015e-06, 0.05579466871369611], 'true,true': [4.4437976768543015e-06, nan], 'true,true,true': [4.4437976768543015e-06, nan]}, {'': [0.08842304666811977, 0.0958577724706848], 'false': [0.09452997024856577, 0.09635294572436708], 'false,false': [0.0927631218922054, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,true': [0.07721816276653198, 0.07281755963715608], 'true': [0.020449779614080395, 0.00994538982849833], 'false,true,true': [0.0011756045657545467, 0.10990914287796381], 'true,true': [0.0027636913967279964, 0.01417728875114852]}, {'': [0.03532972855342765, 0.08274455331783476], 'false': [0.07611882234492927, 0.1436475759123712], 'false,false': [0.13931862755744814, 0.15731375132002012], 'false,false,false': [0.0897448484459241, 0.1983471074380165], 'false,false,true': [0.1962833470997234, 0.129840807668884], 'true': [0.02571970233961886, 0.056591461823180256], 'true,false': [nan, 0.056591461823180256], 'true,false,false': [0.09231497975545064, 0.00025708836360486105]}, {'': [0.04958047042208608, 0.08064077350146576], 'false': [0.0736540872932076, 0.14698704450646577], 'false,false': [0.14698704450646577, nan], 'false,false,true': [0.08495316559866652, 0.011030977506730709], 'true': [0.00021831545275627782, 0.15417164150364202], 'true,false': [nan, 0.15417164150364202]}, {'': [0.06874386773145351, 0.07199973679482112], 'false': [0.0013982470566930288, 0.07288263303445998], 'false,false': [0.07084745464821426, 0.09179855972325052], 'false,false,false': [0.09179855972325052, nan], 'true': [0.02717514762735836, 0.12300533991890521], 'true,true': [0.030070789336703346, 0.0028459097329009003], 'true,true,true': [0.0018802565166730573, 0.050511758405325326], 'true,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.11245927992709931;  // std dev = 6.633, 232.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=59 */
%   | | | else return 0.1631682401188136;  // std dev = 10.479, 518.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=158 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6639590343386376;  // std dev = 0.235, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.46947341221095434;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.13118391470984955;  // std dev = 4.835, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.11056713345206602;  // std dev = 5.933, 180.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=48 */
%   | | | else return 0.16881069038341442;  // std dev = 9.534, 410.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5568653760168574;  // std dev = 0.136, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.05976087031128659;  // std dev = 5.353, 167.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=40 */
%   | | | else return 0.14713885922241332;  // std dev = 5.312, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7005629241397717;  // std dev = 3.671, 142.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=127 */
%   | | | else return -0.18380028536973467;  // std dev = 0.106, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.11295550131689176;  // std dev = 1.462, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.44341532187720933;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10307899263000485;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.05245921961974669;  // std dev = 2.124, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.09737215871738873;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then return 0.452645605873308;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.430705492050722;  // std dev = 1.67e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.5379077064193633;  // std dev = 5.199, 168.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=135 */
%   | | | else return 0.6609644704929292;  // std dev = 1.700, 77.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=74 */
%   | | else return -0.1707240010564642;  // std dev = 0.028, 526.000 (wgt'ed) examples reached here.  /* #neg=526 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5892758976908785;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.31392296366571;  // std dev = 2.063, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.09764481383352429;  // std dev = 2.740, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3055145054058231;  // std dev = 0.209, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.23876071833636986;  // std dev = 0.287, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5160380009417;  // std dev = 2.474, 81.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | | else return 0.44959870202151364;  // std dev = 4.455, 159.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=135 */
%   | | else return -0.14647037634199828;  // std dev = 0.025, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6593503051742211;  // std dev = 0.459, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2568737791509298;  // std dev = 0.168, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.016868399689466754;  // std dev = 1.609, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1190768998552469;  // std dev = 2.217, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.2632939534204603;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.2920067362593772;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14627882360606886;  // std dev = 1.288, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.2881123221580222;  // std dev = 0.033, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( location(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.48841644664521405;  // std dev = 0.119, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | else return -0.16419872544203382;  // std dev = 0.092, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3335084680203175;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.04222574570839296;  // std dev = 6.708, 466.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=137 */
%   | | | else return 0.12704791820570502;  // std dev = 1.660, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.021229060608373623;  // std dev = 0.252, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.23768803570311706;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3448912240551397;  // std dev = 2.332, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.13165271772298823;  // std dev = 0.238, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return 0.010470408432865836;  // std dev = 3.156, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( phenotype(G, I), location(A, J) )
%   | | | then return 0.016165214450481854;  // std dev = 4.651, 232.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=68 */
%   | | | else return 0.04556941146883051;  // std dev = 2.842, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2523454049720536;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1388677598185204;  // std dev = 0.532, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17823735093407253;  // std dev = 0.207, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27751290223972597;  // std dev = 1.338, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.06748337007193955;  // std dev = 2.489, 157.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=23 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5252374936906516;  // std dev = 0.315, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.025977186067960945;  // std dev = 2.989, 113.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=23 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), interaction(I, I) )
%   | | | then return 0.526549429022496;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03572322345242912;  // std dev = 5.598, 399.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=125 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return -0.03906143409739464;  // std dev = 0.462, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.12964293781738487;  // std dev = 2.230, 54.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.12382600956130813;  // std dev = 0.238, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return 0.2291924888912357;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return -0.08175999216895069;  // std dev = 0.181, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( interaction(E, A), enzyme(A, G) )
%   | | | then return -0.0848610572592916;  // std dev = 0.845, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.022793319745932614;  // std dev = 2.742, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.17625195417730033;  // std dev = 0.176, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.018314188854846328;  // std dev = 6.584, 573.000 (wgt'ed) examples reached here.  /* #neg=402 #pos=171 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.20896547000420468;  // std dev = 1.322, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.06605038740752535;  // std dev = 1.911, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15178496063550925;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( complex(A, E) )
%   | | then return 0.19273897348327446;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.023181196971427856;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.5142851199026235;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.17991504993000745;  // std dev = 0.028, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.27673477994646195;  // std dev = 2.017, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | | else return -0.04979837990101531;  // std dev = 3.407, 298.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=41 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.07452983138882424;  // std dev = 2.620, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.01855000556496387;  // std dev = 5.653, 360.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=117 */


Results
   AUC ROC   = 0.983425
   AUC PR    = 0.514049
   CLL	      = -0.1769
   Precision = 0.496503 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.604255


Total learning time: 14.432 seconds
Total inference time: 2.663 seconds
AUC ROC: 0.983425


Results scoring model
   AUC ROC   = 0.983515
   AUC PR    = 0.229874
   CLL	      = -0.193704
   Precision = 0.160896 at threshold = 0.5
   Recall    = 0.855596
   F1        = 0.270857


Total scoring time: 17.686 seconds
Refined model CLL: -0.193704


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996636
   AUC PR    = 0.546335
   CLL	      = -0.159807
   Precision = 0.51773 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.626609


Total learning time: 52.35 seconds
Total inference time: 2.666 seconds
AUC ROC: 0.996636
Total revision time: 52.35
Best scored revision CLL: -0.18716


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:26:07
{'AUC ROC': 0.996636, 'AUC PR': 0.546335, 'CLL': -0.159807, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 52.35, 'Inference time': 2.666, 'parameter_1.0': {'AUC ROC': 0.996636, 'AUC PR': 0.546335, 'CLL': -0.159807, 'Precision': [0.51773, 0.5], 'Recall': 0.793478, 'F1': 0.626609, 'Learning time': 5.047, 'Inference time': 2.666}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14661047356105084;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.1232091760633678;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5528067455442877;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.08525026789718015;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.10130264494049349;  // std dev = 4.038, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2852721160225674;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5779698704895329;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6846610401910921;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.027518183048234807;  // std dev = 2.683, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6958895334790212;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return -0.17143541531376288;  // std dev = 6.99e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.778436630762588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.056021217000331;  // std dev = 2.017, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4120269829191995;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.452908597880182;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.45290859788018195;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4184691018757684;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6610635456842807;  // std dev = 1.679, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | else return -0.15936612642859208;  // std dev = 0.124, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5942800561079697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.11266428770782146;  // std dev = 1.926, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3309131955531109;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33555281212524957;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3215733491669952;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.521471177046448;  // std dev = 1.613, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | else return -0.14364823306330432;  // std dev = 0.304, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5550483400663005;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.1768057467974308;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4470511458043456;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11161832660036614;  // std dev = 0.952, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.25001498012340406;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26982781468851513;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.03258927102704415;  // std dev = 3.205, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4527488429215304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10761073537864493;  // std dev = 1.604, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.09185186375253886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22092378187991066;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3363844443632371;  // std dev = 1.613, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else return -0.1590957218913496;  // std dev = 0.717, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2021356115068519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13846680390448432;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.0041366174491764265;  // std dev = 1.463, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04721041749719346;  // std dev = 1.860, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.08447188844585762;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.1779073444376593;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E), interaction(A, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.17094287799072871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2151047427876479;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.005022440845098338;  // std dev = 3.200, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2731490940844099;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15404382679378073;  // std dev = 1.325, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.06866589649975093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1544282970342705;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1587503774107388;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then return 0.013069977321306181;  // std dev = 3.097, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.45174965569956915;  // std dev = 0.395, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2024984828708172;  // std dev = 0.310, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.12990411693087123;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12926522975350674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(D, C), phenotype(C, G) )
%   | | | then return -0.10306826300687186;  // std dev = 0.407, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2241836205844727;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.14184938785002552;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then return 0.02417669367800915;  // std dev = 2.933, 124.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=37 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.041944888839348465;  // std dev = 1.266, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.983449
   AUC PR    = 0.345114
   CLL	      = -0.170344
   Precision = 0.252595 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.389333


Total learning time: 1.955 seconds
Total inference time: 3.195 seconds
AUC ROC: 0.983449


Results scoring model
   AUC ROC   = 0.986878
   AUC PR    = 0.241532
   CLL	      = -0.183868
   Precision = 0.157407 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.268421


Total scoring time: 4.214 seconds
Parameter learned model CLL: -0.183868


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.267, 37, 15], 'false,false,true,false': [4.021, 61, 22], 'false,false,false,true': [1.897, 9, 6], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.746, 1, 3], 'false,false,true,true': [3.363, 46, 15], 'false,false,true,false': [4.038, 63, 22], 'false,false,false,true': [1.797, 7, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [0.061, 0, 9], 'false,true,true,true': [0.926, 1, 6], 'false,true,true,false': [2.683, 36, 9], 'false,true,false,true': [1.637, 3, 25], 'false,true,false,false': [6.99e-08, 57, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.017, 15, 6], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 2], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.042, 0, 3], 'false,true,true,false': [1.679, 3, 37], 'false,true,false': [0.124, 82, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.926, 11, 6], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.034, 0, 6], 'true,false': [0.023, 0, 3], 'false,true,true,true': [0.038, 0, 3], 'false,true,true,false': [1.613, 3, 37], 'false,true,false': [0.304, 91, 0], 'false,false,true,true': [0.895, 1, 5], 'false,false,true,false': [0.15, 4, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.952, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 6], 'false,true': [3.205, 100, 40], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.604, 9, 6], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'phenotype(A, C)', 'true': 'phenotype(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.049, 0, 5], 'true,true,false': [1.613, 5, 26], 'true,false': [0.717, 56, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.683, 1, 2], 'false,true,false': [1.463, 21, 7], 'false,false,true': [1.86, 31, 15], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'phenotype(A, E), interaction(A, C)', 'true,false,false': 'phenotype(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true': [0.04, 0, 7], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 1], 'true,false,false,false': [0.0, 0, 1], 'false,true': [3.2, 96, 40], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.325, 6, 6], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.035, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.027, 0, 3], 'false,true': [3.097, 98, 40], 'false,false,true,true': [0.395, 0, 7], 'false,false,true,false': [0.31, 12, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'phenotype(A, F), phenotype(C, F)', 'true,true,false': 'interaction(D, C), phenotype(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.0, 0, 3], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.407, 1, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.034, 0, 3], 'false,true': [0.036, 0, 5], 'false,false,true': [2.933, 87, 37], 'false,false,false,true': [1.266, 17, 6], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.2105111768573318], 'false': [0.0, 0.20286530470914158], 'false,false': [0.19895747599451438, 0.2283737024221454], 'false,false,false': [0.24000000000000007, 0.0], 'false,false,true': [0.2052514792899403, 0.19480330962403797], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [nan, 1.4802973661668753e-16], 'false,true,true': [0.0, nan]}, {'': [0.09000000000000008, 0.20006472687273633], 'false': [0.11870077677940785, 0.19680050844317076], 'false,false': [0.18922266363242649, 0.2485207100591718], 'false,false,false': [0.2485207100591718, nan], 'false,false,true': [0.18543402311206675, 0.19183391003460298], 'false,true': [0.0, 0.13910247278836857], 'true': [0.0, 0.13888888888888903], 'false,true,true': [nan, 0.0]}, {'': [0.0004087321735881666, 0.20070909996913255], 'false': [0.20056301193010873, 0.20050751938526773], 'false,true': [0.20525147928994059, 0.1976936656689859], 'false,true,true': [0.12244897959183687, 0.1599999999999999], 'false,false': [0.20762472617258726, 0.0], 'false,false,true': [0.0, 0.1937896165295781], 'false,true,false': [0.09568976380175227, 8.570142646229278e-17], 'false,false,false': [0.0, nan]}, {'': [0.00041266825723898195, 0.17416358095445816], 'false': [0.1696989239912223, 0.20206096497176035], 'false,false': [0.0, 0.19992945200353998], 'false,false,false': [0.2181225324219091, 0.0], 'false,true': [0.0694284732743077, 0.0001866804194064527], 'false,true,true': [0.0006014807650070267, 0.07048453974738234], 'true': [0.0003714014315150764, 3.700743415417188e-17], 'true,true': [0.0, 0.0]}, {'': [0.00019134259499077445, 0.12526460710051254], 'false': [0.11334470444360434, 0.2141105647255926], 'false,false': [0.21095875892463428, 0.16772861718398668], 'false,false,true': [0.13358279878936619, 0.005656456452048743], 'false,false,false': [0.0, 0.15109601822937127], 'false,true': [0.06310593291034026, 0.0010157499522461628], 'false,true,true': [0.0004765450631200781, 0.06501528991114292], 'true': [0.00019373437742816377, 0.000172208335491734]}, {'': [0.00014437800216551524, 0.08349426972493935], 'false': [0.07337161506307599, 0.16062651413066154], 'false,false': [0.16779179419473222, 0.0], 'false,false,true': [0.0, 0.1715328942278216], 'true': [-9.25185853854297e-18, 8.571753208012438e-05], 'false,false,false': [0.0, nan], 'true,true': [-9.25185853854297e-18, nan], 'true,true,true': [-9.25185853854297e-18, nan]}, {'': [0.0892841038100187, 0.07754546000248022], 'true': [0.07395790224885679, 0.009188895693322168], 'false': [0.08428695980282794, 0.07277978594396596], 'false,true': [0.11743944490040217, 0.07640979200355982], 'false,true,true': [0.0, 0.15557249726849276], 'true,true': [0.0004857480429280636, 0.0839566990651638], 'false,false': [0.07522161489249886, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.00032745425360298293, 0.08206499119312911], 'false': [0.07527170001334108, 0.12987237834987458], 'false,false': [0.13602224201947305, 0.0], 'false,false,true': [0.0, 0.14626619310855435], 'true': [0.0002309281362097412, 0.0004875675755853445], 'true,false': [nan, 0.0004875675755853445], 'true,false,false': [0.0, 0.0], 'false,false,false': [0.0, nan]}, {'': [0.00022480107208112173, 0.07481681101722885], 'false': [0.06949931004105095, 0.11286843226441126], 'false,false': [0.11286843226441126, nan], 'false,false,true': [0.022287715538484663, 0.008008005384725925], 'true': [0.00020705518025413797, 0.0002478392698813207], 'true,false': [nan, 0.0002478392698813207]}, {'': [0.033133590411928246, 0.06821775571773551], 'false': [0.0002597126410539774, 0.0699901527356738], 'false,false': [0.06936142191620066, 0.06969183264617314], 'false,false,false': [0.06969183264617314, nan], 'true': [0.0396386844714927, 0.00039077102036232564], 'true,true': [7.653315475808498e-08, 0.08278141115363752], 'true,true,false': [0.08278141115363752, nan], 'true,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;interaction(A, I), interaction(I, J).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;phenotype(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;false,false;phenotype(A, H).;true;true
4;false,false,false;interaction(A, J), recursion_proteinclass(J, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), phenotype(C, D).;true;true
5;false;interaction(F, A).;true;true
5;false,false;interaction(A, G), interaction(G, H).;true;true
5;false,false,true;recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- phenotype(A, C).;true;true
6;true;phenotype(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E), recursion_proteinclass(E, B).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;phenotype(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;phenotype(A, F), phenotype(C, F).;true;true
9;false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.17438825133882713;  // std dev = 5.030, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8334728239646942;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15907140583853566;  // std dev = 0.099, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.30479963492831913;  // std dev = 2.985, 36.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=17 */
%   | | | else return 0.13358811608495735;  // std dev = 3.342, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.05126560244969295;  // std dev = 2.005, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.1577162682080158;  // std dev = 2.412, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6850484470760572;  // std dev = 1.322, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return -0.170605037448641;  // std dev = 0.188, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.7641400646382837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3061604704215619;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.11962086121909214;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4175135841583099;  // std dev = 9.13e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4725619529316322;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.18176109637228788;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5255672967656483;  // std dev = 2.406, 45.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=37 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1279924742910131;  // std dev = 0.087, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.17849400461557322;  // std dev = 0.189, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4790665394424414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.026336774721326738;  // std dev = 1.904, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.09792080004086705;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3292963921997294;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3418384142272015;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.34424539270734966;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.39559814173956576;  // std dev = 2.484, 46.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return -0.1378017263292022;  // std dev = 0.027, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.27602960139374694;  // std dev = 1.126, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.1580428753580956;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.36288843012666194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.09062920123602525;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then return 0.25354410127460014;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2693159979226429;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.1233647085277984;  // std dev = 0.789, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.03111443139685716;  // std dev = 1.358, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.21574681211122454;  // std dev = 1.420, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.06673199536586381;  // std dev = 2.375, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.527224679327511;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02479564700184819;  // std dev = 1.751, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else return -0.0775216247749745;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.13229433080170339;  // std dev = 0.521, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.418624719332925;  // std dev = 0.188, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return -0.1624955847765111;  // std dev = 0.096, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3726240565156833;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.008849464088133292;  // std dev = 1.339, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return -0.13847618086020974;  // std dev = 0.467, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(J, A) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.0764238461579362;  // std dev = 1.148, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.0037585511118911888;  // std dev = 1.528, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return -0.10029460769576433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.17159224403018353;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21808132510313216;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.02670256619042611;  // std dev = 2.618, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | | | else return 0.10400421885087255;  // std dev = 1.150, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.11032979527280992;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.3409711232779786;  // std dev = 0.521, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.3022001281981841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03755086236137375;  // std dev = 1.533, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15344406962265753;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1621890156173594;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, E) )
%   | | then return -0.0630838779094312;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, F) )
%   | | | then return -0.11446310722226488;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1356701828196802;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3130913600502009;  // std dev = 0.243, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13367768149777454;  // std dev = 0.656, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.005626343037786818;  // std dev = 2.566, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.10733643969041096;  // std dev = 1.602, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.14299016950917787;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11311431507111913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2016125891082493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.22893120088548846;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.13802959024421174;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), complex(I, H) )
%   | | | then return -0.074634816536703;  // std dev = 0.332, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return -0.01825240075504342;  // std dev = 1.086, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.02488883142415584;  // std dev = 2.173, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.11641563532063255;  // std dev = 1.761, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */


Results
   AUC ROC   = 0.980627
   AUC PR    = 0.332988
   CLL	      = -0.187629
   Precision = 0.268116 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.40884


Total learning time: 3.726 seconds
Total inference time: 3.119 seconds
AUC ROC: 0.980627


Results scoring model
   AUC ROC   = 0.990096
   AUC PR    = 0.294414
   CLL	      = -0.18462
   Precision = 0.202429 at threshold = 0.5
   Recall    = 0.892857
   F1        = 0.330033


Total scoring time: 3.904 seconds
Refined model CLL: -0.18462


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983449
   AUC PR    = 0.345114
   CLL	      = -0.170344
   Precision = 0.252595 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.389333


Total learning time: 13.799 seconds
Total inference time: 3.195 seconds
AUC ROC: 0.983449
Total revision time: 13.799
Best scored revision CLL: -0.183868


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:26:28
{'AUC ROC': 0.983449, 'AUC PR': 0.345114, 'CLL': -0.170344, 'Precision': [0.252595, 0.5], 'Recall': 0.848837, 'F1': 0.389333, 'Learning time': 13.799, 'Inference time': 3.195, 'parameter_0.2': {'AUC ROC': 0.983449, 'AUC PR': 0.345114, 'CLL': -0.170344, 'Precision': [0.252595, 0.5], 'Recall': 0.848837, 'F1': 0.389333, 'Learning time': 1.955, 'Inference time': 3.195}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11865313678018337;  // std dev = 4.788, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.14477313892116717;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6425503352878774;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5786537370877302;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.11032417495730451;  // std dev = 4.766, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | | | else return 0.1262204287407593;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1597187297348978;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.3397187297348978;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46765477041108305;  // std dev = 1.346, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5670597864772011;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.0015796232687875734;  // std dev = 3.518, 89.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=16 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6806119665707255;  // std dev = 2.452, 56.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | | | else return -0.17813910310416742;  // std dev = 8.94e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.39648190101303443;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13354145261841027;  // std dev = 2.343, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2885851459942073;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4417040604215404;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4580106186930296;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.33301061869302956;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4602125504535996;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6172471364479625;  // std dev = 2.939, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | else return -0.16149573726165112;  // std dev = 0.162, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5236364842019483;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.11438767509715202;  // std dev = 2.319, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.1364955433139039;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.35421967929604586;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3568200832661293;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.35177170943963243;  // std dev = 0.156, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4523147155920235;  // std dev = 3.337, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | else return -0.14099825463856627;  // std dev = 0.108, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.61697740914895;  // std dev = 0.497, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23653624271970014;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03405383419785677;  // std dev = 1.912, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.2609183541306521;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2982627286491375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.15139034493602843;  // std dev = 1.298, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(F, A) )
%   | then return 0.048595514169456386;  // std dev = 4.820, 262.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4665570309847378;  // std dev = 0.360, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.005587379178518377;  // std dev = 2.228, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.027592815845525122;  // std dev = 0.999, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2473141939481885;  // std dev = 0.198, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.44089746970154786;  // std dev = 1.393, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return -0.15630280135184207;  // std dev = 0.733, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23233170722797214;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4835838903608986;  // std dev = 0.148, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.04829331693733865;  // std dev = 2.337, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04294381234864585;  // std dev = 3.165, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.2921683011760076;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.18570847317447822;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0.1976319014602449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1954759568588845;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.054093076610578605;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.01501353570092535;  // std dev = 4.522, 275.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3082860890946961;  // std dev = 0.272, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0814202315845744;  // std dev = 1.979, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.058813275992626445;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.23558399331403926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.16394063685124236;  // std dev = 0.084, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20414967672271184;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then return 0.009831972232408519;  // std dev = 4.454, 285.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4996001842247634;  // std dev = 0.784, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.22134251429639762;  // std dev = 0.173, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.15815755615610153;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14465263376812876;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.11231578465920289;  // std dev = 0.081, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1949774455185091;  // std dev = 0.126, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.07049190000931607;  // std dev = 0.912, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then return 0.011482301713214226;  // std dev = 4.218, 283.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=76 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.01439463802009995;  // std dev = 1.882, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990195
   AUC PR    = 0.343778
   CLL	      = -0.169602
   Precision = 0.26259 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.401099


Total learning time: 2.858 seconds
Total inference time: 2.952 seconds
AUC ROC: 0.990195


Results scoring model
   AUC ROC   = 0.987654
   AUC PR    = 0.283482
   CLL	      = -0.179627
   Precision = 0.166942 at threshold = 0.5
   Recall    = 0.893805
   F1        = 0.281337


Total scoring time: 6.409 seconds
Parameter learned model CLL: -0.179627


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [0.0, 0, 18], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 6], 'false,false,true,true': [4.788, 88, 31], 'false,false,true,false': [5.666, 112, 45], 'false,false,false,true': [2.39, 20, 8], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.961, 1, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 4], 'false,true,false': [0.771, 1, 5], 'false,false,true,true': [4.766, 85, 31], 'false,false,true,false': [5.666, 112, 45], 'false,false,false,true': [2.332, 17, 8], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [1.346, 2, 18], 'false,true,true,true': [2.106, 6, 17], 'false,true,true,false': [3.518, 73, 16], 'false,true,false,true': [2.452, 7, 49], 'false,true,false,false': [8.94e-08, 103, 0], 'false,false,true,true': [0.733, 1, 2], 'false,false,true,false': [2.343, 18, 9], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.0, 0, 4], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.167, 0, 6], 'false,true,true,false': [2.939, 10, 76], 'false,true,false': [0.162, 177, 0], 'false,false,true': [0.082, 0, 3], 'false,false,false,true': [2.319, 17, 8], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.061, 0, 11], 'true,false': [0.049, 0, 7], 'false,true,true,true': [0.156, 0, 6], 'false,true,true,false': [3.337, 13, 76], 'false,true,false': [0.108, 170, 0], 'false,false,true,true': [0.497, 0, 8], 'false,false,true,false': [0.061, 5, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [1.912, 14, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.0, 0, 4], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 1], 'true,false': [1.298, 2, 13], 'false,true': [4.82, 180, 82], 'false,false,true,true': [0.36, 0, 2], 'false,false,true,false': [2.228, 26, 9], 'false,false,false,true': [0.999, 5, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.198, 0, 13], 'true,true,false': [1.393, 1, 39], 'true,false': [0.733, 100, 0], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.148, 0, 9], 'false,true,false': [2.337, 45, 10], 'false,false,true': [3.165, 86, 40], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.059, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false,true': [0.034, 0, 3], 'true,false,false,false': [0.889, 1, 4], 'false,true': [4.522, 193, 82], 'false,false,true,true': [0.272, 0, 2], 'false,false,true,false': [1.979, 16, 9], 'false,false,false,true': [0.742, 3, 2], 'false,false,false,false': [0.0, 1, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.084, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.104, 0, 7], 'false,true': [4.454, 203, 82], 'false,false,true,true': [0.784, 0, 13], 'false,false,true,false': [0.173, 14, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.141, 0, 6], 'true,true,true,false': [0.0, 0, 2], 'true,true,false,true': [0.081, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.126, 0, 8], 'false,true': [0.912, 1, 9], 'false,false,true': [4.218, 207, 76], 'false,false,false,true': [1.882, 30, 10], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [-2.9605947323337506e-16, 0.20836366106695436], 'false': [0.08999999999999977, 0.20005996629480785], 'false,false': [0.199537912203319, 0.20408163265306134], 'false,false,false': [0.2040816326530613, 0.20408163265306126], 'false,false,true': [0.19264176258738913, 0.20447076960525898], 'false,true': [1.4802973661668753e-16, 0.1224489795918368], 'false,true,false': [0.0, -1.4802973661668753e-16], 'false,true,true': [0.0, 0.0]}, {'': [0.04986149584487564, 0.207211331594866], 'false': [0.06424978612186596, 0.20363259169545855], 'false,false': [0.20085818767638294, 0.2259215219976218], 'false,false,false': [0.2175999999999999, 0.25], 'false,false,true': [0.19582342449464787, 0.20447076960525667], 'false,true': [-1.1102230246251565e-16, 0.09915090450905217], 'true': [7.401486830834377e-17, 0.0710059171597634], 'false,true,true': [nan, -1.1102230246251565e-16]}, {'': [0.09064846324682171, 0.20583772251395568], 'false': [0.20450788980181223, 0.21390360519337204], 'false,false': [0.207140579376226, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.17928881451425185, 0.2033214519762487], 'false,true': [0.20226514973289644, 0.20606962926891506], 'false,true,false': [0.1073691698409417, 7.760782308059347e-17], 'false,true,true': [0.19281663516068012, 0.13904029582734242]}, {'': [0.04930730833470456, 0.17119447917734276], 'false': [0.16572269172872262, 0.21323839919674814], 'false,false': [0.0022480477549660463, 0.21938449875482668], 'false,false,false': [0.21517993886627718, 0.24], 'false,true': [0.09566705350831776, 0.00014806928463139869], 'false,true,true': [0.004633749004927523, 0.10040996247033734], 'true': [8.973339042980558e-05, 0.10937500000000001], 'true,true': [4.431730711026586e-05, 0.0]}, {'': [0.00033960426699277925, 0.13133176144838066], 'false': [0.12160822669950735, 0.20771895985637512], 'false,false': [0.19170993213106274, 0.19232875231646337], 'false,false,false': [nan, 0.19232875231646337], 'false,false,true': [0.030881226047009158, 0.0007370594494502836], 'false,true': [0.11808294934701485, 6.911853615749884e-05], 'false,true,true': [0.004039405152292157, 0.12513282157421654], 'true': [0.00033757609490361125, 0.00033865899962369294]}, {'': [0.0867986999799105, 0.09729785212110882], 'false': [0.08867504020969984, 0.14800308003896923], 'false,false': [0.14851517439698908, 0.14245796130691551], 'false,false,true': [0.06495292214245144, 0.14180405105705968], 'false,false,false': [0.14245796130691551, nan], 'true': [0.0002231363693083077, 0.11223515346126568], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08726677115005713, 0.09267552158815705], 'false': [0.11747859968656266, 0.07976615742559706], 'false,true': [0.011381925587113787, 0.0993003394357887], 'true': [0.044277527799451176, 0.0053710754431832795], 'false,false': [0.07951496918572368, 0.0], 'true,true': [0.0030155756351001916, 0.04849580752704976], 'false,true,true': [0.0, 0.0024334861062389715], 'false,false,false': [0.0, nan]}, {'': [0.045409740875732796, 0.08223132054571337], 'false': [0.07435349823347726, 0.14385687592297453], 'false,false': [0.1513258266643813, 0.1038415720609085], 'false,false,true': [0.0368841014158699, 0.1566687115506472], 'false,false,false': [0.11016492777721995, 0.0], 'true': [0.00034522330497006594, 0.09300900806699529], 'true,false': [0.0, 0.10372469910750459], 'true,false,false': [0.00039434704924571723, 0.15822699078221986]}, {'': [0.0013781554294641106, 0.07792998698940376], 'false': [0.06959562054766294, 0.1536237424512535], 'false,false': [0.1536237424512535, nan], 'false,false,true': [0.04725795685087915, 0.0021379397461059086], 'true': [0.0006411560842597672, 0.001548273048684577], 'true,false': [nan, 0.001548273048684577]}, {'': [0.003103240347798556, 0.06674693898909148], 'false': [0.08318028643196208, 0.06612193228890625], 'false,false': [0.06286755595938123, 0.08855995339361118], 'false,false,false': [0.08855995339361118, nan], 'true': [0.0029540800655819765, 0.0019726679578977585], 'true,true': [0.0025216466613326195, 0.003241155951442155], 'true,true,false': [0.003241155951442155, nan], 'true,true,true': [0.0033165998162672052, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
0;false,true,false;interaction(G, D), interaction(D, G).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;true,false,false;complex(A, F).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(H, G), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995121;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, K) )
%   | | | then return 0.07609765304823032;  // std dev = 3.646, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.22285481745245217;  // std dev = 4.438, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | | else return 0.1166523364600553;  // std dev = 5.308, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.40200626221954355;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7313730497173964;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5800161657842234;  // std dev = 0.352, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8315541281698435;  // std dev = 0.041, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.16487180105197555;  // std dev = 0.093, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.15313314626004673;  // std dev = 4.074, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.04151033075864618;  // std dev = 4.567, 132.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return 0.4428285733189016;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6045538063578645;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1613784799018932;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.14988735222181726;  // std dev = 4.418, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7140109435380947;  // std dev = 1.390, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return -0.15699112049477593;  // std dev = 0.121, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.35005233926607504;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08094187132489344;  // std dev = 2.448, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return -0.1622152114230901;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4715146060481286;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4496529817936596;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4542378640354195;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.4700577353981622;  // std dev = 2.317, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.6129176352273646;  // std dev = 1.736, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.15603540110526107;  // std dev = 0.030, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5125223236393944;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.005453542316193027;  // std dev = 1.727, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.1887391736273723;  // std dev = 1.639, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3500804977254215;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.29494604453579765;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3444679867429789;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F) )
%   | | then return -8.460375155841712E-4;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3558424462286226;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.03390649153712711;  // std dev = 0.309, 313.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=82 */
%   | else if ( complex(A, H) )
%   | | then return 0.09331558406017694;  // std dev = 0.366, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.32193893229378295;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.002271689078934569;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.31277204919498314;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2697239427487654;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.3908656027670802;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.30567718373115305;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H) )
%   | | then if ( interaction(I, A), phenotype(G, J) )
%   | | | then return 0.09370195159974913;  // std dev = 1.553, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.07467914011052473;  // std dev = 1.372, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5868418143332528;  // std dev = 0.937, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.07703297445595889;  // std dev = 2.822, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else return 0.02653312552451181;  // std dev = 0.302, 197.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.30998423027494704;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(G, E), enzyme(G, H) )
%   | | | then return 0.13448656561740668;  // std dev = 2.776, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return -0.06599386711970945;  // std dev = 1.183, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else return -0.03415799667345777;  // std dev = 0.278, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.35298769150431397;  // std dev = 0.292, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.0642010634262132;  // std dev = 0.270, 68.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=10 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.02957924666812615;  // std dev = 2.496, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.1863589882849214;  // std dev = 1.964, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21822009625031788;  // std dev = 0.045, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return 0.006133304294756644;  // std dev = 2.731, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return -0.15964226058297631;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return 0.08073569083279286;  // std dev = 2.256, 57.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=22 */
%   | | | else return 0.012021385406159966;  // std dev = 3.677, 156.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=41 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.1968575425048358;  // std dev = 1.219, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.06007661975718414;  // std dev = 1.755, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.3626254628981371;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17355795001857244;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.08665026992874655;  // std dev = 0.301, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2855763472653114;  // std dev = 1.901, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return -0.04064682709895006;  // std dev = 2.573, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
%   | | else if ( location(A, H) )
%   | | | then return 0.0024695916296784545;  // std dev = 3.632, 151.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=39 */
%   | | | else return -0.12222495176669815;  // std dev = 0.817, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.4832796059579726;  // std dev = 0.511, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14831188648248575;  // std dev = 1.491, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.2287810367199561;  // std dev = 0.018, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17366336018286094;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.08434165832872152;  // std dev = 0.331, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return -0.1608406438325002;  // std dev = 0.227, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( enzyme(A, I), phenotype(E, J) )
%   | | | then return 0.3552613143991973;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.023378794661735702;  // std dev = 2.244, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.1535780447739707;  // std dev = 0.993, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return -0.029334809883864846;  // std dev = 0.781, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.04536397875280602;  // std dev = 3.385, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return -0.0014889401702667102;  // std dev = 3.119, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */


Results
   AUC ROC   = 0.98565
   AUC PR    = 0.319259
   CLL	      = -0.18891
   Precision = 0.352518 at threshold = 0.5
   Recall    = 0.569767
   F1        = 0.435556


Total learning time: 10.126 seconds
Total inference time: 3.86 seconds
AUC ROC: 0.98565


Results scoring model
   AUC ROC   = 0.986131
   AUC PR    = 0.303779
   CLL	      = -0.199903
   Precision = 0.255396 at threshold = 0.5
   Recall    = 0.628319
   F1        = 0.363171


Total scoring time: 13.191 seconds
Refined model CLL: -0.199903


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990195
   AUC PR    = 0.343778
   CLL	      = -0.169602
   Precision = 0.26259 at threshold = 0.5
   Recall    = 0.848837
   F1        = 0.401099


Total learning time: 32.584 seconds
Total inference time: 2.952 seconds
AUC ROC: 0.990195
Total revision time: 32.584
Best scored revision CLL: -0.179627


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:27:08
{'AUC ROC': 0.990195, 'AUC PR': 0.343778, 'CLL': -0.169602, 'Precision': [0.26259, 0.5], 'Recall': 0.848837, 'F1': 0.401099, 'Learning time': 32.584, 'Inference time': 2.952, 'parameter_0.4': {'AUC ROC': 0.990195, 'AUC PR': 0.343778, 'CLL': -0.169602, 'Precision': [0.26259, 0.5], 'Recall': 0.848837, 'F1': 0.401099, 'Learning time': 2.858, 'Inference time': 2.952}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8211118980624748;  // std dev = 0.981, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.07862137604439337;  // std dev = 4.672, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.18833761434479512;  // std dev = 4.842, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17633075328133166;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.726887535757802;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6713319802022464;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47202100493772686;  // std dev = 1.165, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.7592578472402662;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.05883264238940827;  // std dev = 4.702, 133.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | | else return 0.18017671236816418;  // std dev = 4.782, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10847127404226743;  // std dev = 6.380, 205.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   | | | else return 0.1018722342748273;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5342072265973387;  // std dev = 0.991, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8405794748068284;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.08065305128321251;  // std dev = 3.048, 123.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7634501715562226;  // std dev = 1.035, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.19286730466870994;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5126076232146242;  // std dev = 1.119, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.11449532914723747;  // std dev = 6.289, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.15018352096487267;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4344680952135242;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.44084541458552107;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3435785514592339;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.27629579282537237;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6402526607870784;  // std dev = 2.038, 67.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | | else return -0.15535273878265687;  // std dev = 0.095, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.4485775294357662;  // std dev = 0.854, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08949685253347205;  // std dev = 6.304, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | | | else return 0.1504485519131422;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.16093368592792456;  // std dev = 1.808, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else return 0.3444791900680021;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3681857399202012;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5318199228537527;  // std dev = 1.313, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.14083417958223687;  // std dev = 0.338, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6886493623203466;  // std dev = 0.725, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.21360753625921272;  // std dev = 0.039, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.259652482920429;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10837344225264144;  // std dev = 5.819, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.2936736135903689;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3249394919018167;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.24346825509205364;  // std dev = 0.987, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, F) )
%   | then return 0.03002901758816781;  // std dev = 4.068, 221.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=67 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1329238982597621;  // std dev = 1.138, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.043542005152846716;  // std dev = 6.073, 212.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=58 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1489128574544836;  // std dev = 2.351, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2534488634247686;  // std dev = 0.125, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4609133222624006;  // std dev = 1.056, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else return -0.1642541711384262;  // std dev = 1.127, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23609592384220623;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22433543442724696;  // std dev = 1.229, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.053623331052787174;  // std dev = 5.679, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
%   | else if ( interaction(A, H) )
%   | | then return 0.030326668181667373;  // std dev = 1.734, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01483666799245277;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.12800414037988725;  // std dev = 0.969, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return -0.09471592744114343;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18620513075746917;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.019581359305114704;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.015284167726261375;  // std dev = 3.447, 227.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=67 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1337663363330742;  // std dev = 0.868, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.031580286290801354;  // std dev = 5.918, 203.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=58 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.07314262519095338;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06335618401865863;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.11069425047604045;  // std dev = 0.893, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2157315578850043;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 1.1661706208462104E-4;  // std dev = 3.544, 245.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=67 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4838855072239018;  // std dev = 3.446, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.23461199320075526;  // std dev = 0.518, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.1689330794578376;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.14417869472179937;  // std dev = 0.000681, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return -0.18223596612590154;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12439971503922337;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16558235719903028;  // std dev = 0.537, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1556896498902872;  // std dev = 0.085, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then return -0.0019178702803395468;  // std dev = 3.498, 243.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=63 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020575453232868746;  // std dev = 5.476, 225.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=66 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990945
   AUC PR    = 0.368469
   CLL	      = -0.190874
   Precision = 0.312102 at threshold = 0.5
   Recall    = 0.569767
   F1        = 0.403292


Total learning time: 2.874 seconds
Total inference time: 2.898 seconds
AUC ROC: 0.990945


Results scoring model
   AUC ROC   = 0.989155
   AUC PR    = 0.31547
   CLL	      = -0.194779
   Precision = 0.2529 at threshold = 0.5
   Recall    = 0.64497
   F1        = 0.363333


Total scoring time: 7.557 seconds
Parameter learned model CLL: -0.194779


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.981, 1, 26], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.913, 1, 5], 'false,true,false,true': [1.0, 2, 2], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [4.672, 99, 28], 'false,false,true,false': [4.842, 71, 35], 'false,false,false,true': [6.179, 120, 56], 'false,false,false,false': [2.56, 19, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.972, 1, 17], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.165, 2, 5], 'false,true,false': [0.08, 0, 9], 'false,false,true,true': [4.702, 105, 28], 'false,false,true,false': [4.782, 66, 35], 'false,false,false,true': [6.38, 149, 56], 'false,false,false,false': [2.701, 27, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.991, 1, 26], 'false,true,true,true': [0.0, 0, 18], 'false,true,true,false': [3.048, 113, 10], 'false,true,false,true': [1.035, 1, 39], 'false,true,false,false': [7.6e-08, 79, 0], 'false,false,true,true': [1.119, 2, 8], 'false,false,true,false': [6.289, 135, 58], 'false,false,false,true': [2.582, 20, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.022, 0, 12], 'true,true,false': [0.012, 0, 5], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.711, 1, 4], 'false,true,true,false': [2.038, 4, 63], 'false,true,false': [0.095, 151, 0], 'false,false,true': [0.854, 1, 10], 'false,false,false,true': [6.304, 138, 56], 'false,false,false,false': [2.535, 18, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [1.808, 4, 18], 'true,false': [0.047, 0, 8], 'false,true,true,true': [0.087, 0, 4], 'false,true,true,false': [1.313, 2, 63], 'false,true,false': [0.338, 163, 0], 'false,false,true,true': [0.725, 0, 21], 'false,false,true,false': [0.039, 61, 0], 'false,false,false,true': [0.921, 1, 5], 'false,false,false,false': [5.819, 104, 50]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [0.987, 1, 19], 'false,true': [4.068, 154, 67], 'false,false,true,true': [1.138, 4, 8], 'false,false,true,false': [6.073, 154, 58], 'false,false,false,true': [2.351, 15, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.125, 0, 18], 'true,true,false': [1.056, 0, 54], 'true,false': [1.127, 137, 0], 'false,true,true,true': [0.103, 0, 5], 'false,true,true,false': [1.229, 3, 11], 'false,true,false': [5.679, 142, 60], 'false,false,true': [1.734, 32, 13], 'false,false,false,true': [2.373, 19, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'complex(A, E), interaction(C, A)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.969, 1, 15], 'true,false,true': [0.753, 1, 2], 'true,false,false,true': [0.044, 0, 6], 'true,false,false,false': [0.867, 1, 3], 'false,true': [3.447, 160, 67], 'false,false,true,true': [0.868, 2, 8], 'false,false,true,false': [5.918, 145, 58], 'false,false,false,true': [0.732, 3, 2], 'false,false,false,false': [2.284, 15, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.893, 1, 17], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.062, 0, 9], 'false,true': [3.544, 178, 67], 'false,false,true,true': [3.446, 14, 76], 'false,false,true,false': [0.518, 136, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(C, D), complex(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.04, 0, 7], 'true,true,true,false': [0.000681, 0, 4], 'true,true,false,true': [0.791, 1, 2], 'true,true,false,false': [0.059, 0, 4], 'true,false': [0.537, 1, 11], 'false,true': [0.085, 0, 12], 'false,false,true': [3.498, 180, 63], 'false,false,false,true': [5.476, 159, 66], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.035665294924555065, 0.2152537319175133], 'false': [0.1728395061728392, 0.20777819478326306], 'false,false': [0.19727753320193825, 0.21829863176680567], 'false,false,false': [0.21694214876033097, 0.22592152199762194], 'false,false,true': [0.17186434372868853, 0.22116411534353858], 'false,true': [0.1388888888888887, 0.18749999999999978], 'false,true,false': [0.25, 0.10937499999999978], 'false,true,true': [nan, 0.1388888888888887]}, {'': [0.03566529492455434, 0.20278044177928886], 'false': [0.10552283024263265, 0.19711047898569445], 'false,false': [0.1958197349731621, 0.19835165795224177], 'false,false,false': [0.1985484830458085, 0.19722425127830528], 'false,false,true': [0.16620498614958468, 0.22644838741299964], 'false,true': [0.1938789365252219, 0.0007054751805919165], 'false,true,true': [nan, 0.1938789365252219], 'true': [-1.9737298215558337e-16, 0.05246913580246885]}, {'': [0.036343768483480275, 0.1985866774780812], 'false': [0.1865878188520431, 0.21024525589720558], 'false,false': [0.2084419825239287, 0.22222222222222263], 'false,false,false': [0.22222222222222263, nan], 'false,false,true': [0.12514149831388982, 0.2049505132031014], 'false,true': [0.16038709740721538, 0.21307884197550325], 'false,true,false': [0.02677589007607546, 7.307797124114954e-17], 'false,true,true': [-3.9474596431116675e-16, 0.07551760968317846]}, {'': [0.03536937082565993, 0.1810089721880381], 'false': [0.15343222757067, 0.20719845003726758], 'false,false': [0.06623381947609776, 0.20835379331395248], 'false,false,false': [0.2048199363073209, 0.2295918367346937], 'false,true': [0.07327338826862917, 5.963984376217698e-05], 'false,true,true': [0.1010213089699806, 0.0620037172416349], 'true': [4.65261830684666e-05, 0.09000000000000004], 'true,true': [4.150020650243539e-05, 2.988014868179345e-05]}, {'': [0.11556781371289704, 0.15175261169861187], 'false': [0.10029168983895445, 0.20078316888165515], 'false,false': [0.16152145794910658, 0.21774363779309214], 'false,false,false': [0.14126525534730286, 0.2198651144757881], 'false,false,true': [0.025043643979974172, 2.491936849326807e-05], 'true': [0.14850721448663515, 0.00027923005242457], 'false,true': [0.02656380419135849, 0.0007014826205292872], 'false,true,true': [0.001889053236986682, 0.02653001006629295]}, {'': [0.036815872438257326, 0.1290746586333468], 'false': [0.07486547875105003, 0.17680877360955846], 'false,false': [0.17085750339935177, 0.22103105568173295], 'false,false,false': [0.22103105568173295, nan], 'false,false,true': [0.10800538950829357, 0.17398718150112155], 'true': [0.00019950105032372014, 0.04872487991988302], 'true,true': [0.0, 0.0], 'true,true,true': [0.0, nan]}, {'': [0.08848909391218829, 0.14690514474082425], 'false': [0.15519359863771295, 0.1200007426147609], 'false,true': [0.08012318346387129, 0.15965753526981738], 'false,false': [0.06680832998548296, 0.20850480109739397], 'false,false,false': [0.20850480109739397, nan], 'true': [0.023773696613331657, 0.009272536739990239], 'false,true,true': [0.002111557731358171, 0.10794808123379299], 'true,true': [0.000873429614991582, 0.020646743525913957]}, {'': [0.08576872219172117, 0.11451612444059626], 'false': [0.052337563624326365, 0.1727931422740855], 'false,false': [0.16840013215413904, 0.2054820861702234], 'false,false,false': [0.10714274982979832, 0.22684310018903608], 'false,false,true': [0.07526187675866161, 0.1724979893358771], 'true': [0.05868670759959739, 0.11640116393959023], 'true,false': [0.1888392908409691, 0.0855671427575369], 'true,false,false': [0.0003251927076533591, 0.18802122013699543]}, {'': [0.03215049350393314, 0.11247731028430091], 'false': [0.05127885323126555, 0.17744657124738794], 'false,false': [0.17744657124738794, nan], 'false,false,true': [0.1319494940672479, 0.001973164639446216], 'true': [0.044337493690893987, 0.00042126916486123767], 'true,false': [nan, 0.00042126916486123767]}, {'': [0.04126919720352204, 0.08863439491699189], 'false': [0.0005998586541394411, 0.09035298299763639], 'false,false': [0.05034623080523885, 0.13329757076403945], 'false,false,false': [0.13329757076403945, nan], 'true': [0.05075312197340445, 0.02405483457424785], 'true,true': [0.00028940558860996395, 0.11302077348556894], 'true,true,false': [0.20881842761505162, 0.0008759153326283256], 'true,true,true': [0.00023188508409199837, 1.158400965151074e-07]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
6;false;interaction(F, A), interaction(G, F).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;complex(A, E), interaction(C, A).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
8;false;interaction(A, F).;true;true
8;false,false;interaction(G, H), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(C, D), complex(C, G).;true;true
9;false;interaction(A, H), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7730425521207887;  // std dev = 0.279, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( recursion_proteinclass(D, B), location(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15100607795665422;  // std dev = 5.385, 140.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=41 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.17913658942050073;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.6363256086015673;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7364030346488697;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7989944905699083;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.03327916985136311;  // std dev = 2.255, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return 0.09441703425551;  // std dev = 4.177, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.20221463932210748;  // std dev = 4.667, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
%   | | | else return 0.09939560464692357;  // std dev = 6.350, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5811482455014426;  // std dev = 0.161, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6642119910411721;  // std dev = 0.949, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.05415583968146308;  // std dev = 2.937, 98.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=10 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7919360297340768;  // std dev = 0.304, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.17175679313908512;  // std dev = 0.143, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(H, I), enzyme(A, J) )
%   | | | then return 0.08290427674755936;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.20156222468595764;  // std dev = 1.976, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.36762654161132013;  // std dev = 1.304, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.075904724433633;  // std dev = 6.121, 215.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3346915030286143;  // std dev = 0.303, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.4545700404705711;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.10874368183434575;  // std dev = 1.057, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6296143350747131;  // std dev = 0.165, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | | else return -0.15252583789217714;  // std dev = 0.544, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5934764401673188;  // std dev = 2.247, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | | | else return -0.17491918457198777;  // std dev = 0.197, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.13041285046900275;  // std dev = 2.943, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.06792536999741386;  // std dev = 3.975, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34885390618497436;  // std dev = 0.102, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.3874259947932758;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.14303025549205756;  // std dev = 0.974, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4968140669155262;  // std dev = 1.170, 64.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | | else return -0.13317896592330655;  // std dev = 0.597, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5442141120404341;  // std dev = 0.329, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.15442896686469632;  // std dev = 0.577, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.19152272760220498;  // std dev = 3.065, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.05222786179972979;  // std dev = 4.702, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.2819677214575509;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.282738784812617;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.20572148566867365;  // std dev = 0.426, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.32313533622751983;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.404270369281178;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.099834981822863;  // std dev = 0.060, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.008257547434616472;  // std dev = 1.902, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return -3.6966674634165877E-4;  // std dev = 2.553, 113.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=25 */
%   | | | else return 0.059884582744397064;  // std dev = 6.256, 268.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=82 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.33514557501135056;  // std dev = 0.154, 73.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | else return -0.13061315646285884;  // std dev = 0.099, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.18570790685018818;  // std dev = 0.182, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.13158429422070986;  // std dev = 0.456, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.06533113440114957;  // std dev = 5.294, 180.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=60 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return -0.09905594973151628;  // std dev = 0.385, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.04994777295100374;  // std dev = 1.470, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.06590867340818878;  // std dev = 1.456, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.24085838270152282;  // std dev = 1.619, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.1922110712255767;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), interaction(C, A) )
%   | | then return -0.09194723954472628;  // std dev = 0.600, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18344724848351118;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), interaction(H, F) )
%   | | then return -5.013896367256354E-5;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2426110411080544;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.07096674958144016;  // std dev = 2.324, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | | | else return 0.01873199148824607;  // std dev = 1.730, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.017126280504247318;  // std dev = 2.181, 131.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=28 */
%   | | | else return 0.044761902012870496;  // std dev = 5.625, 250.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=76 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1620855571714192;  // std dev = 0.028, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), interaction(G, E) )
%   | | | then return -0.08950582711932732;  // std dev = 1.515, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | | else return 0.025010211630012942;  // std dev = 1.655, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.1784938955779606;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0076056138460349875;  // std dev = 2.580, 149.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=41 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.05914709129624506;  // std dev = 1.611, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | | | else return 0.3256394897304026;  // std dev = 4.125, 86.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=55 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.10821176291770926;  // std dev = 0.095, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.23798264851711287;  // std dev = 0.228, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.1492164472783143;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.14821919214050858;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.203971495674719;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then return 0.13692184084136946;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.18577937045932544;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.1805918860260434;  // std dev = 0.768, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.028952460809586297;  // std dev = 2.538, 100.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=19 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.009640337819794354;  // std dev = 2.220, 120.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=28 */
%   | | | else return 0.061525860813640955;  // std dev = 5.153, 204.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=76 */


Results
   AUC ROC   = 0.988457
   AUC PR    = 0.34789
   CLL	      = -0.189486
   Precision = 0.343195 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.454902


Total learning time: 30.831 seconds
Total inference time: 6.133 seconds
AUC ROC: 0.988457


Results scoring model
   AUC ROC   = 0.983632
   AUC PR    = 0.330796
   CLL	      = -0.192952
   Precision = 0.269058 at threshold = 0.5
   Recall    = 0.710059
   F1        = 0.390244


Total scoring time: 53.594 seconds
Refined model CLL: -0.192952


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988457
   AUC PR    = 0.34789
   CLL	      = -0.189486
   Precision = 0.343195 at threshold = 0.5
   Recall    = 0.674419
   F1        = 0.454902


Total learning time: 94.856 seconds
Total inference time: 6.133 seconds
AUC ROC: 0.988457
Total revision time: 94.856
Best scored revision CLL: -0.192952


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:28:52
{'AUC ROC': 0.988457, 'AUC PR': 0.34789, 'CLL': -0.189486, 'Precision': [0.343195, 0.5], 'Recall': 0.674419, 'F1': 0.454902, 'Learning time': 94.856, 'Inference time': 6.133, 'parameter_0.6': {'AUC ROC': 0.990945, 'AUC PR': 0.368469, 'CLL': -0.190874, 'Precision': [0.312102, 0.5], 'Recall': 0.569767, 'F1': 0.403292, 'Learning time': 2.874, 'Inference time': 2.898}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8295775065280829;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.0429830583222602;  // std dev = 5.638, 211.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=39 */
%   | | | else return 0.16750145308512324;  // std dev = 5.450, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16038774106966186;  // std dev = 7.518, 268.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=81 */
%   | | | else return 0.18373033044834958;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.725203701690574;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.725203701690574;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7243782526377277;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7484674984990043;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), interaction(A, H) )
%   | | | then return 0.06028246794018291;  // std dev = 5.560, 188.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=39 */
%   | | | else return 0.12510223125411313;  // std dev = 5.531, 149.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=43 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13418546722561153;  // std dev = 7.548, 273.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=81 */
%   | | | else return 0.20270108157322417;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5324279063110955;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.603728446672635;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return -0.03330550349447443;  // std dev = 3.867, 139.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=17 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7995535392886404;  // std dev = 0.431, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.18132497963168756;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4037744494466633;  // std dev = 1.231, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.11421416017496193;  // std dev = 7.579, 280.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=84 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.11543930466596897;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4286872589122168;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.4286872589122167;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4286872589122167;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.3969314569568593;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6743604897881278;  // std dev = 2.139, 87.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=82 */
%   | | else return -0.15577397720598185;  // std dev = 0.240, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5028664146070715;  // std dev = 0.169, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.12658872705290675;  // std dev = 7.381, 248.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=81 */
%   | | | else return 0.11885330947328392;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32829726872740644;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21291265334279116;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.30685862718978973;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5492855487091255;  // std dev = 1.791, 85.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   | | else return -0.13467707646410434;  // std dev = 0.130, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7033247363328743;  // std dev = 1.500, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.22793873622416286;  // std dev = 0.355, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3838981750575014;  // std dev = 0.143, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.038222067245406686;  // std dev = 6.427, 215.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, E), interaction(C, E) )
%   | | | then return 0.260341638705028;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.26034163870502813;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21026557876191287;  // std dev = 1.376, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(A, F) )
%   | then return 0.03031266336672753;  // std dev = 4.591, 318.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=86 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.27657842057643706;  // std dev = 0.741, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.053482489568252814;  // std dev = 7.079, 286.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=84 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1895110056416392;  // std dev = 2.581, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21116600978473418;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.5131104156772731;  // std dev = 1.242, 74.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=73 */
%   | else return -0.1609521971886168;  // std dev = 0.524, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.16363636125256312;  // std dev = 0.993, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.32440750162713455;  // std dev = 1.630, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | else return 0.012780057925686306;  // std dev = 6.348, 294.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=76 */
%   | else if ( interaction(A, H) )
%   | | then return 0.03738952039517939;  // std dev = 2.021, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.12142536198443614;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.15999479994209612;  // std dev = 0.948, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( enzyme(A, E), interaction(C, A) )
%   | | then return 0.18009539865299706;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.06743585395823068;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23195036431981358;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G) )
%   | then return 0.010669319260848558;  // std dev = 4.129, 310.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.014499731544206012;  // std dev = 1.330, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.07359992624788785;  // std dev = 6.498, 245.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=84 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0023957181596204248;  // std dev = 1.306, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.0073239214568324735;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.13847659180619667;  // std dev = 0.998, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1787546458811936;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F) )
%   | then return 0.010918661285056197;  // std dev = 4.116, 310.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=86 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.47693672448580055;  // std dev = 3.714, 121.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=106 */
%   | | | else return -0.2402847775315492;  // std dev = 0.746, 199.000 (wgt'ed) examples reached here.  /* #neg=199 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return 0.13810068879083454;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16781642881751627;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(C, D), enzyme(C, G) )
%   | | | then return 0.17122871845443788;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.16908589045794903;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.14768544480549667;  // std dev = 0.607, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.09265100197230274;  // std dev = 0.959, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then return -0.006306730476259514;  // std dev = 4.155, 335.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=82 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024016732493508882;  // std dev = 6.079, 301.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=95 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.991612
   AUC PR    = 0.35857
   CLL	      = -0.186469
   Precision = 0.35119 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.464567


Total learning time: 3.329 seconds
Total inference time: 2.906 seconds
AUC ROC: 0.991612


Results scoring model
   AUC ROC   = 0.98953
   AUC PR    = 0.292724
   CLL	      = -0.195392
   Precision = 0.268908 at threshold = 0.5
   Recall    = 0.707965
   F1        = 0.389769


Total scoring time: 10.149 seconds
Parameter learned model CLL: -0.195392


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(D, A), recursion_proteinclass(D, B)', 'false,true': 'interaction(E, D), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(A, F), interaction(E, A)', 'false,true,false': 'interaction(D, G), interaction(G, D)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), interaction(A, I)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true': [0.986, 1, 34], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 5], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.935, 1, 7], 'false,false,true,true': [5.638, 172, 39], 'false,false,true,false': [5.45, 96, 43], 'false,false,false,true': [7.518, 187, 81], 'false,false,false,false': [3.073, 29, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(C, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, A), interaction(E, F)', 'false,true,true': 'interaction(A, F), interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 15], 'true,false': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.022, 0, 5], 'false,true,false': [0.045, 0, 10], 'false,false,true,true': [5.56, 149, 39], 'false,false,true,false': [5.531, 106, 43], 'false,false,false,true': [7.548, 192, 81], 'false,false,false,false': [2.974, 24, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, D)', 'false,true': 'interaction(D, E), interaction(A, E)', 'false,true,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(G, D), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true': [0.986, 1, 34], 'false,true,true,true': [2.304, 7, 22], 'false,true,true,false': [3.867, 122, 17], 'false,true,false,true': [0.431, 0, 47], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [1.231, 3, 8], 'false,false,true,false': [7.579, 196, 84], 'false,false,false,true': [3.106, 31, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [1.05e-08, 0, 5], 'true,false': [0.0, 0, 11], 'false,true,true,true': [0.03, 0, 4], 'false,true,true,false': [2.139, 5, 82], 'false,true,false': [0.24, 207, 0], 'false,false,true': [0.169, 0, 11], 'false,false,false,true': [7.381, 167, 81], 'false,false,false,false': [3.055, 28, 14]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), recursion_proteinclass(J, B)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.629, 3, 23], 'false,true,true,true': [0.027, 0, 4], 'false,true,true,false': [1.791, 3, 82], 'false,true,false': [0.13, 216, 0], 'false,false,true,true': [1.5, 2, 42], 'false,false,true,false': [0.355, 68, 0], 'false,false,false,true': [0.143, 0, 8], 'false,false,false,false': [6.427, 159, 56]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.05e-08, 0, 5], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.376, 2, 27], 'false,true': [4.591, 232, 86], 'false,false,true,true': [0.741, 1, 8], 'false,false,true,false': [7.079, 202, 84], 'false,false,false,true': [2.581, 17, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'enzyme(A, C)', 'true': 'enzyme(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(F, A), interaction(G, F)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.084, 0, 12], 'true,true,false': [1.242, 1, 73], 'true,false': [0.524, 166, 0], 'false,true,true,true': [0.993, 1, 14], 'false,true,true,false': [1.63, 4, 26], 'false,true,false': [6.348, 218, 76], 'false,false,true': [2.021, 42, 17], 'false,false,false,true': [2.191, 12, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'enzyme(A, E), interaction(C, A)', 'true,false,false': 'enzyme(A, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true': [0.948, 1, 21], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.788, 1, 3], 'true,false,false,false': [0.047, 0, 8], 'false,true': [4.129, 224, 86], 'false,false,true,true': [1.33, 5, 8], 'false,false,true,false': [6.498, 161, 84], 'false,false,false,true': [1.306, 13, 6], 'false,false,false,false': [2.373, 19, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)'}, {'true,true': [0.998, 1, 23], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.094, 0, 11], 'false,true': [4.116, 224, 86], 'false,false,true,true': [3.714, 15, 106], 'false,false,true,false': [0.746, 199, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), interaction(D, E)', 'true,true,true': 'enzyme(A, F), enzyme(C, F)', 'true,true,false': 'interaction(C, D), enzyme(C, G)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.009, 0, 7], 'true,true,true,false': [0.0, 0, 10], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.187, 2, 5], 'true,false': [0.607, 1, 12], 'false,true': [0.959, 1, 14], 'false,false,true': [4.155, 253, 82], 'false,false,false,true': [6.079, 206, 95], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.027755102040817953, 0.20299162033048912], 'false': [0.10380622837370206, 0.1960720587932393], 'false,false': [0.17939591836734758, 0.21215661541961028], 'false,false,false': [0.21089051013588825, 0.21957815035154085], 'false,false,true': [0.15067047011522763, 0.21365353760157396], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.18750000000000006, 0.10937499999999978], 'false,true,true': [nan, 0.0]}, {'': [-5.224578939412502e-16, 0.20214980906126723], 'false': [0.00029429130121059186, 0.19796310214795038], 'false,false': [0.18352944395092224, 0.2121084519941136], 'false,false,false': [0.20867045042869115, 0.23268698060941864], 'false,false,true': [0.16441263014938917, 0.20530606729426595], 'false,true': [9.622983844854715e-05, 0.0001998914438694932], 'false,true,true': [nan, 9.622983844854715e-05], 'true': [0.0, -9.349246523159212e-17]}, {'': [0.027755102040816177, 0.20172349928532338], 'false': [0.19607361774358933, 0.2068030188156731], 'false,false': [0.20562779182915472, 0.2143209876543211], 'false,false,false': [0.2143209876543211, nan], 'false,false,true': [0.13781205783118755, 0.20512257666308098], 'false,true': [0.17858588525706595, 0.21435424759509253], 'false,true,false': [0.003949854953733009, -7.011934892369409e-17], 'false,true,true': [0.18311533888228324, 0.10758996659537835]}, {'': [7.836868409118753e-17, 0.18845087415833275], 'false': [0.15844705107535123, 0.2171365158314639], 'false,false': [0.002592600277722487, 0.2200693331198919], 'false,false,false': [0.2196960649305301, 0.22222222222222174], 'false,true': [0.053512755921584484, 0.0002778562658805844], 'false,true,true': [0.00022366894541428484, 0.05257966984171158], 'true': [3.8616453030440226e-17, -4.0371746350005693e-17], 'true,true': [-7.401486830834377e-17, 2.2204460492503132e-17]}, {'': [0.07450693937180433, 0.1568992701709781], 'false': [0.10493207770471898, 0.2040568847195416], 'false,false': [0.22806559498199025, 0.1894511655943313], 'false,false,true': [0.051124359581860984, 0.0018509751470921847], 'false,false,false': [0.0025570873413897632, 0.19211865635671327], 'false,true': [0.038581709160520054, 7.839000054780891e-05], 'true': [-4.0371746350005693e-17, 0.10207100591715974], 'false,true,true': [0.0001765513705739713, 0.03774762588212309]}, {'': [0.05300758760663407, 0.12358300078079824], 'false': [0.06629091294115565, 0.17858711367870225], 'false,false': [0.1731859330564021, 0.2148749510160277], 'false,false,false': [0.2148749510160277, nan], 'false,false,true': [0.06102631856469201, 0.17519696988947628], 'true': [2.3790493384824782e-17, 0.06531493136683354], 'true,true': [2.2204460492503132e-17, 0.0], 'true,true,true': [2.2204460492503132e-17, nan]}, {'': [0.10074248789141635, 0.13350197276380837], 'false': [0.13806340790916644, 0.11381849426903837], 'false,true': [0.08670185021170602, 0.1370864027451542], 'false,false': [0.06925724865491599, 0.2399999999999999], 'false,false,false': [0.2399999999999999, nan], 'true': [0.028950893516858013, 0.0016541920558575884], 'false,true,true': [0.06576922223616581, 0.088552377673696], 'true,true': [0.0005854074784838829, 0.02082924751713799]}, {'': [0.04910029253804357, 0.11243345433512193], 'false': [0.05499771247248598, 0.16986241869854976], 'false,false': [0.17091330786251213, 0.15951108552345855], 'false,false,true': [0.13613153665339084, 0.1723677853950398], 'false,false,false': [0.08983298647530122, 0.20850480109739358], 'true': [0.04081919931838909, 0.06184416465637085], 'true,false': [0.0, 0.07182319888554327], 'true,false,false': [0.15515280474369061, 0.00028102672485998126]}, {'': [0.029060756393304566, 0.11121877069216857], 'false': [0.054659029421202675, 0.16581427452244257], 'false,false': [0.16581427452244257, nan], 'false,false,true': [0.1140189424622235, 0.0027978916467148182], 'true': [0.04150308399519897, 0.0008014106827347651], 'true,false': [nan, 0.0008014106827347651]}, {'': [0.06246371461369776, 0.08509127309368443], 'false': [0.06133788777688146, 0.08548655745106991], 'false,false': [0.051535972912843175, 0.12278775737275281], 'false,false,false': [0.12278775737275281, nan], 'true': [0.07788560149838336, 0.028340855652641567], 'true,true': [0.00021813989875192863, 0.18880388094031214], 'true,true,false': [0.0, 0.20129910980188645], 'true,true,true': [1.0341734167862437e-05, -5.551115123125783e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(D, A), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(E, D), recursion_proteinclass(E, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, A), interaction(C, D).;true;true
1;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(F, A), interaction(E, F).;true;true
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, D).;true;true
2;false,true;interaction(D, E), interaction(A, E).;true;true
2;false,true,false;interaction(G, D), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;interaction(A, D), interaction(C, D).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(A, E).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;enzyme(A, D).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), recursion_proteinclass(G, B).;true;true
4;false,false;enzyme(A, H).;true;true
4;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(C, A), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
6;;proteinclass(A, B) :- enzyme(A, C).;true;true
6;true;enzyme(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), interaction(D, A).;true;true
7;true,false;enzyme(A, E), interaction(C, A).;true;true
7;true,false,false;enzyme(A, F).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(A, E), interaction(D, E).;true;true
9;true,true,true;enzyme(A, F), enzyme(C, F).;true;true
9;true,true,false;interaction(C, D), enzyme(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.7629108398614171;  // std dev = 0.294, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.01781280064573084;  // std dev = 3.996, 119.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=19 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.1013921783427547;  // std dev = 4.520, 111.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | | else return 0.19967898974431775;  // std dev = 9.072, 366.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(C, D) )
%   | then return 0.7269992342091148;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.7345250562072755;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2382879672063558;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7304485692916053;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then if ( interaction(J, A), interaction(I, J) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6524640704477908;  // std dev = 0.256, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.15077414000704298;  // std dev = 0.051, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13587910415682294;  // std dev = 10.821, 565.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=169 */
%   | | | else return 0.2875774055945904;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5159555097081205;  // std dev = 0.236, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.002159215917458842;  // std dev = 3.517, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.11055459514428274;  // std dev = 4.014, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7932361863742718;  // std dev = 0.442, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.18129323253482452;  // std dev = 0.120, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.737883149980192;  // std dev = 1.324, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return -0.18869435245274271;  // std dev = 0.262, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5652542061416002;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14581039292410047;  // std dev = 6.641, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3696434395206892;  // std dev = 0.274, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.43490664861934364;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.42585271161103466;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6639512509072719;  // std dev = 2.265, 88.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=82 */
%   | | else return -0.1661403118180991;  // std dev = 0.338, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6931213656991737;  // std dev = 1.234, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.1902081177883267;  // std dev = 0.426, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.02361388203831351;  // std dev = 1.934, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.11427178725237727;  // std dev = 5.830, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3459866541388939;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.18882775259385925;  // std dev = 0.354, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.36274037311901736;  // std dev = 0.122, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5611604274441759;  // std dev = 0.143, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else return -0.14822590327904117;  // std dev = 0.346, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5735174419104853;  // std dev = 0.751, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.16323321978758465;  // std dev = 0.272, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07723654247209218;  // std dev = 5.696, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   | | | else return 0.21053876652743575;  // std dev = 2.111, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25379574288462997;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(A, H), location(D, I) )
%   | | | then return -0.027158321029715847;  // std dev = 1.757, 52.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=10 */
%   | | | else return 0.10336349671564243;  // std dev = 2.508, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( phenotype(A, J), phenotype(D, J) )
%   | | | then return -0.11429223766431003;  // std dev = 0.523, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.028504619599386275;  // std dev = 2.458, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4409712486646313;  // std dev = 1.415, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | | | else return -0.13892047779308847;  // std dev = 0.338, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.079592412276317;  // std dev = 5.756, 211.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=74 */
%   | | | else return 0.02029597322719743;  // std dev = 2.010, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3474343717587514;  // std dev = 0.186, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | else return -0.1314625908710273;  // std dev = 0.420, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | then if ( location(G, F) )
%   | | | then return 0.3990997924207093;  // std dev = 2.609, 83.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=74 */
%   | | | else return -0.35239749037920376;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1738708383416999;  // std dev = 0.064, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3653027604852844;  // std dev = 0.682, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14521904011190367;  // std dev = 0.242, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.02831072650476756;  // std dev = 3.849, 108.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=27 */
%   | | | else return 0.01928906259982935;  // std dev = 2.898, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.18271601434080578;  // std dev = 0.115, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.13949114633761425;  // std dev = 1.055, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, F), interaction(C, A) )
%   | | then return 0.15621342192604248;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.19590053219197354;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0683993669734999;  // std dev = 1.383, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then return -0.0043598064442915445;  // std dev = 0.212, 237.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=59 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then return 0.011821694279156919;  // std dev = 0.213, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.0012512006848614274;  // std dev = 2.918, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.06641252370883315;  // std dev = 5.229, 202.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=74 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.13238032552535803;  // std dev = 0.188, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.43385502648763236;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.16672332376451132;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17114644348362154;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(J, H) )
%   | | then return -0.10977375316112739;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2249906230070938;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09919277994233676;  // std dev = 0.117, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0012088895059141334;  // std dev = 3.207, 252.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=66 */
%   | | | else return 0.027747282758460164;  // std dev = 6.392, 347.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=111 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.14697729740542925;  // std dev = 0.048, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.16442857907628203;  // std dev = 0.066, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, E) )
%   | | | then return 0.25532583109674956;  // std dev = 1.580, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.031037567552803805;  // std dev = 5.077, 396.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=83 */
%   | | else if ( interaction(E, F), phenotype(E, H) )
%   | | | then return -0.0017788521169892746;  // std dev = 2.230, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.08129325406061055;  // std dev = 2.612, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.2884854188062385;  // std dev = 0.933, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.08376000097270424;  // std dev = 1.423, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.006981880856631726;  // std dev = 2.406, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */


Results
   AUC ROC   = 0.990474
   AUC PR    = 0.46115
   CLL	      = -0.177444
   Precision = 0.391566 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.515873


Total learning time: 14.941 seconds
Total inference time: 3.05 seconds
AUC ROC: 0.990474


Results scoring model
   AUC ROC   = 0.986243
   AUC PR    = 0.4205
   CLL	      = -0.18554
   Precision = 0.338462 at threshold = 0.5
   Recall    = 0.778761
   F1        = 0.47185


Total scoring time: 11.86 seconds
Refined model CLL: -0.18554


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990474
   AUC PR    = 0.46115
   CLL	      = -0.177444
   Precision = 0.391566 at threshold = 0.5
   Recall    = 0.755814
   F1        = 0.515873


Total learning time: 40.278999999999996 seconds
Total inference time: 3.05 seconds
AUC ROC: 0.990474
Total revision time: 40.278999999999996
Best scored revision CLL: -0.18554


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:29:39
{'AUC ROC': 0.990474, 'AUC PR': 0.46115, 'CLL': -0.177444, 'Precision': [0.391566, 0.5], 'Recall': 0.755814, 'F1': 0.515873, 'Learning time': 40.278999999999996, 'Inference time': 3.05, 'parameter_0.8': {'AUC ROC': 0.991612, 'AUC PR': 0.35857, 'CLL': -0.186469, 'Precision': [0.35119, 0.5], 'Recall': 0.686047, 'F1': 0.464567, 'Learning time': 3.329, 'Inference time': 2.906}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
0;false;follows(A, D), recursion_accounttype(D, B).;true;true
0;false,true;follows(D, E), recursion_accounttype(E, B).;true;true
0;false,true,true;follows(F, A), follows(A, E).;false;false
0;false,true,false;follows(G, D), follows(D, G).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, D), follows(D, C).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;follows(A, F), follows(F, E).;true;false
1;false,true,true;follows(F, A), follows(E, F).;false;false
1;false,false;follows(G, A).;true;true
1;false,false,true;follows(G, H), follows(H, A).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;false;true
2;false;follows(D, A).;true;true
2;false,true;follows(E, D), follows(E, A).;true;true
2;false,true,true;follows(F, E), recursion_accounttype(F, B).;false;false
2;false,true,false;follows(D, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;follows(D, A), follows(D, C).;true;false
3;true,true;recursion_accounttype(D, B).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;false;true
3;false,false,false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;tweets(A, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
4;false,false;tweets(A, H).;true;true
4;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
4;false,false,false;follows(A, J), recursion_accounttype(J, B).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;follows(A, C), tweets(C, D).;true;false
5;true,true;follows(A, E), follows(C, E).;true;false
5;true,true,true;follows(E, A), follows(E, C).;false;false
5;false;follows(F, A).;false;true
5;false,false;follows(A, G), follows(G, H).;true;true
5;false,false,true;recursion_accounttype(H, B).;false;false
5;false,false,false;follows(A, I).;false;false
6;;accounttype(A, B) :- tweets(A, C).;true;true
6;true;tweets(D, C), recursion_accounttype(D, B).;true;false
6;true,true;follows(A, E), recursion_accounttype(E, B).;false;false
6;false;follows(A, F), follows(F, G).;true;true
6;false,true;recursion_accounttype(G, B).;true;false
6;false,true,true;recursion_accounttype(F, B).;false;false
6;false,false;follows(H, A).;false;true
6;false,false,false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(C, D), follows(A, D).;false;true
7;true,false;tweets(A, E), follows(A, C).;false;true
7;true,false,false;tweets(A, F).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(D, C), follows(D, A).;false;true
8;true,false;follows(E, C), follows(A, E).;true;false
8;true,false,true;follows(E, F), follows(F, C).;false;false
8;false;follows(G, A).;false;true
8;false,false;follows(A, H).;true;true
8;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
8;false,false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), recursion_accounttype(D, B).;true;false
9;true,true;follows(E, A), follows(E, D).;true;true
9;true,true,true;tweets(A, F), tweets(C, F).;false;false
9;true,true,false;follows(D, C), tweets(C, G).;false;false
9;false;follows(H, A), recursion_accounttype(H, B).;false;true
9;false,false;follows(I, A).;false;true
9;false,false,false;follows(A, J).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8126943896449664;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11346808403568402;  // std dev = 7.322, 282.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=72 */
%   | | | else return 0.1468325378708728;  // std dev = 9.429, 433.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=125 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.152266582158335;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7285554015677006;  // std dev = 1.12e-07, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.6485554015677009;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5851818733393417;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7494530261603095;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.09290247651758482;  // std dev = 7.353, 289.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=72 */
%   | | | else return 0.1306939739631498;  // std dev = 9.412, 429.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=125 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.15108448001852276;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.16066757255144135;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4687653042692988;  // std dev = 2.113, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6141414004324371;  // std dev = 2.504, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return 0.004720060898583092;  // std dev = 6.075, 261.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=46 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7508562373143988;  // std dev = 2.784, 141.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=133 */
%   | | | else return -0.17909757444212657;  // std dev = 1.40e-07, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4074607303820439;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10400970393150152;  // std dev = 4.225, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0733449413716272;  // std dev = 1.609, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.4522005346299345;  // std dev = 0.039, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.4625785411981582;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.46754193564383056;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38937633129019983;  // std dev = 0.850, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6469855405166762;  // std dev = 3.847, 214.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=197 */
%   | | else return -0.16139579309274538;  // std dev = 0.291, 486.000 (wgt'ed) examples reached here.  /* #neg=486 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3325885354302097;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.129266084110766;  // std dev = 4.088, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return 0.16630977677839032;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.350544445582072;  // std dev = 0.039, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.23482982603908312;  // std dev = 1.332, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3622246019678079;  // std dev = 0.286, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.47110309250758453;  // std dev = 4.613, 223.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=197 */
%   | | else return -0.14104215734102674;  // std dev = 0.299, 444.000 (wgt'ed) examples reached here.  /* #neg=444 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6862236831346723;  // std dev = 0.537, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2222925729230728;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2060186474751727;  // std dev = 3.197, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.26876184584645785;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2792667905803008;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16982643203754633;  // std dev = 1.884, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   else if ( interaction(F, A) )
%   | then return 0.038038970674337834;  // std dev = 7.521, 701.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.46775354866703317;  // std dev = 0.300, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06187043528573039;  // std dev = 3.889, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.17562652733585404;  // std dev = 1.157, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2324740461556903;  // std dev = 0.506, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return 0.4471128061070521;  // std dev = 1.107, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return -0.15313937709649603;  // std dev = 1.224, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.2663588689674531;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4187248831610026;  // std dev = 0.893, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.02364256124151485;  // std dev = 4.127, 155.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=32 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03466548895178385;  // std dev = 5.218, 329.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=102 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.6867316857758463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.15806265001944514;  // std dev = 0.973, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E), interaction(A, C) )
%   | | then return 0.18849144414620067;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.17755795278205902;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08262094578536734;  // std dev = 0.985, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.020182483725214192;  // std dev = 6.860, 708.000 (wgt'ed) examples reached here.  /* #neg=499 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.30623401194149835;  // std dev = 0.227, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05005386458831791;  // std dev = 3.713, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05082982324003409;  // std dev = 0.798, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.2254817021315853;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17381298192630504;  // std dev = 0.145, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.0465445528457424;  // std dev = 1.237, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(F, A) )
%   | then return 0.021437687830123647;  // std dev = 6.817, 685.000 (wgt'ed) examples reached here.  /* #neg=476 #pos=209 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5207795160416415;  // std dev = 1.586, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return -0.23723767706134505;  // std dev = 0.487, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(C, F) )
%   | | | then return 0.1555583678137206;  // std dev = 0.183, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.17245300828696963;  // std dev = 0.157, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C), complex(C, G) )
%   | | | then return 0.12906361895416263;  // std dev = 0.084, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.18878548317227517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1451772458509831;  // std dev = 0.639, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.018348748276822473;  // std dev = 1.556, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( interaction(I, A) )
%   | | then return 0.003072435902656787;  // std dev = 6.986, 705.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=197 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.039282780474723625;  // std dev = 3.166, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 0.990541
   AUC PR    = 0.358373
   CLL	      = -0.18064
   Precision = 0.255102 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.394737


Total learning time: 4.893 seconds
Total inference time: 2.907 seconds
AUC ROC: 0.990541


Results scoring model
   AUC ROC   = 0.986207
   AUC PR    = 0.263483
   CLL	      = -0.185005
   Precision = 0.150376 at threshold = 0.5
   Recall    = 0.848057
   F1        = 0.255455


Total scoring time: 15.36 seconds
Parameter learned model CLL: -0.185005


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(A, D), recursion_proteinclass(D, B)', 'false,true': 'interaction(D, E), recursion_proteinclass(E, B)', 'false,true,true': 'interaction(F, A), interaction(A, E)', 'false,true,false': 'interaction(G, D), interaction(D, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true': [1.382, 2, 42], 'false,true,true,true': [0.0, 0, 4], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [1.301, 2, 11], 'false,false,true,true': [7.322, 210, 72], 'false,false,true,false': [9.429, 308, 125], 'false,false,false,true': [4.201, 60, 25], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, E)', 'false,true,true': 'interaction(F, A), interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [1.12e-07, 0, 19], 'true,false': [1.356, 2, 23], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.903, 1, 6], 'false,true,false': [4.21e-08, 0, 10], 'false,false,true,true': [7.353, 217, 72], 'false,false,true,false': [9.412, 304, 125], 'false,false,false,true': [4.146, 55, 25], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'false': 'interaction(D, A)', 'false,true': 'interaction(E, D), interaction(E, A)', 'false,true,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,false': 'interaction(D, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true': [2.113, 5, 42], 'false,true,true,true': [2.504, 8, 30], 'false,true,true,false': [6.075, 215, 46], 'false,true,false,true': [2.784, 8, 133], 'false,true,false,false': [1.4e-07, 305, 0], 'false,false,true,true': [0.741, 1, 2], 'false,false,true,false': [4.225, 63, 26], 'false,false,false,true': [1.609, 10, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.039, 0, 22], 'true,true,false': [0.024, 0, 8], 'true,false': [0.0, 0, 12], 'false,true,true,true': [0.85, 1, 12], 'false,true,true,false': [3.847, 17, 197], 'false,true,false': [0.291, 486, 0], 'false,false,true': [0.947, 1, 4], 'false,false,false,true': [4.088, 51, 25], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), recursion_proteinclass(J, B)'}, {'true,true': [0.039, 0, 26], 'true,false': [1.332, 2, 16], 'false,true,true,true': [0.286, 0, 12], 'false,true,true,false': [4.613, 26, 197], 'false,true,false': [0.299, 444, 0], 'false,false,true,true': [0.537, 0, 14], 'false,false,true,false': [0.028, 27, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [3.197, 24, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,true': 'interaction(E, A), interaction(E, C)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true,true': [0.022, 0, 10], 'true,true,true,false': [0.0, 0, 0], 'true,true,false': [0.0, 0, 2], 'true,false': [1.884, 4, 30], 'false,true': [7.521, 492, 209], 'false,false,true,true': [0.3, 0, 2], 'false,false,true,false': [3.889, 53, 26], 'false,false,false,true': [1.157, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(F, G)', 'false,true': 'recursion_proteinclass(G, B)', 'false,true,true': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I)'}, {'true,true,true': [0.506, 1, 26], 'true,true,false': [1.107, 0, 94], 'true,false': [1.224, 243, 0], 'false,true,true,true': [0.133, 0, 11], 'false,true,true,false': [0.893, 1, 17], 'false,true,false': [4.127, 123, 32], 'false,false,true': [5.218, 227, 102], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(A, D)', 'true,false': 'complex(A, E), interaction(A, C)', 'true,false,false': 'complex(A, F)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true': [0.973, 1, 26], 'true,false,true': [0.0, 0, 2], 'true,false,false,true': [0.03, 0, 9], 'true,false,false,false': [0.985, 1, 5], 'false,true': [6.86, 499, 209], 'false,false,true,true': [0.227, 0, 2], 'false,false,true,false': [3.713, 53, 26], 'false,false,false,true': [0.798, 4, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(D, A)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.145, 0, 30], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.237, 2, 12], 'false,true': [6.817, 476, 209], 'false,false,true,true': [1.586, 2, 32], 'false,false,true,false': [0.487, 65, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A), interaction(E, D)', 'true,true,true': 'complex(A, F), complex(C, F)', 'true,true,false': 'interaction(D, C), complex(C, G)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true,true': [0.183, 0, 12], 'true,true,true,false': [0.157, 0, 11], 'true,true,false,true': [0.084, 0, 2], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.639, 2, 15], 'false,true': [1.556, 3, 17], 'false,false,true': [6.986, 508, 197], 'false,false,false,true': [3.166, 52, 28], 'false,false,false,false': [0.0, 0, 0]}]]
[{'': [0.04338842975206727, 0.2066392486325204], 'false': [0.09876543209876518, 0.20092239731399067], 'false,false': [0.1996107389114405, 0.2104289513238537], 'false,false,false': [0.20761245674740594, 0.2343749999999999], 'false,false,true': [0.19013128112268038, 0.20534538026231008], 'false,true': [0.0, 0.1301775147928993], 'false,true,false': [nan, 0.13017751479289916], 'false,true,true': [0.0, 0.0]}, {'': [0.04338842975206711, 0.20433490644167313], 'false': [0.054512562268717965, 0.2009679479767987], 'false,false': [0.19900694564971064, 0.21559823528304425], 'false,false,false': [0.2148437499999995, 0.22222222222222232], 'false,false,true': [0.18706672573364821, 0.20647573095125332], 'false,true': [0.11651411495983625, 1.7763568394002506e-16], 'false,true,true': [nan, 0.11651411495983625], 'true': [6.544472566211449e-16, 0.0736000000000002]}, {'': [0.0949654040190109, 0.19755054120432067], 'false': [0.1970879894296243, 0.20076122357506274], 'false,false': [0.20293804361109924, 0.1850285784579176], 'false,false,true': [0.18300613623950043, 0.20060721460992353], 'false,true': [0.1856247853763134, 0.20434303203226048], 'false,true,false': [0.05495290737600455, 6.40653286341074e-17], 'false,true,true': [0.16502896488875035, 0.14142278842417239], 'false,false,false': [0.1850285784579176, nan]}, {'': [9.764734052626556e-05, 0.16680270804348518], 'false': [0.15971483966680713, 0.22111204944844434], 'false,false': [0.1794881323381249, 0.22134708859170957], 'false,false,false': [0.2198450404326284, 0.23437500000000006], 'false,true': [0.07196742027127918, 0.00017373639123527624], 'false,true,true': [0.0555554450813528, 0.06916391355569888], 'true': [9.153376790198564e-05, -1.1102230246251565e-16], 'true,true': [6.922311325562414e-05, 7.390585326999544e-05]}, {'': [0.043606806687164656, 0.12728955257770594], 'false': [0.11506303664112723, 0.22177939496424745], 'false,false': [0.19264746234941138, 0.2433295419080992], 'false,false,false': [nan, 0.2433295419080992], 'false,false,true': [0.020568952322147664, 2.884362551101192e-05], 'false,true': [0.09147636975380333, 0.00020190168581867696], 'false,true,true': [0.006795572068008497, 0.0954278464963818], 'true': [5.751126126678326e-05, 0.09859914673876741]}, {'': [0.07910055768284627, 0.09325357883965768], 'false': [0.08070095146851454, 0.1904688659793548], 'false,false': [0.1917785534518467, 0.16741474119027833], 'false,false,true': [0.04506071926995331, 0.19142524747660478], 'false,false,false': [0.16741474119027833, nan], 'true': [5.5757548854173944e-05, 0.10435410021634807], 'true,true': [4.851674798151961e-05, 0.0], 'true,true,true': [4.851674798151961e-05, nan]}, {'': [0.07854365152761096, 0.09585958621598435], 'false': [0.11747423804488463, 0.08380774180941303], 'false,true': [0.033546988491460664, 0.10986694499694839], 'false,false': [0.08277402105652314, 0.0], 'true': [0.020229589297638535, 0.006160455969445092], 'false,true,true': [0.0016128007439724394, 0.04425648320365497], 'true,true': [0.009484513929699644, 0.013035903324983356], 'false,false,false': [0.0, nan]}, {'': [0.04447060223078912, 0.07844567764082945], 'false': [0.06646504053053139, 0.17015493066765064], 'false,false': [0.17240778959922834, 0.14366820412690673], 'false,false,true': [0.025815076650868532, 0.17449854646276428], 'false,false,false': [0.09085853306319955, 0.1875], 'true': [0.0350485596115889, 0.05933565030345013], 'true,false': [0.0, 0.06696565608062581], 'true,false,false': [0.0001008152135637171, 0.16185509620272504]}, {'': [0.03875018174160318, 0.07914653954659603], 'false': [0.06784064658740425, 0.15737179314557018], 'false,false': [0.15737179314557018, nan], 'false,false,true': [0.07401139517030884, 0.00364173189412074], 'true': [0.0007056327719813127, 0.10923063362932159], 'true,false': [nan, 0.10923063362932159]}, {'': [0.011193175454203697, 0.0762078728445791], 'false': [0.12106419331204062, 0.07506170156381946], 'false,false': [0.06923173786542579, 0.12526069196407977], 'false,false,false': [0.12526069196407977, nan], 'true': [0.00268685800626458, 0.024032814722055672], 'true,true': [0.0025989638333688545, 0.003170400947277043], 'true,true,false': [0.0035667010656866734, 0.0], 'true,true,true': [0.0027892599019442763, 0.002242448708254645]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, D), recursion_proteinclass(D, B).;true;true
0;false,true;interaction(D, E), recursion_proteinclass(E, B).;true;true
0;false,true,true;interaction(F, A), interaction(A, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, D), interaction(D, C).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;interaction(A, F), interaction(F, E).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(D, A).;true;true
2;false,true;interaction(E, D), interaction(E, A).;true;true
2;false,true,false;interaction(D, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;interaction(D, A), interaction(D, C).;true;true
3;true,true;recursion_proteinclass(D, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;complex(A, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;complex(A, H).;true;true
4;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, C), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;false;interaction(A, F), interaction(F, G).;true;true
6;false,true;recursion_proteinclass(G, B).;true;true
6;false,true,true;recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, D), interaction(A, D).;true;true
7;true,false;complex(A, E), interaction(A, C).;true;true
7;true,false,false;complex(A, F).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(D, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;true,true;interaction(E, A), interaction(E, D).;true;true
9;true,true,true;complex(A, F), complex(C, F).;true;true
9;true,true,false;interaction(D, C), complex(C, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995118;  // std dev = 2.38e-07, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I), location(A, J) )
%   | | | then return 0.021192413360381943;  // std dev = 3.543, 92.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=15 */
%   | | | else return 0.13337829289767636;  // std dev = 4.663, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.11378803284387186;  // std dev = 5.031, 133.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=34 */
%   | | | else return 0.17485175505612718;  // std dev = 9.988, 461.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=146 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.7194734122109543;  // std dev = 1.49e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( complex(A, E) )
%   | | then return 0.6639178566553987;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.2805265877890455;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6789723416238701;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6593361986217258;  // std dev = 1.266, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.0732915139366071;  // std dev = 5.740, 184.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=43 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.09855578154566415;  // std dev = 4.955, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | | else return 0.15885498087299718;  // std dev = 9.744, 435.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=140 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4545108462556354;  // std dev = 0.308, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.06530770606953427;  // std dev = 4.824, 131.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=32 */
%   | | | else return 0.127378159025608;  // std dev = 5.415, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7026488874336398;  // std dev = 3.686, 148.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=133 */
%   | | | else return -0.1821131658402173;  // std dev = 0.389, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.3727968627562406;  // std dev = 1.649, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.07799866466810833;  // std dev = 2.009, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06390853362267537;  // std dev = 2.612, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.15624594475360007;  // std dev = 2.513, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4212835030791149;  // std dev = 0.135, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.45596993463761804;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1643653494897269;  // std dev = 0.448, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.5778233190451232;  // std dev = 3.111, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | | else return 0.660379598790542;  // std dev = 2.854, 146.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=138 */
%   | | else return -0.16733185651520052;  // std dev = 0.023, 482.000 (wgt'ed) examples reached here.  /* #neg=482 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4114668764740807;  // std dev = 3.256, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return -0.20160875869068778;  // std dev = 0.133, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0.4541877406704396;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3530130054832377;  // std dev = 0.019, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.26769215276247993;  // std dev = 0.244, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5299902709637843;  // std dev = 2.564, 51.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=43 */
%   | | | else return 0.4696992006976056;  // std dev = 3.760, 180.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=166 */
%   | | else return -0.1471625284505152;  // std dev = 0.022, 500.000 (wgt'ed) examples reached here.  /* #neg=500 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5635848180748577;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.18783137007202674;  // std dev = 0.347, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06674337201770192;  // std dev = 2.461, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.21702122886273004;  // std dev = 1.952, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.2697853326433865;  // std dev = 0.005, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2280016588350793;  // std dev = 0.240, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( enzyme(E, F), enzyme(A, G) )
%   | | | then return -0.0990994683313131;  // std dev = 0.839, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.02697696606257823;  // std dev = 3.543, 129.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=35 */
%   | | else if ( enzyme(E, H), phenotype(A, I) )
%   | | | then return 0.11553921217626163;  // std dev = 2.288, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.03447110150783986;  // std dev = 6.280, 499.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=152 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3372476066166688;  // std dev = 2.833, 43.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=30 */
%   | | | else return -0.17684878652827016;  // std dev = 0.155, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.12328695697513854;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.2309161256752273;  // std dev = 0.017, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.021394768344607247;  // std dev = 0.291, 332.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=94 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.24202107367549053;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3622740729257471;  // std dev = 1.693, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.08011088698217116;  // std dev = 2.477, 118.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   | | | else return 0.08583353921927378;  // std dev = 2.723, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( interaction(H, A) )
%   | | then if ( location(A, I) )
%   | | | then return 0.034826283524953566;  // std dev = 4.911, 290.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=95 */
%   | | | else return 0.04371974471759245;  // std dev = 1.132, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return -0.016987174198558254;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.0903844577610745;  // std dev = 0.308, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | else return 0.21719364196084712;  // std dev = 0.036, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15494250104010526;  // std dev = 0.090, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( enzyme(E, F) )
%   | | | then return -0.07964351574199822;  // std dev = 1.686, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.0501868181827889;  // std dev = 3.002, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.23198009142960713;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07220761393935131;  // std dev = 2.784, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.15062866086745602;  // std dev = 0.705, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.026577468798090146;  // std dev = 6.800, 555.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=166 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, A) )
%   | then return 0.17865608056174037;  // std dev = 0.012, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.11767588622946598;  // std dev = 0.251, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( phenotype(E, F), interaction(A, E) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.030709871652969487;  // std dev = 1.420, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return -0.12546565060996534;  // std dev = 0.704, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.04508555933867332;  // std dev = 1.863, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return -0.026907900454525183;  // std dev = 3.352, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19728706085113826;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.028394845741972135;  // std dev = 3.808, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
%   | | | else return 0.008514647792404694;  // std dev = 6.086, 456.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=128 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15407699891702584;  // std dev = 0.018, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.008854345869186916;  // std dev = 0.343, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, F), location(E, G) )
%   | | then return -0.049512316297873483;  // std dev = 0.206, 122.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=23 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3474261766354666;  // std dev = 1.560, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.009939524146710593;  // std dev = 5.476, 373.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=95 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.43594256393460473;  // std dev = 0.728, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return -0.16532619920583635;  // std dev = 0.687, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.04513963031996049;  // std dev = 1.934, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.01125340466324134;  // std dev = 3.953, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */


Results
   AUC ROC   = 0.988987
   AUC PR    = 0.344716
   CLL	      = -0.177935
   Precision = 0.255725 at threshold = 0.5
   Recall    = 0.77907
   F1        = 0.385057


Total learning time: 13.364 seconds
Total inference time: 3.294 seconds
AUC ROC: 0.988987


Results scoring model
   AUC ROC   = 0.982584
   AUC PR    = 0.217681
   CLL	      = -0.193268
   Precision = 0.155587 at threshold = 0.5
   Recall    = 0.777385
   F1        = 0.259281


Total scoring time: 15.88 seconds
Refined model CLL: -0.193268


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990541
   AUC PR    = 0.358373
   CLL	      = -0.18064
   Precision = 0.255102 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.394737


Total learning time: 49.49700000000001 seconds
Total inference time: 2.907 seconds
AUC ROC: 0.990541
Total revision time: 49.49700000000001
Best scored revision CLL: -0.185005


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:30:35
{'AUC ROC': 0.990541, 'AUC PR': 0.358373, 'CLL': -0.18064, 'Precision': [0.255102, 0.5], 'Recall': 0.872093, 'F1': 0.394737, 'Learning time': 49.49700000000001, 'Inference time': 2.907, 'parameter_1.0': {'AUC ROC': 0.990541, 'AUC PR': 0.358373, 'CLL': -0.18064, 'Precision': [0.255102, 0.5], 'Recall': 0.872093, 'F1': 0.394737, 'Learning time': 4.893, 'Inference time': 2.907}}


