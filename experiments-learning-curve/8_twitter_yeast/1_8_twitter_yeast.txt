Starting experiment #1 for 8_twitter_yeast

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.8471599241105008;  // std dev = 0.104, 91.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=90 */
%   | | else return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.8581489350995118;  // std dev = 2.67e-07, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), recursion_accounttype(G, B) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.14185106490048716;  // std dev = 2.98e-07, 451.000 (wgt'ed) examples reached here.  /* #neg=451 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.14255260482428161;  // std dev = 4.710, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.221785298735876;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then return 0.7157091922080846;  // std dev = 0.078, 165.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=164 */
%   | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E) )
%   | | | then return 0.7260998692020226;  // std dev = 0.104, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1254446385283923;  // std dev = 0.000, 447.000 (wgt'ed) examples reached here.  /* #neg=447 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(H, G), recursion_accounttype(H, B) )
%   | | | then return 0.808341863232405;  // std dev = 0.289, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return -0.16274194445889018;  // std dev = 0.043, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.1643082606859927;  // std dev = 3.414, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.21784041640790847;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( tweets(E, D), recursion_accounttype(E, B) )
%   | then if ( follows(F, A), follows(E, F) )
%   | | then return 0.5300458986349074;  // std dev = 0.172, 156.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=151 */
%   | | else if ( follows(C, G), recursion_accounttype(C, B) )
%   | | | then return 0.47064911442281515;  // std dev = 0.987, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6847675230110855;  // std dev = 0.153, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.11648120524044445;  // std dev = 0.206, 399.000 (wgt'ed) examples reached here.  /* #neg=399 */
%   else if ( follows(H, A), recursion_accounttype(H, B) )
%   | then return 0.5379833791822601;  // std dev = 0.138, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), recursion_accounttype(J, B) )
%   | | | then return 0.4486235954091854;  // std dev = 0.892, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.1575625411562571;  // std dev = 3.965, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.03083293873833811;  // std dev = 2.754, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D) )
%   | then return 0.4208310477922242;  // std dev = 0.083, 138.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else if ( follows(C, E), follows(E, A) )
%   | | then return 0.3671097562261394;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.4261271261990588;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( follows(A, F), recursion_accounttype(F, B) )
%   | then if ( follows(F, G) )
%   | | then return 0.45599346468304397;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.16189185527331443;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.40673516351753575;  // std dev = 0.932, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.10133144145878199;  // std dev = 0.003, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.032176560876117005;  // std dev = 2.742, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.12666793406939944;  // std dev = 4.577, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(C, D) )
%   | then return 0.323199570829447;  // std dev = 0.085, 138.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=137 */
%   | else return 0.26712474225784283;  // std dev = 0.237, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), follows(H, E) )
%   | | | then return 0.3191187132599501;  // std dev = 1.036, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return 0.026339244225155618;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.09245419624308371;  // std dev = 0.003, 445.000 (wgt'ed) examples reached here.  /* #neg=445 */
%   | else if ( follows(A, I), recursion_accounttype(I, B) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.35737802974968014;  // std dev = 0.290, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15771925817831461;  // std dev = 0.893, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, K), tweets(A, L) )
%   | | | then return 0.04808128233067229;  // std dev = 2.672, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | | else return 0.08155322484638416;  // std dev = 4.656, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then if ( follows(E, A), follows(E, C) )
%   | | then return 0.24518514934994856;  // std dev = 0.135, 107.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=105 */
%   | | else if ( follows(F, C), follows(A, F) )
%   | | | then return 0.12562591915021898;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.26577942131543675;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.26619953759775467;  // std dev = 0.057, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(G, A) )
%   | then return -0.05625892523523465;  // std dev = 0.131, 477.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=48 */
%   | else if ( tweets(A, H) )
%   | | then if ( tweets(I, H), recursion_accounttype(I, B) )
%   | | | then return 0.4350743234503125;  // std dev = 1.259, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.1437312500117885;  // std dev = 0.142, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07541538352026549;  // std dev = 3.966, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.0234642847301396;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( recursion_accounttype(D, B) )
%   | then if ( follows(E, A) )
%   | | then return 0.209376646468308;  // std dev = 0.156, 192.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=187 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.2953380009457375;  // std dev = 1.061, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.7049181886915467;  // std dev = 0.409, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1009420560495262;  // std dev = 0.065, 475.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=2 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then if ( tweets(A, H) )
%   | | then return 0.22270381144314857;  // std dev = 0.016, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.10745555257111068;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(I, A) )
%   | | then return -0.06647758550428368;  // std dev = 0.078, 60.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=2 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.1568757325694398;  // std dev = 0.862, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.06117751624093086;  // std dev = 3.267, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.16248702500582085;  // std dev = 0.146, 92.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=90 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return -0.07728898032068243;  // std dev = 1.184, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.19628234300163336;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18607841880498469;  // std dev = 0.091, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(G, A) )
%   | then return -0.04266930984061376;  // std dev = 0.108, 462.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=48 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.3877081151787767;  // std dev = 1.081, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.161413782610299;  // std dev = 0.999, 90.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=1 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.010264052889583423;  // std dev = 1.606, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.10911425581464822;  // std dev = 2.927, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.1607702762189781;  // std dev = 0.056, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | | else return 0.1113481910655945;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return 0.1680317138826282;  // std dev = 0.138, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(E, F) )
%   | | then if ( tweets(E, G), follows(A, F) )
%   | | | then return 0.12173318995544856;  // std dev = 1.313, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.419425784069011;  // std dev = 0.259, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.305447807106215;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(H, A) )
%   | | then return -0.047322773744252936;  // std dev = 0.086, 421.000 (wgt'ed) examples reached here.  /* #neg=391 #pos=30 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return -0.0016642210224244957;  // std dev = 2.598, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.0654595018251042;  // std dev = 3.303, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.12041949281320402;  // std dev = 0.146, 138.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=135 */
%   | else if ( tweets(A, E), tweets(C, E) )
%   | | then if ( follows(A, F), follows(C, F) )
%   | | | then return 0.0292134957766821;  // std dev = 1.309, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.507797719915367;  // std dev = 0.855, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1382750917183663;  // std dev = 0.053, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( follows(A, G), recursion_accounttype(G, B) )
%   | then if ( follows(H, A) )
%   | | then if ( follows(G, H), tweets(A, I) )
%   | | | then return 0.12947360225284646;  // std dev = 0.919, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2718462424141008;  // std dev = 0.205, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( tweets(A, J), follows(G, K) )
%   | | | then return 0.0839103674752878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13861731335074143;  // std dev = 1.168, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.032131418375977557;  // std dev = 0.193, 626.000 (wgt'ed) examples reached here.  /* #neg=541 #pos=85 */


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.3493770052749498;  // std dev = 3.774, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5745635638288648;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6171841074706554;  // std dev = 1.333, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8160952860316318;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18502989979406043;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2693091441215225;  // std dev = 3.099, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.015767403585265433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.6001922912458466;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6560233668468368;  // std dev = 0.102, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.1343230686060423;  // std dev = 0.141, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6087618559780185;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6004099256116008;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.2151300323753803;  // std dev = 3.183, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.40665408761483846;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.404588032337145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4867403921796294;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5219488882334224;  // std dev = 0.128, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.22076669422712963;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38646362875023016;  // std dev = 0.528, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.01156615997311412;  // std dev = 1.880, 75.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=13 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.12272769414279192;  // std dev = 1.793, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.06747966221088228;  // std dev = 3.459, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3133575733429279;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.34947741080067346;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.41939586380267485;  // std dev = 0.136, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3024145669029733;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.10218877425716222;  // std dev = 0.093, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.48387134767311657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.12485245174044504;  // std dev = 1.701, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.0611840774066517;  // std dev = 3.426, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2501474019228703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2749197854587836;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F) )
%   | then return 0.025611486141188227;  // std dev = 1.695, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4437236332298867;  // std dev = 0.090, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1766305042804331;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04457448615295518;  // std dev = 3.475, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2710163321118511;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, F) )
%   | | | then return -0.15459247587712868;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.3559507468121623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.008117560547200791;  // std dev = 3.695, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22373421482762926;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return -0.026672420270332637;  // std dev = 1.398, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.04974337134777016;  // std dev = 0.594, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03975175144569751;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.16534420400844918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06408694966303474;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F) )
%   | then return -0.005141438299854559;  // std dev = 1.842, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.03915722858046644;  // std dev = 0.450, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.10932707267402075;  // std dev = 3.300, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2115640330241727;  // std dev = 0.415, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.016924807662459507;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1576355828552059;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.11047842268197398;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( enzyme(E, G), interaction(F, A) )
%   | | | then return 0.1991535966216914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2870456047491393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.015095450855820376;  // std dev = 1.744, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05046732679292984;  // std dev = 3.459, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   | | | else return 0.04582791085531827;  // std dev = 1.002, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return -0.17994291500661533;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.22910755438627617;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(G, F), enzyme(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16927890961233172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, I), interaction(J, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2320410551485067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.020321908799099047;  // std dev = 3.918, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */


Results
   AUC ROC   = 0.948156
   AUC PR    = 0.29611
   CLL	      = -0.235092
   Precision = 0.296651 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.418919


Total learning time: 2.991 seconds
Total inference time: 7.993 seconds
AUC ROC: 0.948156


Results scoring model
   AUC ROC   = 0.947318
   AUC PR    = 0.170192
   CLL	      = -0.224918
   Precision = 0.211111 at threshold = 0.5
   Recall    = 0.678571
   F1        = 0.322034


Total scoring time: 4.91 seconds
Parameter learned model CLL: -0.224918


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [2.11e-08, 0, 3], 'false,true,true,true': [1.317, 2, 13], 'false,true,true,false': [0.0, 0, 7], 'false,true,false': [6.66e-08, 65, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.774, 29, 28], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.816, 1, 2], 'false,true,true,true': [0.908, 1, 5], 'false,true,true,false': [1.333, 2, 15], 'false,true,false': [0.0, 62, 0], 'false,false,true,true': [0.051, 0, 13], 'false,false,true,false': [0.052, 16, 0], 'false,false,false,true': [3.099, 21, 18], 'false,false,false,false': [0.913, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.055, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.102, 0, 15], 'true,false': [0.141, 36, 0], 'false,true': [0.065, 0, 3], 'false,false,true,true': [0.067, 0, 16], 'false,false,true,false': [0.0, 42, 0], 'false,false,false,true': [3.183, 25, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true': [0.0, 0, 1], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.128, 0, 2], 'false,true,false': [0.0, 1, 0], 'false,false,true,true': [0.528, 1, 6], 'false,false,true,false': [1.88, 62, 13], 'false,false,false,true': [1.793, 19, 13], 'false,false,false,false': [3.459, 35, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), enzyme(A, L)'}, {'true,true': [0.0, 0, 1], 'true,false': [0.046, 0, 3], 'false,true,true,true': [0.136, 0, 13], 'false,true,true,false': [0.94, 1, 7], 'false,true,false': [0.093, 51, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.701, 16, 13], 'false,false,false,false': [3.426, 35, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.04, 0, 3], 'false,true': [1.695, 49, 20], 'false,false,true,true': [0.09, 0, 13], 'false,false,true,false': [0.036, 15, 0], 'false,false,false,true': [3.475, 36, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true,true': [0.095, 0, 8], 'true,true,false,true': [0.0, 2, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [3.695, 94, 34], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.035, 0, 3], 'false,false,true': [1.398, 24, 7], 'false,false,false,true': [0.594, 4, 2], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.872, 1, 3], 'false,true': [1.842, 59, 20], 'false,false,true,true': [0.45, 1, 1], 'false,false,true,false': [3.3, 33, 28], 'false,false,false,true': [0.415, 1, 2], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'enzyme(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.02, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.785, 1, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.744, 74, 19], 'false,false,false,true': [3.459, 39, 28], 'false,false,false,false': [1.002, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G)', 'false,true,true': 'interaction(G, F), enzyme(A, H)', 'false,true,false': 'enzyme(A, I), interaction(J, F)'}, {'true,true': [0.779, 1, 2], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.918, 108, 50]}]]
[{'': [0.0, 0.22008623076618836], 'false': [0.17703791782269743, 0.24691358024691512], 'false,false': [0.0, 0.24598293989287992], 'false,false,false': [0.24992305324715441, 0.1683673469387754], 'false,true': [0.08264462809917356, 6.832141690000964e-17], 'false,true,true': [0.11555555555555533, -2.5376526277146434e-16], 'true': [0.0, 1.4802973661668753e-16], 'true,true': [0.0, nan]}, {'': [0.16000000000000006, 0.1934855421796199], 'false': [0.1363199412372221, 0.24294859885664258], 'false,false': [0.2480621017299704, 0.23934054747002764], 'false,false,true': [0.00019806541604544108, 0.00016641433748732642], 'false,false,false': [0.2462235268976489, 0.13888888888888887], 'true': [0.0, 0.22222222222222224], 'false,true': [0.11347746709987151, -4.118569284899774e-17], 'false,true,true': [0.1375331061649572, 0.1045133691804477]}, {'': [0.13632361852707267, 0.16280975802904613], 'false': [0.001425535397466371, 0.16129781187492004], 'false,false': [0.10155245631289371, 0.2303198119110535], 'false,false,false': [0.2303198119110535, nan], 'true': [0.0011788382326813895, 0.0005541940527085646], 'false,false,true': [0.00028094838070702455, 0.0], 'true,true': [0.0010046786158079228, 0.0006941519889288372], 'true,true,false': [nan, 0.0006941519889290149]}, {'': [0.001645620087342342, 0.12218170839090034], 'false': [0.12803792461521538, 0.1212344596256331], 'false,true': [0.008181408112917343, 0.0], 'false,false': [0.0588655128371887, 0.17927189146333133], 'false,false,false': [0.10044969857717292, 0.22571353130250685], 'false,false,true': [0.03982769755928506, 0.04711805865770297], 'true': [0.0, 0.0014997800505975878], 'true,false': [0.0, 0.0]}, {'': [0.0007724554559482705, 0.12470750760690597], 'false': [0.06061550791792146, 0.17906953785240198], 'false,false': [0.0, 0.179323959041893], 'false,false,false': [0.09972746618551041, 0.22144314488797565], 'false,true': [0.04623228757929606, 0.00016972722091358015], 'false,true,true': [0.001431484210590404, 0.11056215925742524], 'true': [0.0, 0.0007037799434375658], 'false,false,true': [0.0, nan]}, {'': [0.0005156050088348657, 0.11701289531269407], 'false': [0.04163909127922743, 0.17889110176063036], 'false,false': [0.09605137788351757, 0.2195579710678806], 'false,false,false': [0.2195579710678806, nan], 'false,false,true': [0.0006167720761836881, 8.600076034080603e-05], 'true': [0.0, 0.0005340555986005727], 'true,true': [0.0, nan]}, {'': [0.10330108213171554, 0.07386166060444066], 'true': [0.029564535129696354, 0.10668282034854963], 'false': [0.00040173872240998704, 0.07554340157412195], 'false,false': [0.06304740368322695, 0.11031561690395404], 'false,false,false': [0.05881942851928313, 0.18750000000000003], 'true,true': [0.0011364026001891292, 0.05792319605199266], 'true,true,false': [0.0, 0.0], 'false,true': [nan, 0.00040173872240998704]}, {'': [0.16034206315290225, 0.10683764188144354], 'true': [0.0, 0.18989984808612217], 'false': [0.042939703279410706, 0.17204952795378492], 'false,false': [0.17676813182204987, 0.13374980980871265], 'false,false,true': [0.10128724224956245, 0.17854299166706977], 'false,false,false': [0.05737002387428297, 0.16000000000000003], 'true,true': [0.0, nan]}, {'': [0.14071617711460888, 0.0953001782506604], 'true': [0.0001922885481120476, 0.20564472150619706], 'false': [0.0019312512731688436, 0.0957920144616946], 'false,false': [0.032710877342752104, 0.17065744914464162], 'false,false,false': [0.17858540319542365, 0.1116192603913261], 'false,true': [0.0019312512731688436, nan], 'false,true,true': [0.0, 0.0], 'true,true': [0.0001922885481120476, nan]}, {'': [0.1614022094979828, 0.09633367462828815], 'true': [0.20207476789242007, 0.0], 'false': [0.0009847717280759977, 0.09713410000647757], 'false,true': [0.0, 0.0], 'true,false': [nan, 0.0], 'false,true,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;enzyme(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), enzyme(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;enzyme(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;interaction(A, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.19617710411359685;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5336614886487066;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.72745420520719;  // std dev = 0.028, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.814938567323503;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.18899511800608937;  // std dev = 0.130, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2338689789832253;  // std dev = 3.245, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.023393019613748484;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5813326540588893;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.6506177208941831;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4642681439993668;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return -0.1288544341999806;  // std dev = 0.020, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.6087618559780185;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4634006371958206;  // std dev = 1.271, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.11231637819360628;  // std dev = 4.21e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.26080012290829496;  // std dev = 3.067, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.08827266605203993;  // std dev = 0.964, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4112125541588103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.404588032337145;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4867403921796294;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.2756707656179604;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5105156130552218;  // std dev = 0.410, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.16065606944913818;  // std dev = 0.571, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11105521454803947;  // std dev = 3.717, 93.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=33 */
%   | | | else return -0.12439669381515486;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3164428617527666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.34947741080067346;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.37780662226828543;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.404359971974384;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.08751339419771444;  // std dev = 0.003, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.11244576716461263;  // std dev = 0.018, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5427729995137511;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0022176370822879756;  // std dev = 1.635, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.17668665165368963;  // std dev = 3.133, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2692541131280731;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( complex(A, G), complex(E, G) )
%   | | | then return 0.035898563656483515;  // std dev = 0.574, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.051997364301013885;  // std dev = 1.070, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.010118788437810451;  // std dev = 0.960, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.07147587127847246;  // std dev = 0.670, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4211073438661318;  // std dev = 0.245, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14807935663401697;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.18022850919011352;  // std dev = 2.730, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return -0.0828875101904307;  // std dev = 1.505, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2402786429774455;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.1107317948730261;  // std dev = 0.255, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then return -0.052665176349951597;  // std dev = 0.115, 52.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=5 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.03179760819248023;  // std dev = 3.090, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.07077161395843637;  // std dev = 1.603, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.22471746598251943;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return -0.1781431871150093;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return -0.046745943012745796;  // std dev = 0.316, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.05422734315951683;  // std dev = 1.316, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18318128948967743;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.23602963071288496;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.35231541986472936;  // std dev = 0.418, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.07639193090384074;  // std dev = 0.014, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.1856200314856576;  // std dev = 0.342, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23960028601264213;  // std dev = 0.935, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.09664107473581054;  // std dev = 0.051, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.026397357612274006;  // std dev = 2.918, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.15138117558959507;  // std dev = 1.398, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14205418509372297;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.1569193730266342;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), interaction(G, A) )
%   | | then return -0.24375925937512238;  // std dev = 0.615, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.003267251195542137;  // std dev = 0.477, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1256378521993241;  // std dev = 0.908, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.09845513725201703;  // std dev = 0.181, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.03684667639187901;  // std dev = 1.226, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.042152004620664416;  // std dev = 3.241, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1256060566571499;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1963125893351808;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return -0.22248198672157815;  // std dev = 0.643, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.33506779299551825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21450280580443148;  // std dev = 2.683, 69.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=49 */
%   | | | else return -0.16869281892766885;  // std dev = 1.046, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.014488429912349332;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.11427163828950318;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.985079
   AUC PR    = 0.493118
   CLL	      = -0.190633
   Precision = 0.309091 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.442997


Total learning time: 8.181 seconds
Total inference time: 9.969 seconds
AUC ROC: 0.985079


Results scoring model
   AUC ROC   = 0.982647
   AUC PR    = 0.296208
   CLL	      = -0.18932
   Precision = 0.227778 at threshold = 0.5
   Recall    = 0.732143
   F1        = 0.347458


Total scoring time: 7.96 seconds
Refined model CLL: -0.18932


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985079
   AUC PR    = 0.493118
   CLL	      = -0.190633
   Precision = 0.309091 at threshold = 0.5
   Recall    = 0.781609
   F1        = 0.442997


Total learning time: 24.042 seconds
Total inference time: 9.969 seconds
AUC ROC: 0.985079
Total revision time: 24.042
Best scored revision CLL: -0.18932


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:00:42
{'AUC ROC': 0.985079, 'AUC PR': 0.493118, 'CLL': -0.190633, 'Precision': [0.309091, 0.5], 'Recall': 0.781609, 'F1': 0.442997, 'Learning time': 24.042, 'Inference time': 9.969, 'parameter_0.2': {'AUC ROC': 0.948156, 'AUC PR': 0.29611, 'CLL': -0.235092, 'Precision': [0.296651, 0.5], 'Recall': 0.712644, 'F1': 0.418919, 'Learning time': 2.991, 'Inference time': 7.993}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6323424834866084;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return 0.7936328060672545;  // std dev = 1.934, 62.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379807;  // std dev = 2.928, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5759193326923807;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5535975184082594;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6652919454580567;  // std dev = 2.353, 80.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6102206310013645;  // std dev = 1.951, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | | else return -0.16146785788033238;  // std dev = 0.020, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.41038907381491496;  // std dev = 1.657, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6129470863902158;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3285600383180286;  // std dev = 3.185, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | else return -0.12155668406419455;  // std dev = 0.159, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5754288025821792;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4778122818342564;  // std dev = 2.485, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.11231637819360613;  // std dev = 5.37e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.44421849253608564;  // std dev = 0.073, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4917871802568632;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5285430516728029;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5217390976278586;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.04157646955705837;  // std dev = 4.513, 243.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=68 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.10614924938906757;  // std dev = 2.715, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.16028527298959497;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.33093070373446526;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3555749041939674;  // std dev = 1.521, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.4312766505942646;  // std dev = 1.391, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.11141666464382247;  // std dev = 0.240, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.37212674067594387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4315640624244508;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.08841972466087418;  // std dev = 2.707, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.291295409583613;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10143709193371286;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.7280291637564564;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A) )
%   | then return 0.022297835255313855;  // std dev = 3.965, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.27900578150325284;  // std dev = 2.280, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return -0.15144608515499755;  // std dev = 0.030, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.012410097914568066;  // std dev = 1.795, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else if ( function(A, F) )
%   | | | then return 0.1730330493198883;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02109706680549639;  // std dev = 3.072, 124.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=28 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.2364797692574473;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.048949781422685266;  // std dev = 2.966, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.13425764103295648;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.2504486920307716;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19661327082178356;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then return 0.011860793980948204;  // std dev = 3.910, 285.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.37012796438453965;  // std dev = 0.296, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.057282332630591695;  // std dev = 2.054, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | else if ( function(A, I) )
%   | | | then return 0.24166741413177495;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17099232449745694;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.17985218962820826;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.037510933417013566;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.1522067028343349;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10470877649633413;  // std dev = 0.456, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12254016327187071;  // std dev = 0.573, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.022197226089636618;  // std dev = 3.745, 251.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=77 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.02177253103543528;  // std dev = 2.263, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.10505384321038899;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.01478829529635682;  // std dev = 0.882, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.19609836994526675;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04733856198522931;  // std dev = 0.677, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26197158099580375;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.1335875414103591;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20115973260167985;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.0015023306864889242;  // std dev = 4.746, 318.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=92 */


Results
   AUC ROC   = 0.975179
   AUC PR    = 0.156553
   CLL	      = -0.186338
   Precision = 0.100711 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.182599


Total learning time: 20.238 seconds
Total inference time: 30.312 seconds
AUC ROC: 0.975179


Results scoring model
   AUC ROC   = 0.977962
   AUC PR    = 0.172795
   CLL	      = -0.178851
   Precision = 0.133508 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.232877


Total scoring time: 76.882 seconds
Parameter learned model CLL: -0.178851


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true,true,true': [2.328, 7, 24], 'false,true,true,false': [1.934, 4, 58], 'false,true,false': [0.0, 188, 0], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [2.928, 30, 12], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.786, 1, 5], 'false,true,true,true': [1.251, 2, 8], 'false,true,true,false': [2.353, 6, 74], 'false,true,false': [0.0, 173, 0], 'false,false,true,true': [1.951, 5, 18], 'false,false,true,false': [0.02, 17, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.657, 4, 15], 'true,true,false,true': [0.04, 0, 2], 'true,true,false,false': [3.185, 23, 36], 'true,false': [0.159, 95, 0], 'false,true': [0.046, 0, 7], 'false,false,true,true': [2.485, 7, 52], 'false,false,true,false': [5.37e-08, 99, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.073, 0, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [0.084, 0, 3], 'false,true,false': [0.063, 0, 5], 'false,false,true,true': [0.083, 0, 9], 'false,false,true,false': [4.513, 175, 68], 'false,false,false,true': [2.715, 29, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.873, 1, 4], 'true,false': [0.045, 0, 8], 'false,true,true,true': [1.521, 3, 26], 'false,true,true,false': [1.391, 2, 56], 'false,true,false': [0.24, 165, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [2.707, 28, 15], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.093, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.909, 1, 5], 'true,false': [0.0, 1, 0], 'false,true': [3.965, 195, 82], 'false,false,true,true': [2.28, 8, 18], 'false,false,true,false': [0.03, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.795, 6, 12], 'true,true,false,true': [1.092, 1, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.072, 96, 28], 'false,true,true': [0.084, 0, 9], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.966, 110, 56], 'false,false,false,true': [0.994, 3, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [5.27e-09, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.073, 0, 9], 'false,true': [3.91, 203, 82], 'false,false,true,true': [0.296, 0, 4], 'false,false,true,false': [2.054, 22, 11], 'false,false,false,true': [0.866, 1, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.071, 0, 4], 'true,true,false': [0.038, 0, 2], 'true,false': [0.927, 1, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.456, 1, 2], 'false,true,false': [0.573, 2, 5], 'false,false,true': [3.745, 174, 77], 'false,false,false,true': [2.263, 25, 12], 'false,false,false,false': [0.931, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.882, 1, 6], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.677, 1, 5], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.063, 0, 5], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.057, 0, 2], 'false,false': [4.746, 226, 92]}]]
[{'': [-1.4802973661668753e-16, 0.20976012047760803], 'false': [0.2066589835488411, 0.22427910288358793], 'false,false': [0.18750000000000006, 0.2124114952103285], 'false,false,false': [0.2040816326530607, 0.24489795918367335], 'false,true': [0.10428951323852519, -2.1732025162875404e-16], 'false,true,true': [0.1748178980228938, 0.06035379812695064], 'true': [1.4802973661668753e-16, -2.9605947323337506e-16], 'true,true': [1.4802973661668753e-16, nan]}, {'': [0.05267785951748893, 0.176235544976083], 'false': [0.16379693645087345, 0.2406770929181663], 'false,false': [0.2406770929181663, nan], 'false,false,true': [0.16546337858899732, 2.2527842697883008e-05], 'false,true': [0.08016461997008517, -1.0267958609250002e-17], 'false,true,true': [0.1565447076944265, 0.06923092622298883], 'true': [-2.5376526277146434e-16, 0.10303886873212491]}, {'': [0.13153276122925184, 0.12433847896990224], 'true': [0.1640710923555389, 0.00026668394955435944], 'true,true': [0.1445522878885083, 0.16890219288563074], 'true,true,false': [0.0008119876166941542, 0.1719484940403095], 'false': [0.0003018738922000124, 0.12056642064384351], 'false,false': [0.12056642064384351, nan], 'false,false,true': [0.1046643589853742, 2.9157372363893e-17]}, {'': [0.00044635111941045597, 0.10333121335208637], 'false': [0.0016886669823125144, 0.10077337574166641], 'false,false': [0.0887850403429844, 0.16751911321949767], 'false,false,false': [0.16751911321949767, nan], 'false,false,true': [0.0007675644642654886, 0.08381079866430188], 'false,true': [0.0023323514576925795, 0.0007958335157550956], 'true': [0.00044635111941045597, nan]}, {'': [0.06562174358560967, 0.09181399434666687], 'false': [0.07805301645380605, 0.16568880703097338], 'false,false': [0.0007850656036967699, 0.17037566384958502], 'false,false,false': [0.17037566384958502, nan], 'false,true': [0.05010124931553087, 0.00034880806466867323], 'true': [0.15229643158883663, 0.0002501162627841641], 'false,true,true': [0.07979665916181992, 0.03334329292303462], 'false,false,true': [0.0, 0.0]}, {'': [0.12553478764448842, 0.07173458814814258], 'true': [0.07318698655712544, 0.0], 'true,true': [0.0012415992320797184, 0.13771378981075932], 'true,true,false': [nan, 0.13771378981075932], 'false': [0.056756197569829796, 0.15646812836182658], 'false,false': [0.15646812836182658, nan], 'false,false,true': [0.20002187911385505, 4.424445989656808e-05]}, {'': [0.0955031780236411, 0.05593768725721811], 'true': [0.19624484864131986, 0.07608466396631802], 'true,true': [0.1789231765707566, 0.23841177308113867], 'true,true,false': [0.23841177308113867, nan], 'false': [0.0007827298822488239, 0.05713009998454823], 'false,false': [0.052986904463311724, 0.1647349423631375], 'false,false,false': [0.1647349423631375, nan], 'false,true': [0.0007827298822488239, nan]}, {'': [0.000990983405645805, 0.06470686720979374], 'false': [0.053650174841444714, 0.13385083545287554], 'false,false': [0.12583926746418803, 0.1875], 'false,false,false': [0.1875, nan], 'false,false,true': [0.021903694206303087, 0.12785671992411698], 'true': [9.25185853854297e-18, 0.0005967480633404674], 'true,true': [9.25185853854297e-18, nan]}, {'': [0.07125436549019101, 0.0680404297768775], 'true': [0.0010891760135035798, 0.12280468488930142], 'false': [0.04888241121008732, 0.06842050256751166], 'false,false': [0.055871611413208816, 0.1433379200251586], 'false,false,false': [0.13843814650370506, 0.1734861548593783], 'false,true': [0.05230643453393984, 0.04691292291925291], 'false,true,true': [0.0, 0.06917789946031724], 'true,true': [0.0012547956838319559, 0.0007056051994234272]}, {'': [0.09038825048638068, 0.07046367949124589], 'true': [0.11123713795922438, 0.06809205328310627], 'false': [0.002907919082839841, 0.07083982134102014], 'true,false': [0.06809205328310627, nan], 'true,false,true': [0.0, 0.07627937447824677], 'false,true': [0.000790347949072967, 0.002096657899763941], 'false,true,false': [0.0, 0.0016229865088471102], 'false,true,true': [nan, 0.000790347949072967]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;function(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.7948577958590066;  // std dev = 2.164, 79.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | | else return -0.14185106490048838;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.14847151574467365;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5528067455442877;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.6468584809692596;  // std dev = 2.327, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | | else return 0.7431516615981253;  // std dev = 0.105, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.6724308557785542;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.32824875641595697;  // std dev = 2.431, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.16090247755477902;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.19838855210285106;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.22972991706277815;  // std dev = 1.487, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.6201622894850746;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.6186935036016206;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.34355969774847844;  // std dev = 3.062, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | else return -0.12471415782804966;  // std dev = 0.025, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5786156828821968;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.4336543793411019;  // std dev = 1.538, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return 0.28252530309199475;  // std dev = 2.698, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | | else return -0.11231637819360614;  // std dev = 3.95e-09, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then return -0.012367054727942417;  // std dev = 1.022, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.42211354127301104;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.46410192190238275;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I) )
%   | | then return 0.2156014707446969;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5216591697234367;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.35459741115986604;  // std dev = 1.192, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.051535027654557725;  // std dev = 4.472, 235.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=68 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.051678767980649416;  // std dev = 2.582, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.6669923955346132;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.43226029962229934;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32849659647532126;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3382668890428099;  // std dev = 2.556, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return 0.4428192005154916;  // std dev = 0.975, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.11634522966701755;  // std dev = 0.115, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.12562343487544733;  // std dev = 0.375, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.43996699376828124;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.19288247255958063;  // std dev = 1.696, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07664926367092584;  // std dev = 1.965, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.28456097835635735;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( phenotype(F, H), interaction(F, A) )
%   | | | then return -0.1136695598566324;  // std dev = 1.438, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.004235681874187774;  // std dev = 2.192, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.0723537261519606;  // std dev = 1.331, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.03904007544972456;  // std dev = 3.164, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.56925052335892;  // std dev = 0.374, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09179997172058957;  // std dev = 1.904, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return -0.1577130508546763;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.1298914246527936;  // std dev = 0.388, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return -0.0674682386797957;  // std dev = 0.178, 81.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2742977753378913;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.14169130788057274;  // std dev = 1.314, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.033913464764866105;  // std dev = 2.205, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.20881707262829347;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then if ( complex(A, N), complex(L, N) )
%   | | | then return -0.10139256108211672;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.04281548486095902;  // std dev = 3.208, 163.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=55 */
%   | | else return 0.24425169477580985;  // std dev = 0.728, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19765497428207135;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( complex(D, G), complex(A, G) )
%   | | | then return -0.054032586525733464;  // std dev = 0.851, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.16297385112667595;  // std dev = 0.904, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.05203819357287356;  // std dev = 0.668, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.15540727092554965;  // std dev = 0.337, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(I, K), complex(I, L) )
%   | | | then return -0.023995280495344395;  // std dev = 1.558, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.064567730892704;  // std dev = 2.848, 140.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=53 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.21081922170171477;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02538478732102213;  // std dev = 3.119, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1872686388039897;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1496589640116036;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.15251280373743337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3042157094361234;  // std dev = 0.118, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0731639404243248;  // std dev = 0.711, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.022626880552210616;  // std dev = 0.780, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.06657839954577142;  // std dev = 0.976, 42.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.0436942933666793;  // std dev = 4.212, 224.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=82 */
%   | | | else return -0.12088039221950293;  // std dev = 1.394, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19442972392644609;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.12394626541850198;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1316035654107402;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.21957110390778115;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16020106448608185;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3382054488149216;  // std dev = 0.601, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.1633150799116011;  // std dev = 1.207, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.007274775072108379;  // std dev = 2.570, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | | else return 0.04863339208810859;  // std dev = 2.393, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */


Results
   AUC ROC   = 0.98318
   AUC PR    = 0.220894
   CLL	      = -0.190651
   Precision = 0.105583 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.190999


Total learning time: 68.409 seconds
Total inference time: 76.224 seconds
AUC ROC: 0.98318


Results scoring model
   AUC ROC   = 0.986316
   AUC PR    = 0.274974
   CLL	      = -0.179387
   Precision = 0.132099 at threshold = 0.5
   Recall    = 0.955357
   F1        = 0.232104


Total scoring time: 175.188 seconds
Refined model CLL: -0.179387


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.975179
   AUC PR    = 0.156553
   CLL	      = -0.186338
   Precision = 0.100711 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.182599


Total learning time: 340.717 seconds
Total inference time: 30.312 seconds
AUC ROC: 0.975179
Total revision time: 340.717
Best scored revision CLL: -0.178851


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:08:10
{'AUC ROC': 0.975179, 'AUC PR': 0.156553, 'CLL': -0.186338, 'Precision': [0.100711, 0.5], 'Recall': 0.977011, 'F1': 0.182599, 'Learning time': 340.717, 'Inference time': 30.312, 'parameter_0.4': {'AUC ROC': 0.975179, 'AUC PR': 0.156553, 'CLL': -0.186338, 'Precision': [0.100711, 0.5], 'Recall': 0.977011, 'F1': 0.182599, 'Learning time': 20.238, 'Inference time': 30.312}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7500408269914034;  // std dev = 1.889, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.19722939486962854;  // std dev = 6.245, 174.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=59 */
%   | | | else return 0.10814893509951237;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7257791973569903;  // std dev = 0.034, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7425946244130862;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6225580657606217;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.7294683893700737;  // std dev = 0.074, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.518087797295054;  // std dev = 4.939, 117.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=81 */
%   | | | else return -0.16539107348136556;  // std dev = 0.048, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.49608078721428445;  // std dev = 1.507, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.595009378121021;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.31751312574876245;  // std dev = 5.996, 178.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=103 */
%   | else return -0.1285643002921298;  // std dev = 0.233, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5802072449688064;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5243359025896395;  // std dev = 0.996, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.11231637819360629;  // std dev = 3.49e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3340166176518947;  // std dev = 1.619, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.45153731429005184;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5265375747318803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3416764521921607;  // std dev = 1.356, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | | else return 0.00668622508551183;  // std dev = 3.508, 220.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=45 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.0941931513252651;  // std dev = 6.131, 232.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2648676476974063;  // std dev = 0.930, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.31840406766083723;  // std dev = 0.826, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3232238521803063;  // std dev = 2.209, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | | else return 0.43240973831770935;  // std dev = 0.188, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.11141358835689723;  // std dev = 0.287, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.34914866989832943;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3570318869184416;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.10557319764340863;  // std dev = 5.928, 212.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.29486515477897096;  // std dev = 0.026, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.29380188302215704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2172627171229895;  // std dev = 0.926, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return -0.005595141801012321;  // std dev = 3.588, 271.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=65 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3418102743521135;  // std dev = 4.611, 111.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=81 */
%   | | | else return -0.15203680578190493;  // std dev = 0.053, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18083616301094266;  // std dev = 1.753, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | else if ( function(A, F) )
%   | | | then return 0.07351609811983037;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004892401518118;  // std dev = 5.724, 320.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=87 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.25319616310633186;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.05169430864284552;  // std dev = 1.788, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.03560696969129861;  // std dev = 2.459, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2051202418496203;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16741592341716274;  // std dev = 0.911, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F) )
%   | then return 0.009202172083031517;  // std dev = 3.254, 242.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=65 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.19226180789692457;  // std dev = 1.524, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.038094050879440594;  // std dev = 5.066, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
%   | | else if ( function(A, I) )
%   | | | then return 0.028513954887917473;  // std dev = 2.397, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17649915931845922;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.17412730887772587;  // std dev = 0.000622, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0695086169178948;  // std dev = 1.146, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.22173613542569567;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13326630885955806;  // std dev = 0.415, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.26362437556979507;  // std dev = 0.710, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.003008283118660502;  // std dev = 3.233, 256.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=64 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.049874097503165314;  // std dev = 4.868, 175.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=59 */
%   | | | else return 0.020481405665372564;  // std dev = 2.452, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15201407315428053;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.17670309410020701;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.04837134185365257;  // std dev = 1.475, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return -0.761541676335534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15805746637638196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.12489438156275308;  // std dev = 0.558, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2893605580502211;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.014858700470139779;  // std dev = 6.377, 470.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=136 */


Results
   AUC ROC   = 0.967016
   AUC PR    = 0.18915
   CLL	      = -0.200706
   Precision = 0.261111 at threshold = 0.5
   Recall    = 0.54023
   F1        = 0.35206


Total learning time: 28.538 seconds
Total inference time: 31.805 seconds
AUC ROC: 0.967016


Results scoring model
   AUC ROC   = 0.965482
   AUC PR    = 0.165835
   CLL	      = -0.206124
   Precision = 0.200828 at threshold = 0.5
   Recall    = 0.573964
   F1        = 0.297546


Total scoring time: 107.598 seconds
Parameter learned model CLL: -0.206124


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false,true,true,true': [1.889, 4, 33], 'false,true,true,false': [2.15e-07, 0, 32], 'false,true,false': [0.0, 170, 0], 'false,false,true': [0.0, 0, 9], 'false,false,false,true': [6.245, 115, 59], 'false,false,false,false': [3.122, 39, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.034, 0, 11], 'true,false': [2.98e-08, 0, 12], 'false,true,true,true': [1.323, 2, 16], 'false,true,true,false': [0.074, 0, 49], 'false,true,false': [0.0, 182, 0], 'false,false,true,true': [4.939, 36, 81], 'false,false,true,false': [0.048, 104, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.507, 3, 29], 'true,true,false,true': [0.055, 0, 11], 'true,true,false,false': [5.996, 75, 103], 'true,false': [0.233, 214, 0], 'false,true': [0.004, 0, 5], 'false,false,true,true': [0.996, 1, 21], 'false,false,true,false': [3.49e-08, 56, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.619, 3, 23], 'true,false': [0.0, 0, 0], 'false,true,true': [0.049, 0, 9], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.356, 4, 19], 'false,false,true,false': [3.508, 175, 45], 'false,false,false,true': [6.131, 160, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.93, 1, 10], 'true,false': [0.826, 1, 13], 'false,true,true,true': [2.209, 5, 39], 'false,true,true,false': [0.188, 0, 26], 'false,true,false': [0.287, 191, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.043, 0, 6], 'false,false,false,true': [5.928, 140, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.026, 0, 13], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.926, 1, 9], 'true,false': [0.0, 0, 0], 'false,true': [3.588, 206, 65], 'false,false,true,true': [4.611, 30, 81], 'false,false,true,false': [0.053, 116, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.753, 5, 32], 'true,true,false,true': [0.919, 2, 5], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.724, 233, 87], 'false,true,true': [0.072, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.788, 50, 25], 'false,false,false,true': [2.459, 29, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.911, 1, 15], 'false,true': [3.254, 177, 65], 'false,false,true,true': [1.524, 5, 5], 'false,false,true,false': [5.066, 122, 63], 'false,false,false,true': [2.397, 33, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.044, 0, 10], 'true,true,false': [0.000622, 0, 2], 'true,false': [1.146, 2, 11], 'false,true,true,true': [0.037, 0, 4], 'false,true,true,false': [0.415, 1, 5], 'false,true,false': [0.71, 1, 1], 'false,false,true': [3.233, 192, 64], 'false,false,false,true': [4.868, 116, 59], 'false,false,false,false': [2.452, 30, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.039, 0, 12], 'true,false,true,true': [0.01, 0, 2], 'true,false,true,false': [1.475, 3, 9], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.558, 1, 8], 'false,true,false,false': [0.0, 0, 1], 'false,false': [6.377, 334, 136]}]]
[{'': [0.07360000000000064, 0.213142480727804], 'false': [0.19800073528124548, 0.22587596197374427], 'false,false': [-2.9605947323337506e-16, 0.21708826063121636], 'false,false,false': [0.2241049015722026, 0.1874999999999995], 'false,true': [0.05461037597143363, -1.750233944703188e-16], 'true': [-2.220446049250313e-16, 0.10380622837370206], 'false,true,true': [0.09642074506939538, 1.4432899320127035e-15], 'true,true': [-2.220446049250313e-16, nan]}, {'': [0.00012126815584755514, 0.18427348134194985], 'false': [0.14190756291401097, 0.226752831657509], 'false,false': [0.226752831657509, nan], 'false,false,true': [0.20845942062822306, 2.1724878381287252e-05], 'false,true': [0.02846563664860352, -1.708035422500241e-17], 'false,true,true': [0.09728888478138649, 0.00011292994689985189], 'true': [0.00010603447015469023, 7.401486830834377e-17]}, {'': [0.15046951513489867, 0.10398042044369069], 'true': [0.1798507373896383, 0.00025448729950361404], 'true,true': [0.07097253621331778, 0.19446551325296507], 'true,true,false': [0.0002742707452875092, 0.20198437147053655], 'false': [4.023674499631369e-06, 0.09479479914426876], 'false,false': [0.09479479914426876, nan], 'false,false,true': [0.04508727854887764, 2.1807952269422717e-17]}, {'': [0.10083817373885277, 0.11537840280747147], 'false': [0.000744756952092418, 0.11460089866589164], 'false,false': [0.06780865985524233, 0.16201886048767516], 'false,false,false': [0.16201886048767516, nan], 'true': [0.10083817373885277, nan], 'false,false,true': [0.07990210956771547, 0.05592284506169099], 'false,true': [0.0002650038179129331, 0.0]}, {'': [0.0625918657430308, 0.11127006271496341], 'false': [0.06421818800031591, 0.1614584250498459], 'false,false': [0.00022096039319537594, 0.16578191141170562], 'false,false,false': [0.16578191141170562, nan], 'false,true': [0.07301999174566011, 0.00043096398613027696], 'false,true,true': [0.11093680493519704, 0.0013595265430584441], 'true': [0.07862815049387928, 0.048730822489006634], 'false,false,true': [-1.850371707708594e-17, 0.00031072555293099047]}, {'': [0.0371817183205768, 0.0985728263432902], 'false': [0.047500713413598905, 0.15462873468783475], 'false,false': [0.15462873468783475, nan], 'false,false,true': [0.19156926348427122, 2.3958258303082157e-05], 'true': [0.0371817183205768, nan], 'true,true': [5.386470253953258e-05, 0.07835683741353218], 'true,true,false': [0.0, 0.085659953526109]}, {'': [0.10363273565240992, 0.07693162874427291], 'true': [0.09055163748934633, 0.10238043228541534], 'true,true': [0.08302756498294166, 0.12063648356536771], 'true,true,false': [0.12063648356536771, nan], 'false': [0.0007311297726479347, 0.07906526446423484], 'false,false': [0.042617206867088066, 0.14398518257985465], 'false,false,false': [0.14398518257985465, nan], 'false,true': [0.0007311297726479347, nan]}, {'': [0.0348952898793421, 0.09288546298138063], 'false': [0.043752399637207, 0.14206886861447812], 'false,false': [0.1461240801427594, 0.12487426336603155], 'false,false,true': [0.23234609796846115, 0.13874220890632358], 'false,false,false': [0.12487426336603155, nan], 'true': [-6.938893903907228e-18, 0.051869062942861095], 'true,true': [-6.938893903907228e-18, nan]}, {'': [0.055480030860708754, 0.08532481360983335], 'false': [0.08400101332002329, 0.08522050464916565], 'false,false': [0.040819819073755634, 0.13644985571621693], 'false,false,false': [0.13543730973841467, 0.13987716031337732], 'false,true': [0.019274879523045785, 0.2519110147761045], 'true': [0.00016202997679146125, 0.1010887798305115], 'false,true,true': [0.00033901258609229934, 0.028768026729291112], 'true,true': [0.0001934596879813788, 1.933587475688725e-07]}, {'': [0.09415229797964467, 0.08668527141732547], 'true': [0.00012911512090642285, 0.16168114512406656], 'true,false': [0.16168114512406656, nan], 'true,false,true': [5.063004213470834e-05, 0.18138263548725309], 'false': [0.09047033970542094, 0.08651965738504351], 'false,true': [0.21141564581912273, 0.03356083894608062], 'false,true,true': [0.0, 0.0], 'false,true,false': [0.03458490873035999, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8282981888308559;  // std dev = 0.170, 67.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=65 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.05422736647206138;  // std dev = 2.835, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.18106560176618033;  // std dev = 6.479, 192.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=62 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3861400788776211;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.741799726266304;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.6666350454564504;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.6499868767550079;  // std dev = 1.923, 53.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=49 */
%   | | else return -0.1254446385283917;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.3892780831068098;  // std dev = 4.422, 81.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=45 */
%   | | | else return 0.5295676701762891;  // std dev = 3.207, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | | else return -0.16148172152665227;  // std dev = 0.062, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.3412267745833523;  // std dev = 1.852, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.5285430331363027;  // std dev = 0.665, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(H, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5274140238264556;  // std dev = 0.866, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3155473472636281;  // std dev = 6.104, 185.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=103 */
%   | else return -0.13536468679740124;  // std dev = 0.447, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5828977213903141;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.3951932002436385;  // std dev = 1.185, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.27216057516794284;  // std dev = 1.459, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return -0.11231637819360618;  // std dev = 3.33e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return 0.043961674745878865;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4278954191858762;  // std dev = 0.204, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.0855789368720234;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4058523923107306;  // std dev = 0.543, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.5241651702744083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I), location(I, J) )
%   | | | then return -0.1017632944988282;  // std dev = 1.025, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.03045349894458539;  // std dev = 1.866, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0332273765389394;  // std dev = 2.992, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return 0.10069457752598426;  // std dev = 6.589, 306.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=102 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.16184116743956742;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3683863451157209;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(F, I) )
%   | | | then return 0.4458326749644999;  // std dev = 0.993, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.4680195198832405;  // std dev = 0.140, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.11827186513939061;  // std dev = 0.313, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.1673603294892848;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.40057780938866605;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.02625496404086538;  // std dev = 2.525, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.11540581468966747;  // std dev = 5.570, 175.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=62 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.29307672764927645;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.22244120864813624;  // std dev = 0.273, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F), phenotype(F, G) )
%   | | | then return -0.16891529894389534;  // std dev = 0.771, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.010698896323043048;  // std dev = 1.732, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else if ( location(A, H) )
%   | | | then return 0.0148849939937688;  // std dev = 2.731, 159.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=43 */
%   | | | else return 0.06656889561698982;  // std dev = 0.944, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.10178669168958679;  // std dev = 2.641, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.2882973084723082;  // std dev = 4.697, 104.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=67 */
%   | | else return -0.14630478153902934;  // std dev = 0.140, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.25560464184883575;  // std dev = 0.173, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.052528271005440004;  // std dev = 1.352, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.03733959648664796;  // std dev = 0.968, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return -0.010747382149126876;  // std dev = 1.361, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.07020950929745574;  // std dev = 5.540, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2305411594750825;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.00565848420327331;  // std dev = 0.193, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( location(A, M) )
%   | | | then return 0.09917233985414;  // std dev = 2.456, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return -0.05439545996823259;  // std dev = 0.700, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.2061268599918583;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.1105604154320929;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20546421037280138;  // std dev = 0.179, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H), phenotype(G, I) )
%   | | then return -0.07421062324605905;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.28601343713728766;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.45884595010228435;  // std dev = 0.778, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.16228159966869177;  // std dev = 1.362, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.03294499725765731;  // std dev = 5.273, 237.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=75 */
%   | | | else return 0.09833675776977276;  // std dev = 1.227, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1610096584460282;  // std dev = 0.026, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.05974220685585206;  // std dev = 0.325, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.07374889136305085;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21098038653725482;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.23163528168331737;  // std dev = 0.678, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42373076258074854;  // std dev = 0.984, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | | else return -0.1489643493998249;  // std dev = 1.075, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.03833778167297399;  // std dev = 2.240, 109.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | | else return -6.177332515365127E-5;  // std dev = 4.548, 211.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=58 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1405199854518169;  // std dev = 0.081, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18746420709067815;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.1788104235933976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, G), interaction(H, E) )
%   | | | then return 0.21147064775987578;  // std dev = 0.162, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.29303940412353957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23816844814610874;  // std dev = 1.414, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.17265969262619826;  // std dev = 1.289, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return -0.020719727620058977;  // std dev = 2.544, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.0171459151112459;  // std dev = 4.859, 257.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=76 */


Results
   AUC ROC   = 0.984283
   AUC PR    = 0.285037
   CLL	      = -0.183834
   Precision = 0.331633 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.459364


Total learning time: 110.09 seconds
Total inference time: 65.784 seconds
AUC ROC: 0.984283


Results scoring model
   AUC ROC   = 0.984659
   AUC PR    = 0.282236
   CLL	      = -0.186898
   Precision = 0.255906 at threshold = 0.5
   Recall    = 0.769231
   F1        = 0.384047


Total scoring time: 268.762 seconds
Refined model CLL: -0.186898


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984283
   AUC PR    = 0.285037
   CLL	      = -0.183834
   Precision = 0.331633 at threshold = 0.5
   Recall    = 0.747126
   F1        = 0.459364


Total learning time: 514.988 seconds
Total inference time: 65.784 seconds
AUC ROC: 0.984283
Total revision time: 514.988
Best scored revision CLL: -0.186898


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:18:24
{'AUC ROC': 0.984283, 'AUC PR': 0.285037, 'CLL': -0.183834, 'Precision': [0.331633, 0.5], 'Recall': 0.747126, 'F1': 0.459364, 'Learning time': 514.988, 'Inference time': 65.784, 'parameter_0.6': {'AUC ROC': 0.967016, 'AUC PR': 0.18915, 'CLL': -0.200706, 'Precision': [0.261111, 0.5], 'Recall': 0.54023, 'F1': 0.35206, 'Learning time': 28.538, 'Inference time': 31.805}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8126943896449664;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | else return -0.1418510649004885;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15430278125335947;  // std dev = 7.362, 260.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=77 */
%   | | | else return 0.19148226843284524;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6569734122109543;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6130354361081441;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.6975635951196787;  // std dev = 1.392, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6852101282885115;  // std dev = 2.799, 63.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | | | else return -0.1629513749435566;  // std dev = 0.020, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.20182723102778943;  // std dev = 5.133, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
%   | | | else return 0.1474912055172628;  // std dev = 2.746, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.505314992622876;  // std dev = 1.328, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5669626350150704;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.48405864621366484;  // std dev = 3.544, 91.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=71 */
%   | else return -0.13217766442090403;  // std dev = 0.559, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5644106725418162;  // std dev = 0.031, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5737743066084533;  // std dev = 0.044, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | | else return -0.11231637819360611;  // std dev = 8.16e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.16422811615618615;  // std dev = 5.801, 150.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.43562952304350155;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.3075940611992288;  // std dev = 0.930, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.43056826618161853;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.38764131756308434;  // std dev = 1.392, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.44338934886124837;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4035123234106735;  // std dev = 1.116, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.009740192915404462;  // std dev = 3.792, 314.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=57 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.11538313212047041;  // std dev = 4.365, 149.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=50 */
%   | | | else return 0.11175323189727478;  // std dev = 5.677, 146.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3338225420751143;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3368992694830886;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3840629710399043;  // std dev = 1.087, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return 0.39336112321376177;  // std dev = 1.069, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.10444604966215329;  // std dev = 0.267, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.5469003175496867;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4251155896036849;  // std dev = 0.279, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.08556083930552612;  // std dev = 4.381, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
%   | | | else return 0.07307863625493177;  // std dev = 5.757, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.259824763564239;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.060197905736496006;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.22253360177243064;  // std dev = 0.833, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, G) )
%   | then return 0.00985113108451156;  // std dev = 3.618, 320.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=86 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4548565278806483;  // std dev = 2.325, 59.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return -0.15013279083831743;  // std dev = 0.019, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06356076517427155;  // std dev = 5.884, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18495236969321963;  // std dev = 1.731, 48.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.01538714563386108;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2700965293423202;  // std dev = 0.596, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.01599060183942916;  // std dev = 6.490, 447.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=114 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.018643647961125897;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2279053688979471;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.01723134338056487;  // std dev = 2.171, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.04621375304300736;  // std dev = 1.525, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.07380198036855858;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18284850489482707;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10094368799703818;  // std dev = 1.508, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   else if ( interaction(A, F) )
%   | then return 0.0030991185032352934;  // std dev = 3.471, 330.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=86 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.054236216326445784;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.032079234651375486;  // std dev = 6.142, 258.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=82 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.033417024889003555;  // std dev = 1.520, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.008265380353037791;  // std dev = 2.907, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.06248298208668478;  // std dev = 1.247, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.027590364837738218;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.12643291759467387;  // std dev = 0.901, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.2988812985415417;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18801178955064762;  // std dev = 0.678, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.014972888848083496;  // std dev = 0.217, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0076205106389528;  // std dev = 3.323, 312.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03643128478246312;  // std dev = 6.054, 239.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=77 */
%   | | | else return 0.04371959896021959;  // std dev = 3.166, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.0688432776355085;  // std dev = 1.336, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1594879198072373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.03504541581528689;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.16467762524089266;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return -0.8117131883380961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1095782004197339;  // std dev = 0.326, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.14015336441497594;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28763558675262696;  // std dev = 0.173, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.02749040559964269;  // std dev = 7.463, 601.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=181 */


Results
   AUC ROC   = 0.94561
   AUC PR    = 0.2492
   CLL	      = -0.206722
   Precision = 0.204013 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.316062


Total learning time: 8.278 seconds
Total inference time: 10.857 seconds
AUC ROC: 0.94561


Results scoring model
   AUC ROC   = 0.962248
   AUC PR    = 0.194747
   CLL	      = -0.200042
   Precision = 0.153513 at threshold = 0.5
   Recall    = 0.786667
   F1        = 0.256894


Total scoring time: 26.858 seconds
Parameter learned model CLL: -0.200042


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 23], 'false,true,true,true': [1.382, 2, 42], 'false,true,true,false': [1.383, 2, 44], 'false,true,false': [0.0, 222, 0], 'false,false,true': [0.0, 0, 10], 'false,false,false,true': [7.362, 183, 77], 'false,false,false,false': [3.742, 42, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [5.96e-08, 0, 16], 'true,false': [0.968, 1, 15], 'false,true,true,true': [1.629, 3, 23], 'false,true,true,false': [1.392, 2, 63], 'false,true,false': [0.0, 232, 0], 'false,false,true,true': [2.799, 9, 54], 'false,false,true,false': [0.02, 81, 0], 'false,false,false,true': [5.133, 73, 43], 'false,false,false,false': [2.746, 24, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [1.328, 3, 29], 'true,true,false,true': [0.009, 0, 5], 'true,true,false,false': [3.544, 20, 71], 'true,false': [0.559, 206, 0], 'false,true': [0.031, 0, 17], 'false,false,true,true': [0.044, 0, 49], 'false,false,true,false': [8.16e-08, 133, 0], 'false,false,false,true': [5.801, 96, 54], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.035, 0, 16], 'true,false,true': [0.93, 1, 8], 'true,false,false': [0.0, 0, 7], 'false,true,true': [1.392, 2, 12], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.116, 2, 26], 'false,false,true,false': [3.792, 257, 57], 'false,false,false,true': [4.365, 99, 50], 'false,false,false,false': [5.677, 98, 48]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.03, 0, 16], 'true,false': [0.035, 0, 15], 'false,true,true,true': [1.087, 1, 53], 'false,true,true,false': [1.069, 1, 33], 'false,true,false': [0.267, 217, 0], 'false,false,true,true': [1.05e-08, 0, 3], 'false,false,true,false': [0.279, 0, 7], 'false,false,false,true': [4.381, 103, 50], 'false,false,false,false': [5.757, 107, 48]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.012, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.815, 1, 2], 'true,false': [0.833, 1, 18], 'false,true': [3.618, 234, 86], 'false,false,true,true': [2.325, 5, 54], 'false,false,true,false': [0.019, 107, 0], 'false,false,false,true': [5.884, 111, 54], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [1.731, 4, 44], 'true,true,false,true': [0.508, 3, 1], 'true,true,false,false': [0.596, 1, 4], 'true,false': [6.49, 333, 114], 'false,true,true': [0.895, 1, 4], 'false,true,false': [0.018, 0, 5], 'false,false,true': [2.171, 86, 32], 'false,false,false,true': [1.525, 22, 10], 'false,false,false,false': [2.708, 22, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [1.508, 3, 23], 'false,true': [3.471, 244, 86], 'false,false,true,true': [1.129, 4, 5], 'false,false,true,false': [6.142, 176, 82], 'false,false,false,true': [1.52, 23, 10], 'false,false,false,false': [2.907, 28, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [1.247, 2, 15], 'true,true,false': [0.739, 1, 3], 'true,false': [0.901, 1, 13], 'false,true,true,true': [0.056, 0, 3], 'false,true,true,false': [0.678, 2, 9], 'false,true,false': [0.217, 1, 1], 'false,false,true': [3.323, 229, 83], 'false,false,false,true': [6.054, 162, 77], 'false,false,false,false': [3.166, 41, 21]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [1.336, 2, 18], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.839, 1, 3], 'true,false,false': [0.042, 0, 9], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.326, 1, 3], 'false,true,false,true': [2.63e-09, 0, 3], 'false,true,false,false': [0.173, 0, 7], 'false,false': [7.463, 420, 181]}]]
[{'': [1.375244004696968e-15, 0.21030947659395605], 'false': [0.1996630506245898, 0.21913805697589697], 'false,false': [-8.881784197001253e-17, 0.21135063117637617], 'false,false,false': [0.20844674556213053, 0.22222222222222235], 'false,true': [0.04246913580246922, -2.360474178482315e-16], 'false,true,true': [0.04338842975206727, 0.04158790170132436], 'true': [-2.220446049250313e-16, -3.089316242435218e-16], 'true,true': [-2.220446049250313e-16, nan]}, {'': [0.030273437499999667, 0.18650640848245353], 'false': [0.14376866208948122, 0.22819550934258695], 'false,false': [0.23142514295868574, 0.22494147603038792], 'false,false,true': [0.12431544048529465, 4.8425172445079564e-06], 'false,false,false': [0.22710278645263016, 0.21551020408163257], 'false,true': [0.051921601182773586, -6.891039463190627e-17], 'false,true,true': [0.10206988368268256, 0.02982085684970238], 'true': [2.220446049250313e-16, 0.05859375000000011]}, {'': [0.13619948799829928, 0.15613145487549154], 'false': [5.7258740787409746e-05, 0.15423641692287124], 'false,false': [0.09262256234742079, 0.22437201285028285], 'false,false,false': [0.22437201285028285, nan], 'true': [0.11219269727331621, 0.001516870167810743], 'true,true': [0.05511469978003475, 0.13114696883226562], 'true,true,false': [1.4928474593212115e-05, 0.1379940535281507], 'false,false,true': [3.865523714198714e-05, 5.0085249231210067e-17]}, {'': [0.030323484144483825, 0.11665573586196358], 'false': [0.1293272187266381, 0.11391505727362541], 'false,true': [0.13835768767420425, 0.0], 'false,false': [0.058512035329780526, 0.17384500935197458], 'false,false,false': [0.12790145308896492, 0.2207259562063065], 'false,false,true': [0.04447152706748825, 0.04578225990290932], 'true': [7.472903700958544e-05, 0.05781687752591963], 'true,false': [0.09616939844374439, -6.344131569286608e-17]}, {'': [7.094484129983735e-05, 0.11537730583953208], 'false': [0.05756987870957831, 0.16940629759902656], 'false,false': [0.01090391430334776, 0.16995473701891498], 'false,false,false': [0.12543527225008247, 0.21382236024622064], 'false,true': [0.02642814430843082, 0.00032855201910602], 'false,true,true': [0.02188073253141962, 0.03359745186879497], 'false,false,true': [3.700743415417188e-17, 0.011127564445089508], 'true': [5.60619360404635e-05, 8.193413299525017e-05]}, {'': [0.0487171094486432, 0.10370852380835704], 'false': [0.040904765322548504, 0.162971645261371], 'false,false': [0.11640901337325166, 0.20981558409990408], 'false,false,false': [0.20981558409990408, nan], 'false,false,true': [0.09159440883775315, 3.2033587419415655e-06], 'true': [0.06467224208630543, 0.03654546482923796], 'true,true': [1.2370790424558061e-05, 0.22128989415715117], 'true,true,false': [nan, 0.22128989415715117]}, {'': [0.09374178412571546, 0.08006127915774161], 'true': [0.06596785628316339, 0.09422187802250943], 'false': [0.09104329016388495, 0.07903423101608137], 'false,true': [0.16012552517740725, 6.582122564268156e-05], 'false,false': [0.039953207595193815, 0.14878969262154867], 'false,false,false': [0.07267598663285581, 0.22222222222222224], 'true,true': [0.0624238586094362, 0.08420613366357406], 'true,true,false': [0.06450097916102752, 0.07113609275488106]}, {'': [0.06810139196882337, 0.09264281337589596], 'false': [0.03650800204837834, 0.14697761247597863], 'false,false': [0.1460920696714834, 0.14988074569866872], 'false,false,false': [0.0700066229944228, 0.2166702230007649], 'false,false,true': [0.14166570912686183, 0.14622992933329168], 'true': [0.0, 0.08747721958993131], 'true,true': [0.0, nan]}, {'': [0.08550836255505401, 0.09361656713301265], 'false': [0.037927690046156086, 0.0943803884220785], 'false,false': [0.03538649428371688, 0.15506255238907693], 'false,false,false': [0.1533356124869349, 0.1616774492125781], 'true': [0.10123404679387142, 0.05797285194618446], 'true,true': [0.0914128549068489, 0.13640627740681968], 'false,true': [0.03515325290325299, 0.023460942871182333], 'false,true,true': [0.0010281021555690883, 0.041826101907244]}, {'': [0.07691559946995781, 0.09264207302930533], 'false': [0.07989192785337333, 0.09266631279949254], 'false,true': [0.15710426702401417, 0.0075627051426127466], 'false,true,true': [0.0, 0.02662476918015149], 'true': [0.08920647068361734, 0.05848982702373758], 'true,false': [0.14679011513151796, 0.00019771636382824123], 'true,false,true': [0.0, 0.17591900018071233], 'false,true,false': [2.3129646346357427e-18, 0.004278562717751051]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;phenotype(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), phenotype(A, I).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8354216623722391;  // std dev = 0.149, 88.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=86 */
%   | | else return -0.14185106490048838;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.09426004621062349;  // std dev = 3.604, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.1914822684328458;  // std dev = 7.348, 243.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=81 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7253818361281785;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6767223874195804;  // std dev = 0.248, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.32403752755822834;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6780605160639759;  // std dev = 1.953, 87.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=83 */
%   | | else return -0.12544463852839186;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6729122586367491;  // std dev = 2.886, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | | else return -0.16349341026981246;  // std dev = 0.058, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12563144280982222;  // std dev = 4.367, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.18378038872666685;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5075973873833919;  // std dev = 0.237, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.4441873664096492;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5072774382767765;  // std dev = 3.385, 88.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=71 */
%   | else return -0.1320998354671448;  // std dev = 0.490, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.597736568460756;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4083613386132896;  // std dev = 0.362, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(A, J) )
%   | | then return 0.0655270573138473;  // std dev = 0.303, 187.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.6892670914654543;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12755590633726863;  // std dev = 5.725, 153.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4527086179696428;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.03574707179826042;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.3997041476788282;  // std dev = 0.222, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.25118349295808995;  // std dev = 1.053, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.5430128272694742;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.07843102788456663;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then return 0.034428533330590844;  // std dev = 0.269, 317.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=77 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return 0.05020389159263724;  // std dev = 3.840, 110.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=28 */
%   | | | else return 0.11442045368362724;  // std dev = 6.313, 232.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=76 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34125607839407845;  // std dev = 0.132, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3817681539160955;  // std dev = 0.145, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.4128122337639402;  // std dev = 0.992, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.5041952315266354;  // std dev = 1.383, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else return -0.11655541080393056;  // std dev = 0.238, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.1440000167341136;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2854615334865615;  // std dev = 0.885, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09617240395289785;  // std dev = 7.041, 286.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=95 */
%   | | | else return -0.029527846617249682;  // std dev = 1.550, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27025551441375356;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.05325347777001521;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), phenotype(A, G) )
%   | | then return -0.271064209113554;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2875827588065089;  // std dev = 0.033, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, H) )
%   | then return 0.03219105961525398;  // std dev = 0.236, 292.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=86 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4634916059211219;  // std dev = 2.222, 59.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=54 */
%   | | | else return -0.14987440561817533;  // std dev = 0.167, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1425437931651029;  // std dev = 4.624, 94.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=37 */
%   | | | else return 0.042987078949411936;  // std dev = 3.222, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then return -0.01621813198474429;  // std dev = 0.229, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.04951927480842428;  // std dev = 3.407, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | | else return -0.007456211270209526;  // std dev = 4.456, 176.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=47 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.2634197252619891;  // std dev = 0.178, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.03292562578456475;  // std dev = 3.811, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.2594539156672239;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, M), interaction(N, A) )
%   | | then if ( interaction(N, P), recursion_proteinclass(P, B) )
%   | | | then return 0.4987640153431721;  // std dev = 0.858, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.17937322225819405;  // std dev = 0.317, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.03194279330857255;  // std dev = 0.287, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.19811972723713156;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06022991640043022;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.29249681912779474;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16881377489676255;  // std dev = 0.206, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, A) )
%   | then return -0.11147622444706148;  // std dev = 0.078, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H), interaction(I, G) )
%   | | | then return 0.29345890470998165;  // std dev = 0.208, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.005845601923516001;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.00917339397687119;  // std dev = 3.766, 295.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=77 */
%   | | | else return 0.05662815840242497;  // std dev = 6.694, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.1394391623611875;  // std dev = 0.204, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.13016084304679132;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.18435617515072564;  // std dev = 0.027, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.23954668923401404;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.19937732591766455;  // std dev = 0.615, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.10090646547387648;  // std dev = 0.772, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return -0.006646765719144028;  // std dev = 3.322, 142.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return -0.008514988106562687;  // std dev = 2.452, 152.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=34 */
%   | | | else return 0.06406525979727756;  // std dev = 6.287, 307.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=108 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.12192738508126229;  // std dev = 0.168, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return -0.25850579702542364;  // std dev = 0.636, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.22837045886219784;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.07663088995425722;  // std dev = 0.315, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1617453806827124;  // std dev = 0.162, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J), interaction(H, I) )
%   | | | then return -0.051434320595626845;  // std dev = 3.423, 145.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=30 */
%   | | | else return 0.0172126369659271;  // std dev = 5.955, 343.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=98 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.013375135694339665;  // std dev = 2.009, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.1215095752299436;  // std dev = 2.870, 69.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=32 */


Results
   AUC ROC   = 0.947047
   AUC PR    = 0.24239
   CLL	      = -0.210427
   Precision = 0.211073 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.324468


Total learning time: 15.933 seconds
Total inference time: 11.384 seconds
AUC ROC: 0.947047


Results scoring model
   AUC ROC   = 0.969492
   AUC PR    = 0.237841
   CLL	      = -0.205386
   Precision = 0.158887 at threshold = 0.5
   Recall    = 0.786667
   F1        = 0.264376


Total scoring time: 28.087 seconds
Refined model CLL: -0.205386


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94561
   AUC PR    = 0.2492
   CLL	      = -0.206722
   Precision = 0.204013 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.316062


Total learning time: 79.156 seconds
Total inference time: 10.857 seconds
AUC ROC: 0.94561
Total revision time: 79.156
Best scored revision CLL: -0.200042


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:20:06
{'AUC ROC': 0.94561, 'AUC PR': 0.2492, 'CLL': -0.206722, 'Precision': [0.204013, 0.5], 'Recall': 0.701149, 'F1': 0.316062, 'Learning time': 79.156, 'Inference time': 10.857, 'parameter_0.8': {'AUC ROC': 0.94561, 'AUC PR': 0.2492, 'CLL': -0.206722, 'Precision': [0.204013, 0.5], 'Recall': 0.701149, 'F1': 0.316062, 'Learning time': 8.278, 'Inference time': 10.857}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8295775065280834;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8015451615146066;  // std dev = 1.682, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | | else return 0.825362049853611;  // std dev = 1.391, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return -0.14185106490048796;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14158842554537143;  // std dev = 7.986, 314.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=89 */
%   | | | else return 0.2102616111558493;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7292880074166382;  // std dev = 0.025, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.7252037016905737;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6603269042750818;  // std dev = 1.362, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.7041405663216709;  // std dev = 1.393, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | else return -0.12544463852839194;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7341952630395069;  // std dev = 2.505, 73.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=66 */
%   | | | else return -0.16222769630391873;  // std dev = 0.046, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16440803997330092;  // std dev = 5.561, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.1819306443773767;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5503112570447276;  // std dev = 0.991, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5613601221013242;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5872047842381534;  // std dev = 2.600, 97.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=88 */
%   | else return -0.1296393336428212;  // std dev = 0.499, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5604359030180477;  // std dev = 0.002, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5547702403668733;  // std dev = 0.996, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return -0.1123163781936063;  // std dev = 4.71e-08, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13828282260937158;  // std dev = 6.290, 185.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3546902729396595;  // std dev = 1.256, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2876454482995978;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.3307516678837501;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4977808342851682;  // std dev = 0.777, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0.1653115303417585;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35524062010029483;  // std dev = 1.272, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.002964319143965153;  // std dev = 4.107, 364.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=73 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.08775530002138072;  // std dev = 4.716, 192.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=61 */
%   | | | else return 0.11269678589673042;  // std dev = 5.999, 165.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3197442174845521;  // std dev = 0.831, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.25145053859705724;  // std dev = 1.238, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3602309811222188;  // std dev = 1.449, 68.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=66 */
%   | | | else return 0.401386469393703;  // std dev = 0.997, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.10449911605706527;  // std dev = 0.293, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.5352860863514886;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2818287932036624;  // std dev = 1.083, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.053830520411194474;  // std dev = 4.720, 214.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=61 */
%   | | | else return 0.07872560011984975;  // std dev = 6.064, 173.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.281457936945127;  // std dev = 0.014, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2830046148945663;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2215119243918092;  // std dev = 1.263, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( interaction(A, G) )
%   | then return 0.012703516438878862;  // std dev = 3.817, 408.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=109 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35359108442855036;  // std dev = 3.370, 80.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=66 */
%   | | | else return -0.14205481804234674;  // std dev = 0.032, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06448241693514602;  // std dev = 6.218, 191.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=61 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18634867545409634;  // std dev = 2.018, 65.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=60 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.007902921270189961;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.39763096145267346;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.017510386906805304;  // std dev = 7.061, 521.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=138 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.23543453378234305;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.03394911013368329;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.02113471154662685;  // std dev = 2.578, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.04498246810180893;  // std dev = 1.659, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.07040559320148039;  // std dev = 2.956, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.197329998563922;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.172334801104986;  // std dev = 1.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( interaction(A, F) )
%   | then return -0.008943112559543439;  // std dev = 4.159, 429.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=109 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2450499279795998;  // std dev = 0.636, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.024334092304898212;  // std dev = 6.606, 320.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=94 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.05798350273241358;  // std dev = 1.600, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.1259985190763663;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14438413576562115;  // std dev = 0.940, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return 0.19115282213881296;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13665988450406552;  // std dev = 0.867, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.0570303957751758;  // std dev = 1.027, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1889613125285035;  // std dev = 0.925, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.004589900014474707;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.006843455306662091;  // std dev = 4.013, 406.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.02873002924252931;  // std dev = 6.471, 305.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=89 */
%   | | | else return 0.03538964943451828;  // std dev = 3.362, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16227181574784966;  // std dev = 0.097, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.14725079673611308;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15940399508091477;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.09306957031094777;  // std dev = 0.977, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return -0.23384366130587386;  // std dev = 0.594, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.22249296423007378;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.152166259031839;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16641324643730443;  // std dev = 1.020, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.010973304778495053;  // std dev = 8.258, 789.000 (wgt'ed) examples reached here.  /* #neg=573 #pos=216 */


Results
   AUC ROC   = 0.945532
   AUC PR    = 0.221381
   CLL	      = -0.197927
   Precision = 0.206081 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.318538


Total learning time: 10.177 seconds
Total inference time: 10.747 seconds
AUC ROC: 0.945532


Results scoring model
   AUC ROC   = 0.965905
   AUC PR    = 0.201318
   CLL	      = -0.193886
   Precision = 0.161723 at threshold = 0.5
   Recall    = 0.812057
   F1        = 0.269729


Total scoring time: 33.465 seconds
Parameter learned model CLL: -0.193886


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.961, 1, 12], 'true,true,false': [0.0, 1, 0], 'true,false': [0.986, 1, 34], 'false,true,true,true': [1.682, 3, 50], 'false,true,true,false': [1.391, 2, 59], 'false,true,false': [0.0, 284, 0], 'false,false,true': [0.0, 0, 13], 'false,false,false,true': [7.986, 225, 89], 'false,false,false,false': [4.025, 46, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.025, 0, 28], 'true,false': [0.0, 0, 18], 'false,true,true,true': [1.362, 2, 27], 'false,true,true,false': [1.393, 2, 82], 'false,true,false': [0.0, 278, 0], 'false,false,true,true': [2.505, 7, 66], 'false,false,true,false': [0.046, 130, 0], 'false,false,false,true': [5.561, 97, 48], 'false,false,false,false': [2.904, 24, 13]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.991, 1, 38], 'true,true,false,true': [0.023, 0, 8], 'true,true,false,false': [2.6, 9, 88], 'true,false': [0.499, 241, 0], 'false,true': [0.002, 0, 25], 'false,false,true,true': [0.996, 1, 62], 'false,false,true,false': [4.71e-08, 162, 0], 'false,false,false,true': [6.29, 124, 61], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [1.256, 2, 23], 'true,false,true': [1.316, 2, 13], 'true,false,false': [0.953, 1, 10], 'false,true,true': [0.777, 1, 17], 'false,true,false': [0.852, 1, 3], 'false,false,true,true': [1.272, 5, 29], 'false,false,true,false': [4.107, 291, 73], 'false,false,false,true': [4.716, 131, 61], 'false,false,false,false': [5.999, 112, 53]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.831, 1, 28], 'true,false': [1.238, 2, 18], 'false,true,true,true': [1.449, 2, 66], 'false,true,true,false': [0.997, 1, 43], 'false,true,false': [0.293, 299, 0], 'false,false,true,true': [0.0, 0, 5], 'false,false,true,false': [1.083, 1, 8], 'false,false,false,true': [4.72, 153, 61], 'false,false,false,false': [6.064, 120, 53]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.014, 0, 17], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 2], 'true,false': [1.263, 2, 27], 'false,true': [3.817, 299, 109], 'false,false,true,true': [3.37, 14, 66], 'false,false,true,false': [0.032, 115, 0], 'false,false,false,true': [6.218, 130, 61], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [2.018, 5, 60], 'true,true,false,true': [0.757, 2, 2], 'true,true,false,false': [0.056, 0, 6], 'true,false': [7.061, 383, 138], 'false,true,true': [0.009, 0, 4], 'false,true,false': [1.191, 2, 5], 'false,false,true': [2.578, 99, 42], 'false,false,false,true': [1.659, 27, 12], 'false,false,false,false': [2.956, 25, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [1.153, 2, 34], 'false,true': [4.159, 320, 109], 'false,false,true,true': [0.636, 1, 8], 'false,false,true,false': [6.606, 226, 94], 'false,false,false,true': [1.6, 23, 12], 'false,false,false,false': [2.778, 19, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.94, 1, 24], 'true,true,false': [0.051, 0, 5], 'true,false': [0.867, 1, 17], 'false,true,true,true': [1.027, 1, 5], 'false,true,true,false': [0.925, 1, 12], 'false,true,false': [0.815, 1, 3], 'false,false,true': [4.013, 304, 102], 'false,false,false,true': [6.471, 216, 89], 'false,false,false,false': [3.362, 50, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.097, 0, 29], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.019, 0, 3], 'true,false,false': [0.977, 1, 12], 'false,true,true,true': [0.594, 1, 1], 'false,true,true,false': [0.091, 0, 6], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [1.02, 1, 10], 'false,false': [8.258, 573, 216]}]]
[{'': [0.05747605164514856, 0.2085805913992092], 'false': [0.19886492765334376, 0.21727355369814155], 'false,false': [-2.7328566760003855e-16, 0.2084263788159913], 'false,false,false': [0.20310154570165206, 0.22812933941678357], 'false,true': [0.04193598030163421, -1.2509555207044018e-17], 'true': [0.1224489795918365, 0.027755102040816736], 'true,true': [0.07100591715976314, 0.0], 'false,true,true': [0.053399786400854646, 0.03171190540177315]}, {'': [1.751195194528251e-05, 0.18222214537194512], 'false': [0.147425621027095, 0.21615737152129874], 'false,false': [0.21597699708214457, 0.21632615729061414], 'false,false,false': [0.21330949802418853, 0.22790357925493093], 'false,false,true': [0.08596059816691463, 1.620122704541525e-05], 'false,true': [0.033976568840144654, -7.667727364317628e-17], 'false,true,true': [0.06401233632342816, 0.02311442748629734], 'true': [2.2242071018181114e-05, -9.868649107779169e-17]}, {'': [0.1373631596460952, 0.1518997797846658], 'false': [2.494292943922005e-07, 0.1491500158427241], 'false,false': [0.09412265359162265, 0.21384036127972383], 'false,false,false': [0.21384036127972383, nan], 'true': [0.05403201183191876, 0.0010345100854981853], 'false,false,true': [0.01574905345883061, 1.3706457094137734e-17], 'true,true': [0.025191805196854808, 0.0644137492601871], 'true,true,false': [6.474887795687723e-05, 0.06966999214577985]}, {'': [0.08352729528932967, 0.11082865898454154], 'false': [0.07693339933204178, 0.10787788953809292], 'false,false': [0.05612946790343241, 0.16325747632447504], 'false,false,false': [0.11583687391818125, 0.21810325086383955], 'true': [0.06308535641203385, 0.1020152706209283], 'true,false': [0.11545830231367568, 0.08261185636323737], 'false,true': [0.03357802240924057, 0.18159418252268966], 'false,false,true': [0.04755646151166232, 0.046328855951051774]}, {'': [0.04650158852672386, 0.10383667589913838], 'false': [0.05369243935940479, 0.1540090267152593], 'false,false': [0.09859630442678392, 0.15271476861218708], 'false,false,false': [0.10408840954974972, 0.2125225812697482], 'false,false,true': [-4.4408920985006264e-17, 0.13042895787625086], 'false,true': [0.028022028907758116, 0.0002874831420202771], 'true': [0.023790775015236975, 0.07667192585912151], 'false,true,true': [0.03088147332282516, 0.02257452462285069]}, {'': [0.03411566088946447, 0.09657952002352094], 'false': [0.035712621233431115, 0.15962240576458941], 'false,false': [0.11768311943012383, 0.2024348438033967], 'false,false,false': [0.2024348438033967, nan], 'false,false,true': [0.1419601993682065, 9.132144191483975e-06], 'true': [1.1993248298282136e-05, 0.05502926946365375], 'true,true': [1.1504234388605345e-05, 1.4009465712283564e-05], 'true,true,false': [nan, 1.4009465712283564e-05]}, {'': [0.09552121277645301, 0.08656424850239498], 'true': [0.0672185769926879, 0.09568758396529375], 'false': [0.14575664016856596, 0.08353419016147226], 'false,true': [1.8499571879659893e-05, 0.202647378521668], 'false,false': [0.047117840344128435, 0.14936197683418245], 'false,false,false': [0.07059642481146582, 0.22987294191438978], 'true,true': [0.06266966555361665, 0.09412742013615052], 'true,true,false': [0.14339582575136167, 0.0005266382708846717]}, {'': [0.027817429010883004, 0.08827102350704019], 'false': [0.040320538740283796, 0.13894413498435354], 'false,false': [0.13514890612813327, 0.15457988290759336], 'false,false,false': [0.07316489417062981, 0.24121093749999972], 'false,false,true': [0.04487378930127409, 0.13635525147564176], 'true': [-2.312964634635743e-17, 0.03693371537384122], 'true,true': [-2.312964634635743e-17, nan]}, {'': [0.034356055003633, 0.08966528299848647], 'false': [0.1179894874217786, 0.08848307289238654], 'false,true': [0.10431200900058826, 0.16613353552263918], 'false,true,true': [0.17567252392707755, 0.06587982879144288], 'false,false': [0.03966784061920806, 0.1399354312962373], 'false,false,false': [0.13728862434648953, 0.15066351574704795], 'true': [0.029827093900104535, 0.04175379828184768], 'true,true': [0.03532581075389811, 0.000510751276908461]}, {'': [0.02144328898159074, 0.08669167094874491], 'false': [0.07863713797330212, 0.08644069543777638], 'false,true': [0.08425463214449436, 0.0743290799403896], 'false,true,true': [0.1766674017718237, 0.0013895966506673185], 'false,true,false': [0.0, 0.09455715220040277], 'true': [0.00032358781391248403, 0.0537929295113099], 'true,false': [0.00010476828227075908, 0.07339251462245695], 'true,false,true': [0.0, 0.0001155337117813617]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), phenotype(A, I).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), interaction(G, A) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8059750220560326;  // std dev = 0.222, 115.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=109 */
%   | | else return -0.14185106490048788;  // std dev = 6.66e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.183545760496337;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.13155717479988818;  // std dev = 7.283, 267.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=73 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7341372762154696;  // std dev = 0.150, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.6668418332635858;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.6122351385801822;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.7193558816142377;  // std dev = 0.995, 95.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=94 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6994465558639592;  // std dev = 2.933, 76.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=66 */
%   | | | else return -0.1611118817154562;  // std dev = 0.039, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.23118950534224664;  // std dev = 4.305, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
%   | | | else return 0.10673435236847316;  // std dev = 4.546, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5291693721902664;  // std dev = 0.219, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.48998660258218396;  // std dev = 0.639, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5133602816432056;  // std dev = 3.593, 108.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=88 */
%   | else return -0.1287256453916722;  // std dev = 0.454, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4907377395230189;  // std dev = 0.265, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5548482527221159;  // std dev = 0.970, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return -0.11231637819360644;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.13809076945766147;  // std dev = 4.504, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | | | else return 0.18217063533662428;  // std dev = 4.247, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44532122974690475;  // std dev = 0.175, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12197838788777846;  // std dev = 0.481, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.016814088090581065;  // std dev = 1.502, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return -0.07811581697716899;  // std dev = 0.536, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.06330714190206002;  // std dev = 3.854, 228.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=71 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6114784771932723;  // std dev = 1.321, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return -0.16858292325397653;  // std dev = 0.882, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10326792320028473;  // std dev = 6.340, 282.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=95 */
%   | | | else return 0.2134700974699223;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.33742701507707307;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.1530499765663819;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.4054732612415558;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.3751327733441844;  // std dev = 0.161, 112.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=109 */
%   | | else return -0.10564189639689434;  // std dev = 0.282, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.5397499386365302;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.31372993508601454;  // std dev = 0.857, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06345427089744092;  // std dev = 7.148, 365.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=109 */
%   | | | else return -0.03772086038572047;  // std dev = 1.824, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.23482375207477224;  // std dev = 0.912, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.019580857030529808;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.03432291935117534;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2976047150772985;  // std dev = 0.229, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, G) )
%   | then return 0.013448252626832843;  // std dev = 0.197, 390.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=109 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3776352260392241;  // std dev = 2.918, 76.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=66 */
%   | | | else return -0.13388606576299936;  // std dev = 0.138, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.05546919977631949;  // std dev = 3.360, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.11500425581116692;  // std dev = 4.663, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2126527747635141;  // std dev = 0.253, 77.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=68 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.09722960307846319;  // std dev = 0.323, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.27505727107824585;  // std dev = 0.178, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.031967532745297754;  // std dev = 6.560, 432.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=130 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17783850221377667;  // std dev = 0.257, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6094067242345431;  // std dev = 0.395, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.231082001727647;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 4.4737124491489843E-4;  // std dev = 1.342, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.04106906506196373;  // std dev = 3.386, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19977955508861825;  // std dev = 0.090, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), interaction(F, D) )
%   | | | then return 0.23298233046965508;  // std dev = 1.220, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.12052857069372536;  // std dev = 1.066, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.0867587207575174;  // std dev = 0.155, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.005389762889575163;  // std dev = 3.179, 281.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=73 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(J, I) )
%   | | | then return 0.03362277864316994;  // std dev = 4.846, 203.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=65 */
%   | | | else return 0.09611177220812811;  // std dev = 3.201, 74.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=30 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.05488518891832985;  // std dev = 3.215, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return -0.026289282099209957;  // std dev = 1.953, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.15777682296333778;  // std dev = 0.097, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.030631888726751377;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04356485716760313;  // std dev = 0.713, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1391481656692337;  // std dev = 0.235, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then return -0.017766914843784308;  // std dev = 0.179, 312.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=72 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( recursion_proteinclass(G, B), enzyme(A, I) )
%   | | | then return 0.32534091468537685;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03493398379866717;  // std dev = 3.338, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.025150734297799696;  // std dev = 3.562, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.06509234367239126;  // std dev = 5.222, 226.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=83 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13273474341747346;  // std dev = 0.149, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.17442685816260306;  // std dev = 0.039, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, E), phenotype(A, G) )
%   | | | then return -0.3199886688533734;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.17425047599405757;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2649812263094614;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.12047038870042581;  // std dev = 3.563, 127.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=70 */
%   | | | else return -0.12799618753633238;  // std dev = 0.886, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.029111421459400433;  // std dev = 3.461, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
%   | | | else return 0.001930933487815033;  // std dev = 5.630, 295.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=83 */


Results
   AUC ROC   = 0.974655
   AUC PR    = 0.350187
   CLL	      = -0.184849
   Precision = 0.239216 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.356725


Total learning time: 24.643 seconds
Total inference time: 13.008 seconds
AUC ROC: 0.974655


Results scoring model
   AUC ROC   = 0.983932
   AUC PR    = 0.303992
   CLL	      = -0.180286
   Precision = 0.179327 at threshold = 0.5
   Recall    = 0.812057
   F1        = 0.293778


Total scoring time: 42.203 seconds
Refined model CLL: -0.180286


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974655
   AUC PR    = 0.350187
   CLL	      = -0.184849
   Precision = 0.239216 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.356725


Total learning time: 110.488 seconds
Total inference time: 13.008 seconds
AUC ROC: 0.974655
Total revision time: 110.488
Best scored revision CLL: -0.180286


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 00:22:21
{'AUC ROC': 0.974655, 'AUC PR': 0.350187, 'CLL': -0.184849, 'Precision': [0.239216, 0.5], 'Recall': 0.701149, 'F1': 0.356725, 'Learning time': 110.488, 'Inference time': 13.008, 'parameter_1.0': {'AUC ROC': 0.945532, 'AUC PR': 0.221381, 'CLL': -0.197927, 'Precision': [0.206081, 0.5], 'Recall': 0.701149, 'F1': 0.318538, 'Learning time': 10.177, 'Inference time': 10.747}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.7748156017661786;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12130682983635446;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5728471759330269;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6820742250894303;  // std dev = 1.371, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8427314077493018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.15726859225069822;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.20776936478113897;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.57570869470511;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39858620326966504;  // std dev = 1.005, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return -0.13919082323604093;  // std dev = 0.426, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5323204341200408;  // std dev = 1.373, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.07250849210634057;  // std dev = 1.713, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.2539791033106701;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.47643881042970143;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05340884415467279;  // std dev = 2.807, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.09365957976025874;  // std dev = 0.770, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.1726883367378915;  // std dev = 1.579, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3420193050761649;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3451684055875102;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.32939680703233565;  // std dev = 1.095, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.3609458533351318;  // std dev = 1.352, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return -0.10776748294032304;  // std dev = 0.103, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return -0.051692827919381054;  // std dev = 0.767, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10640315363014075;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27901969491032375;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29717065923208386;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.05090701281951589;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.044883552229913956;  // std dev = 2.414, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6416948696112146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10537416350789636;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07388977915442424;  // std dev = 1.638, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.26404327326406285;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -2.4280753106205964E-4;  // std dev = 2.153, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.241114719318686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.022960532670205622;  // std dev = 1.979, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return -0.0766303059828805;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.16221947754776894;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18356290999402136;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20416766298144742;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then return 0.003027701429788798;  // std dev = 2.669, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10767939107714501;  // std dev = 1.605, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.07138096362486594;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return -0.14136175935126088;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15969520748420565;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.053259964760692835;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return 0.022373938286351428;  // std dev = 2.538, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.08017790987614756;  // std dev = 1.624, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.10563540090557681;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.13941417455428223;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22737527435992977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17508312283170008;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0023417484323280877;  // std dev = 3.166, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */


Results
   AUC ROC   = 0.97108
   AUC PR    = 0.14715
   CLL	      = -0.193477
   Precision = 0.079721 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.147564


Total learning time: 3.902 seconds
Total inference time: 20.291 seconds
AUC ROC: 0.97108


Results scoring model
   AUC ROC   = 0.984244
   AUC PR    = 0.364568
   CLL	      = -0.163089
   Precision = 0.180812 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.302469


Total scoring time: 7.108 seconds
Parameter learned model CLL: -0.163089


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 1, 0], 'true,false': [2.98e-08, 0, 6], 'false,true,true,true': [1.338, 2, 17], 'false,true,true,false': [1.354, 2, 22], 'false,true,false': [7.3e-08, 75, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [0.0, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.917, 1, 5], 'false,true,true,false': [1.371, 2, 34], 'false,true,false': [0.0, 98, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [1.592, 7, 4], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.07, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.005, 2, 6], 'true,false': [0.426, 30, 0], 'false,true': [0.0, 0, 4], 'false,false,true,true': [1.373, 2, 33], 'false,false,true,false': [6.14e-08, 76, 0], 'false,false,false,true': [1.713, 12, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true': [0.917, 1, 5], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 2], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.028, 0, 6], 'false,false,true,false': [2.807, 82, 33], 'false,false,false,true': [0.77, 18, 1], 'false,false,false,false': [1.579, 7, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), phenotype(A, K)'}, {'true,true': [0.037, 0, 6], 'true,false': [0.06, 0, 3], 'false,true,true,true': [1.095, 2, 15], 'false,true,true,false': [1.352, 2, 24], 'false,true,false': [0.103, 94, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.767, 7, 1], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 2], 'true,false': [0.894, 1, 4], 'false,true': [2.414, 80, 39], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.022, 13, 0], 'false,false,false,true': [1.638, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'phenotype(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'phenotype(A, I), interaction(A, J)'}, {'true,true,true': [0.157, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [2.153, 54, 14], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [1.979, 60, 25], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [3.73e-09, 3, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.058, 0, 6], 'false,true': [2.669, 98, 39], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.605, 11, 5], 'false,false,false,true': [0.0, 2, 0], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)', 'false,false,false': 'interaction(A, G), interaction(G, H)'}, {'true,true,true': [0.012, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.824, 1, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [2.538, 79, 39], 'false,false,false,true': [1.624, 11, 5], 'false,false,false,false': [0.067, 6, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [0.011, 0, 6], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.002, 0, 2], 'false,true': [0.0, 0, 0], 'false,false': [3.166, 112, 44]}]]
[{'': [0.08999999999999977, 0.21551020408163374], 'false': [0.22127262280953883, 0.17561983471074363], 'false,true': [0.08436992969172648, 7.105427357601002e-17], 'false,false': [nan, 0.17561983471074363], 'false,false,false': [0.19390581717451505, 0.0], 'true': [0.18750000000000006, 1.4802973661668753e-16], 'true,true': [1.4802973661668753e-16, 0.0], 'false,true,true': [0.09418282548476423, 0.07638888888888928]}, {'': [0.0, 0.1568972011059836], 'false': [0.15155753079485745, 0.19828343338538235], 'false,false': [0.15999999999999998, 0.20941211328639261], 'false,false,false': [0.23040526266689473, 0.0], 'false,false,true': [0.0, 0.0], 'false,true': [0.0662012128655569, -1.3594567648471304e-17], 'false,true,true': [0.14006892348597536, 0.05218556372395157], 'true': [-6.344131569286608e-17, 0.0]}, {'': [0.11132844071465532, 0.11929973982548177], 'false': [0.0, 0.1164053623718042], 'false,false': [0.10669822556634957, 0.18345146181162733], 'false,false,false': [0.18345146181162733, nan], 'true': [0.0801319061320118, 0.006055947813528029], 'false,false,true': [0.05386054789236897, 4.966787215428332e-17], 'true,true': [0.000827614917726723, 0.1261648201260262], 'true,true,false': [nan, 0.12616482012602614]}, {'': [0.0905306809065198, 0.0834429289881286], 'true': [0.14018705760709008, 0.0], 'false': [nan, 0.08344292898812856], 'false,false': [0.07355635712361171, 0.11934905729979123], 'false,false,false': [0.031167099495908065, 0.2267339133907794], 'false,false,true': [0.0001348543976227671, 0.0685132746835167], 'true,false': [0.0, 0.0]}, {'': [0.0005522884952504636, 0.0800342797884023], 'false': [0.06707980207832703, 0.1687202748178343], 'false,false': [nan, 0.1687202748178343], 'false,false,false': [0.07347075008198801, 0.22222222222222235], 'false,true': [0.07065151942920188, 0.00011249876394198284], 'false,true,true': [0.0705948115099493, 0.07029509025422645], 'true': [0.0002270038814213652, 0.0011962465002217833]}, {'': [0.09390824558515029, 0.06277854635807399], 'true': [0.00021085280371827553, 0.15990539783919802], 'false': [0.04898600532584715, 0.12249529275102986], 'false,false': [0.03705159546374624, 0.20629239961204934], 'false,false,false': [0.20629239961204934, nan], 'false,false,true': [0.0, 3.656531704651206e-05], 'true,true': [-9.25185853854297e-18, 0.00032945750580980204], 'true,true,false': [nan, 0.00032945750580980204]}, {'': [0.06693607273825468, 0.04527220058314885], 'true': [0.0018841073507901856, 0.0681624442744185], 'false': [0.0, 0.04521579800661442], 'false,false': [0.046073355423306456, 0.001373532429218234], 'true,true': [0.0018841073507901856, nan], 'false,false,false': [0.0, 4.625929269271485e-18], 'false,true': [nan, 0.0]}, {'': [0.00046339357929356704, 0.06316983549079111], 'false': [0.05198798342974435, 0.13642832779773445], 'false,false': [0.16106578282676545, 0.001224327942624854], 'false,false,true': [nan, 0.16106578282676545], 'false,false,false': [0.0, 0.0], 'true': [0.0, 0.0005535717537160645], 'true,true': [0.0, nan]}, {'': [0.07884974876874554, 0.06596326206649453], 'true': [2.5440465825069907e-05, 0.16987626799161357], 'false': [nan, 0.06596326206649435], 'false,false': [0.05458060007944049, 0.12697290224258165], 'false,false,false': [0.16488849378727297, 0.0007544134225571514], 'true,true': [2.5440465825069907e-05, nan]}, {'': [0.0008432969423366126, 0.06423469220467193], 'false': [nan, 0.0642346922046719], 'true': [2.0343537649875065e-05, 0.0006094874375280566], 'true,false': [0.0, 2.7414524749712343e-06], 'true,false,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(G, A).;true;true
3;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false,false;interaction(H, A).;true;true
6;false,false,false;phenotype(A, I), interaction(A, J).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
7;false,false,false;phenotype(A, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(F, A).;true;true
8;false,false;interaction(A, G), interaction(G, H).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4323652531738071;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.43973995248173076;  // std dev = 1.705, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.7223607075140879;  // std dev = 0.046, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36018785062144343;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.13775964782853292;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.29744840516913434;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5778250003351602;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6544460384274782;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 7.45e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.12405147658988948;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5726963098099023;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4883955098730541;  // std dev = 1.616, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.19409374051120806;  // std dev = 1.269, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.14058575355355124;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42624329711823106;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.12326021444237417;  // std dev = 0.759, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.47493058733067417;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.015242441477600637;  // std dev = 2.123, 77.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=15 */
%   | | | else return 0.11682579639789849;  // std dev = 1.853, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.26643920745718885;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09528353235923816;  // std dev = 0.762, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.057073944570584526;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17012994581380436;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3143241973053347;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3520142495450876;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4634494345732743;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.38693744277169867;  // std dev = 0.794, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.10835378613140952;  // std dev = 0.014, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I), phenotype(H, J) )
%   | | | then return 0.3408906330661612;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07700716243273786;  // std dev = 0.888, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 9.79913132484883E-4;  // std dev = 0.750, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.16542927285384182;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2594227320563041;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.16356360817599647;  // std dev = 1.577, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.10139000797085665;  // std dev = 0.511, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.1030170603551408;  // std dev = 1.256, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | | else return 0.012555656667104516;  // std dev = 0.840, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.16403594334502994;  // std dev = 0.544, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.1226791817875883;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.11349412358540745;  // std dev = 1.151, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.24768748531175797;  // std dev = 0.937, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.23983789649742046;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09837488307287072;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return -0.048485525954580486;  // std dev = 0.850, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.0435789948167724;  // std dev = 0.858, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.0906077350752822;  // std dev = 1.327, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return -0.007693913985785651;  // std dev = 0.961, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.24957302687275784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(L, A) )
%   | | then return 0.022640094575614046;  // std dev = 0.215, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19065587640546924;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.028500202995976102;  // std dev = 1.571, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.06506302601550186;  // std dev = 0.682, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( location(A, H) )
%   | | | then return 0.029939837463455566;  // std dev = 1.684, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.03726010835803282;  // std dev = 0.357, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.06918454806493286;  // std dev = 1.309, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.2598574838602784;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10765134630049072;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15940307036598528;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17037976426995613;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.1502976648768756;  // std dev = 0.330, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.007534356233814811;  // std dev = 0.577, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.03971899576448307;  // std dev = 1.146, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.01817175891624416;  // std dev = 1.596, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.06528116914498366;  // std dev = 0.692, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.24800521889666688;  // std dev = 1.181, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.0795214764653938;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.13925101448785768;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14770532080675092;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( phenotype(E, G), enzyme(E, F) )
%   | | then return 0.23745054675742452;  // std dev = 0.660, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.10959331063359877;  // std dev = 0.695, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.1026832946003962;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.19993165492429898;  // std dev = 0.610, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.02922732745587844;  // std dev = 1.304, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.2550892292722741;  // std dev = 0.497, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.015844409676963458;  // std dev = 1.989, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */


Results
   AUC ROC   = 0.974588
   AUC PR    = 0.142182
   CLL	      = -0.185946
   Precision = 0.084041 at threshold = 0.5
   Recall    = 0.951923
   F1        = 0.154446


Total learning time: 7.038 seconds
Total inference time: 19.675 seconds
AUC ROC: 0.974588


Results scoring model
   AUC ROC   = 0.989515
   AUC PR    = 0.387422
   CLL	      = -0.160604
   Precision = 0.212121 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.34507


Total scoring time: 6.995 seconds
Refined model CLL: -0.160604


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.974588
   AUC PR    = 0.142182
   CLL	      = -0.185946
   Precision = 0.084041 at threshold = 0.5
   Recall    = 0.951923
   F1        = 0.154446


Total learning time: 25.043000000000003 seconds
Total inference time: 19.675 seconds
AUC ROC: 0.974588
Total revision time: 25.043000000000003
Best scored revision CLL: -0.160604


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:23:27
{'AUC ROC': 0.974588, 'AUC PR': 0.142182, 'CLL': -0.185946, 'Precision': [0.084041, 0.5], 'Recall': 0.951923, 'F1': 0.154446, 'Learning time': 25.043000000000003, 'Inference time': 19.675, 'parameter_0.2': {'AUC ROC': 0.97108, 'AUC PR': 0.14715, 'CLL': -0.193477, 'Precision': [0.079721, 0.5], 'Recall': 0.990385, 'F1': 0.147564, 'Learning time': 3.902, 'Inference time': 20.291}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.8211118980624748;  // std dev = 0.981, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.7943191478654695;  // std dev = 1.676, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20814893509951235;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5528067455442877;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6379008081339851;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6828767335115111;  // std dev = 1.691, 63.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | else return -0.12544463852839127;  // std dev = 5.58e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6950090503767482;  // std dev = 1.040, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.16610695263388953;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12344951134324017;  // std dev = 2.452, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.19135975509252742;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5611792150874118;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5898844971406307;  // std dev = 0.773, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.128615099072157;  // std dev = 0.312, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.567885261588699;  // std dev = 0.068, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.39849055606087713;  // std dev = 3.268, 72.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=59 */
%   | | | else return -0.1123163781936064;  // std dev = 6.32e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.09404969866593607;  // std dev = 2.613, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.42287210767794925;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.41447223645819886;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4554085525125888;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.6735646043710659;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5443176079308;  // std dev = 0.183, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4064395487737268;  // std dev = 0.959, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.03559585513987192;  // std dev = 3.910, 231.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=58 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.13027870686968443;  // std dev = 1.485, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.18210751316115656;  // std dev = 2.224, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31855037728598407;  // std dev = 0.000543, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21599208749890314;  // std dev = 0.920, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3575501975286545;  // std dev = 1.435, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return 0.37506123150903575;  // std dev = 1.945, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | else return -0.10530841310429406;  // std dev = 0.095, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.04619834899172326;  // std dev = 0.790, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.41827114873370563;  // std dev = 0.179, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.07490361162808404;  // std dev = 1.504, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.022379669209185618;  // std dev = 2.443, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.25346362012071333;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28747612197738237;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21041328981680268;  // std dev = 0.799, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(G, A) )
%   | then return 0.016758360893473757;  // std dev = 3.705, 247.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=70 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4863964790917487;  // std dev = 0.292, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1505364819698046;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07973096066735554;  // std dev = 2.511, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.25858203058784573;  // std dev = 0.221, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4627423138567557;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.005737619974027904;  // std dev = 3.109, 117.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=29 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2513647605348567;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then return 0.0010367013524904042;  // std dev = 3.242, 171.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=45 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.029166200611208087;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.10704098045694528;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1690648059031573;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17891380912348331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13251301794102807;  // std dev = 0.913, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(G, A) )
%   | then return 0.015132566882785605;  // std dev = 3.706, 236.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.35230049639835825;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.055942322290579855;  // std dev = 2.484, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.017104843603670858;  // std dev = 0.183, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7544197892399825;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15573097074481035;  // std dev = 0.023, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19639411559051165;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return -0.7719264689319768;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.31049884915087167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.07794533645745504;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02115139729403491;  // std dev = 3.458, 236.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=70 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04255534071169099;  // std dev = 2.469, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.14401083997734357;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.13634061056638147;  // std dev = 0.021, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15920320387200848;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17139500996205295;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I), interaction(G, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20422298831766325;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.010215882071982272;  // std dev = 4.474, 289.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=85 */


Results
   AUC ROC   = 0.970768
   AUC PR    = 0.162346
   CLL	      = -0.190478
   Precision = 0.079231 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.146724


Total learning time: 4.381 seconds
Total inference time: 12.22 seconds
AUC ROC: 0.970768


Results scoring model
   AUC ROC   = 0.981392
   AUC PR    = 0.34146
   CLL	      = -0.166602
   Precision = 0.185606 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.309148


Total scoring time: 9.587 seconds
Parameter learned model CLL: -0.166602


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 14], 'false,true,true,true': [0.981, 1, 26], 'false,true,true,false': [1.676, 3, 44], 'false,true,false': [0.0, 165, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [2.98e-08, 0, 13], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.95, 1, 10], 'false,true,true,false': [1.691, 3, 60], 'false,true,false': [5.58e-08, 148, 0], 'false,false,true,true': [1.04, 1, 8], 'false,false,true,false': [0.026, 9, 0], 'false,false,false,true': [2.452, 21, 9], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.026, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.773, 1, 19], 'true,false': [0.312, 54, 0], 'false,true': [0.068, 0, 13], 'false,false,true,true': [3.268, 13, 59], 'false,false,true,false': [6.32e-08, 168, 0], 'false,false,false,true': [2.613, 25, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 5], 'true,false,true': [2.98e-08, 0, 9], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.183, 0, 2], 'false,false,true,true': [0.959, 1, 12], 'false,false,true,false': [3.91, 173, 58], 'false,false,false,true': [1.485, 12, 7], 'false,false,false,false': [2.224, 13, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), enzyme(A, L)'}, {'true,true': [0.000543, 0, 11], 'true,false': [0.92, 1, 7], 'false,true,true,true': [1.435, 2, 29], 'false,true,true,false': [1.945, 4, 41], 'false,true,false': [0.095, 175, 0], 'false,false,true,true': [0.79, 1, 1], 'false,false,true,false': [0.179, 0, 2], 'false,false,false,true': [1.504, 15, 7], 'false,false,false,false': [2.443, 24, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 2], 'true,false': [0.799, 1, 13], 'false,true': [3.705, 177, 70], 'false,false,true,true': [0.292, 0, 8], 'false,false,true,false': [0.038, 12, 0], 'false,false,false,true': [2.511, 19, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true,true': [0.221, 0, 24], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.059, 0, 2], 'true,false': [3.109, 88, 29], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.02, 0, 4], 'false,false,true': [3.242, 126, 45], 'false,false,false,true': [0.211, 2, 1], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.913, 1, 14], 'false,true': [3.706, 166, 70], 'false,false,true,true': [0.054, 0, 2], 'false,false,true,false': [2.484, 28, 14], 'false,false,false,true': [0.183, 1, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'enzyme(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.023, 0, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.061, 0, 6], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.293, 1, 2], 'false,false,true': [3.458, 166, 70], 'false,false,false,true': [2.469, 30, 14], 'false,false,false,false': [0.868, 5, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,false': 'enzyme(A, I), interaction(G, J)'}, {'true,true': [0.021, 0, 12], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.041, 0, 2], 'true,false,false': [0.031, 0, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.086, 0, 3], 'false,false': [4.474, 204, 85]}]]
[{'': [-2.9605947323337506e-16, 0.21177907352641862], 'false': [0.20710421736314166, 0.2303999999999995], 'false,false': [1.4802973661668753e-16, 0.2172928927116337], 'false,false,false': [0.2274999999999995, 0.12244897959183677], 'false,true': [0.051132213294374285, -1.6417843515668981e-16], 'false,true,true': [0.035665294924555065, 0.05975554549570045], 'true': [0.0, -2.5376526277146434e-16], 'true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.04986149584487564, 0.17163105501149514], 'false': [0.15982876855054526, 0.2219842295897734], 'false,false': [0.2454992492681139, 0.20274189394078349], 'false,false,true': [0.12016531074576954, 7.280246994958378e-05], 'false,false,false': [0.2003746064575407, 0.22222222222222218], 'false,true': [0.05107304289628752, 2.100421938480026e-17], 'false,true,true': [0.08203943414491022, 0.04536552115801501], 'true': [6.832141690000964e-17, 0.13888888888888903]}, {'': [0.11872752459148292, 0.11841596515883225], 'true': [0.02403592707038129, 0.0017989056092934375], 'false': [0.0003526221947286382, 0.11178227385055994], 'false,false': [0.0992808130939085, 0.19504360104329066], 'false,false,false': [0.19504360104329066, nan], 'false,false,true': [0.14828943678863954, 2.3790493384824782e-17], 'true,true': [0.00013515356817221934, 0.02984632180238287], 'true,true,false': [nan, 0.02984632180238265]}, {'': [0.0003122924346882093, 0.09156230315702123], 'false': [0.01484869874562674, 0.0895715495055457], 'false,false': [0.07336828417567738, 0.1794491592478469], 'false,false,false': [0.11598664176436398, 0.23559167049542934], 'false,false,true': [0.07079165002674993, 0.06618613551804287], 'false,true': [0.0, 0.016704786088830137], 'true': [0.00018341211500867428, 0.00035697130766737956], 'true,false': [9.868649107779169e-17, 0.0]}, {'': [0.0471249078740212, 0.08719945517441251], 'false': [0.07060296205533599, 0.15882428127111145], 'false,false': [0.2181291901844373, 0.15303564481764734], 'false,false,true': [0.31236075189274326, 0.016031671317475238], 'false,false,false': [0.10276080319506434, 0.1864756573294896], 'false,true': [0.07692142817449066, 5.1263988239392026e-05], 'false,true,true': [0.06642218196097689, 0.08402916689528295], 'true': [2.680804398671264e-08, 0.10583213350581583]}, {'': [0.03427735108993395, 0.07531772582211066], 'false': [0.05557744576087727, 0.17038106953916643], 'false,false': [0.10170155926631146, 0.21750113418848158], 'false,false,false': [0.21750113418848158, nan], 'false,false,true': [0.010660862376973002, 0.00012191843788178502], 'true': [0.0003574043124723536, 0.04554692660248664], 'true,true': [0.0, 0.0001994006116509961], 'true,true,false': [nan, 0.0001994006116509961]}, {'': [0.07922184863484731, 0.06353342082721453], 'true': [0.004971137779417626, 0.08260953549944247], 'false': [0.0001016020855057892, 0.06359624393965392], 'false,false': [0.06145814156143536, 0.1231443931584728], 'false,false,false': [0.014790366007456993, 0.2222222222222222], 'true,true': [0.0020351220953265157, 0.001728167898257138], 'true,true,false': [nan, 0.001728167898257138], 'false,true': [nan, 0.0001016020855057892]}, {'': [0.04410053106385154, 0.07331830211175779], 'false': [0.058189477823141114, 0.14558214527343963], 'false,false': [0.14412205222565702, 0.1319578033775097], 'false,false,true': [0.0014541752166650351, 0.14692357122917954], 'false,false,false': [0.0167255953800388, 0.0], 'true': [1.8188037081375008e-05, 0.05553538143851391], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0006017262336405513, 0.06803415515807498], 'false': [0.15716572823531383, 0.06639993247140567], 'false,true': [0.29291114230668897, 0.028560598071351417], 'false,true,true': [0.0, 0.0], 'false,false': [0.050675083190075416, 0.14062042210162443], 'false,false,false': [0.13851198531796483, 0.125452184844795], 'true': [4.4514003078172104e-05, 0.0006138231289370457], 'true,true': [4.4514003078172104e-05, nan]}, {'': [0.00039628770050970715, 0.06896790125016859], 'false': [0.0024576286717339544, 0.06927161974358342], 'false,true': [nan, 0.0024576286717339544], 'false,true,false': [nan, 0.0024576286717339544], 'true': [3.5745522125011274e-05, 0.00047709948331995283], 'true,false': [0.0008401367802562641, 0.00024603412293939045], 'true,false,true': [nan, 0.0008401367802562641]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), enzyme(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
7;false,false,false;enzyme(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;enzyme(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.6706489350995123;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.7775037738091896;  // std dev = 2.144, 62.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=57 */
%   | | else return -0.14185106490048838;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6677134975976395;  // std dev = 0.260, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.5660633000779165;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.5787002402653464;  // std dev = 1.840, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.6998182575256172;  // std dev = 1.392, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8179910985640257;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16716216897037028;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.19085809737018447;  // std dev = 1.686, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.05379319314399419;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.6123231654856771;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6385951705084421;  // std dev = 0.190, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.12046556994748998;  // std dev = 0.095, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5919113598187565;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.510950271105165;  // std dev = 2.145, 64.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=59 */
%   | | | else return -0.11231637819360611;  // std dev = 8.82e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.29484731756770394;  // std dev = 1.566, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.018237719505760187;  // std dev = 1.960, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.4625384785718333;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.09154092610119606;  // std dev = 0.665, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.44529075433406906;  // std dev = 0.012, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.612099419843091;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5247468710933834;  // std dev = 0.213, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), complex(I, J) )
%   | | | then return -0.061520064738518024;  // std dev = 0.884, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.06412261012303283;  // std dev = 2.191, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.14789386052466194;  // std dev = 1.520, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.07007970771737151;  // std dev = 4.007, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3416345528534742;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E) )
%   | | then return 0.37976359159439005;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3498125306916533;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.19369803419633844;  // std dev = 1.854, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.34903785877725163;  // std dev = 2.248, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.10872796589855008;  // std dev = 0.108, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( location(A, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.012644760132616962;  // std dev = 2.531, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.15905665863602073;  // std dev = 1.357, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.4136172424776323;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.27523174420302765;  // std dev = 0.029, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3815287178218773;  // std dev = 0.093, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.11382930804366528;  // std dev = 0.889, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.0026354923417592022;  // std dev = 2.085, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.05931059916652246;  // std dev = 2.082, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.47653449807180837;  // std dev = 0.244, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13679516974581185;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.06317299763120128;  // std dev = 1.624, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.009402077563982073;  // std dev = 1.986, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2758181887868479;  // std dev = 0.166, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10147109826314729;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, E), phenotype(E, F) )
%   | | | then return -0.00882279261841882;  // std dev = 2.409, 96.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
%   | | | else return 0.057860381666560774;  // std dev = 1.743, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22362441231781022;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, K) )
%   | | | then return -0.050703352654906025;  // std dev = 1.456, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.026379126498899924;  // std dev = 1.350, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.04849046527670625;  // std dev = 1.761, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return -0.049745721739475716;  // std dev = 0.910, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15073754473627704;  // std dev = 0.157, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return -0.023265184124739994;  // std dev = 1.398, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.012731790814867002;  // std dev = 0.969, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.011468310409655182;  // std dev = 1.387, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.021387352509514373;  // std dev = 2.372, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.42607953947888083;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07843876743013807;  // std dev = 2.414, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.05513743516270544;  // std dev = 0.274, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.009144843495381838;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15467538802971526;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.1859983496005687;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2873315078431081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.282608293309369;  // std dev = 0.120, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return 0.03633986538360753;  // std dev = 1.478, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.04622365343687303;  // std dev = 1.650, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.02723846386599147;  // std dev = 2.884, 184.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=59 */
%   | | | else return 0.11983258703400797;  // std dev = 1.843, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.14819590357088286;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13129763862167762;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, F), enzyme(C, F) )
%   | | then return 0.18215335464770066;  // std dev = 0.099, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1486821198050398;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.23115453632665625;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return -0.019588211532218965;  // std dev = 1.452, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.020998275363686883;  // std dev = 2.775, 188.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=57 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.06107032550662002;  // std dev = 1.851, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.24135945870305875;  // std dev = 1.364, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */


Results
   AUC ROC   = 0.980374
   AUC PR    = 0.177483
   CLL	      = -0.189414
   Precision = 0.084426 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.155589


Total learning time: 9.376 seconds
Total inference time: 12.118 seconds
AUC ROC: 0.980374


Results scoring model
   AUC ROC   = 0.98759
   AUC PR    = 0.352512
   CLL	      = -0.164078
   Precision = 0.196 at threshold = 0.5
   Recall    = 0.924528
   F1        = 0.323432


Total scoring time: 9.294 seconds
Refined model CLL: -0.164078


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980374
   AUC PR    = 0.177483
   CLL	      = -0.189414
   Precision = 0.084426 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.155589


Total learning time: 32.638000000000005 seconds
Total inference time: 12.118 seconds
AUC ROC: 0.980374
Total revision time: 32.638000000000005
Best scored revision CLL: -0.164078


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:24:25
{'AUC ROC': 0.980374, 'AUC PR': 0.177483, 'CLL': -0.189414, 'Precision': [0.084426, 0.5], 'Recall': 0.990385, 'F1': 0.155589, 'Learning time': 32.638000000000005, 'Inference time': 12.118, 'parameter_0.4': {'AUC ROC': 0.970768, 'AUC PR': 0.162346, 'CLL': -0.190478, 'Precision': [0.079231, 0.5], 'Recall': 0.990385, 'F1': 0.146724, 'Learning time': 4.381, 'Inference time': 12.22}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6630269838799993;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.7849782033921952;  // std dev = 2.358, 82.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1795775065280838;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7215883824890181;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.5374506595744977;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.750517254709023;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6536883771345503;  // std dev = 2.848, 104.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=95 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5149601553860964;  // std dev = 2.710, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return -0.1626156328009238;  // std dev = 0.042, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5703677388271337;  // std dev = 0.099, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.365981875579723;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30172886380936154;  // std dev = 3.996, 89.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=51 */
%   | else return -0.12081594757080841;  // std dev = 0.165, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6139922202481376;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5177856303978219;  // std dev = 2.347, 76.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=70 */
%   | | | else return -0.11231637819360633;  // std dev = 4.21e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.44229351864995453;  // std dev = 0.225, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.18188921924910342;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5312497267592788;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.29065396028066337;  // std dev = 1.580, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.0475600735089163;  // std dev = 5.014, 343.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=93 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.0573498296210248;  // std dev = 3.358, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.32079854587226303;  // std dev = 0.123, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.3696032710627212;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.41176877727914674;  // std dev = 1.346, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return 0.3590109365905535;  // std dev = 2.616, 80.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=72 */
%   | | else return -0.11040822515887946;  // std dev = 0.235, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.4697917891512927;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3998505917995159;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.040741722496831355;  // std dev = 3.372, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.24833931459351677;  // std dev = 0.017, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3015575681276947;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.021688277657995168;  // std dev = 4.530, 381.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=109 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3192130500864469;  // std dev = 2.666, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return -0.13702529015919848;  // std dev = 0.049, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.24548119230969284;  // std dev = 0.281, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( function(A, F) )
%   | | | then return 0.2730209400287919;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.021900554184256762;  // std dev = 3.523, 154.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=39 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.22213033471020363;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.040286217093496696;  // std dev = 3.648, 240.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=77 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return -0.042423560628043526;  // std dev = 1.199, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.16700308855259666;  // std dev = 1.67e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2931392946224951;  // std dev = 0.631, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.21484073615395105;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then return 5.094015156121217E-4;  // std dev = 4.538, 421.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=109 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22237686618075622;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.035350125956435635;  // std dev = 2.980, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | else if ( function(A, J) )
%   | | | then return 0.028042569163806264;  // std dev = 1.047, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14518226640093146;  // std dev = 0.006, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.8305996404316099;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.19054063115726264;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.1969633266965678;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2158256799752758;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.022778144162471297;  // std dev = 4.250, 363.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=109 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.03241691385807709;  // std dev = 2.911, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.033059560386768834;  // std dev = 1.079, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1280760651600081;  // std dev = 0.006, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.21444268495144903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15668433952794356;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2525984674643261;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.16765396238413377;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.18176702872781544;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.008042479660132267;  // std dev = 5.463, 455.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=129 */


Results
   AUC ROC   = 0.970344
   AUC PR    = 0.14436
   CLL	      = -0.197988
   Precision = 0.077573 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.14367


Total learning time: 24.504 seconds
Total inference time: 50.142 seconds
AUC ROC: 0.970344


Results scoring model
   AUC ROC   = 0.984068
   AUC PR    = 0.33918
   CLL	      = -0.166775
   Precision = 0.180052 at threshold = 0.5
   Recall    = 0.874214
   F1        = 0.298604


Total scoring time: 93.038 seconds
Parameter learned model CLL: -0.166775


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 14], 'true,true,false': [0.0, 0, 1], 'true,false': [0.953, 1, 10], 'false,true,true,true': [2.538, 8, 33], 'false,true,true,false': [2.358, 6, 76], 'false,true,false': [0.0, 256, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.495, 38, 18], 'false,false,false,false': [1.291, 10, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.024, 0, 17], 'true,false': [1.265, 2, 8], 'false,true,true,true': [0.039, 0, 14], 'false,true,true,false': [2.848, 9, 95], 'false,true,false': [0.0, 257, 0], 'false,false,true,true': [2.71, 11, 25], 'false,false,true,false': [0.042, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.099, 0, 30], 'true,true,false,true': [0.586, 1, 2], 'true,true,false,false': [3.996, 38, 51], 'true,false': [0.165, 144, 0], 'false,true': [0.04, 0, 6], 'false,false,true,true': [2.347, 6, 70], 'false,false,true,false': [4.21e-08, 164, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.225, 0, 25], 'true,false': [0.0, 0, 0], 'false,true,true': [0.816, 1, 2], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [1.58, 3, 16], 'false,false,true,false': [5.014, 250, 93], 'false,false,false,true': [3.358, 57, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.123, 0, 16], 'true,false': [0.123, 0, 9], 'false,true,true,true': [1.346, 2, 37], 'false,true,true,false': [2.616, 8, 72], 'false,true,false': [0.235, 284, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [7.45e-09, 0, 3], 'false,false,false,true': [3.372, 59, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.017, 0, 16], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.119, 0, 9], 'true,false': [0.0, 0, 0], 'false,true': [4.53, 272, 109], 'false,false,true,true': [2.666, 11, 25], 'false,false,true,false': [0.049, 43, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.281, 0, 31], 'true,true,false,true': [0.034, 0, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.523, 115, 39], 'false,true,true': [0.02, 0, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.648, 163, 77], 'false,false,false,true': [1.199, 9, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [1.67e-08, 0, 14], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.631, 1, 1], 'true,false': [0.144, 0, 10], 'false,true': [4.538, 312, 109], 'false,false,true,true': [0.03, 0, 3], 'false,false,true,false': [2.98, 40, 19], 'false,false,false,true': [1.047, 9, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.006, 0, 16], 'true,true,false': [0.0, 1, 0], 'true,false': [0.115, 0, 9], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.063, 0, 3], 'false,false,true': [4.25, 254, 109], 'false,false,false,true': [2.911, 41, 18], 'false,false,false,false': [1.079, 11, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.006, 0, 16], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.086, 0, 8], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.055, 0, 3], 'false,false': [5.463, 326, 129]}]]
[{'': [0.03698224852071082, 0.20857154044952791], 'false': [0.20488579166115703, 0.22518296115594033], 'false,false': [0.0, 0.2076124567474044], 'false,false,false': [0.21811224489795866, 0.13888888888888892], 'false,true': [0.10086588670765056, -1.0408340855860843e-16], 'false,true,true': [0.1570493753718042, 0.06781677572873249], 'true': [-2.3684757858670006e-16, 0.0826446280991734], 'true,true': [-2.5376526277146434e-16, 0.0]}, {'': [0.0671872946698022, 0.16607889391614392], 'false': [0.15674692383145158, 0.21110600649077482], 'false,false': [0.21110600649077482, nan], 'false,false,true': [0.20398212381659914, 4.484096935675197e-05], 'false,true': [0.06974697422058955, -6.566299600895868e-17], 'false,true,true': [0.00010910446523888189, 0.07800891604953077], 'true': [3.354824457837805e-05, 0.15999999999999998]}, {'': [0.12721479903004065, 0.1128259009922442], 'true': [0.14706978876159524, 0.00018964457254407196], 'true,true': [0.0003253364562062563, 0.17745102904029708], 'true,true,false': [0.11438460978130803, 0.17944224004337747], 'false': [0.00027115674187916383, 0.1088716411659749], 'false,false': [0.1088716411659749, nan], 'false,false,true': [0.07250234612157994, 1.0831444142684454e-17]}, {'': [0.0020210209145661295, 0.09291243449213057], 'false': [0.14162430216305294, 0.09105916603099287], 'false,true': [0.22222222222222224, -3.700743415417188e-17], 'false,false': [0.07927188360787825, 0.1464674312058262], 'false,false,false': [0.1464674312058262, nan], 'false,false,true': [0.1313666709373822, 0.07328451426601056], 'true': [0.0020210209145661295, nan]}, {'': [0.0017600267918038526, 0.08375993163718161], 'false': [0.0710857389053249, 0.14379746948239336], 'false,false': [0.0011740250608800907, 0.14390551578457464], 'false,false,false': [0.14390551578457464, nan], 'false,true': [0.07333286984235761, 0.00019513771220576714], 'false,true,true': [0.04645471187495106, 0.08552376848667123], 'true': [0.000940873742490661, 0.001691882110885285], 'false,false,true': [0.0, 1.850371707708594e-17]}, {'': [0.001226165926554037, 0.06928526831422309], 'false': [0.05387001033633699, 0.14162542923342256], 'false,false': [0.14162542923342256, nan], 'false,false,true': [0.19742334329334157, 5.617207685905304e-05], 'true': [0.001226165926554037, nan], 'true,true': [1.7592900932054956e-05, 0.0015621433884203733], 'true,true,false': [nan, 0.0015621433884203733]}, {'': [0.0740116806755766, 0.058236454534931446], 'true': [0.002418883883744985, 0.0805798658176052], 'false': [6.761159550748112e-05, 0.05881874783200983], 'false,false': [0.05543920423264322, 0.11989446998053575], 'false,false,false': [0.11989446998053575, nan], 'true,true': [0.0025482106562321016, 0.0003909905042003096], 'true,true,false': [0.0003909905042003096, nan], 'false,true': [6.761159550748112e-05, nan]}, {'': [0.033009782825582264, 0.06217055260530294], 'false': [0.048909254025152324, 0.13617025189083592], 'false,false': [0.14481257232989156, 0.09129409171104885], 'false,false,true': [0.00029453004811931066, 0.15046841502767117], 'false,false,false': [0.09129409171104885, nan], 'true': [0.04807026745065537, 0.002082379797075823], 'true,true': [1.9825411154020653e-17, 0.19929750341044644], 'true,true,false': [nan, 0.19929750341044644]}, {'': [0.037367080717941474, 0.06344996043095687], 'false': [0.0008736091851470785, 0.06377666725530136], 'false,false': [0.04975283411808508, 0.13447618125012037], 'false,false,false': [0.1436033260600997, 0.08953988901721738], 'true': [0.052716517497299796, 0.0014696975371562436], 'true,true': [2.456917248649937e-06, 0.0], 'false,true': [0.0, 0.001313699960094154], 'false,true,true': [0.0, nan]}, {'': [0.0007003682120147348, 0.0652084002108808], 'false': [0.0379744968938512, 0.06559589471684973], 'false,true': [0.0, 0.0006497043334568187], 'true': [1.9908769465608323e-06, 0.0011567685905204837], 'true,false': [0.0011567685905204837, nan], 'true,false,true': [0.0, 0.0009306950569954141], 'false,true,false': [0.0, 0.0010031690991128966], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6081489350995123;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.8472793698821204;  // std dev = 0.995, 92.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=91 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.11396288858788445;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7346362673768468;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6601576714413402;  // std dev = 2.543, 102.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=95 */
%   | | else return -0.12544463852839183;  // std dev = 0.000, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   | else if ( function(G, H), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3430432444901182;  // std dev = 3.120, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.1872214029846651;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.15629770973391272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5293132203639118;  // std dev = 0.996, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.005224510033613368;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), location(A, I) )
%   | | | then return 0.1821750021118738;  // std dev = 2.775, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | | | else return 0.45062781203072444;  // std dev = 2.669, 38.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | else return -0.13087464014984174;  // std dev = 0.046, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.30816254592854725;  // std dev = 2.559, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | | | else return 0.23218451746388405;  // std dev = 3.131, 68.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=36 */
%   | | else return -0.11231637819360614;  // std dev = 3.73e-09, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4374712869017432;  // std dev = 0.031, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( complex(A, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16751358415830997;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.4431839139259385;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.07693794821655206;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.20245384909965147;  // std dev = 3.295, 82.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=43 */
%   | | | else return -0.11517345609989238;  // std dev = 0.472, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.0855647584644815;  // std dev = 4.472, 220.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=72 */
%   | | | else return 0.03141239363685432;  // std dev = 2.803, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2726209465339928;  // std dev = 0.218, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.36013118408548206;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14446388516530057;  // std dev = 0.991, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.41234851107425907;  // std dev = 0.251, 117.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=109 */
%   | | else return -0.1182710621314677;  // std dev = 0.025, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.0048424688776986064;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.42428969965560204;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.17612918811089065;  // std dev = 1.711, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.027463465230884034;  // std dev = 2.661, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.20573299071765536;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.050673103488265925;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.32127557668077306;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( complex(A, H), location(A, I) )
%   | | then return -0.013990472840741518;  // std dev = 0.225, 154.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=35 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.01592201910004313;  // std dev = 1.351, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.059379335800987906;  // std dev = 3.334, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
%   | else if ( function(L, M), recursion_proteinclass(L, B) )
%   | | then if ( enzyme(A, N) )
%   | | | then return 0.44039117954849005;  // std dev = 1.287, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.10088393895126074;  // std dev = 2.555, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else return -0.13129840974921517;  // std dev = 0.012, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2020320974966047;  // std dev = 0.224, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | else if ( interaction(E, A), location(A, F) )
%   | | then return -0.03406154294748439;  // std dev = 0.175, 136.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=19 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.016291448344858035;  // std dev = 1.904, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.11009775163864692;  // std dev = 2.120, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2414890037075285;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.36878970033724956;  // std dev = 0.179, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.12306088383486495;  // std dev = 0.739, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.14268470803106892;  // std dev = 1.006, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.03773199755191321;  // std dev = 2.998, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.19734447660202933;  // std dev = 0.013, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.14242408090405093;  // std dev = 0.285, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.03290000457555068;  // std dev = 0.164, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( location(A, G), enzyme(A, H) )
%   | | | then return -6.276710293479776E-4;  // std dev = 2.342, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | | | else return 0.03467759898080926;  // std dev = 3.433, 194.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=64 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.26957477236666916;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.002419541629553995;  // std dev = 3.049, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.08202825462178122;  // std dev = 0.361, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.27823394191920164;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1647366634417345;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.2744487469788463;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18818892839892265;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H) )
%   | | then return 0.22291358920810078;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1469350239723487;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.09831981614130282;  // std dev = 2.966, 75.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=43 */
%   | | | else return -0.09466468427405077;  // std dev = 0.433, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.020313852023828065;  // std dev = 3.442, 248.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=74 */
%   | | | else return 0.08981635833290047;  // std dev = 2.236, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.08393919921256311;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2491082477551685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.20409435528912004;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1867241935996069;  // std dev = 0.081, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A) )
%   | | then return -0.5321543312580164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.20144434982374154;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then return -0.023157366185658827;  // std dev = 0.244, 169.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=43 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.021821897416097386;  // std dev = 2.345, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.031239761558573168;  // std dev = 3.566, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */


Results
   AUC ROC   = 0.979167
   AUC PR    = 0.153994
   CLL	      = -0.193099
   Precision = 0.077942 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.144196


Total learning time: 90.45400000000001 seconds
Total inference time: 85.417 seconds
AUC ROC: 0.979167


Results scoring model
   AUC ROC   = 0.98759
   AUC PR    = 0.305594
   CLL	      = -0.169111
   Precision = 0.169632 at threshold = 0.5
   Recall    = 0.899371
   F1        = 0.285429


Total scoring time: 208.331 seconds
Refined model CLL: -0.169111


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970344
   AUC PR    = 0.14436
   CLL	      = -0.197988
   Precision = 0.077573 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.14367


Total learning time: 416.327 seconds
Total inference time: 50.142 seconds
AUC ROC: 0.970344
Total revision time: 416.327
Best scored revision CLL: -0.166775


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:33:38
{'AUC ROC': 0.970344, 'AUC PR': 0.14436, 'CLL': -0.197988, 'Precision': [0.077573, 0.5], 'Recall': 0.971154, 'F1': 0.14367, 'Learning time': 416.327, 'Inference time': 50.142, 'parameter_0.6': {'AUC ROC': 0.970344, 'AUC PR': 0.14436, 'CLL': -0.197988, 'Precision': [0.077573, 0.5], 'Recall': 0.971154, 'F1': 0.14367, 'Learning time': 24.504, 'Inference time': 50.142}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7601097194132377;  // std dev = 2.124, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | | else return 0.8105298874804635;  // std dev = 2.182, 105.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=100 */
%   | | else return -0.14185106490048766;  // std dev = 1.84e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16983724678782322;  // std dev = 4.064, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7212025280196884;  // std dev = 0.021, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5788838128984293;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7362378908450614;  // std dev = 0.019, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.6865354362194682;  // std dev = 2.384, 133.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=127 */
%   | | else return -0.1254446385283922;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4916210517333273;  // std dev = 3.220, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | | else return -0.16098740955327515;  // std dev = 0.040, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5402380459240728;  // std dev = 0.978, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.598849202038135;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30805483320534216;  // std dev = 4.576, 126.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=73 */
%   | else return -0.1273870128886325;  // std dev = 0.557, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5981312427420211;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.49345125260433564;  // std dev = 2.707, 94.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=86 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.39421740049889786;  // std dev = 1.201, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4507944650051687;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5044784382512145;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4398438064134422;  // std dev = 0.029, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.026410810213055608;  // std dev = 5.885, 469.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=120 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.06083382411262785;  // std dev = 3.912, 103.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.26096778443623514;  // std dev = 1.274, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0.36625904249930114;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3699504176959282;  // std dev = 1.841, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return 0.37595913779777257;  // std dev = 2.546, 97.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=90 */
%   | | else return -0.10825485692106744;  // std dev = 0.255, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3544778519807352;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4104021266266433;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.07788676431849897;  // std dev = 3.797, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2780403393859548;  // std dev = 0.097, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2996447411470719;  // std dev = 0.115, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25515736751256013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.02207467995723693;  // std dev = 4.935, 520.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=146 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.23886090438918456;  // std dev = 3.434, 53.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=32 */
%   | | | else return -0.14207530678852756;  // std dev = 0.036, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.22125813729699495;  // std dev = 0.847, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else if ( function(A, F) )
%   | | | then return 0.24406916633678888;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0039217140971669305;  // std dev = 4.225, 258.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=53 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.23082296112814854;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03968031064365073;  // std dev = 4.122, 304.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=100 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.22646976895523502;  // std dev = 1.044, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.13745155160312383;  // std dev = 0.953, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16784625099669703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2135544182331642;  // std dev = 0.167, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(G, A) )
%   | then return 0.01901365163991502;  // std dev = 4.869, 489.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=146 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.13002792950089215;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06257485877439317;  // std dev = 3.405, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | else if ( function(A, J) )
%   | | | then return -0.059363888740612755;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1642860889287249;  // std dev = 0.030, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.15802515788777594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.10181448686858992;  // std dev = 0.989, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.20907215428973266;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20263728655090363;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then return 0.01234855357030207;  // std dev = 4.802, 495.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=141 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.11457224692963686;  // std dev = 3.074, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return -0.08284843141476692;  // std dev = 1.356, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1003929620087819;  // std dev = 0.996, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.22302535011962443;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16094929630923666;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14690267040598123;  // std dev = 0.361, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return -0.15048783735877616;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20967241351409882;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.017129566005470515;  // std dev = 6.013, 558.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=168 */


Results
   AUC ROC   = 0.970868
   AUC PR    = 0.126285
   CLL	      = -0.203774
   Precision = 0.0777 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.143781


Total learning time: 30.466 seconds
Total inference time: 48.112 seconds
AUC ROC: 0.970868


Results scoring model
   AUC ROC   = 0.983374
   AUC PR    = 0.240763
   CLL	      = -0.170728
   Precision = 0.182446 at threshold = 0.5
   Recall    = 0.872642
   F1        = 0.301794


Total scoring time: 127.591 seconds
Parameter learned model CLL: -0.170728


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 19], 'true,true,false': [0.0, 0, 1], 'true,false': [0.966, 1, 14], 'false,true,true,true': [2.124, 5, 46], 'false,true,true,false': [2.182, 5, 100], 'false,true,false': [1.84e-07, 329, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.064, 53, 24], 'false,false,false,false': [1.549, 12, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.021, 0, 23], 'true,false': [1.301, 2, 11], 'false,true,true,true': [0.019, 0, 19], 'false,true,true,false': [2.384, 6, 127], 'false,true,false': [0.0, 347, 0], 'false,false,true,true': [3.22, 16, 32], 'false,false,true,false': [0.04, 47, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.978, 1, 41], 'true,true,false,true': [0.029, 0, 3], 'true,true,false,false': [4.576, 53, 73], 'true,false': [0.557, 170, 0], 'false,true': [0.043, 0, 9], 'false,false,true,true': [2.707, 8, 86], 'false,false,true,false': [0.0, 171, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.201, 2, 34], 'true,false': [0.0, 0, 0], 'false,true,true': [0.03, 0, 3], 'false,true,false': [0.093, 0, 7], 'false,false,true,true': [0.029, 0, 21], 'false,false,true,false': [5.885, 349, 120], 'false,false,false,true': [3.912, 76, 27], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [1.274, 2, 22], 'true,false': [0.113, 0, 12], 'false,true,true,true': [1.841, 4, 56], 'false,true,true,false': [2.546, 7, 90], 'false,true,false': [0.255, 322, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 3], 'false,false,false,true': [3.797, 66, 27], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.097, 0, 22], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.115, 0, 11], 'true,false': [0.0, 0, 1], 'false,true': [4.935, 374, 146], 'false,false,true,true': [3.434, 21, 32], 'false,false,true,false': [0.036, 53, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.847, 1, 42], 'true,true,false,true': [0.028, 0, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.225, 205, 53], 'false,true,true': [0.084, 0, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.122, 204, 100], 'false,false,false,true': [1.044, 3, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.953, 1, 19], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.167, 0, 14], 'false,true': [4.869, 343, 146], 'false,false,true,true': [0.944, 2, 3], 'false,false,true,false': [3.405, 50, 25], 'false,false,false,true': [1.34, 17, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.03, 0, 22], 'true,true,false': [0.0, 0, 1], 'true,false': [0.989, 1, 11], 'false,true,true,true': [0.01, 0, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.381, 1, 7], 'false,false,true': [4.802, 354, 141], 'false,false,false,true': [3.074, 39, 24], 'false,false,false,false': [1.356, 19, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.996, 1, 23], 'true,false,true,true': [0.026, 0, 2], 'true,false,true,false': [0.1, 0, 9], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.361, 1, 5], 'false,true,false,true': [0.81, 1, 2], 'false,true,false,false': [0.013, 0, 3], 'false,false': [6.013, 390, 168]}]]
[{'': [0.027755102040817953, 0.21230264167877338], 'false': [0.2104113083218222, 0.2210649378254876], 'false,false': [0.0, 0.20734877126654183], 'false,true': [0.059993425378046264, 1.0258595729059197e-16], 'false,false,false': [0.2145387080452026, 0.15999999999999986], 'false,true,true': [0.08842752787389532, 0.0453514739229045], 'true': [-8.881784197001253e-17, 0.06222222222222188], 'true,true': [-2.8047739569477637e-16, 0.0]}, {'': [0.051694221630788934, 0.1635228041757121], 'false': [0.15327830089534916, 0.2156347522469961], 'false,false': [0.2156347522469961, nan], 'false,false,true': [0.21603688672659915, 3.359245508127954e-05], 'false,true': [0.03767440656558067, -1.1774123142998778e-16], 'true': [1.9932276533528242e-05, 0.13017751479289957], 'false,true,true': [1.8796377892558636e-05, 0.042744987700058676]}, {'': [0.13247335768468946, 0.11578351512116336], 'true': [0.13893474430554, 0.0018225181414995915], 'true,true': [0.022794384724058783, 0.16426714849629853], 'true,true,false': [0.00028059469897478984, 0.16620504688256632], 'false': [0.00020509688011798803, 0.11164195674885428], 'false,false': [0.11164195674885428, nan], 'false,false,true': [0.07794584604820735, -2.5970129230997812e-18]}, {'': [0.040047008865003245, 0.09176422828771288], 'false': [0.0015653633075592755, 0.09005505389660103], 'false,false': [0.07770155656341607, 0.14859354712308662], 'false,false,false': [0.14859354712308662, nan], 'false,false,true': [4.0140683063683014e-05, 0.07385349729328473], 'true': [0.040047008865003245, nan], 'false,true': [0.00029373913985863975, 0.0012457543986720751]}, {'': [0.047873596110261527, 0.08577140788452406], 'false': [0.07192697793169608, 0.15183174667672608], 'false,false': [0.0007506058787210446, 0.15504671897483277], 'false,false,false': [0.15504671897483277, nan], 'false,true': [0.06290988815626124, 0.00020157114772647092], 'false,true,true': [0.056517384379765306, 0.06685021622245914], 'true': [0.06758473653001087, 0.0010604825877608692], 'false,false,true': [0.0, 0.0]}, {'': [0.0007875854197103441, 0.06397955182860306], 'false': [0.04682722661948475, 0.1475476752687969], 'false,false': [0.1475476752687969, nan], 'false,false,true': [0.2225143915593551, 2.476048502309609e-05], 'true': [0.0007848318363855678, 0.0], 'true,true': [0.0004240525866409207, 0.001195223552237607], 'true,true,false': [nan, 0.001195223552237607]}, {'': [0.06768272968895807, 0.058133770997645995], 'true': [0.015631722072222572, 0.06918881386409101], 'false': [0.0007082352276127857, 0.058891592050720476], 'false,false': [0.055878294141305164, 0.15564982606672378], 'false,false,false': [0.15564982606672378, nan], 'true,true': [0.016670547972856654, 0.0002554765333140918], 'false,true': [0.0007082352276127857, nan], 'true,true,false': [0.0002554765333140918, nan]}, {'': [0.02808931295215444, 0.06504186781013753], 'false': [0.048484124792713856, 0.145145232640943], 'false,false': [0.15827361018813452, 0.085565438348148], 'false,false,true': [0.17837437801223452, 0.15461506937164782], 'false,false,false': [0.085565438348148, nan], 'true': [0.04326320002335014, 0.0019844161379051046], 'true,true': [0.04538236775064975, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.028856790647795894, 0.060385616895436124], 'false': [0.013233875903061394, 0.06064594880010565], 'false,false': [0.04659391565497594, 0.1402475257644524], 'false,false,false': [0.14997023851138064, 0.08351791520101969], 'true': [4.1124498129763154e-05, 0.08154448692032489], 'false,true': [3.123223428098491e-05, 0.018173574318086028], 'true,true': [4.128947795584653e-05, 0.0], 'false,true,true': [3.123223428098491e-05, nan]}, {'': [0.029912043081320387, 0.06531824997970871], 'false': [0.08513363496731834, 0.06478563356113398], 'false,true': [0.021661417038871675, 0.14172498999475666], 'false,true,false': [0.21853843285556385, 5.38439795433702e-05], 'true': [0.041295242718487266, 0.0015367248984121016], 'false,true,true': [nan, 0.021661417038871675], 'true,false': [0.0015367248984121016, nan], 'true,false,true': [0.0003397935957969653, 0.0011020848220229004]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7914822684328456;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.7880852408319938;  // std dev = 0.255, 157.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=146 */
%   | | else return -0.14185106490048763;  // std dev = 1.93e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11211718906776634;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7341673351761255;  // std dev = 0.091, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.009934508867465122;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.39497778190004035;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7327299667445831;  // std dev = 5.16e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.651633697169494;  // std dev = 0.274, 159.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=146 */
%   | | else return -0.12544463852839216;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.3141535857811302;  // std dev = 2.877, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.41178966268657374;  // std dev = 2.471, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | else return -0.1664398309527808;  // std dev = 0.068, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5796059733427715;  // std dev = 0.130, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.616034445143315;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2669703775471338;  // std dev = 5.001, 141.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=73 */
%   | else return -0.1256008013205442;  // std dev = 0.381, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5684348751360626;  // std dev = 0.000440, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), location(K, L) )
%   | | | then return 0.2534594909036597;  // std dev = 4.557, 157.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=84 */
%   | | | else return 0.121491904384186;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.11231637819360615;  // std dev = 1.01e-07, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.45384698815128177;  // std dev = 0.067, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.3247740370883708;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.06655429466013864;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.11738551955722049;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5377413348530257;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.385136268438738;  // std dev = 1.082, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.043075296584635075;  // std dev = 6.204, 475.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=120 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.1162750513522547;  // std dev = 3.010, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.041111781959067006;  // std dev = 2.573, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31123456880392625;  // std dev = 0.167, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.3622307114742963;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.330970859913136;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06125121007875319;  // std dev = 1.247, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4273956790221484;  // std dev = 0.246, 156.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=146 */
%   | | else return -0.11846566753638976;  // std dev = 0.419, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.44865541870579395;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.18522621793537553;  // std dev = 2.162, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.02448656459656489;  // std dev = 3.259, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27611152479056805;  // std dev = 0.053, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.22540650083955402;  // std dev = 0.300, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.25371379732136334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.03343307389228161;  // std dev = 0.181, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.01710848056754276;  // std dev = 3.178, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   | | | else return 0.04948049112480992;  // std dev = 3.980, 267.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=84 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.3103394895512053;  // std dev = 2.407, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.14284193535952036;  // std dev = 2.607, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else return -0.14907650393286695;  // std dev = 0.063, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.22113998575930197;  // std dev = 0.144, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.11241121547104393;  // std dev = 0.082, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.03266094531304663;  // std dev = 2.931, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.07366093269371884;  // std dev = 2.981, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.25729985851112885;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.03694650227257801;  // std dev = 0.465, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then return 0.033373406127935;  // std dev = 0.262, 316.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=99 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.21449268114930567;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.005156921206164001;  // std dev = 1.459, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.13532952921109237;  // std dev = 0.207, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.4006159303878043;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.2613925320881969;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.05141447791450182;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), interaction(A, H) )
%   | then return -0.05252217020516611;  // std dev = 0.161, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.44766529036007885;  // std dev = 0.527, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14230486774488732;  // std dev = 0.600, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.19335271403190288;  // std dev = 0.959, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.02091120701001902;  // std dev = 5.461, 425.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=118 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1630176354317749;  // std dev = 0.108, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.3451305446046122;  // std dev = 0.734, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.0016506678797958418;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.25958245834301824;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2509541699190471;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.17382719845424552;  // std dev = 0.830, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.02736249512940247;  // std dev = 3.920, 244.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=49 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.02575004975016986;  // std dev = 3.631, 248.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=75 */
%   | | | else return 0.0499423399070552;  // std dev = 2.907, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14583534334378168;  // std dev = 0.129, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2371735019962649;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.19433932044382363;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.14539764395178492;  // std dev = 0.418, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( function(A, H), interaction(F, I) )
%   | | | then return 0.19631741839027317;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.19347518469256197;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08329900779517475;  // std dev = 0.064, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.001544723289287786;  // std dev = 3.590, 227.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=70 */
%   | | | else return 0.03175431697780202;  // std dev = 5.099, 308.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=98 */


Results
   AUC ROC   = 0.976201
   AUC PR    = 0.188964
   CLL	      = -0.191557
   Precision = 0.079653 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.14723


Total learning time: 95.695 seconds
Total inference time: 58.826 seconds
AUC ROC: 0.976201


Results scoring model
   AUC ROC   = 0.986736
   AUC PR    = 0.313659
   CLL	      = -0.167293
   Precision = 0.185149 at threshold = 0.5
   Recall    = 0.882075
   F1        = 0.306056


Total scoring time: 184.722 seconds
Refined model CLL: -0.167293


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976201
   AUC PR    = 0.188964
   CLL	      = -0.191557
   Precision = 0.079653 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.14723


Total learning time: 438.474 seconds
Total inference time: 58.826 seconds
AUC ROC: 0.976201
Total revision time: 438.474
Best scored revision CLL: -0.167293


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:42:44
{'AUC ROC': 0.976201, 'AUC PR': 0.188964, 'CLL': -0.191557, 'Precision': [0.079653, 0.5], 'Recall': 0.971154, 'F1': 0.14723, 'Learning time': 438.474, 'Inference time': 58.826, 'parameter_0.8': {'AUC ROC': 0.970868, 'AUC PR': 0.126285, 'CLL': -0.203774, 'Precision': [0.0777, 0.5], 'Recall': 0.961538, 'F1': 0.143781, 'Learning time': 30.466, 'Inference time': 48.112}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7672398441904213;  // std dev = 1.651, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8164822684328454;  // std dev = 1.384, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return 0.8417554924765617;  // std dev = 0.992, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | | else return -0.14185106490048807;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15922420391671643;  // std dev = 7.662, 279.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=84 */
%   | | | else return 0.19148226843284494;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6946738838245343;  // std dev = 0.976, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.5609800713392034;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7262950138835358;  // std dev = 0.010, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.7131280606939224;  // std dev = 0.996, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else return -0.12544463852839205;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.820231489912454;  // std dev = 0.267, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.16325851020499282;  // std dev = 0.015, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1619860357498485;  // std dev = 6.186, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | | | else return 0.1793593373853952;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5687694640068407;  // std dev = 0.078, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.562406541780506;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6451617287609039;  // std dev = 0.478, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.13112905262546645;  // std dev = 0.476, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5541948899389236;  // std dev = 0.962, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5376829861251504;  // std dev = 1.390, 79.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=77 */
%   | | | else return -0.11231637819360649;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14474463492889877;  // std dev = 7.053, 227.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.40132909268149053;  // std dev = 0.983, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.44895095498186777;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.33180426479107983;  // std dev = 0.957, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4246961305357988;  // std dev = 0.662, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.3460661911816795;  // std dev = 0.823, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.40318261312022796;  // std dev = 0.515, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.009771034424383882;  // std dev = 4.265, 366.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=80 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.053309601098947355;  // std dev = 3.433, 134.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | | | else return 0.09568112438646172;  // std dev = 7.017, 232.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.305522461832002;  // std dev = 0.775, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.2826054568974085;  // std dev = 1.214, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3764667778673978;  // std dev = 0.322, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.3681640823336825;  // std dev = 1.673, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.10236995068397163;  // std dev = 0.074, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.2961950439065695;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.44274316815205067;  // std dev = 0.394, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.07099052011995935;  // std dev = 3.305, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.09585503024419074;  // std dev = 6.934, 220.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27462240237769286;  // std dev = 0.061, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.31056525490650877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2988601705411081;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.29677237541073154;  // std dev = 0.116, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, G) )
%   | then return 0.01215194527159856;  // std dev = 3.684, 405.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=106 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4478900144398686;  // std dev = 1.153, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1410562119693214;  // std dev = 0.012, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07441146243336495;  // std dev = 7.047, 234.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19168889641823234;  // std dev = 1.415, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2569467541752573;  // std dev = 0.265, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.44322086384480364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.011635730568926412;  // std dev = 7.124, 549.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=136 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.07775024596201345;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2645847272807944;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03449284197308232;  // std dev = 2.444, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.0035543773847665056;  // std dev = 1.019, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.0450185424815525;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18320907994992575;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1830115189899283;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21586626994822994;  // std dev = 0.140, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( interaction(A, G) )
%   | then return 0.0046013306068690705;  // std dev = 3.560, 417.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.23470304092194627;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04433131989141636;  // std dev = 6.595, 279.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=89 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.01769163417756358;  // std dev = 0.993, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.09315308271525424;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.0913205026719784;  // std dev = 1.335, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return -0.31336634627451115;  // std dev = 0.682, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.14169617511518673;  // std dev = 0.819, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.15771697298031906;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2073794421794905;  // std dev = 0.527, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.2743682057305401;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -8.696140649458873E-4;  // std dev = 3.647, 412.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.025112393451096986;  // std dev = 6.591, 286.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=84 */
%   | | | else return 0.0043445897600572205;  // std dev = 3.731, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1272136397747945;  // std dev = 0.724, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.17387375589130444;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16263597538384514;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.052638026117491535;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.18180856804169487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20550793833783645;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.09968143037542761;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1503796292374014;  // std dev = 0.990, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.0092187268244002;  // std dev = 8.328, 773.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=209 */


Results
   AUC ROC   = 0.917315
   AUC PR    = 0.201705
   CLL	      = -0.223872
   Precision = 0.142549 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.232804


Total learning time: 5.708 seconds
Total inference time: 9.943 seconds
AUC ROC: 0.917315


Results scoring model
   AUC ROC   = 0.956045
   AUC PR    = 0.351193
   CLL	      = -0.188577
   Precision = 0.34955 at threshold = 0.5
   Recall    = 0.732075
   F1        = 0.473171


Total scoring time: 15.599 seconds
Parameter learned model CLL: -0.188577


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 2], 'true,false': [1.651, 3, 30], 'false,true,true,true': [1.384, 2, 46], 'false,true,true,false': [0.992, 1, 60], 'false,true,false': [0.0, 269, 0], 'false,false,true': [0.0, 0, 11], 'false,false,false,true': [7.662, 195, 84], 'false,false,false,false': [3.916, 46, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.976, 1, 27], 'true,false': [1.572, 3, 14], 'false,true,true,true': [0.01, 0, 20], 'false,true,true,false': [0.996, 1, 86], 'false,true,false': [0.0, 316, 0], 'false,false,true,true': [0.267, 0, 42], 'false,false,true,false': [0.015, 74, 0], 'false,false,false,true': [6.186, 119, 58], 'false,false,false,false': [3.431, 34, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.078, 0, 25], 'true,true,false,true': [0.117, 0, 8], 'true,true,false,false': [0.478, 0, 57], 'true,false': [0.476, 185, 0], 'false,true': [0.962, 1, 22], 'false,false,true,true': [1.39, 2, 77], 'false,false,true,false': [0.0, 182, 0], 'false,false,false,true': [7.053, 151, 76], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.983, 1, 23], 'true,false,true': [0.032, 0, 12], 'true,false,false': [0.957, 1, 6], 'false,true,true': [0.662, 1, 11], 'false,true,false': [0.823, 1, 4], 'false,false,true,true': [0.515, 1, 22], 'false,false,true,false': [4.265, 286, 80], 'false,false,false,true': [3.433, 98, 36], 'false,false,false,false': [7.017, 161, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.775, 1, 23], 'true,false': [1.214, 2, 18], 'false,true,true,true': [0.322, 0, 54], 'false,true,true,false': [1.673, 3, 52], 'false,true,false': [0.074, 290, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.394, 0, 9], 'false,false,false,true': [3.305, 81, 36], 'false,false,false,false': [6.934, 149, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.061, 0, 15], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.054, 0, 6], 'true,false': [0.116, 0, 19], 'false,true': [3.684, 299, 106], 'false,false,true,true': [1.153, 1, 42], 'false,false,true,false': [0.012, 83, 0], 'false,false,false,true': [7.047, 158, 76], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.415, 3, 48], 'true,true,false,true': [0.265, 0, 5], 'true,true,false,false': [0.0, 0, 1], 'true,false': [7.124, 413, 136], 'false,true,true': [0.914, 1, 5], 'false,true,false': [0.019, 0, 4], 'false,false,true': [2.444, 96, 43], 'false,false,false,true': [1.019, 16, 5], 'false,false,false,false': [3.523, 40, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.14, 0, 30], 'false,true': [3.56, 311, 106], 'false,false,true,true': [0.26, 0, 6], 'false,false,true,false': [6.595, 190, 89], 'false,false,false,true': [0.993, 13, 5], 'false,false,false,false': [3.375, 31, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [1.335, 2, 25], 'true,true,false': [0.682, 1, 1], 'true,false': [0.819, 1, 15], 'false,true,true,true': [0.069, 0, 2], 'false,true,true,false': [0.527, 1, 9], 'false,true,false': [0.209, 0, 4], 'false,false,true': [3.647, 310, 102], 'false,false,false,true': [6.591, 202, 84], 'false,false,false,false': [3.731, 54, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.724, 1, 26], 'true,false,true,true': [0.019, 0, 2], 'true,false,true,false': [0.045, 0, 6], 'true,false,false': [0.968, 1, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.015, 0, 3], 'false,true,false,true': [0.034, 0, 5], 'false,true,false,false': [0.99, 1, 6], 'false,false': [8.328, 564, 209]}]]
[{'': [0.06353305785124083, 0.21155846522905597], 'false': [0.20178606421992829, 0.22065316066759513], 'false,false': [-1.6148698540002277e-16, 0.21293268595587456], 'false,false,false': [0.21042895132385311, 0.22222222222222324], 'false,true': [0.02676542378587903, -5.943201321413477e-17], 'true': [-1.6148698540002277e-16, 0.08264462809917321], 'false,true,true': [0.03993055555555639, 0.016124697661918288], 'true,true': [-2.9605947323337506e-16, 0.0]}, {'': [0.0802661096711718, 0.1758964802906545], 'false': [0.1360185747403727, 0.22055625264155482], 'false,false': [0.22402658357336327, 0.2185550254778765], 'false,false,true': [0.0016940480423708643, 3.1788014849835635e-06], 'false,false,false': [0.21620191416365955, 0.2263313609467452], 'false,true': [0.009305128082049922, -8.994211845064559e-17], 'true': [0.03401139730109686, 0.14532871972318356], 'false,true,true': [5.324739825329772e-06, 0.011410608551531807]}, {'': [0.12528104208507557, 0.15775296684633508], 'false': [0.04026411499245924, 0.1545085767439546], 'false,false': [0.09658242459863282, 0.21916502515540054], 'false,false,false': [0.21916502515540054, nan], 'true': [0.004175634363684505, 0.001226446918779291], 'false,false,true': [0.024472487892240713, -1.9520404828574182e-17], 'true,true': [0.0002449482756137655, 0.004469834399187042], 'true,true,false': [0.0017108366839579392, 0.0040141795675039975]}, {'': [0.04518485705785668, 0.11207745535336167], 'false': [0.06692790228885474, 0.11046259169203289], 'false,false': [0.056046693808929765, 0.16715331585374973], 'false,false,false': [0.08795483496172525, 0.21223995355942996], 'false,true': [0.036507981158130254, 0.1355714772170647], 'false,false,true': [0.011521853250868045, 0.049693619583945], 'true': [0.04025026769656975, 0.05140690755256692], 'true,false': [8.432988303674893e-05, 0.1307210922048206]}, {'': [0.047287441392147106, 0.10986804632923072], 'false': [0.052022039023175454, 0.1735500498258249], 'false,false': [0.017334222628019355, 0.175230260598077], 'false,false,false': [0.09338395189286057, 0.21854297315386226], 'false,true': [0.026634777206049235, 1.874436774847271e-05], 'true': [0.024998213560881704, 0.07374804799957142], 'false,true,true': [0.0019208667617019305, 0.05086519266203718], 'false,false,true': [0.0, 0.017281480697300042]}, {'': [0.0006165709460337722, 0.09807089466317527], 'false': [0.03350332093080635, 0.1689777377476585], 'false,false': [0.0885343982009496, 0.21222001684555872], 'false,false,false': [0.21222001684555872, nan], 'false,false,true': [0.03093732857788872, 1.786156347111569e-06], 'true': [0.0004503506935536321, 0.0007052747150839934], 'true,true': [0.0002452187845936334, 0.0004321980833261899], 'true,true,false': [0.0, 0.0004846583829280123]}, {'': [0.09039282947453597, 0.08999051380198182], 'true': [0.03776557312880266, 0.09245450888811739], 'false': [0.09193943428759029, 0.0892815207890852], 'false,true': [0.13920642894183674, 9.466826042585363e-05], 'false,false': [0.042977641122104455, 0.17074927379406563], 'false,false,false': [0.04947733599116509, 0.21403091557669443], 'true,true': [0.0392837632457195, 0.016562834517741976], 'true,true,false': [0.014092394099093342, 0.0]}, {'': [0.0006911917773436666, 0.09021468267301727], 'false': [0.03039027802597408, 0.15981545655885096], 'false,false': [0.15358959373193384, 0.1858109900087172], 'false,false,false': [0.054812151627203494, 0.23240316534777192], 'false,false,true': [0.011293420077377112, 0.15588674982147477], 'true': [5.806165225375925e-09, 0.000657864829039645], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07305210067335771, 0.09077822397212701], 'false': [0.021680525349337933, 0.09132388219049803], 'false,false': [0.03228653743310869, 0.15808296043609793], 'false,false,false': [0.1518772869686177, 0.18079279130679435], 'true': [0.08805302652211616, 0.04191340709797153], 'true,true': [0.06603010398430464, 0.23288561753510806], 'false,true': [0.023867995674008272, 0.010869404174471839], 'false,true,true': [0.0023754388286073673, 0.02775544690192871]}, {'': [0.035319597720267444, 0.08956088794778432], 'false': [0.06277940521563428, 0.08973116824648611], 'false,true': [0.00015870023936020994, 0.08241647662977845], 'false,true,false': [0.00022980795645991813, 0.1400502785645931], 'true': [0.01942100154648371, 0.06194113223347931], 'true,false': [0.00032417591596708983, 0.11719533443609796], 'true,false,true': [0.00018901459578295546, 0.00033765776167832734], 'false,true,true': [0.0, 7.118528103853643e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;complex(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.6706489350995123;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8306259993196945;  // std dev = 0.164, 109.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=106 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2765162820382874;  // std dev = 4.883, 98.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=41 */
%   | | | else return 0.1651256792855602;  // std dev = 6.763, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.6766406364733832;  // std dev = 0.231, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5944734122109543;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7156489108720974;  // std dev = 0.096, 107.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=106 */
%   | | else return -0.12544463852839202;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8163232758440256;  // std dev = 0.226, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.16977155327735857;  // std dev = 0.072, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1434610035071346;  // std dev = 6.253, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   | | | else return 0.24162208495433776;  // std dev = 3.256, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5693321578162065;  // std dev = 0.066, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5596700650000759;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6383886366013382;  // std dev = 0.450, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.13003869611905938;  // std dev = 0.397, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6038190062501217;  // std dev = 0.128, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5630931590788727;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #pos=77 */
%   | | | else return -0.11231637819360661;  // std dev = 0.000, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.11772029551021268;  // std dev = 5.561, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   | | | else return 0.16772720281798004;  // std dev = 4.369, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.43179730062573024;  // std dev = 0.064, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.2622945747737294;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.45903759075899253;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.45731520263503583;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.10104875685623153;  // std dev = 0.005, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3591620822437476;  // std dev = 1.085, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.01805470423379012;  // std dev = 4.041, 332.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=77 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5295123980119002;  // std dev = 0.441, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09195525925752351;  // std dev = 7.792, 359.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=114 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3438994211458076;  // std dev = 0.133, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(G, E), complex(A, H) )
%   | | | then return 0.33800855017914316;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.020048894902884046;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3431221826885774;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.3620018116663889;  // std dev = 0.186, 110.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=106 */
%   | | else return -0.10214600470038293;  // std dev = 0.083, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.40768035153507953;  // std dev = 0.130, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.04590244476109124;  // std dev = 3.327, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.0917448705904343;  // std dev = 6.932, 219.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2610953451384071;  // std dev = 0.019, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return 0.29042002249725785;  // std dev = 0.060, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.3306534459044664;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1951969468774587;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F) )
%   | then return 0.007519855770444294;  // std dev = 0.191, 409.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=106 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.45771408922657125;  // std dev = 0.650, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14854078067948578;  // std dev = 0.064, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03663826965644707;  // std dev = 6.286, 201.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=58 */
%   | | | else return 0.1399653573657145;  // std dev = 3.278, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2494886749494741;  // std dev = 0.053, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | else if ( interaction(A, E) )
%   | | then return -0.013812101244534039;  // std dev = 0.174, 227.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=47 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.02025199263032066;  // std dev = 2.384, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.08343751292831451;  // std dev = 6.050, 165.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=57 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.24964297709557204;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5687217206679248;  // std dev = 0.676, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19544238871650685;  // std dev = 0.607, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.09906982832197665;  // std dev = 1.470, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.04705900270479816;  // std dev = 2.915, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.1693272795841775;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.19621168824070878;  // std dev = 0.058, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2630312662285277;  // std dev = 1.036, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2106342888393589;  // std dev = 0.041, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G), location(G, H) )
%   | then return -0.0032931310825324695;  // std dev = 0.185, 417.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=104 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6100292057328262;  // std dev = 0.804, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.23054941755510175;  // std dev = 0.344, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.02752841270316913;  // std dev = 5.873, 247.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=78 */
%   | | | else return 0.05938354072838022;  // std dev = 3.254, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.15671023441852414;  // std dev = 0.076, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.1511568014412962;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.20825885164032765;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.007023496042597935;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.17974890379319064;  // std dev = 0.224, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.08293888017042994;  // std dev = 0.423, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
%   | | | else return 0.06080128559264474;  // std dev = 4.296, 179.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=69 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.012948326829410507;  // std dev = 2.308, 138.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=33 */
%   | | | else return 0.00899625125517718;  // std dev = 6.203, 381.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14142832898656924;  // std dev = 0.070, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.15343338970907144;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.0027123648491747965;  // std dev = 0.414, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(G, F), complex(A, H) )
%   | | | then return 0.18690685742787239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03624590488075527;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.21894639738562297;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08063037007618948;  // std dev = 0.018, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.008993199976439837;  // std dev = 3.498, 287.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=75 */
%   | | | else return 0.02576025166488979;  // std dev = 7.143, 417.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=134 */


Results
   AUC ROC   = 0.938018
   AUC PR    = 0.238209
   CLL	      = -0.219018
   Precision = 0.15677 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.251429


Total learning time: 12.672 seconds
Total inference time: 9.595 seconds
AUC ROC: 0.938018


Results scoring model
   AUC ROC   = 0.974034
   AUC PR    = 0.395772
   CLL	      = -0.186364
   Precision = 0.364662 at threshold = 0.5
   Recall    = 0.732075
   F1        = 0.486826


Total scoring time: 13.963 seconds
Refined model CLL: -0.186364


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.938018
   AUC PR    = 0.238209
   CLL	      = -0.219018
   Precision = 0.15677 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.251429


Total learning time: 47.942 seconds
Total inference time: 9.595 seconds
AUC ROC: 0.938018
Total revision time: 47.942
Best scored revision CLL: -0.186364


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 00:43:52
{'AUC ROC': 0.938018, 'AUC PR': 0.238209, 'CLL': -0.219018, 'Precision': [0.15677, 0.5], 'Recall': 0.634615, 'F1': 0.251429, 'Learning time': 47.942, 'Inference time': 9.595, 'parameter_1.0': {'AUC ROC': 0.917315, 'AUC PR': 0.201705, 'CLL': -0.223872, 'Precision': [0.142549, 0.5], 'Recall': 0.634615, 'F1': 0.232804, 'Learning time': 5.708, 'Inference time': 9.943}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.40360348055405776;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6308238733611562;  // std dev = 0.946, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.5937070529777555;  // std dev = 1.307, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.63703297493984;  // std dev = 1.538, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.17033339782977275;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.052003593016650654;  // std dev = 2.469, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.4016114478971489;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5902227979913092;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5756199143732812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5518096769461321;  // std dev = 1.380, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.13235376777067254;  // std dev = 0.310, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5516779459780036;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5232573627617467;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.16631508879291712;  // std dev = 2.597, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4413712429517364;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4123733899082074;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4184108823127386;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5530473280144791;  // std dev = 0.170, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.23317720945700535;  // std dev = 1.366, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.020718320252482113;  // std dev = 1.890, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.09182134545609119;  // std dev = 2.111, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.08336344543292573;  // std dev = 2.630, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3336850907203157;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1358490662393868;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.42141561744724476;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.46268799577310116;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.10410932590541407;  // std dev = 0.155, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.5425183301373383;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0762672333832361;  // std dev = 0.539, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.12597425799740986;  // std dev = 2.046, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.032767102953587555;  // std dev = 2.692, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.28240208831929603;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33774325160309415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1005234237592682;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.04382090912953207;  // std dev = 1.668, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4586719122423449;  // std dev = 0.961, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.15292031904831027;  // std dev = 0.048, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04698502469230755;  // std dev = 2.708, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2708242231335143;  // std dev = 0.148, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.5533877576287224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14194605388181283;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.012288723965345257;  // std dev = 3.201, 108.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.32402270586368065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.020420237136976535;  // std dev = 0.850, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.07165736155291118;  // std dev = 0.718, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.035462154640817374;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1997821199724732;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20373519495440282;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.015100387260202717;  // std dev = 1.602, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.43117169965774327;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0405328264749961;  // std dev = 2.761, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09738693331794752;  // std dev = 0.663, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15246503094795272;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17105985385479128;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16974454670594952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17384294133084024;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.32998698008095684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22539515183142445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.00514034508681027;  // std dev = 1.762, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.002383495813570575;  // std dev = 2.918, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.043313644321809744;  // std dev = 1.484, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14798068626183516;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.11167885641083852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15982739072379282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.09081723754849143;  // std dev = 0.628, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return -0.8455678838558408;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.18848367803300237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2614914822172669;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.017224478310118536;  // std dev = 3.550, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */


Results
   AUC ROC   = 0.961222
   AUC PR    = 0.4449
   CLL	      = -0.18451
   Precision = 0.385475 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.509225


Total learning time: 4.124 seconds
Total inference time: 4.523 seconds
AUC ROC: 0.961222


Results scoring model
   AUC ROC   = 0.96763
   AUC PR    = 0.249476
   CLL	      = -0.196307
   Precision = 0.139752 at threshold = 0.5
   Recall    = 0.818182
   F1        = 0.238727


Total scoring time: 10.999 seconds
Parameter learned model CLL: -0.196307


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [2.98e-08, 0, 7], 'false,true,true,true': [0.964, 1, 13], 'false,true,true,false': [0.0, 0, 9], 'false,true,false': [5.37e-08, 51, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [3.368, 39, 16], 'false,false,false,false': [1.651, 5, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.068, 0, 5], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.946, 1, 9], 'false,true,true,false': [1.307, 2, 13], 'false,true,false': [0.0, 53, 0], 'false,false,true,true': [1.538, 3, 13], 'false,false,true,false': [0.079, 24, 0], 'false,false,false,true': [2.469, 29, 8], 'false,false,false,false': [1.095, 2, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.077, 0, 10], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.38, 3, 15], 'true,false': [0.31, 51, 0], 'false,true': [0.007, 0, 5], 'false,false,true,true': [0.964, 1, 13], 'false,false,true,false': [0.0, 30, 0], 'false,false,false,true': [2.597, 20, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.08, 0, 5], 'true,false,true': [0.0, 0, 3], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.17, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.366, 4, 10], 'false,false,true,false': [1.89, 61, 12], 'false,false,false,true': [2.111, 27, 12], 'false,false,false,false': [2.63, 23, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.074, 0, 7], 'true,false': [0.907, 2, 2], 'false,true,true,true': [0.141, 0, 15], 'false,true,true,false': [0.054, 0, 7], 'false,true,false': [0.155, 69, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.539, 1, 1], 'false,false,false,true': [2.046, 18, 12], 'false,false,false,false': [2.692, 28, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.05, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.931, 1, 5], 'false,true': [1.668, 45, 22], 'false,false,true,true': [0.961, 1, 13], 'false,false,true,false': [0.048, 23, 0], 'false,false,false,true': [2.708, 26, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [0.148, 0, 17], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.713, 2, 1], 'true,false': [3.201, 83, 25], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [0.85, 14, 5], 'false,false,false,true': [0.718, 4, 3], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.084, 0, 7], 'false,true': [1.602, 55, 22], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.761, 41, 17], 'false,false,false,true': [0.663, 3, 3], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.034, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.066, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.762, 56, 22], 'false,false,false,true': [2.918, 43, 16], 'false,false,false,false': [1.484, 8, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.03, 0, 5], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.628, 1, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.55, 110, 44]}]]
[{'': [0.08999999999999977, 0.2190041658401121], 'false': [0.20891161431702063, 0.22837370242214644], 'false,false': [0.0, 0.22222222222222315], 'false,false,false': [0.20628099173553668, 0.2479338842975207], 'false,true': [0.04158790170132359, 5.659960517696876e-17], 'true': [0.22222222222222224, 1.2688263138573217e-16], 'true,true': [0.22222222222222224, nan], 'false,true,true': [0.06632653061224467, -2.9605947323337506e-16]}, {'': [0.0006677325203353254, 0.17690553432194597], 'false': [0.15080023992579597, 0.20166015509249755], 'false,false': [0.2157421170009352, 0.18655131400747663], 'false,false,true': [0.14785747073419864, 0.0002623638937620844], 'false,false,false': [0.16477784572282642, 0.23999999999999994], 'false,true': [0.10442053006437405, -3.561092720495785e-17], 'false,true,true': [0.08946468518457022, 0.11384002997542714], 'true': [0.0009271942996654126, 0.0]}, {'': [0.13786458593588818, 0.1562729265998122], 'false': [9.069976098352584e-06, 0.15512425557561488], 'false,false': [0.10876541267740789, 0.21749924365725481], 'false,false,false': [0.21749924365725481, nan], 'true': [0.06621124433783572, 0.001880584217052573], 'false,false,true': [0.06641098581628195, -7.401486830834377e-18], 'true,true': [0.0005958364130066674, 0.10026951027431673], 'true,true,false': [0.0, 0.10581020033834548]}, {'': [0.0009062803325540584, 0.11354052157014184], 'false': [0.014481010200678601, 0.11165352234795639], 'false,false': [0.07124073873264342, 0.15796991068870092], 'false,false,false': [0.11425509956914151, 0.20959412057844312], 'false,false,true': [0.13336020405695753, 0.048954069947945066], 'false,true': [0.014481010200678601, nan], 'true': [0.0012900073327311245, 6.8346214752990075e-06], 'true,false': [0.0, 0.0]}, {'': [0.1263213212029111, 0.10571650134064182], 'true': [0.0007768631459742492, 0.2057299162695497], 'false': [0.0537913688368429, 0.17085605785782723], 'false,false': [0.18197086963610065, 0.17023268597625574], 'false,false,true': [0.0, 0.14532444658032603], 'false,false,false': [0.13947724094065975, 0.19068054735244006], 'false,true': [0.0014053722620596626, 0.00034765023569484414], 'false,true,true': [0.0013221520853313369, 0.00042228583991467595]}, {'': [0.09631969965724617, 0.10159709538572183], 'false': [0.04151238925827514, 0.15582805007093511], 'false,false': [0.11299731747710921, 0.19816240774493005], 'false,false,false': [0.19816240774493005, nan], 'false,false,true': [0.06595790904151781, 9.943862265558168e-05], 'true': [0.0011928085298758967, 0.1444160461431461], 'true,true': [0.000824750284766862, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09587488674230563, 0.09165773081149428], 'true': [0.07231845904590332, 0.0948899592163699], 'false': [0.0, 0.09195873005448495], 'false,false': [0.038058456270052866, 0.15966256811215027], 'false,false,false': [0.07357821540040847, 0.23437499999999994], 'true,true': [0.0012829823901615383, 0.15898707430632447], 'true,true,false': [0.0, 0.169661696846226], 'false,true': [0.0, nan]}, {'': [0.0007928588601649035, 0.08393065604343998], 'false': [0.03331727320255453, 0.1377583859811279], 'false,false': [0.13172649952839613, 0.1623889356422061], 'false,false,false': [0.07326107286514205, 0.25], 'false,false,true': [0.0, 0.13141122693230295], 'true': [0.0, 0.0010159173404441105], 'true,true': [0.0, nan]}, {'': [0.0006162854219025133, 0.0914653320627904], 'false': [0.002734862634144908, 0.09168700299561074], 'false,false': [0.039809489435696836, 0.14710437335597573], 'false,false,false': [0.1443657606604873, 0.15729167866954072], 'false,true': [0.002734862634144908, nan], 'false,true,true': [0.0, 0.0], 'true': [0.00022860317164359324, 0.0010957332218614856], 'true,true': [0.0002854079579753324, 0.0]}, {'': [0.051299386831085966, 0.0855763870537646], 'false': [0.2555748013474173, 0.081840001359484], 'false,true': [0.0, 0.0013325348679519775], 'true': [0.00018192059862449927, 0.09143971130515868], 'true,false': [0.0005795703391214338, 0.13147948720139127], 'false,true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0], 'false,true,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
7;false;interaction(A, F).;true;true
7;false,false;interaction(G, A), interaction(H, G).;true;true
7;false,false,true;recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;phenotype(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.22353355048412768;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.7336614886487065;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7375006973729559;  // std dev = 0.009, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6899848645841061;  // std dev = 1.291, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.15836442223016484;  // std dev = 0.081, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.20035999120299922;  // std dev = 2.071, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.1029569851155541;  // std dev = 1.712, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.47443623172618954;  // std dev = 0.286, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5626357829633326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4975035302408084;  // std dev = 1.573, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | else return -0.12538457342150267;  // std dev = 0.016, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4999840800034387;  // std dev = 0.966, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.19148486828885933;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.188620192918836;  // std dev = 2.585, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.42631504794364605;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.4470448983340072;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6428477192353028;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12569327566700841;  // std dev = 0.423, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.17752643429953377;  // std dev = 0.380, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), enzyme(I, L) )
%   | | | then return 0.17417056135775266;  // std dev = 0.778, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.0011809814461018052;  // std dev = 1.052, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10112169013876023;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1659647955177027;  // std dev = 3.218, 65.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.326720523304133;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(D, G) )
%   | | | then return 0.35101296604730087;  // std dev = 0.831, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2680803600489038;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.09489537596476742;  // std dev = 0.032, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.10628318355349632;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.5955376809702881;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3830235502159427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.018625572413573252;  // std dev = 2.871, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.3870829593548053;  // std dev = 1.192, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25928915636864647;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return -0.049961241415683234;  // std dev = 0.898, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.03960500902791601;  // std dev = 0.809, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( location(A, H) )
%   | | | then return 0.0660441727915728;  // std dev = 1.266, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.04338663959797271;  // std dev = 0.401, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4200317334590041;  // std dev = 0.889, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.15971741285240318;  // std dev = 0.160, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.004011958826751264;  // std dev = 2.298, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.3173945188956048;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2851996838780807;  // std dev = 0.068, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.07232213301135841;  // std dev = 0.504, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.09484479392887085;  // std dev = 2.258, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else if ( location(A, I) )
%   | | | then return -0.04740477258921447;  // std dev = 1.270, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.04354944863633684;  // std dev = 0.359, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2066376114740951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then return -0.15615852382382203;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.06551912614898193;  // std dev = 0.734, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.26687928762234925;  // std dev = 1.132, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17615738726149718;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), location(A, F) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.13223569317771522;  // std dev = 0.318, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.008524862396091515;  // std dev = 0.701, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.05196563147014494;  // std dev = 0.728, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.0018297625202982892;  // std dev = 1.143, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.3780476494821239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04246355741301891;  // std dev = 2.519, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.08875473032381606;  // std dev = 0.961, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1220991384746286;  // std dev = 0.967, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15583696122343343;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15113324343568446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.14853429159091075;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, A) )
%   | | then return 0.11407161652072449;  // std dev = 0.352, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), enzyme(A, K) )
%   | | | then return 0.08888937555002267;  // std dev = 1.694, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.025210715993228106;  // std dev = 2.301, 101.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=22 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.02087125317930343;  // std dev = 0.441, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10892356658332339;  // std dev = 1.337, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13572679889770095;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.13071441404597878;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return -0.4440639934169714;  // std dev = 0.461, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( phenotype(A, G), interaction(H, E) )
%   | | | then return 0.19958021857718167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27091948379400976;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( phenotype(A, K), interaction(L, I) )
%   | | | then return -0.019204615006731117;  // std dev = 1.443, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.08115648037575512;  // std dev = 2.050, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.04674817733683396;  // std dev = 1.019, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.05031471675945488;  // std dev = 1.856, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */


Results
   AUC ROC   = 0.970701
   AUC PR    = 0.469718
   CLL	      = -0.198267
   Precision = 0.103693 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.183417


Total learning time: 9.976 seconds
Total inference time: 4.646 seconds
AUC ROC: 0.970701


Results scoring model
   AUC ROC   = 0.978341
   AUC PR    = 0.259464
   CLL	      = -0.19986
   Precision = 0.12336 at threshold = 0.5
   Recall    = 0.854545
   F1        = 0.215596


Total scoring time: 10.567 seconds
Refined model CLL: -0.19986


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.961222
   AUC PR    = 0.4449
   CLL	      = -0.18451
   Precision = 0.385475 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.509225


Total learning time: 35.666000000000004 seconds
Total inference time: 4.523 seconds
AUC ROC: 0.961222
Total revision time: 35.666000000000004
Best scored revision CLL: -0.196307


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:44:38
{'AUC ROC': 0.961222, 'AUC PR': 0.4449, 'CLL': -0.18451, 'Precision': [0.385475, 0.5], 'Recall': 0.75, 'F1': 0.509225, 'Learning time': 35.666000000000004, 'Inference time': 4.523, 'parameter_0.2': {'AUC ROC': 0.961222, 'AUC PR': 0.4449, 'CLL': -0.18451, 'Precision': [0.385475, 0.5], 'Recall': 0.75, 'F1': 0.509225, 'Learning time': 4.124, 'Inference time': 4.523}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7202179006167531;  // std dev = 1.857, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1544452313958072;  // std dev = 4.745, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | | | else return 0.33183314562582816;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7304576929861314;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.38614007887762114;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6910568788054865;  // std dev = 0.970, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.7298500788429412;  // std dev = 0.067, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.12544463852839108;  // std dev = 7.60e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8208357936716705;  // std dev = 0.157, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16377908090488325;  // std dev = 0.042, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.10883376126358968;  // std dev = 3.934, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | | | else return 0.18777859701533478;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.6017744467226794;  // std dev = 0.057, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5302169503008791;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6187718101160603;  // std dev = 0.798, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return -0.13129015118874157;  // std dev = 0.165, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4535296495323831;  // std dev = 1.308, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5436277389397681;  // std dev = 0.969, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14798113990939085;  // std dev = 4.250, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4735225890086701;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.35664752646588016;  // std dev = 0.872, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3255231306811968;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5407532309091352;  // std dev = 0.307, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.377784478362536;  // std dev = 1.122, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.009996931821034392;  // std dev = 2.335, 138.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=24 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.0509811585751968;  // std dev = 2.300, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.0877626896640973;  // std dev = 4.180, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.36087372129627204;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.426533880644788;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.35865643260792357;  // std dev = 0.809, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.4207409978134659;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.10105052181317255;  // std dev = 0.088, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.25456196996454616;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4074510889151041;  // std dev = 0.182, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.052547260610230635;  // std dev = 2.255, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.04586416574536022;  // std dev = 4.267, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2739292928387934;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2846195708001358;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2333000727319868;  // std dev = 0.929, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, G) )
%   | then return 0.004947140587889425;  // std dev = 2.435, 179.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=45 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.48398358828608057;  // std dev = 0.406, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.13884070931827225;  // std dev = 0.031, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.044002931192956715;  // std dev = 4.353, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2340073673318039;  // std dev = 1.031, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1559731449452011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23116899123312717;  // std dev = 0.564, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.004886863061276339;  // std dev = 4.521, 220.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=52 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29252011850000326;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.008567394447347275;  // std dev = 1.315, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.0040775888205160015;  // std dev = 0.747, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09707492220584826;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18501782873406958;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21119513464358036;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, F) )
%   | then return 0.010659921591647121;  // std dev = 2.241, 161.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.20167762616311002;  // std dev = 0.451, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 9.9411710650433E-4;  // std dev = 4.274, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.027223552448802847;  // std dev = 0.716, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03551373158509049;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.08466151153453877;  // std dev = 0.928, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.1587268132476205;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19867190584465066;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( enzyme(E, G), interaction(F, A) )
%   | | | then return 0.11444185517999639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03356284868678404;  // std dev = 1.154, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.007700247807344949;  // std dev = 2.339, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.031195743045051412;  // std dev = 4.063, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
%   | | | else return 0.06109176710620153;  // std dev = 2.056, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.02253315341784153;  // std dev = 1.277, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13586503729980348;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.18569666061516474;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04234288289768215;  // std dev = 0.281, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, J), interaction(K, G) )
%   | | | then return 0.11781932714740595;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.37115065289079313;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.01024562286338801;  // std dev = 5.188, 306.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=85 */


Results
   AUC ROC   = 0.96339
   AUC PR    = 0.414211
   CLL	      = -0.171767
   Precision = 0.479452 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.588235


Total learning time: 4.136 seconds
Total inference time: 4.737 seconds
AUC ROC: 0.96339


Results scoring model
   AUC ROC   = 0.959105
   AUC PR    = 0.257042
   CLL	      = -0.187144
   Precision = 0.23416 at threshold = 0.5
   Recall    = 0.772727
   F1        = 0.359408


Total scoring time: 10.711 seconds
Parameter learned model CLL: -0.187144


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 16], 'false,true,true,true': [1.857, 4, 25], 'false,true,true,false': [0.0, 0, 20], 'false,true,false': [0.0, 135, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [4.745, 76, 32], 'false,false,false,false': [2.176, 10, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.072, 0, 13], 'true,false': [1.414, 3, 6], 'false,true,true,true': [0.97, 1, 19], 'false,true,true,false': [0.067, 0, 26], 'false,true,false': [7.6e-08, 105, 0], 'false,false,true,true': [0.157, 0, 18], 'false,false,true,false': [0.042, 37, 0], 'false,false,false,true': [3.934, 58, 22], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.057, 0, 10], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.798, 1, 25], 'true,false': [0.165, 56, 0], 'false,true': [1.308, 2, 14], 'false,false,true,true': [0.969, 1, 31], 'false,false,true,false': [6.32e-08, 77, 0], 'false,false,false,true': [4.25, 55, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true': [0.024, 0, 5], 'true,false,true': [0.872, 1, 10], 'true,false,false': [0.894, 1, 4], 'false,true,true': [0.307, 0, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.122, 2, 20], 'false,false,true,false': [2.335, 114, 24], 'false,false,false,true': [2.3, 44, 16], 'false,false,false,false': [4.18, 60, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), enzyme(A, L)'}, {'true,true': [0.088, 0, 15], 'true,false': [0.062, 0, 4], 'false,true,true,true': [0.809, 1, 32], 'false,true,true,false': [0.087, 0, 13], 'false,true,false': [0.088, 125, 0], 'false,false,true,true': [0.71, 1, 3], 'false,false,true,false': [0.182, 0, 2], 'false,false,false,true': [2.255, 41, 16], 'false,false,false,false': [4.267, 68, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 2], 'true,false': [0.929, 1, 14], 'false,true': [2.435, 134, 45], 'false,false,true,true': [0.406, 0, 18], 'false,false,true,false': [0.031, 31, 0], 'false,false,false,true': [4.353, 70, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true,true': [1.031, 1, 35], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.564, 1, 2], 'true,false': [4.521, 168, 52], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 2], 'false,false,true': [1.315, 22, 9], 'false,false,false,true': [0.747, 8, 3], 'false,false,false,false': [1.936, 10, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.118, 0, 16], 'false,true': [2.241, 116, 45], 'false,false,true,true': [0.451, 1, 3], 'false,false,true,false': [4.274, 100, 34], 'false,false,false,true': [0.716, 6, 3], 'false,false,false,false': [2.0, 12, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'enzyme(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.928, 1, 11], 'true,true,false': [0.0, 0, 2], 'true,false': [0.077, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.154, 2, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.339, 109, 44], 'false,false,false,true': [4.063, 87, 32], 'false,false,false,false': [2.056, 15, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(K, G)'}, {'true,true': [1.277, 2, 13], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.004, 0, 2], 'true,false,false': [0.036, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.281, 1, 1], 'false,true,false,true': [0.02, 0, 2], 'false,true,false,false': [0.053, 0, 3], 'false,false': [5.188, 221, 85]}]]
[{'': [0.047499999999999785, 0.2050452651818629], 'false': [0.1847530718336495, 0.22704315886134152], 'false,false': [0.0, 0.21861243722487567], 'false,false,false': [0.20850480109739505, 0.2493074792243767], 'false,true': [0.07496876301541104, -5.921189464667501e-17], 'false,true,true': [0.11890606420927562, -8.881784197001253e-17], 'true': [0.18750000000000006, -2.220446049250313e-16], 'true,true': [0.18750000000000006, nan]}, {'': [0.11980560816620574, 0.1806953091103662], 'false': [0.15528802831824243, 0.20608852649860668], 'false,false': [0.21392463738635792, 0.2011147009481199], 'false,false,true': [0.001372420576988868, 4.8489040984591e-05], 'false,false,false': [0.19342392662243307, 0.23437500000000008], 'false,true': [0.020935409532060682, 5.4982473600483945e-17], 'true': [0.00040218141382648734, 0.2222222222222222], 'false,true,true': [0.04707687484269609, 0.00017228033662583734]}, {'': [0.13946988281926678, 0.15579748099842597], 'false': [0.10696660360615651, 0.15076408066770475], 'false,false': [0.09784309117059861, 0.21765869958753026], 'false,false,false': [0.21765869958753026, nan], 'true': [0.017243044804081897, 0.00048362844547661377], 'false,false,true': [0.029330995082006983, 5.190653102143589e-17], 'true,true': [0.0003256975263534301, 0.023254982985303357], 'true,true,false': [0.0, 0.02448368760197778]}, {'': [0.07737104318164736, 0.10904940858482087], 'false': [0.01571062475487887, 0.10637478063237604], 'false,false': [0.05978937024583462, 0.15733148007957082], 'false,false,false': [0.08814996917523994, 0.20560567493705784], 'true': [0.000111722019245164, 0.0976984087462409], 'true,false': [0.06907677612684554, 0.15999999999999998], 'false,false,true': [0.05723237132537864, 0.03952052471834858], 'false,true': [0.01571062475487887, nan]}, {'': [0.0013241030255698508, 0.099948894955228], 'false': [0.048921309808713495, 0.15538173975282285], 'false,false': [0.09467824408720193, 0.1552671354884579], 'false,false,false': [0.08921569496658008, 0.19573330422582944], 'false,false,true': [0.12596219520763846, 0.016526953384010418], 'false,true': [0.01519149324258361, 6.241037271492544e-05], 'false,true,true': [0.019855246653929876, 0.0005875546522919542], 'true': [0.0005143343668896498, 0.000957111922721049]}, {'': [0.04355280113887763, 0.09131834116136318], 'false': [0.03312938088017762, 0.16055102704061583], 'false,false': [0.09353203039146846, 0.19335675643278055], 'false,false,false': [0.19335675643278055, nan], 'false,false,true': [0.009150273161262736, 3.029958439491842e-05], 'true': [3.724361097401374e-05, 0.05755386478691589], 'true,true': [0.0, 2.4539801700529384e-05], 'true,true,false': [nan, 2.4539801700529384e-05]}, {'': [0.09065087051056818, 0.10448614684123067], 'false': [0.0, 0.10580211856852632], 'false,false': [0.05578459251180791, 0.1620339948242099], 'false,false,false': [0.05074740761329235, 0.2343749999999999], 'true': [0.034655249046659245, 0.0929073732599368], 'true,true': [0.02949870434408318, 0.08064279442651698], 'true,true,false': [0.0, 0.10611012207728328], 'false,true': [nan, 0.0]}, {'': [0.0008262918564662863, 0.0864430649264422], 'false': [0.03120091817120442, 0.14034593078639446], 'false,false': [0.1349917536785446, 0.1671489795389764], 'false,false,false': [0.05695667612574334, 0.2222222222222222], 'false,false,true': [0.05078326031653042, 0.1363380814734361], 'true': [-4.625929269271485e-18, 0.0008730239988147537], 'true,true': [-4.625929269271485e-18, nan]}, {'': [0.04610712322469522, 0.09087167986522669], 'false': [0.1671689621693113, 0.0887966244724284], 'false,true': [0.1671689621693113, nan], 'false,true,true': [0.0, 0.1902325657677968], 'false,false': [0.03574355363274552, 0.14513947143465045], 'false,false,false': [0.1387272084596892, 0.17618984016588027], 'true': [0.062231285560846276, 0.000995694917927804], 'true,true': [0.07181949949938972, 0.0]}, {'': [0.08231000288650903, 0.0875751138669639], 'false': [0.03329547647201429, 0.08797006857788855], 'true': [0.1087870710256281, 0.0007760669169811265], 'false,true': [0.03946775268195203, 0.016042284652427276], 'false,true,true': [nan, 0.03946775268195203], 'false,true,false': [0.00020949227121034447, 0.0009267753320776895], 'true,false': [8.15833764475013e-06, 0.0003322909792346229], 'true,false,true': [nan, 8.15833764475013e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;enzyme(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), enzyme(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;enzyme(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;enzyme(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8364098046647294;  // std dev = 0.146, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03996711691769419;  // std dev = 2.558, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.18488160836683767;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7744639907355252;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7021009154897686;  // std dev = 0.146, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.12544463852839108;  // std dev = 7.88e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8302834988517334;  // std dev = 0.123, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.15834250061046878;  // std dev = 0.058, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16016670212802392;  // std dev = 4.159, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.47336475291128083;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5694273474871633;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5691132695091937;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.622392980588346;  // std dev = 0.810, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return -0.13845183789550872;  // std dev = 0.056, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5719423816756771;  // std dev = 0.128, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5650023544708668;  // std dev = 8.43e-08, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.09393500587143176;  // std dev = 0.851, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10371598431108933;  // std dev = 4.332, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.387491235792991;  // std dev = 0.208, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, D), phenotype(A, G) )
%   | | | then return -0.020752252653255903;  // std dev = 0.960, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return -0.14844356516631182;  // std dev = 0.953, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.00583871273360782;  // std dev = 0.944, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.19914380640002508;  // std dev = 0.689, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(K, I), interaction(K, K) )
%   | | | then return 0.03507016632099717;  // std dev = 3.086, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | | else return 0.12440013915700314;  // std dev = 4.210, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return -0.05622128876400014;  // std dev = 0.505, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.061097591140104615;  // std dev = 1.771, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3333782300752256;  // std dev = 0.095, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.37980062319929325;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.385041438714532;  // std dev = 0.800, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.33375962398611064;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.10287933862248383;  // std dev = 0.074, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5104948894123649;  // std dev = 0.250, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04562637524937137;  // std dev = 3.716, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10408714046215184;  // std dev = 2.924, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.0036474424349089824;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22342407539292122;  // std dev = 0.208, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.08287692550484363;  // std dev = 0.640, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.037262426431829525;  // std dev = 1.417, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.07718137206614553;  // std dev = 1.332, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.01115471538901052;  // std dev = 1.570, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.48836074881982355;  // std dev = 0.311, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14179893454517775;  // std dev = 0.174, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.014724327382630659;  // std dev = 3.979, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | | else return 0.2476798176055305;  // std dev = 1.740, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.24294062004989536;  // std dev = 0.168, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return 0.15168974949757735;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.10594311667595499;  // std dev = 0.097, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.011359200790757744;  // std dev = 2.082, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.06030265355463552;  // std dev = 3.724, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.23307262715805943;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.07408568725307374;  // std dev = 0.210, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.04667915587554115;  // std dev = 2.170, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.12455697988182408;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.17736777087789668;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.18090966719855356;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2305138831349724;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4058213539535833;  // std dev = 0.460, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.12716571206468802;  // std dev = 1.930, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | | else return -0.1142810887425214;  // std dev = 0.382, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.020904701236110986;  // std dev = 1.652, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.08503427754774265;  // std dev = 3.999, 111.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1545095677260637;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.09556510086259225;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.13390988583042762;  // std dev = 0.749, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19601835141363855;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3249514747629179;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.1484461174999017;  // std dev = 0.950, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.02377652023438477;  // std dev = 3.904, 194.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=39 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.02825076036295289;  // std dev = 2.201, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.10823025722665491;  // std dev = 2.056, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.14628432462203755;  // std dev = 0.685, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14129256401938958;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.17505828696146009;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.16225951435263375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2862536657090002;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.05634435256341326;  // std dev = 0.900, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.0756724886119044;  // std dev = 1.380, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | | else if ( location(A, M) )
%   | | | then return 0.007164726126018142;  // std dev = 4.717, 227.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=65 */
%   | | | else return -0.045277721995215466;  // std dev = 1.268, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */


Results
   AUC ROC   = 0.964749
   AUC PR    = 0.424305
   CLL	      = -0.1778
   Precision = 0.451613 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.566802


Total learning time: 10.99 seconds
Total inference time: 5.871 seconds
AUC ROC: 0.964749


Results scoring model
   AUC ROC   = 0.964591
   AUC PR    = 0.283904
   CLL	      = -0.187665
   Precision = 0.23224 at threshold = 0.5
   Recall    = 0.772727
   F1        = 0.357143


Total scoring time: 13.228 seconds
Refined model CLL: -0.187665


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.96339
   AUC PR    = 0.414211
   CLL	      = -0.171767
   Precision = 0.479452 at threshold = 0.5
   Recall    = 0.76087
   F1        = 0.588235


Total learning time: 39.065000000000005 seconds
Total inference time: 4.737 seconds
AUC ROC: 0.96339
Total revision time: 39.065000000000005
Best scored revision CLL: -0.187144


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:45:29
{'AUC ROC': 0.96339, 'AUC PR': 0.414211, 'CLL': -0.171767, 'Precision': [0.479452, 0.5], 'Recall': 0.76087, 'F1': 0.588235, 'Learning time': 39.065000000000005, 'Inference time': 4.737, 'parameter_0.4': {'AUC ROC': 0.96339, 'AUC PR': 0.414211, 'CLL': -0.171767, 'Precision': [0.479452, 0.5], 'Recall': 0.76087, 'F1': 0.588235, 'Learning time': 4.136, 'Inference time': 4.737}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.805517356152143;  // std dev = 1.376, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.14185106490048816;  // std dev = 0.000, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14386322081379874;  // std dev = 6.211, 189.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=54 */
%   | | | else return 0.26439893509951234;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6689144589802913;  // std dev = 0.947, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.6494530261603095;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6898956484318911;  // std dev = 0.979, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.6758539860939738;  // std dev = 1.379, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return -0.12544463852839133;  // std dev = 4.21e-08, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5006599031417507;  // std dev = 4.938, 112.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=75 */
%   | | | else return -0.16369609385582704;  // std dev = 0.066, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5221900688140136;  // std dev = 1.356, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.64154384655378;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.26450196270754517;  // std dev = 6.194, 193.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=97 */
%   | else return -0.1278757549834177;  // std dev = 0.231, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6081989779638461;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.572549970096908;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.11231637819360636;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.46211010673286046;  // std dev = 0.194, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.4139540892371366;  // std dev = 0.649, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.09307433047785049;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3689223894343967;  // std dev = 1.231, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -4.869215598752559E-4;  // std dev = 3.375, 197.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=38 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.08594698032666608;  // std dev = 6.118, 225.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.29062756985003974;  // std dev = 0.952, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.26653239567909004;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.332551491582534;  // std dev = 2.071, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0.4471252574494223;  // std dev = 0.176, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11008677683376769;  // std dev = 0.297, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3978798885216125;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4553973368217154;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.10769772528076987;  // std dev = 5.838, 204.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2785489497664137;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18143562140362907;  // std dev = 0.966, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.019002247720356174;  // std dev = 3.193, 231.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=65 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3182336788203493;  // std dev = 4.821, 110.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=75 */
%   | | | else return -0.1503966164079968;  // std dev = 0.062, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2248063303317209;  // std dev = 1.323, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else if ( function(A, F) )
%   | | | then return 0.04654339347437838;  // std dev = 1.068, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.008677344404725893;  // std dev = 5.793, 372.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=83 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.2627735173385368;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.01640044409082366;  // std dev = 1.398, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.08518531383935588;  // std dev = 2.372, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1816294777873882;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16910399773595877;  // std dev = 0.892, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, F) )
%   | then return 0.0062316735109412755;  // std dev = 3.143, 241.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=65 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.19182196393752532;  // std dev = 0.730, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.051668638317230633;  // std dev = 5.010, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   | | else if ( function(A, I) )
%   | | | then return 0.05541394290990661;  // std dev = 2.280, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16078266259418816;  // std dev = 0.058, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.12146909859686687;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.12098901376662723;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.20281610590747548;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.23480474611861998;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3698157237415701;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return -0.0029675594939176492;  // std dev = 3.182, 256.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=64 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.030082394058972832;  // std dev = 5.024, 183.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=54 */
%   | | | else return 0.050742580400183944;  // std dev = 2.260, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14411520858409818;  // std dev = 0.068, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1881746785879741;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20830546434349428;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.6130220985952433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return -0.7712653671943042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.08231002729050155;  // std dev = 0.371, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.050889100525344566;  // std dev = 0.940, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.23072574312151595;  // std dev = 0.734, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.014402586744037434;  // std dev = 6.361, 453.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=131 */


Results
   AUC ROC   = 0.978686
   AUC PR    = 0.392055
   CLL	      = -0.17863
   Precision = 0.451613 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.518519


Total learning time: 36.061 seconds
Total inference time: 14.046 seconds
AUC ROC: 0.978686


Results scoring model
   AUC ROC   = 0.966247
   AUC PR    = 0.233174
   CLL	      = -0.202828
   Precision = 0.204969 at threshold = 0.5
   Recall    = 0.596386
   F1        = 0.305085


Total scoring time: 130.139 seconds
Parameter learned model CLL: -0.202828


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [1.301, 2, 11], 'false,true,true,true': [1.376, 2, 36], 'false,true,true,false': [1.79e-07, 0, 29], 'false,true,false': [0.0, 159, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [6.211, 135, 54], 'false,false,false,false': [2.778, 19, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.947, 1, 17], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.979, 1, 25], 'false,true,true,false': [1.379, 2, 40], 'false,true,false': [4.21e-08, 154, 0], 'false,false,true,true': [4.938, 37, 75], 'false,false,true,false': [0.066, 94, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.356, 3, 43], 'true,true,false,true': [0.079, 0, 9], 'true,true,false,false': [6.194, 96, 97], 'true,false': [0.231, 232, 0], 'false,true': [0.004, 0, 3], 'false,false,true,true': [0.024, 0, 14], 'false,false,true,false': [0.0, 23, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.194, 0, 26], 'true,false': [0.0, 0, 0], 'false,true,true': [0.649, 1, 8], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [1.231, 3, 26], 'false,false,true,false': [3.375, 159, 38], 'false,false,false,true': [6.118, 158, 67], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.952, 1, 19], 'true,false': [0.9, 1, 7], 'false,true,true,true': [2.071, 4, 45], 'false,true,true,false': [0.176, 0, 20], 'false,true,false': [0.297, 166, 0], 'false,false,true,true': [1.05e-08, 0, 5], 'false,false,true,false': [0.141, 0, 3], 'false,false,false,true': [5.838, 137, 67], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.098, 0, 20], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.966, 1, 6], 'true,false': [0.0, 0, 0], 'false,true': [3.193, 166, 65], 'false,false,true,true': [4.821, 35, 75], 'false,false,true,false': [0.062, 105, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.323, 2, 45], 'true,true,false,true': [1.068, 4, 6], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.793, 289, 83], 'false,true,true': [0.074, 0, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.398, 41, 15], 'false,false,false,true': [2.372, 17, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.892, 1, 11], 'false,true': [3.143, 176, 65], 'false,false,true,true': [0.73, 1, 6], 'false,false,true,false': [5.01, 119, 56], 'false,false,false,true': [2.28, 23, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.058, 0, 15], 'true,true,false': [0.68, 1, 2], 'true,false': [0.963, 1, 9], 'false,true,true,true': [0.0, 0, 5], 'false,true,true,false': [0.022, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true': [3.182, 192, 64], 'false,false,false,true': [5.024, 129, 54], 'false,false,false,false': [2.26, 22, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.068, 0, 17], 'true,false,true,true': [0.029, 0, 3], 'true,false,true,false': [0.113, 0, 6], 'true,false,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.371, 2, 1], 'false,true,false,true': [0.94, 1, 7], 'false,true,false,false': [0.734, 1, 1], 'false,false': [6.361, 322, 131]}]]
[{'': [0.0663265306122458, 0.2124980248887955], 'false': [0.20489075103766968, 0.2192612582222973], 'false,false': [0.15999999999999986, 0.2112569357711761], 'false,false,false': [0.2040816326530619, 0.2412109374999995], 'false,true': [0.02895967921586013, -1.424437088198314e-16], 'true': [-2.3684757858670006e-16, 0.13017751479289916], 'false,true,true': [0.04986149584487714, 1.1025663141105003e-15], 'true,true': [-2.3684757858670006e-16, nan]}, {'': [0.06425572031541593, 0.18953212648756398], 'false': [0.15116022444211055, 0.22789908408820958], 'false,false': [0.22789908408820958, nan], 'false,false,true': [0.21773155855713194, 4.603034272018507e-05], 'false,true': [0.042098552104645276, 1.1534784671430199e-17], 'true': [0.04981807579593885, 0.09000000000000022], 'false,true,true': [0.03687234927877185, 0.04525843264843327]}, {'': [0.14241150953491344, 0.11683093520321194], 'true': [0.17586006681962404, 0.0002296466655955069], 'true,true': [0.039980204443138455, 0.19603981974759704], 'true,true,false': [0.0006884271619166506, 0.19881558285445528], 'false': [4.785854599731465e-06, 0.11033818862130665], 'false,false': [0.11033818862130665, nan], 'false,false,true': [4.147410400915216e-05, -9.654113257610057e-18]}, {'': [0.001442282653430109, 0.12108690352595855], 'false': [0.09905106392282596, 0.11963267679210193], 'false,false': [0.0723819828407798, 0.16632994325149805], 'false,false,false': [0.16632994325149805, nan], 'false,true': [0.04678616143632744, 0.25], 'false,false,true': [0.05225353152043671, 0.05783428474242627], 'true': [0.001442282653430109, nan]}, {'': [0.06139803520347188, 0.11496475571041428], 'false': [0.06650661189293888, 0.16443768171224674], 'false,false': [0.003256565345533896, 0.1670910073649537], 'false,false,false': [0.1670910073649537, nan], 'false,true': [0.06528318055420573, 0.0005310416237081084], 'false,true,true': [0.0874911559896501, 0.001551463296481126], 'true': [0.04530376090747231, 0.1012190227875219], 'false,false,true': [2.2204460492503132e-17, 0.006616513717910055]}, {'': [0.036745219008343516, 0.10266642456483958], 'false': [0.044138500682372635, 0.1629854524307513], 'false,false': [0.1629854524307513, nan], 'false,false,true': [0.21127358184001033, 3.7056210327223756e-05], 'true': [0.036745219008343516, nan], 'true,true': [0.00048106656063700014, 0.1333711582959825], 'true,true,false': [nan, 0.13337115829598248]}, {'': [0.09027842941451189, 0.08742270017340102], 'true': [0.05530581336502157, 0.09020437611082968], 'false': [0.001380643244433724, 0.08922678381624123], 'false,false': [0.03490050116936028, 0.18755496027855006], 'false,false,false': [0.18755496027855006, nan], 'true,true': [0.03722578302498401, 0.11407931194777318], 'true,true,false': [0.11407931194777318, nan], 'false,true': [0.001380643244433724, nan]}, {'': [0.029511378424294993, 0.08962802740447666], 'false': [0.040990952672479465, 0.14205455618230978], 'false,false': [0.14158481783170007, 0.14442708478074567], 'false,false,false': [0.14442708478074567, nan], 'false,false,true': [0.07621954818871547, 0.14344393036040298], 'true': [-7.401486830834377e-18, 0.06631344164882004], 'true,true': [-7.401486830834377e-18, nan]}, {'': [0.05686324398294856, 0.08507738809816973], 'false': [0.0026376013768131933, 0.08575491376020553], 'false,false': [0.03956204653392438, 0.13928545709825083], 'false,false,false': [0.1379470988318698, 0.14592484547894793], 'true': [0.036947827797258775, 0.09267721867722074], 'true,true': [0.00022545156562154094, 0.1541713283759013], 'false,true': [0.0002977235356858704, 0.0], 'false,true,true': [-1.1102230246251566e-17, 0.0001543837393969405]}, {'': [0.02295974991760488, 0.09164444535561289], 'false': [0.1585760673137616, 0.08932759933924744], 'false,true': [0.12339188727480539, 0.1549188021102807], 'false,true,false': [0.1103958866800578, 0.2695649277013756], 'false,true,true': [0.0, 0.04585765127091614], 'true': [0.00027148240719824835, 0.06116768977938227], 'true,false': [0.0016039650427206761, 0.0], 'true,false,true': [0.0002797863467518952, 0.002130971545660156]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;function(A, E), function(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8429974199479975;  // std dev = 0.122, 66.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=65 */
%   | | else return -0.14185106490048827;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5185262935900793;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=70 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.5385128322212613;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.721636982666671;  // std dev = 0.047, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6558546038651304;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.7225212705317968;  // std dev = 1.19e-07, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7873063057920745;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.35052510636463036;  // std dev = 5.318, 121.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=67 */
%   | | else return -0.12790132696156453;  // std dev = 0.131, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5461668801566822;  // std dev = 1.011, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return 0.11006645208258577;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, C), recursion_proteinclass(C, B) )
%   | | | then return 0.40917394189035644;  // std dev = 1.244, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.2847636779111766;  // std dev = 5.715, 178.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=97 */
%   | else return -0.1227647843823537;  // std dev = 0.541, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.55483211263497;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.2230184158450918;  // std dev = 0.948, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.49738324733129935;  // std dev = 0.639, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.42882148200551923;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.5279196959882727;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.40443348098272924;  // std dev = 0.230, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12067733465386297;  // std dev = 0.128, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.03900912030186588;  // std dev = 0.262, 218.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=60 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6296052950232566;  // std dev = 0.151, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.19702642302433732;  // std dev = 0.548, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13892407605106302;  // std dev = 3.442, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.09170929321015098;  // std dev = 4.356, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3197819002581661;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E), complex(E, F) )
%   | | | then return -0.26802012522587826;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.11400269953178144;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3601799088168043;  // std dev = 0.163, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.39015537245017;  // std dev = 0.234, 69.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=65 */
%   | | else return -0.11468766638479047;  // std dev = 0.256, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.47492810711166883;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.03829230545142634;  // std dev = 3.962, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | | else return 0.10751808715785635;  // std dev = 3.857, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2768592138142544;  // std dev = 0.166, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.11913162674231914;  // std dev = 0.712, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.19300037938849066;  // std dev = 0.974, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.01528213530812438;  // std dev = 0.213, 104.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.03171492366873755;  // std dev = 2.550, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | | | else return -0.1042282908480714;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.16944616766007017;  // std dev = 5.076, 130.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=70 */
%   | | | else return 0.5973713021074825;  // std dev = 0.186, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11503079410705677;  // std dev = 0.205, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.21628963761498068;  // std dev = 0.163, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09118791842102976;  // std dev = 0.086, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.009768473190325545;  // std dev = 2.939, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.024116051347285183;  // std dev = 5.076, 280.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=85 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.24245487366190593;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( enzyme(A, J), location(H, I) )
%   | | | then return 0.06396465751384482;  // std dev = 0.780, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.029625753529358523;  // std dev = 1.393, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.5743257527652528;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09870196588674957;  // std dev = 1.899, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.17369459263346287;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.02553665524890847;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.28848906376007943;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06787552598219229;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.008589997541206104;  // std dev = 0.209, 220.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=51 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.20549270854857618;  // std dev = 4.644, 125.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=83 */
%   | | | else return -0.12725915330192977;  // std dev = 0.642, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.02350497866867396;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.07775827361204643;  // std dev = 1.511, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1705990614679259;  // std dev = 0.035, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.15323241378273605;  // std dev = 0.215, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.08603946229491766;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.042417221163219304;  // std dev = 0.780, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18446897200191037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3867384254453466;  // std dev = 0.475, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.142671448443289;  // std dev = 1.435, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.07199197898269846;  // std dev = 2.459, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.021933054133290473;  // std dev = 4.293, 214.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=64 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.14034624101197213;  // std dev = 0.097, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.12489479614723938;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( function(A, F), function(C, F) )
%   | | then if ( interaction(G, A), interaction(G, C) )
%   | | | then return 0.1890422053577632;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06701975598485758;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1872256456572591;  // std dev = 0.132, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09329515176441626;  // std dev = 0.092, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return -0.027467882284304725;  // std dev = 2.060, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.03287135599631497;  // std dev = 5.161, 327.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=106 */


Results
   AUC ROC   = 0.994468
   AUC PR    = 0.597381
   CLL	      = -0.165504
   Precision = 0.218362 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.355556


Total learning time: 126.709 seconds
Total inference time: 41.846 seconds
AUC ROC: 0.994468


Results scoring model
   AUC ROC   = 0.982364
   AUC PR    = 0.31863
   CLL	      = -0.194539
   Precision = 0.101945 at threshold = 0.5
   Recall    = 0.915663
   F1        = 0.183464


Total scoring time: 274.171 seconds
Refined model CLL: -0.194539


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.994468
   AUC PR    = 0.597381
   CLL	      = -0.165504
   Precision = 0.218362 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.355556


Total learning time: 567.0799999999999 seconds
Total inference time: 41.846 seconds
AUC ROC: 0.994468
Total revision time: 567.0799999999999
Best scored revision CLL: -0.194539


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:55:52
{'AUC ROC': 0.994468, 'AUC PR': 0.597381, 'CLL': -0.165504, 'Precision': [0.218362, 0.5], 'Recall': 0.956522, 'F1': 0.355556, 'Learning time': 567.0799999999999, 'Inference time': 41.846, 'parameter_0.6': {'AUC ROC': 0.978686, 'AUC PR': 0.392055, 'CLL': -0.17863, 'Precision': [0.451613, 0.5], 'Recall': 0.608696, 'F1': 0.518519, 'Learning time': 36.061, 'Inference time': 14.046}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8181489350995124;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8146706742299468;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.1418510649004885;  // std dev = 0.000, 222.000 (wgt'ed) examples reached here.  /* #neg=222 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1565985475026141;  // std dev = 7.350, 258.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=77 */
%   | | | else return 0.2137044906550679;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7384641898959873;  // std dev = 0.052, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.4496975758538867;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6952848318596299;  // std dev = 0.983, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return 0.6868630472213614;  // std dev = 1.387, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.733519523333471;  // std dev = 2.171, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.16438836499101148;  // std dev = 0.120, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1529432058714278;  // std dev = 5.468, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | | else return 0.21104664961545044;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5214091683928971;  // std dev = 1.300, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.4487249151557308;  // std dev = 0.615, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4687826193370133;  // std dev = 3.463, 88.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=68 */
%   | else return -0.1304979417657578;  // std dev = 0.534, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4917948244947189;  // std dev = 1.293, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4995063700989396;  // std dev = 1.671, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.1123163781936061;  // std dev = 6.32e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1765034594620938;  // std dev = 5.729, 144.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3813980028104461;  // std dev = 1.309, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.31075958881405324;  // std dev = 1.225, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.5100882968386542;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5488763503771392;  // std dev = 0.316, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.435252826524577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3090937169647356;  // std dev = 1.838, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.005628776715513366;  // std dev = 3.521, 259.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=48 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.08500515823879465;  // std dev = 4.251, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | | | else return 0.13520285984271116;  // std dev = 5.585, 137.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=48 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.373132104682174;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.22165599586341678;  // std dev = 1.254, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3677350423077565;  // std dev = 1.359, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | | else return 0.40230651030546827;  // std dev = 0.985, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return -0.10266123601711796;  // std dev = 0.183, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4751664375091246;  // std dev = 0.182, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.38698919440381824;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.03796660733372027;  // std dev = 4.377, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | | | else return 0.11679858007827464;  // std dev = 5.562, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2913807908794896;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3621831900981626;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26514421908705144;  // std dev = 0.934, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, G) )
%   | then return 0.02589462064680089;  // std dev = 3.426, 284.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=85 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4156622506616439;  // std dev = 2.620, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1406986457449883;  // std dev = 0.022, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06929265395930036;  // std dev = 5.764, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.21232184240675617;  // std dev = 1.641, 61.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=57 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.016591717660669955;  // std dev = 0.199, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.45154846554476313;  // std dev = 0.311, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.014660757976148612;  // std dev = 6.741, 462.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=119 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.3041020789814274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.28360035538636275;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03881965789120659;  // std dev = 1.532, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.10642745552330476;  // std dev = 1.296, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.05411987785149774;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.11539633499118533;  // std dev = 0.911, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18899402691333791;  // std dev = 0.932, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, F) )
%   | then return 0.001018591201471141;  // std dev = 3.571, 300.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=85 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1717948803751182;  // std dev = 0.834, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.04261837588605151;  // std dev = 6.188, 244.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=79 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.0029117259917521613;  // std dev = 1.654, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.028276385297053546;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17704319089058212;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1273805502544251;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.12730505860617752;  // std dev = 0.919, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.0800795291146625;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.25932216096737826;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17427396299417863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0014222938714024158;  // std dev = 3.243, 320.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=82 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.012598933784560703;  // std dev = 6.322, 264.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=77 */
%   | | | else return 0.007945069774203757;  // std dev = 2.778, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.09879327714101332;  // std dev = 1.180, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.17310383621786762;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20532236170628537;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0644398843980766;  // std dev = 0.909, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12274342914515758;  // std dev = 0.331, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.1269284507956136;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.22603232260033637;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.008544341564507766;  // std dev = 7.626, 633.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=175 */


Results
   AUC ROC   = 0.960987
   AUC PR    = 0.41661
   CLL	      = -0.190496
   Precision = 0.375 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.5


Total learning time: 10.199 seconds
Total inference time: 5.125 seconds
AUC ROC: 0.960987


Results scoring model
   AUC ROC   = 0.96004
   AUC PR    = 0.19323
   CLL	      = -0.20316
   Precision = 0.135156 at threshold = 0.5
   Recall    = 0.782805
   F1        = 0.230513


Total scoring time: 37.836 seconds
Parameter learned model CLL: -0.20316


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [1.301, 2, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.98, 1, 24], 'false,true,true,true': [1.383, 2, 44], 'false,true,true,false': [2.46e-07, 0, 41], 'false,true,false': [0.0, 222, 0], 'false,false,true': [0.0, 0, 8], 'false,false,false,true': [7.35, 181, 77], 'false,false,false,false': [3.211, 29, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.052, 0, 22], 'true,false': [1.9, 5, 13], 'false,true,true,true': [0.983, 1, 31], 'false,true,true,false': [1.387, 2, 54], 'false,true,false': [0.0, 257, 0], 'false,false,true,true': [2.171, 5, 48], 'false,false,true,false': [0.12, 106, 0], 'false,false,false,true': [5.468, 96, 45], 'false,false,false,false': [2.225, 13, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [1.3, 3, 36], 'true,true,false,true': [0.615, 1, 5], 'true,true,false,false': [3.463, 20, 68], 'true,false': [0.534, 226, 0], 'false,true': [1.293, 2, 18], 'false,false,true,true': [1.671, 3, 41], 'false,false,true,false': [6.32e-08, 106, 0], 'false,false,false,true': [5.729, 91, 53], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [1.309, 2, 18], 'true,false,true': [1.225, 2, 12], 'true,false,false': [0.0, 0, 5], 'false,true,true': [0.316, 0, 10], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.838, 8, 34], 'false,false,true,false': [3.521, 211, 48], 'false,false,false,true': [4.251, 102, 45], 'false,false,false,false': [5.585, 89, 48]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.08, 0, 26], 'true,false': [1.254, 2, 9], 'false,true,true,true': [1.359, 2, 59], 'false,true,true,false': [0.985, 1, 26], 'false,true,false': [0.183, 242, 0], 'false,false,true,true': [0.182, 0, 5], 'false,false,true,false': [0.159, 0, 3], 'false,false,false,true': [4.377, 124, 45], 'false,false,false,false': [5.562, 87, 48]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.048, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 2], 'true,false': [0.934, 1, 21], 'false,true': [3.426, 199, 85], 'false,false,true,true': [2.62, 8, 48], 'false,false,true,false': [0.022, 110, 0], 'false,false,false,true': [5.764, 103, 53], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [1.641, 4, 57], 'true,true,false,true': [0.199, 1, 1], 'true,true,false,false': [0.311, 0, 5], 'true,false': [6.741, 343, 119], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.044, 0, 4], 'false,false,true': [1.532, 40, 18], 'false,false,false,true': [1.296, 12, 8], 'false,false,false,false': [2.284, 15, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.911, 1, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.932, 1, 24], 'false,true': [3.571, 215, 85], 'false,false,true,true': [0.834, 2, 6], 'false,false,true,false': [6.188, 165, 79], 'false,false,false,true': [1.654, 16, 8], 'false,false,false,false': [2.309, 16, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.056, 0, 20], 'true,true,false': [1.152, 2, 4], 'true,false': [0.919, 1, 11], 'false,true,true,true': [0.786, 1, 5], 'false,true,true,false': [0.164, 0, 5], 'false,true,false': [0.0, 0, 1], 'false,false,true': [3.243, 238, 82], 'false,false,false,true': [6.322, 187, 77], 'false,false,false,false': [2.778, 36, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [1.18, 2, 24], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.029, 0, 2], 'true,false,false': [0.909, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.331, 1, 3], 'false,true,false,true': [0.003, 0, 2], 'false,true,false,false': [0.133, 0, 6], 'false,false': [7.626, 458, 175]}]]
[{'': [0.0727146814404449, 0.21000000000000119], 'false': [0.19941140122118606, 0.2192905366983403], 'false,false': [-2.220446049250313e-16, 0.21272424272130303], 'false,false,false': [0.20937744125954003, 0.2291358024691353], 'false,true': [0.022460034350640704, -2.360474178482315e-16], 'true': [0.13017751479289916, 0.03839999999999961], 'true,true': [0.13017751479289916, nan], 'false,true,true': [0.04158790170132436, 1.4730764034050857e-15]}, {'': [0.1109822667179932, 0.17322045431551322], 'false': [0.134706654474961, 0.2124062472234857], 'false,false': [0.20891078739882618, 0.21551335036557007], 'false,false,false': [0.21205018328431768, 0.23582766439909286], 'false,false,true': [0.08896627243743833, 0.00013685290774150848], 'false,true': [0.0328622695786741, -7.948678464242366e-17], 'true': [0.00012075452244393729, 0.20061728395061718], 'false,true,true': [0.030183097096787237, 0.03436743384388409]}, {'': [0.12805898373267136, 0.16681129032797543], 'false': [0.08355524164494454, 0.16370409584630138], 'false,false': [0.09620728017396256, 0.22791234871067168], 'false,false,false': [0.22791234871067168, nan], 'true': [0.10633544223639112, 0.0012636909162516805], 'true,true': [0.043310446243667894, 0.13163199125054595], 'true,true,false': [0.06301148081553043, 0.136284982959313], 'false,false,true': [0.06345489766412396, 3.77056876287789e-17]}, {'': [0.08622393629426771, 0.12077902999839345], 'false': [0.010119607304499244, 0.11885491116313394], 'false,false': [0.06430480800104348, 0.17408139328729852], 'false,false,false': [0.12291204152751573, 0.22768146676462558], 'true': [0.08562776566184864, 0.08668192569309148], 'true,false': [0.10718398423388384, 0.0], 'false,false,true': [0.08046001081047649, 0.04786408054213815], 'false,true': [0.009957903928342393, 0.0]}, {'': [0.0474473463135261, 0.10905692322410475], 'false': [0.05394914097477621, 0.16568374626732324], 'false,false': [0.009106485383086727, 0.16631051292986468], 'false,false,false': [0.11336014464142813, 0.22914176930551597], 'false,true': [0.03226302397234717, 0.00013785428268810908], 'true': [0.0002466896870878532, 0.1428890130785683], 'false,true,true': [0.03027463794782837, 0.035926822027740564], 'false,false,true': [0.006629293111037748, 0.00837562279380242]}, {'': [0.024871190502448064, 0.10478690837309457], 'false': [0.04132450559422018, 0.16028305756907615], 'false,false': [0.11053888234733296, 0.2129595195076643], 'false,false,false': [0.2129595195076643, nan], 'false,false,true': [0.12254494746360438, 4.432448578173265e-06], 'true': [0.000781694285972174, 0.039686988339685286], 'true,true': [0.00018967947296416598, 3.694339105969613e-05], 'true,true,false': [nan, 3.694339105969613e-05]}, {'': [0.09666160780467581, 0.09029148958947637], 'true': [0.046806553624601586, 0.09836867444798228], 'false': [0.00044741418817247915, 0.0922001478797798], 'false,false': [0.0404576271145285, 0.1610905233977423], 'false,false,false': [0.08401157400209139, 0.2268431001890361], 'true,true': [0.044155327779153895, 0.05805613043466196], 'true,true,false': [0.019737642483546907, 0.019329990606563242], 'false,true': [0.0, 0.00047520360114189364]}, {'': [0.047065665935148306, 0.10040362920578032], 'false': [0.04249677205029762, 0.15750026495614175], 'false,false': [0.15524504696769914, 0.16836701123015363], 'false,false,false': [0.11402545109520353, 0.22222222222222224], 'false,false,true': [0.08697447777810464, 0.15695369392627923], 'true': [0.06911233700486334, 0.0347265221169495], 'true,true': [0.06911233700486334, nan]}, {'': [0.06856575389542192, 0.09141021628838625], 'false': [0.0609985172894257, 0.09153324817929821], 'false,false': [0.03286079552498517, 0.15089385674817155], 'false,false,false': [0.15137674916584118, 0.1484241546877792], 'true': [0.06757790335469736, 0.07041817841667954], 'true,true': [0.00015837245538478651, 0.22102212365544002], 'false,true': [0.06653035276113077, 0.0], 'false,true,true': [0.10288991838776422, 0.005374553423631623]}, {'': [0.05957244000545779, 0.09091396802764323], 'false': [0.013207324104862112, 0.0918710626945372], 'true': [0.053582220309041154, 0.07251540766752065], 'true,false': [0.00046687093238870214, 0.10335022434420865], 'false,true': [0.02743120088142619, 0.004040625892847947], 'false,true,true': [nan, 0.02743120088142619], 'false,true,false': [4.921679498066933e-06, 0.0029304662789595057], 'true,false,true': [0.0, 0.0004147251724534867]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8240580260086028;  // std dev = 0.181, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.12737970433028126;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.18394079030313362;  // std dev = 6.967, 221.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=72 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6791830109660019;  // std dev = 0.189, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6034424800921292;  // std dev = 0.348, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6603682076866163;  // std dev = 0.248, 91.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=85 */
%   | | else return -0.12544463852839172;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.720109931938498;  // std dev = 2.294, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.1634290444868609;  // std dev = 0.033, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.27860559639255034;  // std dev = 2.719, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.1571222065843956;  // std dev = 5.113, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), interaction(I, H) )
%   | | | then return 0.5186574283983616;  // std dev = 2.748, 84.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=73 */
%   | | | else return 0.10753831818036685;  // std dev = 1.204, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.6017682614532575;  // std dev = 0.209, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.13443972068867896;  // std dev = 0.657, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5824162632124297;  // std dev = 0.140, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, K) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5782451679659043;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | | else return -0.11231637819360613;  // std dev = 5.77e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.07676789877812397;  // std dev = 3.102, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.21649750459006986;  // std dev = 4.782, 95.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.4532239485490401;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.23458616960166273;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.35402619500932897;  // std dev = 0.237, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.47117708589132884;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.036792445829548104;  // std dev = 1.050, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5479654593860361;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11424637091561952;  // std dev = 0.052, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.038314115149781836;  // std dev = 4.209, 274.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=75 */
%   | | | else return 0.10857186449244155;  // std dev = 7.067, 292.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=100 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.22344600504296588;  // std dev = 0.332, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else return 0.35848982297485743;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(G, A) )
%   | | then return 0.41162022999767967;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1371505301817959;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H) )
%   | then return 0.02314257843231296;  // std dev = 0.247, 328.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=85 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.36861127719401443;  // std dev = 2.924, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   | | | else return -0.14151158905503364;  // std dev = 0.171, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11765112587510632;  // std dev = 4.100, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.2718306781350025;  // std dev = 3.451, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.19182381156103334;  // std dev = 0.287, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.2753821712726175;  // std dev = 0.173, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09216054356903683;  // std dev = 0.004, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.007700618499797375;  // std dev = 2.849, 148.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=34 */
%   | | | else return 0.05929640445451248;  // std dev = 3.175, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4022718379338413;  // std dev = 1.652, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.12332629073665025;  // std dev = 0.028, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07584557350708596;  // std dev = 5.240, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   | | | else return -0.011732213228031939;  // std dev = 2.403, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.11429087268806817;  // std dev = 0.274, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else return 0.3485661027372473;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.002346369891375401;  // std dev = 0.242, 144.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=34 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.12276600691594705;  // std dev = 2.147, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | | else return 0.0323831425857993;  // std dev = 6.056, 314.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=97 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2603841858575449;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, K) )
%   | | then return -0.022848768231193025;  // std dev = 0.246, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return -9.415001897230463E-4;  // std dev = 0.727, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.04314490807284568;  // std dev = 2.702, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.1612174830132579;  // std dev = 0.279, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | else if ( recursion_proteinclass(E, B), enzyme(E, H) )
%   | | | then return 0.4850557357681463;  // std dev = 0.260, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.014363964806615358;  // std dev = 3.663, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | else if ( phenotype(D, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.14554226149472446;  // std dev = 0.655, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4496276752853604;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(K, C), recursion_proteinclass(K, B) )
%   | | | then return 0.5391840527931663;  // std dev = 0.530, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25767535242482326;  // std dev = 0.306, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | then return 0.1994320966008515;  // std dev = 0.167, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.01554205027732381;  // std dev = 0.305, 431.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1807169204505969;  // std dev = 0.079, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.06056608502939729;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.27250587670152443;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06553041962454655;  // std dev = 0.878, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19649552804092948;  // std dev = 0.189, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1506240432460274;  // std dev = 3.353, 97.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=52 */
%   | | | else return -0.1401245324252053;  // std dev = 0.889, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.01490308606380054;  // std dev = 2.141, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | | else return 0.0327513653761295;  // std dev = 6.075, 321.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=105 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.16007737792963264;  // std dev = 0.120, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.6370828606997126;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.23795469286090123;  // std dev = 0.231, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21884842615434383;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.169140722807301;  // std dev = 0.169, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.09277287293299243;  // std dev = 3.621, 101.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=52 */
%   | | | else return -0.13204433400043372;  // std dev = 0.831, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0031667415134372643;  // std dev = 5.296, 298.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=83 */
%   | | | else return 0.05732270026182702;  // std dev = 3.528, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */


Results
   AUC ROC   = 0.971495
   AUC PR    = 0.392244
   CLL	      = -0.205076
   Precision = 0.394286 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.516854


Total learning time: 26.273 seconds
Total inference time: 7.192 seconds
AUC ROC: 0.971495


Results scoring model
   AUC ROC   = 0.966361
   AUC PR    = 0.173191
   CLL	      = -0.210135
   Precision = 0.151436 at threshold = 0.5
   Recall    = 0.78733
   F1        = 0.254015


Total scoring time: 54.883 seconds
Refined model CLL: -0.210135


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960987
   AUC PR    = 0.41661
   CLL	      = -0.190496
   Precision = 0.375 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.5


Total learning time: 129.191 seconds
Total inference time: 5.125 seconds
AUC ROC: 0.960987
Total revision time: 129.191
Best scored revision CLL: -0.20316


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 00:58:15
{'AUC ROC': 0.960987, 'AUC PR': 0.41661, 'CLL': -0.190496, 'Precision': [0.375, 0.5], 'Recall': 0.75, 'F1': 0.5, 'Learning time': 129.191, 'Inference time': 5.125, 'parameter_0.8': {'AUC ROC': 0.960987, 'AUC PR': 0.41661, 'CLL': -0.190496, 'Precision': [0.375, 0.5], 'Recall': 0.75, 'F1': 0.5, 'Learning time': 10.199, 'Inference time': 5.125}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6864317633823397;  // std dev = 3.752, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | | else return 0.7400933795439545;  // std dev = 3.872, 144.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=127 */
%   | | else return -0.14185106490048763;  // std dev = 5.96e-08, 491.000 (wgt'ed) examples reached here.  /* #neg=491 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7226606796410825;  // std dev = 0.035, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6778611269218802;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5799968804959962;  // std dev = 2.584, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return 0.613376106881956;  // std dev = 4.738, 196.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=170 */
%   | | else return -0.12544463852839233;  // std dev = 0.000, 476.000 (wgt'ed) examples reached here.  /* #neg=476 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4658801068435774;  // std dev = 2.932, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   | | | else return -0.15928801327650965;  // std dev = 0.011, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5349209963944562;  // std dev = 2.083, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.4906048858709025;  // std dev = 0.934, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.26203134280749596;  // std dev = 5.006, 139.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=74 */
%   | else return -0.1226425933559766;  // std dev = 0.551, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5828824970835425;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48207723719562123;  // std dev = 3.945, 136.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=118 */
%   | | | else return -0.11231637819360675;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4213228888878293;  // std dev = 1.027, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4097410054168788;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4100507139500777;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3663166603516113;  // std dev = 2.223, 48.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | | | else return 0.03469160249730502;  // std dev = 6.897, 658.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=156 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.09300586344427586;  // std dev = 3.395, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2864613809270559;  // std dev = 1.231, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else return 0.29093809404783777;  // std dev = 0.814, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3612256801399459;  // std dev = 2.996, 95.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=85 */
%   | | | else return 0.3899538024269482;  // std dev = 3.466, 137.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=124 */
%   | | else return -0.10950166242934627;  // std dev = 0.325, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.39547034244976664;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20112875557642074;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.07234833863473777;  // std dev = 3.362, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2773498564044267;  // std dev = 0.159, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14326873954328892;  // std dev = 1.233, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return -0.7027047745287256;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(G, A) )
%   | then return 0.0201701405980216;  // std dev = 6.830, 729.000 (wgt'ed) examples reached here.  /* #neg=520 #pos=209 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3918489942009125;  // std dev = 2.394, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return -0.1445308698390761;  // std dev = 0.011, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.18437183392759637;  // std dev = 2.515, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | else if ( function(A, F) )
%   | | | then return 0.26525696741320165;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02826429932211156;  // std dev = 4.113, 309.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=53 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.24546033972739814;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03400642081374251;  // std dev = 5.324, 420.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=131 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.15665587848734455;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1846377687227232;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15742025101527726;  // std dev = 1.160, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(F, A) )
%   | then return 0.016715085680164613;  // std dev = 6.636, 714.000 (wgt'ed) examples reached here.  /* #neg=505 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3758965568904473;  // std dev = 0.312, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.014567059527189941;  // std dev = 2.762, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( function(A, I) )
%   | | | then return 0.1108410205628448;  // std dev = 1.262, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15908768861283168;  // std dev = 0.015, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.18065094810929183;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.007752374918780754;  // std dev = 1.603, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.149909722940409;  // std dev = 0.971, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.2875968603072574;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2971061687663879;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.01440480586058429;  // std dev = 6.398, 688.000 (wgt'ed) examples reached here.  /* #neg=491 #pos=197 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.034767187170172055;  // std dev = 2.648, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.09826942332975835;  // std dev = 1.200, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.11498045720159888;  // std dev = 0.818, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.2282290272119667;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11332519592024379;  // std dev = 0.756, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21115810437335425;  // std dev = 0.467, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.16496813598399063;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20556532803260427;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.010264094643934813;  // std dev = 7.154, 757.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=217 */


Results
   AUC ROC   = 0.991003
   AUC PR    = 0.404203
   CLL	      = -0.146134
   Precision = 0.398907 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.530909


Total learning time: 56.89 seconds
Total inference time: 15.338 seconds
AUC ROC: 0.991003


Results scoring model
   AUC ROC   = 0.975239
   AUC PR    = 0.173806
   CLL	      = -0.180744
   Precision = 0.102286 at threshold = 0.5
   Recall    = 0.953069
   F1        = 0.184745


Total scoring time: 212.082 seconds
Parameter learned model CLL: -0.180744


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [5.96e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [1.351, 2, 21], 'false,true,true,true': [3.752, 17, 82], 'false,true,true,false': [3.872, 17, 127], 'false,true,false': [5.96e-08, 491, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.303, 40, 15], 'false,false,false,false': [1.854, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.035, 0, 27], 'true,false': [0.97, 1, 16], 'false,true,true,true': [2.584, 8, 39], 'false,true,true,false': [4.738, 26, 170], 'false,true,false': [0.0, 476, 0], 'false,false,true,true': [2.932, 14, 25], 'false,false,true,false': [0.011, 36, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [2.083, 5, 67], 'true,true,false,true': [0.934, 1, 7], 'true,true,false,false': [5.006, 65, 74], 'true,false': [0.551, 183, 0], 'false,true': [0.017, 0, 11], 'false,false,true,true': [3.945, 18, 118], 'false,false,true,false': [0.0, 228, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.027, 1, 43], 'true,false': [0.0, 0, 0], 'false,true,true': [0.962, 1, 11], 'false,true,false': [0.919, 1, 6], 'false,false,true,true': [2.223, 7, 41], 'false,false,true,false': [6.897, 502, 156], 'false,false,false,true': [3.395, 45, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [1.231, 2, 30], 'true,false': [0.814, 1, 13], 'false,true,true,true': [2.996, 10, 85], 'false,true,true,false': [3.466, 13, 124], 'false,true,false': [0.325, 487, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.866, 1, 3], 'false,false,false,true': [3.362, 49, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.159, 0, 33], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.233, 2, 10], 'true,false': [0.06, 4, 0], 'false,true': [6.83, 520, 209], 'false,false,true,true': [2.394, 8, 25], 'false,false,true,false': [0.011, 32, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [2.515, 10, 69], 'true,true,false,true': [0.819, 1, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.113, 256, 53], 'false,true,true': [0.085, 0, 14], 'false,true,false': [0.0, 0, 0], 'false,false,true': [5.324, 289, 131], 'false,false,false,true': [1.329, 7, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [1.05e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [1.16, 2, 21], 'false,true': [6.636, 505, 209], 'false,false,true,true': [0.312, 0, 4], 'false,false,true,false': [2.762, 41, 15], 'false,false,false,true': [1.262, 9, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.015, 0, 25], 'true,true,false': [0.067, 0, 5], 'true,false': [1.603, 4, 13], 'false,true,true,true': [0.971, 1, 9], 'false,true,true,false': [0.025, 0, 2], 'false,true,false': [0.135, 0, 6], 'false,false,true': [6.398, 491, 197], 'false,false,false,true': [2.648, 35, 15], 'false,false,false,false': [1.2, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.818, 1, 30], 'true,false,true,true': [0.08, 0, 6], 'true,false,true,false': [0.756, 1, 7], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.467, 1, 12], 'false,true,false,true': [0.065, 0, 2], 'false,true,false,false': [0.077, 0, 3], 'false,false': [7.154, 540, 217]}]]
[{'': [0.04246913580247025, 0.20543209876543425], 'false': [0.20366362509188055, 0.22074099722991802], 'false,false': [0.0, 0.20234080539575433], 'false,true': [0.12034073396671088, 7.235669406925663e-18], 'false,false,false': [0.198347107438016, 0.2148437499999998], 'false,true,true': [0.14223038465462795, 0.10411844135802914], 'true': [1.6148698540002277e-16, 0.07939508506616269], 'true,true': [1.6148698540002277e-16, nan]}, {'': [0.021893635893563402, 0.16561041084549707], 'false': [0.16057503438838902, 0.212151429859437], 'false,false': [0.212151429859437, nan], 'false,false,true': [0.22037943997932288, 3.459454028628375e-06], 'false,true': [0.12003165230498423, -1.3621223663468308e-16], 'false,true,true': [0.1421028948489969, 0.11452355999570503], 'true': [4.469816415276074e-05, 0.05536332179930792]}, {'': [0.14298153829060653, 0.12813799334111628], 'true': [0.1549857481104748, 0.001661936284378329], 'true,true': [0.06025395838285909, 0.17908328898860323], 'true,true,false': [0.10910222371343112, 0.18026766384012424], 'false': [2.7506274139681025e-05, 0.1254434790396135], 'false,false': [0.1254434790396135, nan], 'false,false,true': [0.11444561849936416, -7.401486830834377e-17]}, {'': [0.023971985002280857, 0.09248753343256193], 'false': [0.0931508262287313, 0.08953169295294229], 'false,true': [0.0771042243787085, 0.12065922596239807], 'false,false': [0.08134480876037191, 0.17728238943835334], 'false,false,false': [0.17728238943835334, nan], 'false,false,true': [0.10296176775659859, 0.07229082174524902], 'true': [0.023971985002280857, nan]}, {'': [0.0473539988529049, 0.0893312482389264], 'false': [0.08138083376484591, 0.164102442055967], 'false,false': [0.13339303386410004, 0.16377555819479925], 'false,false,false': [0.16377555819479925, nan], 'false,false,true': [0.0, 0.1875], 'false,true': [0.0906571499078277, 0.00021674386296199454], 'false,true,true': [0.0944868855629131, 0.08766354562438228], 'true': [0.047363344375528846, 0.04731869612069035]}, {'': [0.10168341886600749, 0.07273040316893915], 'true': [0.03785068108763639, 0.000891847414039304], 'false': [0.06399464307831848, 0.1600724057573593], 'false,false': [0.1600724057573593, nan], 'false,false,true': [0.17365192039275934, 3.749257766322983e-06], 'true,true': [0.0007641503270809857, 0.1266549603534282], 'true,true,false': [nan, 0.1266549603534282]}, {'': [0.06887748692060665, 0.0691189694556464], 'false': [0.0005147079015093227, 0.06998507066532071], 'false,false': [0.06749426764457754, 0.13586591288580385], 'false,false,false': [0.13586591288580385, nan], 'true': [0.08365359847462105, 0.054754001325644834], 'true,true': [0.0800749847852565, 0.13404271880586932], 'true,true,false': [0.13404271880586932, nan], 'false,true': [0.0005147079015093227, nan]}, {'': [0.03006390033182198, 0.06850732755060192], 'false': [0.061671653948682424, 0.13338940267830765], 'false,false': [0.1382371469068166, 0.10609776786020884], 'false,false,true': [0.024298194348100016, 0.1362115211350909], 'false,false,false': [0.10609776786020884, nan], 'true': [5.046468293750712e-18, 0.05845850896351794], 'true,true': [5.046468293750712e-18, nan]}, {'': [0.06037976532342325, 0.06662222235337865], 'false': [0.05865602750738251, 0.06590418544236352], 'false,false': [0.05950074729152494, 0.13480777398027075], 'false,false,false': [0.14023687617105504, 0.1107261879006678], 'true': [0.00022368108534788212, 0.1512164627399145], 'false,true': [0.08132945350558561, 0.0030173674995530586], 'false,true,true': [0.09437523704799142, 0.0003024126299920743], 'true,true': [9.598300342430476e-06, 0.0009066165436154572]}, {'': [0.029204307197893298, 0.06719661915591159], 'false': [0.012865093711263455, 0.06760689901535964], 'true': [0.021599432522498983, 0.044483521388001504], 'true,false': [0.044483521388001504, nan], 'true,false,true': [0.0010795003770598943, 0.07137815552670054], 'false,true': [0.016740566318187808, 0.002444638597916121], 'false,true,true': [nan, 0.016740566318187808], 'false,true,false': [0.0021210106786634098, 0.0020011377431917907]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;function(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5581489350995124;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.6032469743151979;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return 0.748773935099511;  // std dev = 4.325, 192.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=171 */
%   | | else return -0.14185106490048766;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.08542166237223965;  // std dev = 3.405, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7286443069878812;  // std dev = 0.051, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, E) )
%   | | then return 0.6316250384810609;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4476797333789359;  // std dev = 0.465, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.5677968130357116;  // std dev = 2.832, 54.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=44 */
%   | | | else return 0.6872537001078382;  // std dev = 3.075, 175.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=165 */
%   | | else return -0.12544463852839233;  // std dev = 0.000, 484.000 (wgt'ed) examples reached here.  /* #neg=484 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.3506100914558816;  // std dev = 2.984, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | | else return 0.7992597244083962;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1603084343270226;  // std dev = 0.098, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5308152947218797;  // std dev = 0.223, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.20202589574138563;  // std dev = 3.667, 67.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=32 */
%   | | | else return 0.31128676447846765;  // std dev = 4.357, 123.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=73 */
%   | else return -0.1233506073088072;  // std dev = 0.543, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then if ( enzyme(A, J) )
%   | | then return 0.6379980219286172;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5049706451669822;  // std dev = 0.314, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2498102138238763;  // std dev = 5.247, 180.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=99 */
%   | | | else return 0.36425659685376593;  // std dev = 1.736, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | else return -0.11231637819360633;  // std dev = 4.21e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4170556705933829;  // std dev = 0.219, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.06936393577448983;  // std dev = 0.751, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.15726676839052287;  // std dev = 0.320, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10583370538950766;  // std dev = 0.082, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.07574191190531171;  // std dev = 3.644, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.10377620455616651;  // std dev = 2.061, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.19821877267729365;  // std dev = 1.839, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09510386688121135;  // std dev = 4.460, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.06729723236344895;  // std dev = 6.040, 363.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=114 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B), complex(D, E) )
%   | | then return 0.33654079606994736;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.10911533490177158;  // std dev = 0.520, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else return 0.3695106315498646;  // std dev = 0.051, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.4287139055345793;  // std dev = 4.041, 216.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=198 */
%   | | | else return 0.288075848335264;  // std dev = 1.519, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return -0.11843144282695356;  // std dev = 0.440, 459.000 (wgt'ed) examples reached here.  /* #neg=459 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5120163041136347;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.20790083637270645;  // std dev = 2.011, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.022447346397636188;  // std dev = 2.541, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.25727883312428335;  // std dev = 0.174, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return 0.32888164099170936;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.5873423774878186;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.3458977857524434;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12491539314588587;  // std dev = 0.654, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.024383915805140634;  // std dev = 6.861, 676.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=197 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.20416817046890787;  // std dev = 2.306, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | | else return 0.4803185852118642;  // std dev = 1.336, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return -0.14351234650697453;  // std dev = 0.082, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.17574226203008952;  // std dev = 0.249, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | else if ( interaction(F, A), location(A, G) )
%   | | then return 0.007329903309203994;  // std dev = 0.256, 264.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=68 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.005506437648186273;  // std dev = 0.676, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.16139907442002682;  // std dev = 2.537, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.2583516796452821;  // std dev = 0.173, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.3754708203680465;  // std dev = 0.760, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.13607018686092973;  // std dev = 0.910, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.014396827079623791;  // std dev = 4.518, 296.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=86 */
%   | | | else return -0.09729363341848193;  // std dev = 1.417, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16651116425218;  // std dev = 0.218, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.05391525935741079;  // std dev = 1.636, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.006634456792972549;  // std dev = 1.267, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(H, A), complex(H, D) )
%   | | | then return -0.0651659174262337;  // std dev = 1.326, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | | else return -0.004243487208150564;  // std dev = 3.988, 166.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=53 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I), interaction(L, K) )
%   | | | then return 0.03307686783226795;  // std dev = 3.519, 186.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=60 */
%   | | | else return 0.13378019927706955;  // std dev = 1.272, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.038249303119760845;  // std dev = 2.010, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | | else return 0.017699370264164974;  // std dev = 4.031, 208.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=64 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16774495793761154;  // std dev = 0.166, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.010596811534781628;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0.25746309407404117;  // std dev = 0.187, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.21607800390675164;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.056372066610950455;  // std dev = 0.939, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.22597867213076242;  // std dev = 0.123, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09332484044412565;  // std dev = 0.063, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.0035436073802833125;  // std dev = 4.320, 250.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=68 */
%   | | | else return 0.03259440950401103;  // std dev = 5.565, 457.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=149 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14948788478310968;  // std dev = 0.162, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.1602206782052388;  // std dev = 0.200, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.20413221868618106;  // std dev = 0.047, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( function(A, G), interaction(E, H) )
%   | | | then return -0.07928679981104125;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23471003161697013;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( location(A, K), complex(A, J) )
%   | | | then return -0.055386364055787556;  // std dev = 1.821, 92.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=11 */
%   | | | else return 0.005537944224128139;  // std dev = 5.123, 401.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=115 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.07213126647153353;  // std dev = 1.457, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.009610567432673515;  // std dev = 4.440, 274.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=78 */


Results
   AUC ROC   = 0.992673
   AUC PR    = 0.523238
   CLL	      = -0.161922
   Precision = 0.426901 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.555133


Total learning time: 162.911 seconds
Total inference time: 29.61 seconds
AUC ROC: 0.992673


Results scoring model
   AUC ROC   = 0.981209
   AUC PR    = 0.233794
   CLL	      = -0.183788
   Precision = 0.106923 at threshold = 0.5
   Recall    = 0.942238
   F1        = 0.192053


Total scoring time: 322.381 seconds
Refined model CLL: -0.183788


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991003
   AUC PR    = 0.404203
   CLL	      = -0.146134
   Precision = 0.398907 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.530909


Total learning time: 754.2639999999999 seconds
Total inference time: 15.338 seconds
AUC ROC: 0.991003
Total revision time: 754.2639999999999
Best scored revision CLL: -0.180744


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 01:11:35
{'AUC ROC': 0.991003, 'AUC PR': 0.404203, 'CLL': -0.146134, 'Precision': [0.398907, 0.5], 'Recall': 0.793478, 'F1': 0.530909, 'Learning time': 754.2639999999999, 'Inference time': 15.338, 'parameter_1.0': {'AUC ROC': 0.991003, 'AUC PR': 0.404203, 'CLL': -0.146134, 'Precision': [0.398907, 0.5], 'Recall': 0.793478, 'F1': 0.530909, 'Learning time': 56.89, 'Inference time': 15.338}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.7066337835843601;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7381535340222833;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6380888350901325;  // std dev = 1.897, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7993356029405796;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17404366681621206;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.23931591590195453;  // std dev = 1.266, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5660470169168831;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.535568683914537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5580132471773211;  // std dev = 0.715, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.12762410729281987;  // std dev = 0.298, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.40700457079142754;  // std dev = 2.373, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.16326271124334824;  // std dev = 1.456, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4155689577128801;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4792647031913866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4792647031913866;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.517312834121199;  // std dev = 0.162, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35115270277382665;  // std dev = 0.577, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.03874632117520632;  // std dev = 3.111, 135.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=33 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.08248753563648936;  // std dev = 1.062, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.03135793357288179;  // std dev = 1.420, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3303021033879597;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12954706429752488;  // std dev = 0.697, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.4313142837402853;  // std dev = 0.243, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.41897335756789517;  // std dev = 1.364, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.10690215139562004;  // std dev = 0.119, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.39620730849931346;  // std dev = 0.155, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.00945825650418165;  // std dev = 1.099, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.08233883952515507;  // std dev = 1.578, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2517048291784796;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2532210019828174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.3069666750220851;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then return 0.0070053380585556905;  // std dev = 2.903, 148.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.26417943299300567;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14841697808173698;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1421505735810814;  // std dev = 1.383, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16949609004037489;  // std dev = 0.815, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.4610196629359311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.023455279877233292;  // std dev = 2.209, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.1996515927699365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.277317923028274;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.042351794358638034;  // std dev = 2.294, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.593554104578198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18082895191634052;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.5408539880852736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.20724389239478258;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then return 0.004713214754080621;  // std dev = 2.993, 136.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=39 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.35040531992282997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.004458985085072271;  // std dev = 1.553, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2201800621125444;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15872065205434766;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17646083279204083;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.17483271936265443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.378151406247174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.020799315841642893;  // std dev = 2.728, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.017965541591748388;  // std dev = 1.529, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.501325873836503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1386612562117566;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.15512242348659022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11854470429077113;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I), interaction(G, J) )
%   | | | then return 0.15102437575450656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2941000724417717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.028769818628026213;  // std dev = 3.103, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */


Results
   AUC ROC   = 0.982108
   AUC PR    = 0.331981
   CLL	      = -0.167226
   Precision = 0.161417 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.276094


Total learning time: 4.985 seconds
Total inference time: 6.557 seconds
AUC ROC: 0.982108


Results scoring model
   AUC ROC   = 0.972837
   AUC PR    = 0.230426
   CLL	      = -0.181104
   Precision = 0.099083 at threshold = 0.5
   Recall    = 0.964286
   F1        = 0.1797


Total scoring time: 11.238 seconds
Parameter learned model CLL: -0.181104


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.957, 1, 11], 'false,true,true,false': [2.06, 5, 28], 'false,true,false': [8.16e-08, 88, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [1.754, 8, 5], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.012, 0, 6], 'false,true,true,false': [1.897, 4, 33], 'false,true,false': [0.0, 73, 0], 'false,false,true,true': [0.092, 0, 4], 'false,false,true,false': [5.27e-09, 6, 0], 'false,false,false,true': [1.266, 4, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.032, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.715, 1, 11], 'true,false': [0.298, 40, 0], 'false,true': [0.866, 1, 3], 'false,false,true,true': [2.373, 7, 28], 'false,false,true,false': [5.77e-08, 72, 0], 'false,false,false,true': [1.456, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.002, 0, 6], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.162, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.577, 1, 6], 'false,false,true,false': [3.111, 102, 33], 'false,false,false,true': [1.062, 5, 3], 'false,false,false,false': [1.42, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.053, 0, 8], 'true,false': [0.697, 1, 1], 'false,true,true,true': [0.243, 0, 16], 'false,true,true,false': [1.364, 2, 23], 'false,true,false': [0.119, 94, 0], 'false,false,true,true': [0.155, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.099, 8, 3], 'false,false,false,false': [1.578, 10, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.104, 0, 4], 'false,true': [2.903, 109, 39], 'false,false,true,true': [0.868, 1, 4], 'false,false,true,false': [0.014, 6, 0], 'false,false,false,true': [1.383, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [0.815, 1, 11], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.209, 52, 15], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.065, 0, 2], 'false,false,true': [2.294, 52, 25], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.073, 0, 5], 'false,true': [2.993, 97, 39], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.553, 13, 6], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'phenotype(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.014, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.064, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.728, 91, 39], 'false,false,false,true': [1.529, 10, 5], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,false': 'phenotype(A, I), interaction(G, J)'}, {'true,true': [0.013, 0, 5], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.825, 2, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.103, 96, 45]}]]
[{'': [-2.9605947323337506e-16, 0.21515555555555674], 'false': [0.20724744191305464, 0.24913494809688583], 'false,false': [0.0, 0.24000000000000007], 'false,false,false': [0.2366863905325442, 0.25], 'false,true': [0.11555555555555665, 7.569702440626067e-17], 'false,true,true': [0.07638888888888877, 0.12855831037649348], 'true': [0.0, 0.0], 'true,true': [0.0, nan]}, {'': [0.0, 0.18176816679248597], 'false': [0.1724830883700446, 0.23381765581838598], 'false,false': [0.22824252460456154, 0.23575302550603902], 'false,false,false': [0.22890139401981172, 0.0], 'false,false,true': [0.0021259898360449503, 4.625929269271485e-18], 'false,true': [0.08488510283188391, -3.0417069167812506e-17], 'false,true,true': [2.3594601277136345e-05, 0.09724927351801091], 'true': [0.0, 0.0]}, {'': [0.11803420208327213, 0.12542275770919997], 'false': [0.1875, 0.12141568933615121], 'false,false': [0.11200035234955552, 0.21194072020269009], 'false,false,false': [0.21194072020269009, nan], 'true': [0.02329991190368095, 0.002224308714432385], 'false,false,true': [0.16092457381900474, 4.625929269271486e-17], 'true,true': [0.00011578943247404617, 0.03931148701883565], 'true,true,false': [0.0, 0.042548693622708744]}, {'': [0.0009021527068853422, 0.08808876950468049], 'false': [0.013071421583868481, 0.08637797225195788], 'false,false': [0.07509438407448843, 0.17539294196725616], 'false,false,false': [0.14097730875773137, 0.20176356577612803], 'false,false,true': [0.04760426392160788, 0.07170864115680008], 'false,true': [0.013071421583868481, nan], 'true': [8.463963071525527e-07, 3.700743415417188e-17], 'true,false': [0.0, 0.0]}, {'': [0.08264545815558075, 0.08807983908815177], 'false': [0.07389790467146197, 0.15860068292317622], 'false,false': [0.011942636787596272, 0.15616770792672885], 'false,false,false': [0.10979512574894433, 0.19154380605781263], 'true': [0.0003574644514934694, 0.24262842735510357], 'false,true': [0.04687770761782226, 0.00015018879617759458], 'false,true,true': [0.003680567409342389, 0.0744644438063547], 'false,false,true': [0.011942636787596272, nan]}, {'': [0.001958223464626485, 0.06974940758894221], 'false': [0.0569300834078901, 0.15918622144083414], 'false,false': [0.11070297521785301, 0.21260588363731367], 'false,false,false': [0.21260588363731367, nan], 'false,false,true': [0.1506532784263379, 3.1147499377141376e-05], 'true': [3.6780479562015245e-07, 0.0027275158426777746], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07658355529426031, 0.0702271673544087], 'true': [0.05709225261388211, 0.07282757316147785], 'false': [0.0027363028329740837, 0.07131155113271095], 'false,false': [0.06834249585555732, 0.0], 'true,true': [0.05531255621218326, 0.0], 'false,true': [0.0, 0.0020937679641954143], 'false,false,false': [nan, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.04948723289040753, 0.07738607933847093], 'false': [0.0658468314599888, 0.14543797405611777], 'false,false': [0.12628557106647148, 0.2222222222222222], 'false,false,false': [nan, 0.2222222222222222], 'false,false,true': [0.0, 0.12694823674058606], 'true': [0.08333220254229974, 0.0010642209995980866], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0005596976822112884, 0.06862965697082266], 'false': [0.010334622109111319, 0.06856533320937855], 'false,false': [0.05725141696088554, 0.15982357633437524], 'false,false,false': [0.1558761557490986, 0.0], 'false,true': [0.010334622109111319, nan], 'false,true,true': [0.0, 0.0], 'true': [3.972048736013978e-05, 0.001034828057660784], 'true,true': [3.972048736013978e-05, nan]}, {'': [0.07866126419741443, 0.06793919108677472], 'true': [3.18663924210455e-05, 0.12383469520183338], 'true,false': [0.0, 0.13611935143788162], 'false': [0.005117663745636575, 0.06830502488282295], 'false,true': [nan, 0.005117663745636575], 'false,true,false': [0.0, 0.0], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;phenotype(E, G), interaction(A, F).;true;true
8;false,false;interaction(H, A).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;phenotype(A, I), interaction(G, J).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5248156017661789;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.25814893509951237;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7259492632732042;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.2697335026852961;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5449224804118593;  // std dev = 0.397, 48.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=39 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6130459474269762;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.15593766272089304;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21111197769371332;  // std dev = 1.270, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.8237336544841058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.6039504733580793;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5814686151460701;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5732715060314416;  // std dev = 0.739, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.11610715454070657;  // std dev = 0.070, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.590319412903602;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6144309070048755;  // std dev = 0.167, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.11231637819360633;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.7522977212063813;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03708416408125281;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3322283313959999;  // std dev = 0.211, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.44398323808294576;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, H) )
%   | | | then return 0.4967165539792666;  // std dev = 0.225, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3007167703536087;  // std dev = 1.044, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return -0.10466571403085807;  // std dev = 0.065, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.19823194872795602;  // std dev = 0.353, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0377951429544371;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.03332586135452408;  // std dev = 2.044, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.25384559081922226;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.340123144885996;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.025608398276011718;  // std dev = 0.513, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.4630367821296245;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2749898089885957;  // std dev = 1.785, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else return -0.09853174922903588;  // std dev = 0.150, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return -0.04321872869039373;  // std dev = 1.123, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.23983448270425203;  // std dev = 1.073, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.017737202537489043;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2316679875765979;  // std dev = 0.259, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.26405137931974393;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2924666306260181;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.031428257608561015;  // std dev = 0.488, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06310948944604579;  // std dev = 1.039, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.10576352560981729;  // std dev = 0.641, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.026753394716842002;  // std dev = 2.176, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.40443479398524323;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15159916213221272;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.2637383748884398;  // std dev = 0.964, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.05152055712449878;  // std dev = 0.730, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.20662939846159917;  // std dev = 0.660, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.31314599930244236;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then return -0.03536654212812658;  // std dev = 0.182, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1651192230295549;  // std dev = 0.745, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.013947292914211346;  // std dev = 1.004, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.24241268636800054;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(L, A) )
%   | | then return 0.021352339396665445;  // std dev = 0.191, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | else return 0.4994457817484069;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.05397936265452956;  // std dev = 0.295, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.20656115816624548;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2924209454943217;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1557261890555145;  // std dev = 0.840, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.0366199664543206;  // std dev = 1.224, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.04211391404019073;  // std dev = 1.878, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.25000263816033774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -5.858535118682904E-4;  // std dev = 1.281, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else return 0.3771500181747699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.021011597137860123;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.03922632563950277;  // std dev = 0.631, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(A, G) )
%   | | then return 0.21838043319272937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.17291813118459642;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0079314811904549;  // std dev = 2.293, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | | else return -0.059175939673987134;  // std dev = 0.430, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.05358633033976116;  // std dev = 1.358, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.25140517177348903;  // std dev = 0.706, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.18229493888642892;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0.20368336410164567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.010021895544951365;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(F, H) )
%   | | then return -0.009687266407529732;  // std dev = 0.273, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.36621364151105373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.021170804237270392;  // std dev = 0.617, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return -0.14117894010052678;  // std dev = 1.316, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.1062354326712238;  // std dev = 0.775, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return -0.0012141218495676932;  // std dev = 2.361, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */


Results
   AUC ROC   = 0.985719
   AUC PR    = 0.318139
   CLL	      = -0.173351
   Precision = 0.165657 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.282272


Total learning time: 8.413 seconds
Total inference time: 6.678 seconds
AUC ROC: 0.985719


Results scoring model
   AUC ROC   = 0.988433
   AUC PR    = 0.312357
   CLL	      = -0.171665
   Precision = 0.102041 at threshold = 0.5
   Recall    = 0.982143
   F1        = 0.184874


Total scoring time: 11.401 seconds
Refined model CLL: -0.171665


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985719
   AUC PR    = 0.318139
   CLL	      = -0.173351
   Precision = 0.165657 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.282272


Total learning time: 36.037 seconds
Total inference time: 6.678 seconds
AUC ROC: 0.985719
Total revision time: 36.037
Best scored revision CLL: -0.171665


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:12:25
{'AUC ROC': 0.985719, 'AUC PR': 0.318139, 'CLL': -0.173351, 'Precision': [0.165657, 0.5], 'Recall': 0.953488, 'F1': 0.282272, 'Learning time': 36.037, 'Inference time': 6.678, 'parameter_0.2': {'AUC ROC': 0.982108, 'AUC PR': 0.331981, 'CLL': -0.167226, 'Precision': [0.161417, 0.5], 'Recall': 0.953488, 'F1': 0.276094, 'Learning time': 4.985, 'Inference time': 6.557}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6689597459103223;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=30 */
%   | | | else return 0.7395048673029023;  // std dev = 2.484, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7239677240518401;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6263395484633865;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6910472603117587;  // std dev = 0.966, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5844244259253475;  // std dev = 3.288, 80.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=67 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3898619242849939;  // std dev = 2.470, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return -0.19445281162471392;  // std dev = 0.129, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5481343407971426;  // std dev = 0.967, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6598735340311233;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3033572570259995;  // std dev = 3.364, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | else return -0.12508450114775976;  // std dev = 0.385, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3907737707698217;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5414481356036939;  // std dev = 1.911, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return -0.11231637819360611;  // std dev = 6.66e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3155164082329735;  // std dev = 1.597, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4942176861824481;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42714669584611453;  // std dev = 0.628, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.03452117427296692;  // std dev = 4.465, 260.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=64 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.04263561275976158;  // std dev = 2.700, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.39056125388901286;  // std dev = 0.170, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.0832890146873783;  // std dev = 1.406, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3134725054122015;  // std dev = 2.153, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.33655764503842783;  // std dev = 2.595, 55.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=47 */
%   | | else return -0.10980486917100855;  // std dev = 0.196, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.4332093909655006;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.5667906090344994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.045500237463364984;  // std dev = 2.609, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.3049182962059655;  // std dev = 0.179, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.23387366090649309;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4220877688245286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.0270542683467792;  // std dev = 4.069, 290.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=82 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4436909383336553;  // std dev = 1.537, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.16046075601094054;  // std dev = 0.113, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.20606784842394146;  // std dev = 1.193, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( function(A, F) )
%   | | | then return 0.06519168013190335;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.031151151558803575;  // std dev = 2.940, 143.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=25 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.3238772498699589;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.02613647607391389;  // std dev = 3.632, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return -0.01443756535587725;  // std dev = 1.025, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1754744319196756;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.48030094820867425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17533458047924896;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then return 0.030287662397906184;  // std dev = 4.141, 249.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.549108163373159;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07364245304645768;  // std dev = 1.970, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( function(A, J) )
%   | | | then return -0.011480329035870894;  // std dev = 1.026, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17257647206339918;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.7351110088828366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.05266559167690067;  // std dev = 1.155, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.23005084790198174;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.7648113632624692;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.0035134295045313956;  // std dev = 4.244, 281.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=78 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.026944785085637028;  // std dev = 2.269, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.05592204712489951;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.049671642433422925;  // std dev = 0.852, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.2101931344572344;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.26848324019185377;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014240020747209314;  // std dev = 0.701, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.194942160256669;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0070498132775614775;  // std dev = 4.692, 331.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=91 */


Results
   AUC ROC   = 0.983725
   AUC PR    = 0.28153
   CLL	      = -0.163638
   Precision = 0.193384 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.317328


Total learning time: 22.153 seconds
Total inference time: 22.371 seconds
AUC ROC: 0.983725


Results scoring model
   AUC ROC   = 0.978014
   AUC PR    = 0.239232
   CLL	      = -0.17507
   Precision = 0.116985 at threshold = 0.5
   Recall    = 0.920354
   F1        = 0.207585


Total scoring time: 87.881 seconds
Parameter learned model CLL: -0.17507


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.953, 1, 10], 'false,true,true,true': [2.382, 7, 30], 'false,true,true,false': [2.484, 7, 52], 'false,true,false': [0.0, 192, 0], 'false,false,true': [0.816, 1, 2], 'false,false,false,true': [2.335, 12, 10], 'false,false,false,false': [2.11e-08, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.022, 0, 8], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.966, 1, 15], 'false,true,true,false': [3.288, 13, 67], 'false,true,false': [0.0, 189, 0], 'false,false,true,true': [2.47, 10, 15], 'false,false,true,false': [0.129, 19, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.967, 1, 22], 'true,true,false,true': [0.089, 0, 5], 'true,true,false,false': [3.364, 25, 36], 'true,false': [0.385, 83, 0], 'false,true': [0.884, 1, 4], 'false,false,true,true': [1.911, 4, 46], 'false,false,true,false': [6.66e-08, 113, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.597, 3, 16], 'true,false': [0.0, 0, 0], 'false,true,true': [0.109, 0, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.628, 1, 14], 'false,false,true,false': [4.465, 196, 64], 'false,false,false,true': [2.7, 32, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.17, 0, 12], 'true,false': [1.406, 4, 4], 'false,true,true,true': [2.153, 6, 35], 'false,true,true,false': [2.595, 8, 47], 'false,true,false': [0.196, 176, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [2.609, 34, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.179, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.748, 1, 4], 'true,false': [0.0, 0, 1], 'false,true': [4.069, 208, 82], 'false,false,true,true': [1.537, 3, 15], 'false,false,true,false': [0.113, 20, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.193, 3, 26], 'true,true,false,true': [0.707, 1, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.94, 118, 25], 'false,true,true': [0.138, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.632, 105, 51], 'false,false,false,true': [1.025, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.97, 1, 10], 'false,true': [4.141, 167, 82], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.97, 18, 11], 'false,false,false,true': [1.026, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.104, 0, 8], 'true,true,false': [0.0, 1, 0], 'true,false': [1.155, 2, 8], 'false,true,true,true': [0.013, 0, 6], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.244, 203, 78], 'false,false,false,true': [2.269, 25, 10], 'false,false,false,false': [0.976, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.852, 1, 8], 'true,false,true,true': [0.092, 0, 6], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.701, 2, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 0], 'false,false': [4.692, 240, 91]}]]
[{'': [0.055363321799307655, 0.21273634033007577], 'false': [0.20365547839506226, 0.24872448979591794], 'false,false': [0.22222222222222224, 0.24959999999999957], 'false,false,false': [0.2479338842975207, 1.4802973661668753e-16], 'false,true': [0.12456597222222292, -2.266705341943028e-16], 'false,true,true': [0.15339663988312777, 0.10456765297328356], 'true': [-1.4802973661668753e-16, 0.0826446280991734], 'true,true': [-1.4802973661668753e-16, nan]}, {'': [0.054690667839239974, 0.16845297206233398], 'false': [0.1600150439188505, 0.22283050983969607], 'false,false': [0.22283050983969607, nan], 'false,false,true': [0.24408630688738586, 0.0008716111697867404], 'false,true': [0.12392954982214843, -2.5846461948945442e-17], 'false,true,true': [0.058310033004965955, 0.1351587150501528], 'true': [6.059651676959543e-05, 0.09876543209876548]}, {'': [0.14563779065922164, 0.11722941648332588], 'true': [0.15342539208890305, 0.0017871609953504907], 'true,true': [0.04066440308178439, 0.1804655006649217], 'true,true,false': [0.001575662750557072, 0.18549952215076732], 'false': [0.15635189964150328, 0.11330505968596331], 'false,false': [0.11330505968596331, nan], 'false,false,true': [0.07307321565863482, 3.929993007522678e-17]}, {'': [0.13429857858051805, 0.09499206100394572], 'true': [0.13429857858051805, nan], 'false': [0.0019639942000638047, 0.09317069942615258], 'false,false': [0.08188170688374735, 0.16200693807218702], 'false,false,false': [0.16200693807218702, nan], 'false,false,true': [0.026329705744101872, 0.07667818637965998], 'false,true': [0.0019639942000638047, nan]}, {'': [0.1542080724644009, 0.09545400446998036], 'true': [0.0024185464288700906, 0.24717191529974636], 'false': [0.08549035610841, 0.14963908745183435], 'false,false': [0.2222222222222222, 0.14482871761351887], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.14482871761351887, nan], 'false,true': [0.11853649716372307, 0.0002175147702471635], 'false,true,true': [0.11304149168127713, 0.12240517115984725]}, {'': [0.036894398648635474, 0.06926478376277642], 'false': [0.05710363855079266, 0.15346705844474542], 'false,false': [0.15346705844474542, nan], 'false,false,true': [0.13117166748444595, 0.0006385193608563266], 'true': [0.03805769540758101, 0.0], 'true,true': [0.002909466966811895, 0.111913751586449], 'true,true,false': [nan, 0.111913751586449]}, {'': [0.06856992399741549, 0.08699640047968893], 'false': [0.002703343988903611, 0.08691693841402458], 'false,false': [0.08455401435048655, 0.1314280098315547], 'false,false,false': [0.1314280098315547, nan], 'true': [0.06327628403006073, 0.060445397195114214], 'true,true': [0.04911839316453266, 0.25], 'true,true,false': [0.25, nan], 'false,true': [0.002703343988903611, nan]}, {'': [0.0748259336961539, 0.07807893497300154], 'false': [0.06885283622389082, 0.13728488038790987], 'false,false': [0.13663976141994835, 0.13165517764842], 'false,false,true': [0.0, 0.13381588927443194], 'false,false,false': [0.13165517764842, nan], 'true': [0.05265812438969165, 0.0855298773754852], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.1094205996984562, 0.07615695678077983], 'true': [0.08258044058722303, 0.13340472048980814], 'true,true': [0.0013589330976788716, 0.0], 'false': [0.12121988100271766, 0.0750172156860037], 'false,true': [0.12121988100271766, nan], 'false,true,true': [3.022033131052278e-05, 0.0], 'false,false': [0.06408380465155614, 0.14965783030563254], 'false,false,false': [0.14707577485230866, 0.1588578225031604]}, {'': [0.05115756995311937, 0.06660406236874969], 'false': [0.06760970862086563, 0.066515044719823], 'false,true': [0.08198296235533009, 0.0], 'false,true,true': [nan, 0.08198296235533009], 'true': [0.08070312007089077, 0.001688165029670563], 'true,false': [0.001688165029670563, nan], 'true,false,true': [0.0014014525995891351, 0.0], 'false,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;function(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6081489350995123;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.8018109069304987;  // std dev = 1.943, 71.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | else return -0.1418510649004885;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7395066058929254;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.4874506595744976;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7374506595744976;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.6089646742757886;  // std dev = 2.293, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return 0.7116755905717976;  // std dev = 0.996, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.1254446385283917;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.5377745619634301;  // std dev = 1.711, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.23828790775788722;  // std dev = 1.686, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.17017176619288493;  // std dev = 0.041, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.6000293577206456;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.41787892809243843;  // std dev = 1.216, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(C, I), recursion_proteinclass(C, B) )
%   | | | then return 0.6356028528992864;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30924926510913325;  // std dev = 3.323, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | else return -0.12562538975137422;  // std dev = 0.352, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.3730942788951074;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.25731938593494935;  // std dev = 2.436, 39.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=22 */
%   | | | else return 0.37954053191491527;  // std dev = 1.853, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | else return -0.11231637819360614;  // std dev = 3.16e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then return 0.4240963551843687;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5076871512341832;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.28025568976962506;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.152327245958213;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4941866436114435;  // std dev = 0.147, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.06548809686410564;  // std dev = 1.232, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.0642797315665294;  // std dev = 2.213, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.04078513053816262;  // std dev = 3.406, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | | | else return 0.09439404852153302;  // std dev = 3.420, 115.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.3253578384219363;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3839222309631348;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21113533350296532;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.43139567199950923;  // std dev = 2.066, 86.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=81 */
%   | | | else return -0.141660397191674;  // std dev = 0.737, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12001601382375898;  // std dev = 0.376, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.43996900559961566;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.11564459899980244;  // std dev = 2.216, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.350887930106591;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.3004092810348676;  // std dev = 0.045, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.3609526530545697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F), phenotype(A, G) )
%   | | | then return -0.11072914756896535;  // std dev = 1.013, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return -0.008399358891185312;  // std dev = 1.670, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.07538641162484268;  // std dev = 2.662, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | | else return 0.026142705854075667;  // std dev = 2.085, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.4070340724896176;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21050211141077754;  // std dev = 1.953, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return -0.15307013843092657;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.040922205853263935;  // std dev = 0.267, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( recursion_proteinclass(C, B), complex(A, D) )
%   | | then return 0.23676123464687662;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.2115142256327332;  // std dev = 1.119, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.002463206918835743;  // std dev = 2.652, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2593906731556011;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.25030649741803873;  // std dev = 0.365, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06760827706958783;  // std dev = 1.488, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.15338625033051564;  // std dev = 1.204, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.04765057146354339;  // std dev = 2.583, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.18772081942604643;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23725680742457333;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return -0.03539180539998386;  // std dev = 1.401, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return -0.11407384499063342;  // std dev = 1.041, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.07393273906471406;  // std dev = 1.889, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.0034505783128017686;  // std dev = 3.186, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.5494180316200453;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.04809343023600415;  // std dev = 2.262, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else return 0.16699140303779797;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1750022284400834;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.19598194884619852;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.20452844585811297;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(G, H), interaction(A, I) )
%   | | then return 0.2553098933943567;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(A, L), complex(J, L) )
%   | | | then return -0.07456599699574716;  // std dev = 0.943, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | | else return 0.004872773434902122;  // std dev = 3.903, 228.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=68 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.12338099850620869;  // std dev = 1.869, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.044495894192513666;  // std dev = 1.445, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15128767993237094;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.17705120447677603;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2043994758638591;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.22018350202654163;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19169535374680713;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.27288605199119925;  // std dev = 0.875, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.012677119430038318;  // std dev = 3.647, 278.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=63 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.06849607740883976;  // std dev = 2.282, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.03495803482297346;  // std dev = 1.148, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */


Results
   AUC ROC   = 0.982926
   AUC PR    = 0.246287
   CLL	      = -0.182581
   Precision = 0.17226 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.288931


Total learning time: 72.609 seconds
Total inference time: 37.483 seconds
AUC ROC: 0.982926


Results scoring model
   AUC ROC   = 0.980651
   AUC PR    = 0.202463
   CLL	      = -0.181697
   Precision = 0.121699 at threshold = 0.5
   Recall    = 0.938053
   F1        = 0.215447


Total scoring time: 165.576 seconds
Refined model CLL: -0.181697


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983725
   AUC PR    = 0.28153
   CLL	      = -0.163638
   Precision = 0.193384 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.317328


Total learning time: 348.21899999999994 seconds
Total inference time: 22.371 seconds
AUC ROC: 0.983725
Total revision time: 348.21899999999994
Best scored revision CLL: -0.17507


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:19:14
{'AUC ROC': 0.983725, 'AUC PR': 0.28153, 'CLL': -0.163638, 'Precision': [0.193384, 0.5], 'Recall': 0.883721, 'F1': 0.317328, 'Learning time': 348.21899999999994, 'Inference time': 22.371, 'parameter_0.4': {'AUC ROC': 0.983725, 'AUC PR': 0.28153, 'CLL': -0.163638, 'Precision': [0.193384, 0.5], 'Recall': 0.883721, 'F1': 0.317328, 'Learning time': 22.153, 'Inference time': 22.371}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6795775065280838;  // std dev = 2.866, 56.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=46 */
%   | | | else return 0.7727830814409761;  // std dev = 2.530, 82.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=75 */
%   | | else return -0.14185106490048796;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2059750220560341;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6639178566553986;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.5528067455442877;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6698212135740107;  // std dev = 1.364, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.616272624010005;  // std dev = 3.505, 112.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=98 */
%   | | else return -0.1254446385283919;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5727455099879076;  // std dev = 1.723, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.16950276970006628;  // std dev = 0.011, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13067258272140986;  // std dev = 2.174, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.1528800736093178;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.591233291512988;  // std dev = 0.087, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6053303939387055;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44365858819141174;  // std dev = 2.383, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else return -0.12482444641354429;  // std dev = 0.424, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5798447168395128;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4987769757754409;  // std dev = 3.124, 101.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=90 */
%   | | | else return -0.11231637819360667;  // std dev = 0.000, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.17732712719395152;  // std dev = 2.347, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3473693597336695;  // std dev = 1.092, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.429649235558891;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4387671753752313;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.2992644121088255;  // std dev = 0.981, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.4908689906821174;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.22343759058414345;  // std dev = 2.196, 34.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=23 */
%   | | | else return 0.020624655425021912;  // std dev = 5.304, 377.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=90 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.14187978565083534;  // std dev = 2.052, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.037479563119794855;  // std dev = 2.435, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2954504937418321;  // std dev = 0.981, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.18600602475969807;  // std dev = 1.289, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.35067404018882015;  // std dev = 2.109, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return 0.397721046122541;  // std dev = 2.336, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | else return -0.10574606273278996;  // std dev = 0.198, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.4760562751224088;  // std dev = 0.151, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.0945125958542269;  // std dev = 2.061, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.057521443493370294;  // std dev = 2.393, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.28373634709893025;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.332381361243691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2963497547146375;  // std dev = 0.089, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(G, A) )
%   | then return 0.023471495849603435;  // std dev = 4.849, 428.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=121 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.31215896446847197;  // std dev = 1.719, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return -0.16084425120057283;  // std dev = 1.83e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06293566555235489;  // std dev = 2.423, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2122532410565713;  // std dev = 1.680, 46.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=41 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.5072668717232137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.017709169392132643;  // std dev = 3.634, 174.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=36 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.06175993282270933;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.23331850587663885;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then return 0.02164990551564653;  // std dev = 3.949, 269.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=76 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.06214501671864444;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.06930510927807594;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18967712037653073;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08070377889842467;  // std dev = 1.578, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   else if ( interaction(F, A) )
%   | then return 0.01178101858234833;  // std dev = 4.935, 419.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=121 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3826778878846234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10803363034937989;  // std dev = 2.564, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -9.328947909804375E-4;  // std dev = 0.546, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2222862565329604;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17018899357939657;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.3048406176619629;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.21102611056950296;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.24000241702321046;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11176882416445946;  // std dev = 0.504, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2633231685626374;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.013539045715141477;  // std dev = 4.633, 408.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=113 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.056245966209097636;  // std dev = 2.587, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.16930449132542036;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1541807757130173;  // std dev = 0.109, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.2176614554660284;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1703124211248553;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22082150427461683;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, J), interaction(G, K) )
%   | | | then return 0.16056484267547588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3997520636833294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.011340670621386079;  // std dev = 5.449, 483.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=132 */


Results
   AUC ROC   = 0.986093
   AUC PR    = 0.340133
   CLL	      = -0.161332
   Precision = 0.213158 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.347639


Total learning time: 8.795 seconds
Total inference time: 6.233 seconds
AUC ROC: 0.986093


Results scoring model
   AUC ROC   = 0.976975
   AUC PR    = 0.21666
   CLL	      = -0.175264
   Precision = 0.113861 at threshold = 0.5
   Recall    = 0.952663
   F1        = 0.203411


Total scoring time: 33.499 seconds
Parameter learned model CLL: -0.175264


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 19], 'false,true,true,true': [2.866, 10, 46], 'false,true,true,false': [2.53, 7, 75], 'false,true,false': [0.0, 281, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [3.23, 30, 16], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.972, 1, 17], 'true,false': [1.291, 2, 10], 'false,true,true,true': [1.364, 2, 23], 'false,true,true,false': [3.505, 14, 98], 'false,true,false': [0.0, 267, 0], 'false,false,true,true': [1.723, 4, 12], 'false,false,true,false': [0.011, 17, 0], 'false,false,false,true': [2.174, 16, 7], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.087, 0, 21], 'true,true,false,true': [0.023, 0, 3], 'true,true,false,false': [2.383, 10, 31], 'true,false': [0.424, 114, 0], 'false,true': [0.051, 0, 15], 'false,false,true,true': [3.124, 11, 90], 'false,false,true,false': [0.0, 210, 0], 'false,false,false,true': [2.347, 15, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [1.092, 2, 15], 'true,false,true': [0.025, 0, 6], 'true,false,false': [0.034, 0, 6], 'false,true,true': [0.981, 2, 6], 'false,true,false': [0.036, 0, 4], 'false,false,true,true': [2.196, 11, 23], 'false,false,true,false': [5.304, 287, 90], 'false,false,false,true': [2.052, 20, 11], 'false,false,false,false': [2.435, 23, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.981, 1, 16], 'true,false': [1.289, 2, 11], 'false,true,true,true': [2.109, 6, 52], 'false,true,true,false': [2.336, 6, 69], 'false,true,false': [0.198, 267, 0], 'false,false,true,true': [0.151, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.061, 23, 11], 'false,false,false,false': [2.393, 20, 8]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.052, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.089, 0, 17], 'false,true': [4.849, 307, 121], 'false,false,true,true': [1.719, 4, 12], 'false,false,true,false': [1.83e-08, 15, 0], 'false,false,false,true': [2.423, 20, 9], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [1.68, 5, 41], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.634, 138, 36], 'false,true,true': [0.891, 1, 4], 'false,true,false': [0.025, 0, 8], 'false,false,true': [3.949, 193, 76], 'false,false,false,true': [0.52, 2, 1], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [1.578, 3, 19], 'false,true': [4.935, 298, 121], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [2.564, 27, 17], 'false,false,false,true': [0.546, 3, 1], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'phenotype(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.056, 0, 14], 'true,true,false': [0.707, 1, 1], 'true,false': [0.111, 0, 12], 'false,true,true,true': [0.054, 0, 4], 'false,true,true,false': [0.504, 2, 2], 'false,true,false': [0.046, 0, 4], 'false,false,true': [4.633, 295, 113], 'false,false,false,true': [2.587, 32, 16], 'false,false,false,false': [1.095, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(G, K)'}, {'true,true': [0.109, 0, 15], 'true,false,true,true': [0.006, 0, 2], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.075, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.066, 0, 8], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false': [5.449, 351, 132]}]]
[{'': [9.210739167260557e-16, 0.20983104559454704], 'false': [0.20538730127989924, 0.23603305785123965], 'false,false': [0.0, 0.22997508009967915], 'false,false,false': [0.22684310018903542, 0.24489795918367335], 'false,true': [0.10801302247427406, -2.2125441060145468e-17], 'false,true,true': [0.1466836734693882, 0.0780785246876849], 'true': [-2.220446049250313e-16, -2.8047739569477637e-16], 'true,true': [-2.220446049250313e-16, nan]}, {'': [0.0899999999999998, 0.16957626914310428], 'false': [0.16172955390206775, 0.21963186528022194], 'false,false': [0.22753146771374524, 0.20902625547764495], 'false,false,true': [0.18546197256864744, 7.494576985296189e-06], 'false,false,false': [0.2054817936493564, 0.2222222222222223], 'false,true': [0.10369640109097357, -6.985672963933569e-17], 'false,true,true': [0.07439303613639275, 0.10971407320550876], 'true': [0.0524691358024694, 0.13888888888888895]}, {'': [0.12460769761930061, 0.1266576145972688], 'false': [0.00017513069553718453, 0.12214950821629451], 'true': [0.09270674217886346, 0.0015742127275875622], 'false,false': [0.11326449195133977, 0.22956539612749147], 'false,false,false': [0.22956539612749147, nan], 'false,false,true': [0.09660618016401248, -5.2867763077388404e-17], 'true,true': [0.000357405111459631, 0.1307583578988388], 'true,true,false': [0.000180777212928529, 0.13853069415127156]}, {'': [0.04299760164253231, 0.09680099660645154], 'false': [0.08843188727656882, 0.09449745109621348], 'false,false': [0.08330945070765204, 0.16628837567210453], 'false,false,false': [0.13582778943478058, 0.19129925867716335], 'false,true': [0.12025114842224423, 0.00031848863171884956], 'false,false,true': [0.1418990249990386, 0.07462277322401921], 'true': [0.07011107258408664, 0.00016627365298878724], 'true,false': [0.00010392103311803365, 0.00018705785961237176]}, {'': [0.09037591296950137, 0.08861641862555372], 'true': [0.05661044488367083, 0.12774317050286274], 'false': [0.07681218751562363, 0.1613114982991484], 'false,false': [0.011410246467847662, 0.161190692754252], 'false,false,false': [0.12488594532599308, 0.2045246459816299], 'false,true': [0.07503187778202705, 0.00014635624240091623], 'false,true,true': [0.07669356499844102, 0.07278158850630743], 'false,false,true': [0.011410246467847662, nan]}, {'': [0.00048766258399364135, 0.0701060430418179], 'false': [0.05494160333999215, 0.17608828777995505], 'false,false': [0.1511855516065861, 0.20249447444099286], 'false,false,false': [0.20249447444099286, nan], 'false,false,true': [0.18466456654424937, 2.2204460492503132e-17], 'true': [0.00047918332373164674, 0.0004704112925493351], 'true,true': [0.00029579217514300965, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.08227072456481563, 0.0630822896522758], 'true': [0.06188773057119089, 0.07590759238422744], 'false': [0.06809692884869689, 0.061918621743041614], 'false,true': [0.1588181833821067, 7.601246212327051e-05], 'false,false': [0.05795998255933757, 0.1782550530248554], 'false,false,false': [0.09028653667981539, 0.2222222222222222], 'true,true': [0.06138134916138825, 0.0], 'true,true,false': [0.0, nan]}, {'': [0.08532655199942592, 0.0696697263039471], 'true': [0.0, 0.11318767198268521], 'false': [0.058121571054048436, 0.15175988746107988], 'false,false': [0.14768563527590953, 0.17466739052472582], 'false,false,false': [0.07442138629056134, 0.25000000000000006], 'false,false,true': [0.0, 0.14936591658234596], 'true,true': [0.0, nan]}, {'': [0.03496674627388461, 0.06389821735309273], 'false': [0.025994938159509557, 0.06401595876667977], 'false,false': [0.052619632236745734, 0.147423915155207], 'false,false,false': [0.1394525290111249, 0.19983302199543942], 'true': [0.056123583827725365, 0.0010186522459244562], 'true,true': [0.00022031150145720196, 0.25], 'false,true': [0.03618429597650131, 0.0005193393289949916], 'false,true,true': [0.000741813124531164, 0.0634048516597395]}, {'': [0.0009303031100235691, 0.061272605814575186], 'false': [0.0038651289467962037, 0.06146735229424993], 'false,true': [0.0005515785640881829, 0.014302631673364943], 'false,true,false': [0.0, 0.0], 'true': [0.0007869260295256253, 0.0007889067992722746], 'true,false': [1.7150840613988638e-05, 0.0005696028154969946], 'false,true,true': [nan, 0.0005515785640881829], 'true,false,true': [1.7150840613988638e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
7;false,false,true;recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;phenotype(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;phenotype(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6879361691420648;  // std dev = 3.644, 94.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=78 */
%   | | | else return 0.8354216623722391;  // std dev = 0.989, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.1418510649004879;  // std dev = 4.21e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2812258581764354;  // std dev = 2.519, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.43375912649666876;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.7194734122109542;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.5735663046420036;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=78 */
%   | | | else return 0.7013102548309553;  // std dev = 0.989, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6191475759512085;  // std dev = 1.551, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.17570259534619104;  // std dev = 0.037, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.08995072690345192;  // std dev = 1.662, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.4582844092028301;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5212958798199463;  // std dev = 0.277, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.3392170665877902;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4277382808816451;  // std dev = 2.439, 42.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=31 */
%   | else return -0.12740730901624614;  // std dev = 0.047, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5014905163881348;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48857155540174935;  // std dev = 3.238, 102.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=90 */
%   | | | else return -0.11231637819360649;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3686284164219549;  // std dev = 1.301, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.16048672207495104;  // std dev = 1.692, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.34477549481389913;  // std dev = 0.309, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.4306712827493823;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.17088363523340808;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5523594970147093;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.489552289978876;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I) )
%   | | then if ( interaction(A, J), complex(J, I) )
%   | | | then return -0.06598772939126771;  // std dev = 1.772, 59.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=7 */
%   | | | else return 0.06529919046384218;  // std dev = 3.588, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.028012473908169848;  // std dev = 2.052, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.09606196053672766;  // std dev = 4.541, 210.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3567001419574256;  // std dev = 0.032, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.35301860557854015;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14878237920299056;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.22364402816963266;  // std dev = 1.997, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.4025813034451517;  // std dev = 2.526, 112.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=105 */
%   | | else return -0.1082584750554326;  // std dev = 0.010, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, K), phenotype(K, L) )
%   | | | then return 0.23482787151434173;  // std dev = 1.463, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.03404699980214502;  // std dev = 2.501, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else return 0.24457053012439509;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24855015575225453;  // std dev = 0.179, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( enzyme(E, G), complex(A, H) )
%   | | | then return -0.0487707969121512;  // std dev = 1.276, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.06259686916862461;  // std dev = 2.879, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.018190257210633467;  // std dev = 1.715, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.018715010946326466;  // std dev = 3.295, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.49359488326158985;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.1566357350636886;  // std dev = 0.074, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.039777425834223605;  // std dev = 2.029, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.12761095453274304;  // std dev = 1.272, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.07516477777204675;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.2471082260805852;  // std dev = 1.628, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else return 0.4293393865519094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.10344696833126789;  // std dev = 0.056, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.03825343624171257;  // std dev = 1.534, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.07456380948115936;  // std dev = 2.839, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then if ( phenotype(A, L) )
%   | | then return 0.2527094080231374;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.10482428206280017;  // std dev = 0.316, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.023216143158600554;  // std dev = 0.259, 252.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=79 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2074838597861232;  // std dev = 0.033, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2834423341082904;  // std dev = 1.843, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | | else return -0.12448886300666305;  // std dev = 1.172, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( location(A, G) )
%   | | | then return -0.01702837153721035;  // std dev = 3.541, 215.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=54 */
%   | | | else return -0.11177196313492573;  // std dev = 0.983, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.3901444993729551;  // std dev = 0.892, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.049480047681656376;  // std dev = 2.511, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.016169976927632817;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.006774793480367053;  // std dev = 1.007, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17175780029474158;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then return 0.17988460975497547;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.3181034820823647;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.18155542265650948;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then if ( interaction(I, J) )
%   | | then if ( phenotype(I, K), interaction(A, J) )
%   | | | then return 0.058720513247360474;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.20723013005619642;  // std dev = 0.412, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2184575629732785;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, L), enzyme(L, M) )
%   | | then return -0.03523332332271745;  // std dev = 0.228, 107.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=20 */
%   | | else return 0.0239333610899914;  // std dev = 0.241, 360.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.15103936763579473;  // std dev = 0.027, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.10228830050860577;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16825744947632307;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.142740480938882;  // std dev = 0.164, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.36169028321269864;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return -0.023616072817906748;  // std dev = 1.559, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.08728583200224559;  // std dev = 2.801, 86.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=35 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.04379592130160031;  // std dev = 2.000, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | | else return 0.019794661354786903;  // std dev = 3.320, 225.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=70 */


Results
   AUC ROC   = 0.988043
   AUC PR    = 0.380409
   CLL	      = -0.163307
   Precision = 0.212042 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.346154


Total learning time: 15.692 seconds
Total inference time: 7.615 seconds
AUC ROC: 0.988043


Results scoring model
   AUC ROC   = 0.985096
   AUC PR    = 0.257274
   CLL	      = -0.17126
   Precision = 0.122713 at threshold = 0.5
   Recall    = 0.952663
   F1        = 0.217421


Total scoring time: 37.195 seconds
Refined model CLL: -0.17126


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988043
   AUC PR    = 0.380409
   CLL	      = -0.163307
   Precision = 0.212042 at threshold = 0.5
   Recall    = 0.94186
   F1        = 0.346154


Total learning time: 95.18100000000001 seconds
Total inference time: 7.615 seconds
AUC ROC: 0.988043
Total revision time: 95.18100000000001
Best scored revision CLL: -0.17126


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:21:04
{'AUC ROC': 0.988043, 'AUC PR': 0.380409, 'CLL': -0.163307, 'Precision': [0.212042, 0.5], 'Recall': 0.94186, 'F1': 0.346154, 'Learning time': 95.18100000000001, 'Inference time': 7.615, 'parameter_0.6': {'AUC ROC': 0.986093, 'AUC PR': 0.340133, 'CLL': -0.161332, 'Precision': [0.213158, 0.5], 'Recall': 0.94186, 'F1': 0.347639, 'Learning time': 8.795, 'Inference time': 6.233}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6786617556123334;  // std dev = 3.389, 78.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=64 */
%   | | | else return 0.7364098046647282;  // std dev = 3.507, 115.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=101 */
%   | | else return -0.1418510649004874;  // std dev = 2.76e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14981560176617864;  // std dev = 3.857, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.5194734122109542;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6663504120706857;  // std dev = 1.659, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return 0.6639131160263307;  // std dev = 3.310, 145.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=133 */
%   | | else return -0.12544463852839227;  // std dev = 0.000, 406.000 (wgt'ed) examples reached here.  /* #neg=406 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8288495463702948;  // std dev = 0.114, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1623077033822569;  // std dev = 0.012, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.14275203945192944;  // std dev = 2.945, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.03320549123154841;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5783418089449717;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5282203564035921;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6164908290078981;  // std dev = 0.778, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return -0.12810144166609955;  // std dev = 0.389, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.46589338088038895;  // std dev = 1.648, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4669417793946538;  // std dev = 4.453, 168.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=145 */
%   | | | else return -0.11231637819360649;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.08910191599586885;  // std dev = 3.132, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.3722119910091119;  // std dev = 0.773, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.43942013752948833;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.48912278433960804;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.44973494282227955;  // std dev = 0.641, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.47849385011872886;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.31446984752848217;  // std dev = 2.295, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.022611239823890406;  // std dev = 6.013, 535.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=123 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.08405930868615497;  // std dev = 1.986, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.1925098468967674;  // std dev = 2.714, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.34297781646807857;  // std dev = 0.085, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.27575076069241505;  // std dev = 0.982, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3143265468179771;  // std dev = 2.726, 75.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=66 */
%   | | | else return 0.3772360200088885;  // std dev = 3.179, 110.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=99 */
%   | | else return -0.10446170319249722;  // std dev = 0.154, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.4752356243927798;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.13014182641985933;  // std dev = 1.781, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.046079121765441905;  // std dev = 2.957, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.25518369412759284;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28959833084323083;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20813746009424042;  // std dev = 1.240, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( interaction(G, A) )
%   | then return 0.01948423698905518;  // std dev = 5.934, 571.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=165 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4040171918362003;  // std dev = 0.981, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.151651957099276;  // std dev = 0.007, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10816018141738645;  // std dev = 2.891, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16302238950658843;  // std dev = 2.441, 66.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=54 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.13274481984008601;  // std dev = 0.375, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4199122463810774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.014457840846614108;  // std dev = 4.013, 227.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=46 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.2655554131306687;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2505220522395462;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then return 0.04213664448292683;  // std dev = 4.626, 331.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=108 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.0060694692738951055;  // std dev = 0.644, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.7575806962140524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.184017800236253;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18899592445989588;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1730665501852295;  // std dev = 0.968, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(G, A) )
%   | then return 0.006866723524048477;  // std dev = 5.808, 600.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=165 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.03850003782665712;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03640131109869278;  // std dev = 3.180, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.019791581566222547;  // std dev = 0.656, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.15567342880943497;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1673380276542072;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.037208440562252254;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.13568836146912838;  // std dev = 0.779, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return 0.14602175931350814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17421333679453394;  // std dev = 0.837, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2698626674873486;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.022119951655102763;  // std dev = 5.505, 513.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=156 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0352451983293882;  // std dev = 3.094, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return 0.034880877803737595;  // std dev = 1.013, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.10284714168713391;  // std dev = 0.979, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.18344215250357376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15249518467483122;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07636109357783699;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14051060403133805;  // std dev = 0.830, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( enzyme(A, J), interaction(G, K) )
%   | | | then return 0.1287370552957915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32537311528306884;  // std dev = 0.067, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.004995457051304315;  // std dev = 6.365, 693.000 (wgt'ed) examples reached here.  /* #neg=513 #pos=180 */


Results
   AUC ROC   = 0.982252
   AUC PR    = 0.29753
   CLL	      = -0.168205
   Precision = 0.23839 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.376528


Total learning time: 7.158 seconds
Total inference time: 5.261 seconds
AUC ROC: 0.982252


Results scoring model
   AUC ROC   = 0.977336
   AUC PR    = 0.215197
   CLL	      = -0.171152
   Precision = 0.122496 at threshold = 0.5
   Recall    = 0.946903
   F1        = 0.216929


Total scoring time: 23.965 seconds
Parameter learned model CLL: -0.171152


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 25], 'false,true,true,true': [3.389, 14, 64], 'false,true,true,false': [3.507, 14, 101], 'false,true,false': [2.76e-07, 381, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.857, 51, 21], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [7.3e-08, 0, 22], 'true,false': [1.549, 3, 12], 'false,true,true,true': [1.659, 3, 32], 'false,true,true,false': [3.31, 12, 133], 'false,true,false': [0.0, 406, 0], 'false,false,true,true': [0.114, 0, 13], 'false,false,true,false': [0.012, 28, 0], 'false,false,false,true': [2.945, 29, 13], 'false,false,false,false': [0.894, 4, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.106, 0, 16], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.778, 1, 26], 'true,false': [0.389, 77, 0], 'false,true': [1.648, 3, 24], 'false,false,true,true': [4.453, 23, 145], 'false,false,true,false': [0.0, 349, 0], 'false,false,false,true': [3.132, 37, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true': [0.773, 1, 13], 'true,false,true': [0.0, 0, 12], 'true,false,false': [2.11e-08, 0, 9], 'false,true,true': [0.641, 1, 7], 'false,true,false': [0.02, 0, 5], 'false,false,true,true': [2.295, 8, 33], 'false,false,true,false': [6.013, 412, 123], 'false,false,false,true': [1.986, 25, 12], 'false,false,false,false': [2.714, 19, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), enzyme(A, L)'}, {'true,true': [0.085, 0, 22], 'true,false': [0.982, 1, 12], 'false,true,true,true': [2.726, 9, 66], 'false,true,true,false': [3.179, 11, 99], 'false,true,false': [0.154, 393, 0], 'false,false,true,true': [0.219, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.781, 18, 12], 'false,false,false,false': [2.957, 32, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.054, 0, 5], 'true,false': [1.24, 2, 22], 'false,true': [5.934, 406, 165], 'false,false,true,true': [0.981, 1, 13], 'false,false,true,false': [0.007, 18, 0], 'false,false,false,true': [2.891, 25, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true,true': [2.441, 12, 54], 'true,true,false,true': [0.375, 1, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [4.013, 181, 46], 'false,true,true': [0.039, 0, 3], 'false,true,false': [0.037, 0, 10], 'false,false,true': [4.626, 223, 108], 'false,false,false,true': [0.644, 6, 2], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true,true': [7.45e-09, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.968, 1, 25], 'false,true': [5.808, 435, 165], 'false,false,true,true': [0.75, 1, 2], 'false,false,true,false': [3.18, 47, 22], 'false,false,false,true': [0.656, 7, 2], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'enzyme(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.025, 0, 17], 'true,true,false': [0.735, 1, 3], 'true,false': [0.779, 1, 14], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.837, 1, 6], 'false,true,false': [0.037, 0, 5], 'false,false,true': [5.505, 357, 156], 'false,false,false,true': [3.094, 48, 21], 'false,false,false,false': [1.013, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(G, K)'}, {'true,true': [0.979, 1, 20], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.025, 0, 4], 'true,false,false': [0.939, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.83, 1, 9], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.067, 0, 2], 'false,false': [6.365, 513, 180]}]]
[{'': [1.6718652606120004e-15, 0.20664997551759753], 'false': [0.2048252376500895, 0.21811224489796044], 'false,false': [1.4802973661668753e-16, 0.2085048010973947], 'false,false,false': [0.20659722222222243, 0.2222222222222221], 'false,true': [0.12403017530672575, 2.004812180950414e-16], 'false,true,true': [0.1472715318869156, 0.10691871455576799], 'true': [-2.9605947323337506e-16, -4.263256414560601e-16], 'true,true': [-2.5376526277146434e-16, 0.0]}, {'': [0.0745069393718037, 0.1629440135914231], 'false': [0.1561602998579189, 0.20763096634386827], 'false,false': [0.21304630252929904, 0.20270414580490637], 'false,false,true': [0.001001108941977964, 5.49038797460171e-06], 'false,false,false': [0.20651132947080456, 0.15999999999999998], 'false,true': [0.07617584703757861, -1.2688263138573217e-16], 'false,true,true': [0.07863446755403873, 0.07558123183280122], 'true': [2.4223047810003414e-16, 0.1600000000000001]}, {'': [0.12938972862400444, 0.12488857516806255], 'true': [0.01445029870733151, 0.0019698634865209608], 'false': [0.1005528030725487, 0.11918595693827815], 'false,false': [0.11195595637303608, 0.19232002294179762], 'false,false,false': [0.19232002294179762, nan], 'false,false,true': [0.1180253934443744, -3.3084009902869996e-17], 'true,true': [0.0006956910715812392, 0.0218647089591441], 'true,true,false': [0.0, 0.022396238839889955]}, {'': [0.019298973745608832, 0.09011263224995089], 'false': [0.031831292598907, 0.08799700566056277], 'false,false': [0.07754440520907555, 0.16927357893423328], 'false,false,false': [0.10660762929268598, 0.23766877188107924], 'false,false,true': [0.12850887169927264, 0.06757545441016471], 'false,true': [0.05135608660131227, 8.265311882142967e-05], 'true': [0.04263962203525096, 0.0006049844326362828], 'true,false': [0.0, 4.9343245538895844e-17]}, {'': [0.028835705722069883, 0.08650389923594068], 'false': [0.07598718103839272, 0.1628744399154713], 'false,false': [0.016008012774589447, 0.1627472170692977], 'false,false,false': [0.1057612454019154, 0.19873647583076923], 'false,true': [0.0957782671039837, 6.024944274877918e-05], 'false,true,true': [0.09911582738284877, 0.0918982246538215], 'true': [0.00033019496949533836, 0.07423498670976005], 'false,false,true': [0.016008012774589447, nan]}, {'': [0.0437170991617272, 0.07380480094897063], 'false': [0.061664863223088576, 0.1655807844878004], 'false,false': [0.10603927006023868, 0.21430955984918568], 'false,false,false': [0.21430955984918568, nan], 'false,false,true': [0.06868962833506005, 2.9025551231409707e-06], 'true': [0.000527130572966994, 0.0640560167927596], 'true,true': [-2.3790493384824782e-17, 0.000574232496630378], 'true,true,false': [nan, 0.0005742324966304113]}, {'': [0.08105338913995645, 0.06487365629663729], 'true': [0.08939543918013672, 0.07093764337308875], 'true,true': [0.09030587651649623, 0.06526900102242016], 'true,true,false': [0.07041512457823834, 0.0], 'false': [0.00026638438182651896, 0.06570614280169373], 'false,false': [0.06463899252362462, 0.10364632690130787], 'false,false,false': [0.05180638718066361, 0.0], 'false,true': [0.000516253299452013, 0.00013926941276594108]}, {'': [0.02678840330324968, 0.06680130472695729], 'false': [0.05621318688667685, 0.14135373835724166], 'false,false': [0.14829165251152124, 0.09477824267740818], 'false,false,true': [0.187664393698286, 0.14657961067180825], 'false,false,false': [0.047887380014647686, 0.18749999999999997], 'true': [4.28326038276472e-06, 0.03602244519393783], 'true,true': [7.93016446160826e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.035659136752981595, 0.06979431382196248], 'false': [0.056333961841896575, 0.06935300563623385], 'false,false': [0.059080128880105325, 0.1376454529164114], 'false,false,false': [0.138736188808455, 0.12823773690816173], 'false,true': [0.08758553352570927, 0.00027893081237735374], 'false,true,true': [0.0, 0.09999840697070203], 'true': [0.032192590896256146, 0.04048111653849043], 'true,true': [3.78253273290245e-05, 0.13498046931576496]}, {'': [0.05181756354260915, 0.05892226399626498], 'false': [0.057822023551691644, 0.05845337310773226], 'false,true': [0.06885153886000675, 0.010105753928024005], 'false,true,true': [nan, 0.06885153886000675], 'true': [0.045683751806711206, 0.06040436783187881], 'true,false': [0.00028151290075929537, 0.08820674325509963], 'false,true,false': [0.0, 0.002270050862929293], 'true,false,true': [0.0, 0.00016034816239047373]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;enzyme(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;enzyme(A, H).;true;true
6;false,false;interaction(I, A).;true;true
6;false,false,false;enzyme(A, J), interaction(A, K).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), enzyme(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;enzyme(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;enzyme(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.6032469743151979;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=38 */
%   | | | else return 0.7525151322826087;  // std dev = 3.663, 142.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=127 */
%   | | else return -0.14185106490048738;  // std dev = 2.92e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.16849376268571928;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7247296743578951;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.645515406242562;  // std dev = 0.268, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.5827822881507756;  // std dev = 4.369, 139.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=116 */
%   | | | else return 0.7241633363952347;  // std dev = 0.996, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.12544463852839224;  // std dev = 0.000, 397.000 (wgt'ed) examples reached here.  /* #neg=397 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7506729882864873;  // std dev = 0.974, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.1762197519858593;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1464629502974194;  // std dev = 2.170, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.24406387892761472;  // std dev = 2.010, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5825597034642797;  // std dev = 0.142, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6085397069920122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.533560130194843;  // std dev = 1.647, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else return -0.12779454350434863;  // std dev = 0.360, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5710886044739946;  // std dev = 0.092, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5083737038575269;  // std dev = 3.845, 162.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=145 */
%   | | | else return -0.11231637819360674;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12047474437916957;  // std dev = 2.436, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.3047284707743839;  // std dev = 1.586, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4156666243030459;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.38695929729974154;  // std dev = 0.199, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.3332840646325661;  // std dev = 0.584, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6336374979583946;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.384066743126705;  // std dev = 0.535, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3081903334778308;  // std dev = 1.712, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.04475586339690436;  // std dev = 2.933, 150.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=20 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07838605191286464;  // std dev = 6.392, 421.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=137 */
%   | | | else return -0.01712538701481793;  // std dev = 1.692, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2899996399417145;  // std dev = 0.207, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.08794676157801118;  // std dev = 0.418, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.3247056092042892;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.32645108718876586;  // std dev = 3.823, 126.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=108 */
%   | | | else return 0.4334479297474395;  // std dev = 0.994, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | else return -0.10618609855643224;  // std dev = 0.110, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(K, M), phenotype(A, M) )
%   | | | then return 0.2369351298345578;  // std dev = 1.153, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.047858280055336204;  // std dev = 3.233, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else return 0.3468927322149201;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24931217948965886;  // std dev = 0.162, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09104759431557907;  // std dev = 0.025, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.028205736230974054;  // std dev = 2.472, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.11912736341810748;  // std dev = 1.042, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.029335875619561254;  // std dev = 4.802, 431.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=125 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5205759993587589;  // std dev = 0.224, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.15869542181746296;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.04262628190709885;  // std dev = 1.333, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.24640826515519496;  // std dev = 2.312, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.12165180229548303;  // std dev = 2.125, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return 0.31578321015661964;  // std dev = 0.323, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( enzyme(A, H) )
%   | | | then return -0.1821020780431204;  // std dev = 0.795, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.57102733313888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.09689132035296827;  // std dev = 0.159, 66.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0255294970026172;  // std dev = 1.768, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return -0.024874678750341512;  // std dev = 3.423, 104.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.2400439695083696;  // std dev = 0.020, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.0350637714453637;  // std dev = 0.243, 349.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=111 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.19004519749042398;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.21771858133072053;  // std dev = 0.900, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.16113071925882852;  // std dev = 0.193, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( enzyme(A, H), complex(G, I) )
%   | | then return -0.09935423251688087;  // std dev = 0.200, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( interaction(G, J), recursion_proteinclass(J, B) )
%   | | | then return 0.21719880188489699;  // std dev = 1.612, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.09897196858711563;  // std dev = 0.678, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2624105972017064;  // std dev = 0.164, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.02451112993678343;  // std dev = 2.203, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.018724229270255546;  // std dev = 5.636, 457.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=135 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.12432845317318242;  // std dev = 0.204, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.18956925543868341;  // std dev = 0.138, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.25749272529103556;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.34525901167255163;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22461577690650925;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( location(A, K), location(J, L) )
%   | | | then return -0.01006250534641574;  // std dev = 3.380, 241.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | | | else return -0.09843498785655713;  // std dev = 1.026, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.053821367276885454;  // std dev = 2.999, 138.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=51 */
%   | | | else return 0.014286201444979283;  // std dev = 4.257, 237.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=69 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15681597935487798;  // std dev = 0.026, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.21880735904544082;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0937927450481508;  // std dev = 0.273, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, H), interaction(D, I) )
%   | | | then return 0.14141466146179316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3664647548796896;  // std dev = 0.081, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( complex(J, L), complex(A, L) )
%   | | | then return -0.05783910893167374;  // std dev = 1.885, 77.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=12 */
%   | | | else return 0.01692383766914874;  // std dev = 5.138, 448.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=141 */
%   | | else if ( location(A, M) )
%   | | | then return 0.04767082157854025;  // std dev = 3.109, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.09628683488562625;  // std dev = 0.600, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.982289
   AUC PR    = 0.302435
   CLL	      = -0.171565
   Precision = 0.238994 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.376238


Total learning time: 17.371 seconds
Total inference time: 5.596 seconds
AUC ROC: 0.982289


Results scoring model
   AUC ROC   = 0.981512
   AUC PR    = 0.238426
   CLL	      = -0.171427
   Precision = 0.126403 at threshold = 0.5
   Recall    = 0.946903
   F1        = 0.223033


Total scoring time: 24.623 seconds
Refined model CLL: -0.171427


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982252
   AUC PR    = 0.29753
   CLL	      = -0.168205
   Precision = 0.23839 at threshold = 0.5
   Recall    = 0.895349
   F1        = 0.376528


Total learning time: 73.117 seconds
Total inference time: 5.261 seconds
AUC ROC: 0.982252
Total revision time: 73.117
Best scored revision CLL: -0.171152


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:22:29
{'AUC ROC': 0.982252, 'AUC PR': 0.29753, 'CLL': -0.168205, 'Precision': [0.23839, 0.5], 'Recall': 0.895349, 'F1': 0.376528, 'Learning time': 73.117, 'Inference time': 5.261, 'parameter_0.8': {'AUC ROC': 0.982252, 'AUC PR': 0.29753, 'CLL': -0.168205, 'Precision': [0.23839, 0.5], 'Recall': 0.895349, 'F1': 0.376528, 'Learning time': 7.158, 'Inference time': 5.261}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8036034805540578;  // std dev = 1.684, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return 0.7891834178581332;  // std dev = 1.930, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | else return -0.14185106490048796;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14697727297416902;  // std dev = 8.682, 367.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=106 */
%   | | | else return 0.19814893509951237;  // std dev = 3.350, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7265674504298306;  // std dev = 0.036, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.5528067455442877;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5599629680159856;  // std dev = 2.410, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | else return 0.7052349230395784;  // std dev = 1.396, 74.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=72 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7151933725454032;  // std dev = 2.644, 69.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | | | else return -0.16164196059253924;  // std dev = 0.024, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.18080959417325584;  // std dev = 6.338, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
%   | | | else return 0.14806641169053103;  // std dev = 2.865, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.519322012770573;  // std dev = 1.499, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5799520725340873;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5044225844581326;  // std dev = 3.604, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | else return -0.1280282221817222;  // std dev = 0.572, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.522711373795419;  // std dev = 0.955, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5648795982115706;  // std dev = 1.006, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | | else return -0.1123163781936062;  // std dev = 7.45e-08, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.139200355993146;  // std dev = 7.006, 227.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=75 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4171705352518489;  // std dev = 0.744, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4237427174863262;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.45710174996446756;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4662002374146256;  // std dev = 1.120, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return 0.2662932930947623;  // std dev = 0.449, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38099635213130195;  // std dev = 1.659, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return -0.004970890277317849;  // std dev = 3.987, 365.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=66 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.08739773612629519;  // std dev = 4.718, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | | | else return 0.1068279205120182;  // std dev = 6.769, 212.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3423298563396836;  // std dev = 0.069, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.2764328816460429;  // std dev = 0.943, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.35972431227790724;  // std dev = 1.672, 66.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=63 */
%   | | | else return 0.3879352520922867;  // std dev = 1.432, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | else return -0.10473244507098874;  // std dev = 0.303, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3800558639405701;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3278060130828029;  // std dev = 0.826, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.07055957424716473;  // std dev = 4.657, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | | | else return 0.07313242802123122;  // std dev = 6.845, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2160223661836419;  // std dev = 0.975, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20303231436523006;  // std dev = 1.330, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(A, F) )
%   | then return 0.01714398727874913;  // std dev = 3.904, 390.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=106 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4294763294649491;  // std dev = 2.671, 69.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | | | else return -0.14401903673057678;  // std dev = 0.014, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.07814438009180857;  // std dev = 6.917, 228.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=75 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.1630853952936952;  // std dev = 2.442, 72.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=62 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.16867060839390202;  // std dev = 0.588, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.39485285305578216;  // std dev = 0.748, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.015066335403471819;  // std dev = 7.792, 608.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=157 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.26355051601319507;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2467685893066209;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.020165043159721018;  // std dev = 2.183, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.014129689384159863;  // std dev = 1.253, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.14201721170248557;  // std dev = 2.683, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.14303318405517032;  // std dev = 0.803, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15110582572677017;  // std dev = 1.344, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   else if ( interaction(A, F) )
%   | then return 0.0025907731993626655;  // std dev = 3.875, 412.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=106 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.010689534994051338;  // std dev = 2.038, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.04905861840063305;  // std dev = 7.144, 343.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=109 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06342631662762299;  // std dev = 1.065, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.06685360685764334;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17984117808246908;  // std dev = 0.046, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.029382998128558314;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.1979767533443662;  // std dev = 0.064, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.2819071082585339;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15488283036800524;  // std dev = 1.158, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.2562903850154763;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.013603191013765841;  // std dev = 3.706, 365.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03506496702638994;  // std dev = 7.225, 340.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=106 */
%   | | | else return 0.06336637132704323;  // std dev = 2.987, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.12539911619544122;  // std dev = 0.945, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.16548523973471396;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.33137179700261526;  // std dev = 0.695, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1696245951830964;  // std dev = 0.056, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return -0.8203635088404857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2067134160845369;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return -0.12447199192238229;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.22068660275664514;  // std dev = 0.887, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.015663842445957973;  // std dev = 8.767, 764.000 (wgt'ed) examples reached here.  /* #neg=539 #pos=225 */


Results
   AUC ROC   = 0.98146
   AUC PR    = 0.323824
   CLL	      = -0.172178
   Precision = 0.271062 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.412256


Total learning time: 11.955 seconds
Total inference time: 5.434 seconds
AUC ROC: 0.98146


Results scoring model
   AUC ROC   = 0.954698
   AUC PR    = 0.21451
   CLL	      = -0.207044
   Precision = 0.151367 at threshold = 0.5
   Recall    = 0.763251
   F1        = 0.252632


Total scoring time: 40.292 seconds
Parameter learned model CLL: -0.207044


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.964, 1, 13], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 28], 'false,true,true,true': [1.684, 3, 52], 'false,true,true,false': [1.93, 4, 54], 'false,true,false': [0.0, 281, 0], 'false,false,true': [0.964, 1, 13], 'false,false,false,true': [8.682, 261, 106], 'false,false,false,false': [3.35, 33, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.036, 0, 26], 'true,false': [1.581, 3, 15], 'false,true,true,true': [2.41, 7, 34], 'false,true,true,false': [1.396, 2, 72], 'false,true,false': [0.0, 300, 0], 'false,false,true,true': [2.644, 8, 61], 'false,false,true,false': [0.024, 97, 0], 'false,false,false,true': [6.338, 119, 63], 'false,false,false,false': [2.865, 26, 12]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [1.499, 4, 38], 'true,true,false,true': [0.026, 0, 8], 'true,true,false,false': [3.604, 19, 82], 'true,false': [0.572, 243, 0], 'false,true': [0.955, 1, 19], 'false,false,true,true': [1.006, 1, 61], 'false,false,true,false': [7.45e-08, 151, 0], 'false,false,false,true': [7.006, 152, 75], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.744, 1, 23], 'true,false,true': [0.0, 0, 9], 'true,false,false': [0.053, 0, 9], 'false,true,true': [1.12, 2, 15], 'false,true,false': [0.449, 1, 2], 'false,false,true,true': [1.659, 5, 36], 'false,false,true,false': [3.987, 299, 66], 'false,false,false,true': [4.718, 126, 56], 'false,false,false,false': [6.769, 145, 67]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.069, 0, 28], 'true,false': [0.943, 1, 13], 'false,true,true,true': [1.672, 3, 63], 'false,true,true,false': [1.432, 2, 43], 'false,true,false': [0.303, 281, 0], 'false,false,true,true': [0.915, 1, 6], 'false,false,true,false': [0.826, 1, 7], 'false,false,false,true': [4.657, 130, 56], 'false,false,false,false': [6.845, 156, 67]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.975, 1, 16], 'true,true,false': [0.0, 0, 0], 'true,false': [1.33, 2, 25], 'false,true': [3.904, 284, 106], 'false,false,true,true': [2.671, 8, 61], 'false,false,true,false': [0.014, 107, 0], 'false,false,false,true': [6.917, 153, 75], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [2.442, 10, 62], 'true,true,false,true': [0.588, 2, 3], 'true,true,false,false': [0.748, 1, 7], 'true,false': [7.792, 451, 157], 'false,true,true': [0.004, 0, 2], 'false,true,false': [0.021, 0, 3], 'false,false,true': [2.183, 84, 32], 'false,false,false,true': [1.253, 16, 5], 'false,false,false,false': [2.683, 18, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.803, 1, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [1.344, 2, 28], 'false,true': [3.875, 306, 106], 'false,false,true,true': [2.038, 8, 10], 'false,false,true,false': [7.144, 234, 109], 'false,false,false,true': [1.065, 10, 5], 'false,false,false,false': [2.787, 22, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.046, 0, 22], 'true,true,false': [0.759, 1, 4], 'true,false': [0.064, 0, 15], 'false,true,true,true': [0.184, 0, 6], 'false,true,true,false': [1.158, 2, 9], 'false,true,false': [0.058, 0, 2], 'false,false,true': [3.706, 263, 102], 'false,false,false,true': [7.225, 234, 106], 'false,false,false,false': [2.987, 29, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.945, 1, 26], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.695, 1, 1], 'true,false,false': [0.056, 0, 12], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.046, 0, 4], 'false,true,false,true': [0.97, 2, 4], 'false,true,false,false': [0.887, 1, 9], 'false,false': [8.767, 539, 225]}]]
[{'': [0.044348296376420925, 0.20728888888889097], 'false': [0.19665541498106262, 0.21597644284860923], 'false,false': [0.06632653061224467, 0.20796025050463465], 'false,false,false': [0.2054065291152227, 0.2243999999999995], 'false,true': [0.058109483906338306, -2.2125441060145468e-17], 'false,true,true': [0.05157024793388442, 0.06420927467300822], 'true': [0.11555555555555533, -2.5376526277146434e-16], 'true,true': [0.06632653061224467, 0.0]}, {'': [0.0641465880536589, 0.18364409628967632], 'false': [0.14156186542215127, 0.22404695901397076], 'false,false': [0.22887303839840062, 0.22007616018208354], 'false,false,true': [0.10135200149357493, 5.723063396051728e-06], 'false,false,false': [0.2207281620651699, 0.21606648199445985], 'false,true': [0.07230076061771502, -8.585724723767877e-17], 'false,true,true': [0.14170111343313355, 0.02632520006953608], 'true': [5.032537825051701e-05, 0.1388888888888889]}, {'': [0.1366128354786027, 0.16239359449603746], 'false': [0.04561163225953071, 0.160398698001003], 'false,false': [0.09938581898573763, 0.21621613966313344], 'false,false,false': [0.21621613966313344, nan], 'true': [0.10119881543560419, 0.0013476040876881498], 'true,true': [0.05353216188839081, 0.11954143555338696], 'true,true,false': [8.69684359485201e-05, 0.1285844816831572], 'false,false,true': [0.016331556722961476, 3.676235180878002e-17]}, {'': [0.013486468335399238, 0.11868194388604487], 'false': [0.07789611323198961, 0.11634876686659594], 'false,false': [0.059467610372442505, 0.1728935864366888], 'false,false,false': [0.12229274956816585, 0.21615953453746922], 'false,true': [0.07379830085995692, 0.0671486815776324], 'false,false,true': [0.0671460824899453, 0.043561256670248454], 'true': [0.023041730143097034, 0.0004371812688090948], 'true,false': [0.0, 0.0003179500136793529]}, {'': [0.022267314102607, 0.11609951157597485], 'false': [0.05862183595329087, 0.16794760701461905], 'false,false': [0.10200091046584503, 0.1675881081087623], 'false,false,false': [0.11660279399791788, 0.2101109651139545], 'false,false,true': [0.1196241142348086, 0.0853065852744943], 'false,true': [0.04385208864422912, 0.0003268214465972379], 'false,true,true': [0.04237342949937151, 0.04554757637863409], 'true': [0.00017133679211153323, 0.06356432787441514]}, {'': [0.06188969640059554, 0.10678321415147854], 'false': [0.03907141589640441, 0.17025040258141436], 'false,false': [0.1189396567512996, 0.209855585350801], 'false,false,false': [0.209855585350801, nan], 'false,false,true': [0.10342508537681129, 1.8319485357431064e-06], 'true': [0.055973409401890266, 0.06554957043359656], 'true,true': [0.055973409401890266, nan]}, {'': [0.10120198881053682, 0.08245982305252286], 'true': [0.08535737779234384, 0.09986565635989458], 'true,true': [0.082795100587777, 0.08179444242022255], 'false': [0.00015982300006851525, 0.08357088881304535], 'false,false': [0.041092965499347135, 0.17788627863903386], 'false,false,false': [0.07481012349876755, 0.24000000000000032], 'true,true,false': [0.06926357533323646, 0.06994992365717098], 'false,true': [9.213516171016622e-06, 0.00014757609707293415]}, {'': [0.05572776778343899, 0.0968466669081088], 'false': [0.03644182102677007, 0.15649268180748732], 'false,false': [0.1530353520634877, 0.18162145489730055], 'false,false,false': [0.07564154333439645, 0.22837370242214505], 'false,false,true': [0.2307968754735968, 0.1487765747555363], 'true': [0.04610386481147983, 0.060198187376190836], 'true,true': [0.04610386481147983, nan]}, {'': [0.01653413951550004, 0.10006538891860851], 'false': [0.07616519289846774, 0.09987675700396668], 'false,false': [0.03763516042963383, 0.15843239999845576], 'false,false,false': [0.1535371010428957, 0.19390952728930136], 'false,true': [0.08458995456222998, 0.0016908609217094195], 'false,true,true': [0.005669141226634737, 0.12194290604229652], 'true': [0.02481081681095106, 0.0002759410547188349], 'true,true': [9.652265472511543e-05, 0.11510820716756913]}, {'': [0.042349199829572366, 0.10187004005790418], 'false': [0.14538013096376026, 0.10059558061740496], 'false,true': [0.16921340533472165, 0.13600562799322066], 'false,true,true': [0.0, 0.0005393547257139461], 'false,true,false': [0.15694870814210168, 0.0787643590985916], 'true': [0.033057318318203376, 0.05780456368254278], 'true,false': [0.18259205159338676, 0.00026110165781217015], 'true,false,true': [0.0, 0.24175064570907367]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;false;interaction(A, F).;true;true
5;false,false;phenotype(A, G).;true;true
5;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), phenotype(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8217852987358746;  // std dev = 0.187, 110.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=106 */
%   | | else return -0.14185106490048777;  // std dev = 1.40e-07, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.18484216219114577;  // std dev = 7.430, 251.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=82 */
%   | | | else return 0.12967211390745847;  // std dev = 5.465, 151.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7222934418788809;  // std dev = 0.072, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.7292495150597669;  // std dev = 0.097, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.5872189467340557;  // std dev = 2.272, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return 0.7267538304549869;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7240770642671441;  // std dev = 2.499, 68.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=61 */
%   | | | else return -0.16393798293790138;  // std dev = 0.036, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.0922376204745403;  // std dev = 3.305, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | | else return 0.15164174122877633;  // std dev = 6.320, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5766855064455231;  // std dev = 0.025, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.4456030765939757;  // std dev = 0.937, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.5052181331044588;  // std dev = 3.513, 100.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=82 */
%   | else return -0.12922363617988716;  // std dev = 0.029, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5589698060533911;  // std dev = 0.021, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.49604746586739557;  // std dev = 2.175, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | | else return -0.11231637819360626;  // std dev = 8.82e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5851716786673834;  // std dev = 0.939, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.150821123667036;  // std dev = 6.680, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.41570256530369637;  // std dev = 0.010, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.25729873623673305;  // std dev = 0.376, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.42697338861740036;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.014601162899110199;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.41454486669088025;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.15134210338453327;  // std dev = 0.129, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.033778954295947565;  // std dev = 0.249, 140.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=36 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3025909471197946;  // std dev = 1.864, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.09092864977529447;  // std dev = 9.025, 593.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=189 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.3230457416726087;  // std dev = 0.020, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.24339012271809937;  // std dev = 0.330, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.35230843071790235;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.3247459282222036;  // std dev = 1.769, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.42844559412355376;  // std dev = 0.167, 73.000 (wgt'ed) examples reached here.  /* #pos=73 */
%   | | else return -0.10769264859781609;  // std dev = 0.015, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.43980883245654023;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.06182413939756436;  // std dev = 4.648, 182.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=55 */
%   | | | else return 0.09349327448124167;  // std dev = 6.802, 215.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=68 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.2280615026519901;  // std dev = 0.198, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | else return 0.06900976301270272;  // std dev = 0.924, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09364167403105371;  // std dev = 0.084, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.0654454551110298;  // std dev = 1.689, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.016515184981429603;  // std dev = 3.540, 294.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=83 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.35803653040310685;  // std dev = 3.415, 74.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=61 */
%   | | | else return -0.14538771771915732;  // std dev = 0.032, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.072480308888533;  // std dev = 6.296, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
%   | | | else return 0.1482484978351862;  // std dev = 2.714, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.006232980071071513;  // std dev = 0.285, 238.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=75 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then return 0.024272955368225085;  // std dev = 0.288, 217.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=69 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.10250402372049484;  // std dev = 4.118, 122.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=48 */
%   | | | else return 0.07044838466617495;  // std dev = 3.763, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then if ( phenotype(A, L) )
%   | | then return -0.0759255226537987;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2607160554876545;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, M) )
%   | | then return 0.03555149065776856;  // std dev = 0.229, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.011564629576152806;  // std dev = 1.344, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.25456264528744393;  // std dev = 2.399, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.2319833622607361;  // std dev = 0.039, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( phenotype(C, E) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20913113527866833;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19011818141830447;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21432574221135248;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.10344302671063958;  // std dev = 0.111, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2784137700161251;  // std dev = 1.447, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | | else return 0.012505313251830477;  // std dev = 8.312, 610.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=168 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.19632586710047;  // std dev = 0.636, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07617360921160453;  // std dev = 1.516, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1781172482421216;  // std dev = 0.018, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.14041784545868818;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then return 0.01750783469598305;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2276219076427051;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2450709580177205;  // std dev = 0.110, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.0998104774470819;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then return -0.0017962053868036357;  // std dev = 0.179, 365.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=95 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.013822701734941193;  // std dev = 6.379, 282.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=84 */
%   | | | else return 0.06125625189543544;  // std dev = 4.819, 133.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.12002589077685613;  // std dev = 0.178, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.6654895977382049;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.17426162006827592;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18989762118631492;  // std dev = 0.039, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.020334541017263546;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.22410711211420173;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then return -0.025919263322401454;  // std dev = 0.200, 318.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=74 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.007877975956529623;  // std dev = 4.348, 244.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=71 */
%   | | | else return 0.05205483407354941;  // std dev = 6.765, 236.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=80 */


Results
   AUC ROC   = 0.981502
   AUC PR    = 0.343301
   CLL	      = -0.174655
   Precision = 0.260563 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.4


Total learning time: 22.593 seconds
Total inference time: 5.46 seconds
AUC ROC: 0.981502


Results scoring model
   AUC ROC   = 0.958108
   AUC PR    = 0.233795
   CLL	      = -0.20922
   Precision = 0.154839 at threshold = 0.5
   Recall    = 0.763251
   F1        = 0.257449


Total scoring time: 40.649 seconds
Refined model CLL: -0.20922


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98146
   AUC PR    = 0.323824
   CLL	      = -0.172178
   Precision = 0.271062 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.412256


Total learning time: 115.489 seconds
Total inference time: 5.434 seconds
AUC ROC: 0.98146
Total revision time: 115.489
Best scored revision CLL: -0.207044


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 01:24:36
{'AUC ROC': 0.98146, 'AUC PR': 0.323824, 'CLL': -0.172178, 'Precision': [0.271062, 0.5], 'Recall': 0.860465, 'F1': 0.412256, 'Learning time': 115.489, 'Inference time': 5.434, 'parameter_1.0': {'AUC ROC': 0.98146, 'AUC PR': 0.323824, 'CLL': -0.172178, 'Precision': [0.271062, 0.5], 'Recall': 0.860465, 'F1': 0.412256, 'Learning time': 11.955, 'Inference time': 5.434}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.18650714405473565;  // std dev = 3.844, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7256044627444211;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7439976143448209;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7243782526377277;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7299837845540399;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.82397402208102;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16908215409075542;  // std dev = 0.118, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19695862855156537;  // std dev = 3.063, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.1348150226328845;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5614149646752474;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5294351851108053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6582558049483161;  // std dev = 0.195, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1275309419383729;  // std dev = 0.090, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5811379529779772;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5059428472597494;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.0644863855736701;  // std dev = 3.527, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42724634648432963;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.4357854621615459;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.3985385667736132;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.663829317704039;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.429136918711747;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.004631591578081427;  // std dev = 1.799, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.14525940071249707;  // std dev = 1.525, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1014996844960574;  // std dev = 3.335, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.32238559020943286;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.33115437960212685;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.29174080884973247;  // std dev = 0.866, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.44298940373465595;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.10216020292986241;  // std dev = 0.047, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40600698816914954;  // std dev = 0.139, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.07011220760225785;  // std dev = 1.579, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.13746169973680616;  // std dev = 3.207, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2618887871393228;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25589420154706;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.09598382591208816;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G) )
%   | then return 0.0017311225298863148;  // std dev = 1.742, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4567995211292481;  // std dev = 0.242, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1521285893918194;  // std dev = 0.026, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08779625061869405;  // std dev = 3.292, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.033784298703628445;  // std dev = 1.314, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( complex(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7360017859191742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.04257466071599354;  // std dev = 3.260, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.21936790723928945;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.24578724917824246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.027032446754407573;  // std dev = 1.164, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.13575818189822916;  // std dev = 0.366, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.077361207307615;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19933219437483984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19888980386904853;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11172019738386936;  // std dev = 0.769, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, G) )
%   | then return -0.021938674916325857;  // std dev = 1.870, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0718219177050283;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.02769371192848262;  // std dev = 3.259, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.013373472578236331;  // std dev = 0.435, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.017743059263635463;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16930834456689803;  // std dev = 0.000146, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.2358129245006551;  // std dev = 0.628, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.19043182262433986;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2206043022279333;  // std dev = 0.523, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.36644581141888943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return -0.013880886347747427;  // std dev = 1.858, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05756146998449021;  // std dev = 3.174, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return -0.02718127253616293;  // std dev = 1.352, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.18115099367341883;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14984145007699048;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.18023730440822516;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, I), interaction(J, G) )
%   | | | then return 0.17908378413777792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2861941275598018;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.008270493153923182;  // std dev = 3.880, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */


Results
   AUC ROC   = 0.942807
   AUC PR    = 0.330166
   CLL	      = -0.203031
   Precision = 0.331492 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.447761


Total learning time: 2.966 seconds
Total inference time: 8.118 seconds
AUC ROC: 0.942807


Results scoring model
   AUC ROC   = 0.954013
   AUC PR    = 0.331473
   CLL	      = -0.196587
   Precision = 0.268456 at threshold = 0.5
   Recall    = 0.714286
   F1        = 0.390244


Total scoring time: 4.893 seconds
Parameter learned model CLL: -0.196587


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 2], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.0, 0, 12], 'false,true,true,false': [0.935, 1, 7], 'false,true,false': [6.5e-08, 64, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [3.844, 45, 22], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.021, 0, 4], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.022, 0, 5], 'false,true,true,false': [0.045, 0, 14], 'false,true,false': [0.0, 54, 0], 'false,false,true,true': [0.111, 0, 10], 'false,false,true,false': [0.118, 18, 0], 'false,false,false,true': [3.063, 26, 15], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.031, 0, 7], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.195, 0, 12], 'true,false': [0.09, 36, 0], 'false,true': [0.004, 0, 4], 'false,false,true,true': [0.953, 1, 15], 'false,false,true,false': [1.05e-08, 43, 0], 'false,false,false,true': [3.527, 49, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.035, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.036, 0, 5], 'false,false,true,false': [1.799, 57, 14], 'false,false,false,true': [1.525, 13, 9], 'false,false,false,false': [3.335, 37, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.013, 0, 3], 'true,false': [0.026, 0, 7], 'false,true,true,true': [0.866, 1, 10], 'false,true,true,false': [0.046, 0, 9], 'false,true,false': [0.047, 61, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.139, 0, 2], 'false,false,false,true': [1.579, 18, 9], 'false,false,false,false': [3.207, 29, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.014, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 3], 'true,false': [0.747, 1, 4], 'false,true': [1.742, 57, 19], 'false,false,true,true': [0.242, 0, 10], 'false,false,true,false': [0.026, 19, 0], 'false,false,false,true': [3.292, 34, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.314, 4, 10], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [3.26, 73, 29], 'false,true,true': [0.002, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,false,true': [1.164, 26, 10], 'false,false,false,true': [0.366, 1, 1], 'false,false,false,false': [1.301, 11, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.769, 1, 7], 'false,true': [1.87, 66, 19], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [3.259, 49, 23], 'false,false,false,true': [0.435, 3, 1], 'false,false,false,false': [1.265, 8, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.000146, 0, 2], 'true,true,false': [0.628, 1, 1], 'true,false': [0.06, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.523, 1, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true': [1.858, 64, 19], 'false,false,false,true': [3.174, 41, 22], 'false,false,false,false': [1.352, 12, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,false': 'complex(A, I), interaction(J, G)'}, {'true,true': [0.084, 0, 3], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.023, 0, 4], 'true,false,false': [0.027, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.88, 119, 44]}]]
[{'': [0.0826446280991734, 0.19957689411596], 'false': [0.1750283446712013, 0.21948033096240507], 'false,false': [0.0, 0.21338210638622274], 'false,false,false': [0.22053909556694234, 0.1683673469387754], 'false,true': [0.047499999999999785, 6.591949208711867e-17], 'true': [1.4802973661668753e-16, 0.10937499999999978], 'false,true,true': [-1.4802973661668753e-16, 0.10937499999999978], 'true,true': [0.0, 0.0]}, {'': [0.00012630166296370148, 0.186258032954386], 'false': [0.1404373159863628, 0.2262816382380795], 'false,false': [0.22735001891771373, 0.22565644129139936], 'false,false,true': [0.0012339256163325985, 0.0007698675257757421], 'false,false,false': [0.22877676199076127, 0.20408163265306128], 'false,true': [0.00013994644095707392, -3.700743415417188e-17], 'false,true,true': [9.622983844845834e-05, 0.00014729056905395308], 'true': [0.00011276934193171773, -1.4802973661668753e-16]}, {'': [0.1293137397426197, 0.14622687426633516], 'false': [3.752797266054486e-06, 0.14249036037123639], 'false,false': [0.09094791673643027, 0.18852675701907987], 'false,false,false': [0.18852675701907987, nan], 'true': [0.004442583706844072, 0.00022309625604391116], 'false,false,true': [0.05678549035708119, 2.581914010756178e-18], 'true,true': [0.00013846726098343254, 0.004115201115592134], 'true,true,false': [0.0, 0.0031816151499438248]}, {'': [0.00013088884418952507, 0.11932750287714458], 'false': [0.01759479563230737, 0.11793285901703927], 'false,false': [0.053683687498038854, 0.17967286141832656], 'false,false,false': [0.10570213825940705, 0.20981598215547334], 'false,false,true': [0.00026288890400201216, 0.045590138412458556], 'false,true': [0.0, 0.0], 'true': [0.00014902775592709472, 0.0], 'true,false': [nan, 0.0]}, {'': [0.00010185545297298759, 0.11341353735611134], 'false': [0.050400922491311784, 0.17626413264882257], 'false,false': [0.00963089043636775, 0.1785598816031067], 'false,false,false': [0.0922978394478687, 0.22861612411220633], 'false,true': [0.043299606383940745, 3.546927032749645e-05], 'false,true,true': [0.06824054472417052, 0.00023436170137259972], 'false,false,true': [nan, 0.00963089043636775], 'true': [5.8448106010207855e-05, 9.73911014472893e-05]}, {'': [0.057332593951757514, 0.10639510947828555], 'false': [0.039942545743464695, 0.1667694109450517], 'false,false': [0.08581242853089735, 0.21247861813322536], 'false,false,false': [0.21247861813322536, nan], 'false,false,true': [0.005857180818327512, 3.432965235156711e-05], 'true': [8.782282651087492e-05, 0.11155055106551263], 'true,true': [6.458649454069154e-05, 9.309163026954836e-05], 'true,true,false': [nan, 9.309163026954836e-05]}, {'': [0.10967674570157096, 0.06413122062624843], 'true': [0.145766272270753, 0.10418409892040861], 'true,true': [0.12330418890476672, 0.0], 'false': [0.00015676046737580127, 0.06511958969269141], 'false,false': [0.03762920151445522, 0.1270217333497075], 'false,false,false': [0.06714526312088397, 0.13017751479289946], 'false,true': [2.4801582345843065e-06, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.05531321076814466, 0.09548139880532307], 'false': [0.04115425014313543, 0.14702225905196206], 'false,false': [0.15033561873594214, 0.12777699081979296], 'false,false,true': [0.25, 0.1475145340104225], 'false,false,false': [0.04720582980656017, 0.16000000000000003], 'true': [4.34909688031467e-08, 0.07397630193950366], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.06268381555103122, 0.09799685405870612], 'false': [0.16761143840892664, 0.09667361058180454], 'false,true': [0.13654121230247412, 0.0], 'false,true,true': [nan, 0.13654121230247412], 'false,false': [0.041574963147744365, 0.1537364786519494], 'false,false,false': [0.15994858012731483, 0.12184534550893904], 'true': [0.1396409202195448, 0.0005139336323977196], 'true,true': [1.0590002350735483e-08, 0.19722020852363487]}, {'': [0.0010598777938390868, 0.09187020974835668], 'false': [0.002868156416995969, 0.0923520630333679], 'false,true': [nan, 0.002868156416995969], 'false,true,false': [0.0, 0.0], 'true': [0.002358654540818688, 0.0004029815159745772], 'true,false': [0.00013029372018342686, 0.00023861783768146239], 'true,false,true': [nan, 0.00013029372018342686]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;complex(A, I), interaction(J, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.44148226843284566;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.11529179224236949;  // std dev = 3.657, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4927817349725823;  // std dev = 0.430, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.446839414645614;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.6040111223195602;  // std dev = 1.315, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8037313670819337;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1982193651748177;  // std dev = 0.078, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.27209839794124435;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.04105104817803536;  // std dev = 1.976, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5950505927253337;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6157276116679211;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6396369511323657;  // std dev = 0.113, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.1369726807749243;  // std dev = 0.183, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6345449490528361;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5374213643368891;  // std dev = 0.988, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.11231637819360635;  // std dev = 1.49e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15712641187730858;  // std dev = 3.318, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.19476808808271917;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.041889311421862856;  // std dev = 0.979, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.42630321814906524;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5368972327198662;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.463993789450998;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7459271564092632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32773322002999455;  // std dev = 0.717, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.01743276097452107;  // std dev = 1.882, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14272982268678777;  // std dev = 2.807, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.02230181445985863;  // std dev = 2.277, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4146377577979438;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.35597544191231456;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.22359925344587583;  // std dev = 1.393, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.45443660629709437;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.10330472046730882;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.06421089356954353;  // std dev = 3.121, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.3371117588037902;  // std dev = 1.208, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.10203123604463582;  // std dev = 0.704, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.13761197595234623;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.26234280415821726;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17779836521518372;  // std dev = 0.707, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12004601676295562;  // std dev = 0.091, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.00468531893608088;  // std dev = 1.273, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.07765225024836533;  // std dev = 1.109, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4322873200352773;  // std dev = 0.216, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1570906091322543;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12292068805418926;  // std dev = 1.963, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.07013055460881001;  // std dev = 2.647, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.22729756049971322;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.014949331749499261;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.24319476757513236;  // std dev = 0.669, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then return -0.03151223109086321;  // std dev = 0.157, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.12367981556702468;  // std dev = 2.280, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.037262846982221605;  // std dev = 2.059, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.233169469476282;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.08700173299824115;  // std dev = 0.318, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else return -0.047024198280318806;  // std dev = 0.212, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.20196659493949062;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.031449806242869104;  // std dev = 0.564, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25592338170065665;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.37306409373410715;  // std dev = 0.319, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, G), interaction(F, F) )
%   | | | then return -0.13581850406662693;  // std dev = 0.976, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.02465166694577792;  // std dev = 3.457, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), complex(K, L) )
%   | | | then return -0.020163012281819416;  // std dev = 0.561, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.18463557154599464;  // std dev = 0.488, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3208687513553253;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1995545931674351;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.1953367884581477;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.11922720242497194;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return -0.0026596946022225676;  // std dev = 0.256, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.512099350238565;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, I), phenotype(I, J) )
%   | | | then return -0.07331287508223862;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.02741294765785753;  // std dev = 0.939, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.14821996868041606;  // std dev = 1.411, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.007356550022583921;  // std dev = 3.419, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1698837765170493;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.15400704032535786;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08165920199188086;  // std dev = 0.822, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), interaction(H, F) )
%   | | then return 0.17897032603640417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.38611022680879015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4189279247193253;  // std dev = 0.785, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14837051292994147;  // std dev = 0.370, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.004324671132894956;  // std dev = 2.502, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return -0.040306505286369795;  // std dev = 1.577, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */


Results
   AUC ROC   = 0.959652
   AUC PR    = 0.356977
   CLL	      = -0.183844
   Precision = 0.327869 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.444444


Total learning time: 6.434 seconds
Total inference time: 9.366 seconds
AUC ROC: 0.959652


Results scoring model
   AUC ROC   = 0.978099
   AUC PR    = 0.350121
   CLL	      = -0.186609
   Precision = 0.269737 at threshold = 0.5
   Recall    = 0.732143
   F1        = 0.394231


Total scoring time: 5.295 seconds
Refined model CLL: -0.186609


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.959652
   AUC PR    = 0.356977
   CLL	      = -0.183844
   Precision = 0.327869 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.444444


Total learning time: 19.588 seconds
Total inference time: 9.366 seconds
AUC ROC: 0.959652
Total revision time: 19.588
Best scored revision CLL: -0.186609


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:25:14
{'AUC ROC': 0.959652, 'AUC PR': 0.356977, 'CLL': -0.183844, 'Precision': [0.327869, 0.5], 'Recall': 0.689655, 'F1': 0.444444, 'Learning time': 19.588, 'Inference time': 9.366, 'parameter_0.2': {'AUC ROC': 0.942807, 'AUC PR': 0.330166, 'CLL': -0.203031, 'Precision': [0.331492, 0.5], 'Recall': 0.689655, 'F1': 0.447761, 'Learning time': 2.966, 'Inference time': 8.118}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7381489350995118;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1804629846862881;  // std dev = 5.141, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6194734122109544;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6194734122109543;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7351872222485984;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6986205323995672;  // std dev = 0.974, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8159947456618473;  // std dev = 0.183, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16447034177525335;  // std dev = 0.014, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13532068638964082;  // std dev = 4.363, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.1590368976500088;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5783568197660091;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5314226133951717;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.659270017955822;  // std dev = 0.237, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.12721780186648834;  // std dev = 0.341, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.46879248367792975;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5124883128857125;  // std dev = 1.349, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.11231637819360629;  // std dev = 4.94e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13064215296651868;  // std dev = 4.767, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3641631189539156;  // std dev = 0.938, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.463461542773964;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.26346154277396405;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.1895216048515136;  // std dev = 0.984, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.5743685345897519;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43551458763058926;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.007198612420218218;  // std dev = 2.711, 151.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=28 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06782054848962624;  // std dev = 2.163, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.12920624449693596;  // std dev = 4.547, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35421139796913215;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16257193138817122;  // std dev = 1.370, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3792953114847449;  // std dev = 0.300, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.4449836511441381;  // std dev = 0.075, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.1011158428155957;  // std dev = 0.068, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3554683074442905;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.476180607648371;  // std dev = 0.233, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.07374145914549415;  // std dev = 2.095, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.11105030270244212;  // std dev = 4.534, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.29791046708376584;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31373520508949526;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2174504155883431;  // std dev = 0.839, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, G) )
%   | then return 0.00565136269723891;  // std dev = 2.384, 169.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=42 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46194544501178597;  // std dev = 0.378, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14442219146188803;  // std dev = 0.016, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08150065339130944;  // std dev = 4.647, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.24618845030838826;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18668185647064733;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5625824014642997;  // std dev = 0.247, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0068883770809232145;  // std dev = 4.758, 233.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=57 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.26757540819956166;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3121904164521391;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03065145778295523;  // std dev = 1.489, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.009339571806228072;  // std dev = 0.454, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.044816608208910515;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1796894947474541;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20707659602993322;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.100031954789441;  // std dev = 1.261, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, G) )
%   | then return 0.014383854693404332;  // std dev = 2.186, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.0399914567995267;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.022348685655028625;  // std dev = 4.566, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.04796644522744795;  // std dev = 0.484, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.0695388421600105;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17340818861493182;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13310944686746065;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.21248019727935094;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.16257735653132444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26499430540432856;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2789604109201032;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.018235305268902418;  // std dev = 2.553, 180.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=41 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07263940383653265;  // std dev = 4.287, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
%   | | | else return 0.09137515362571216;  // std dev = 1.985, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.06300505950951273;  // std dev = 0.872, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.13812338369180888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1570915080786681;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20536736393840135;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15768066272922465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.0014853043462393634;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.31173585059111897;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.02019204985403944;  // std dev = 5.340, 301.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=87 */


Results
   AUC ROC   = 0.942487
   AUC PR    = 0.336938
   CLL	      = -0.203776
   Precision = 0.319149 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.436364


Total learning time: 3.857 seconds
Total inference time: 8.111 seconds
AUC ROC: 0.942487


Results scoring model
   AUC ROC   = 0.948151
   AUC PR    = 0.296201
   CLL	      = -0.204066
   Precision = 0.246201 at threshold = 0.5
   Recall    = 0.723214
   F1        = 0.367347


Total scoring time: 8.329 seconds
Parameter learned model CLL: -0.204066


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 13], 'false,true,true,true': [1.625, 3, 22], 'false,true,true,false': [0.0, 0, 20], 'false,true,false': [5.16e-08, 118, 0], 'false,false,true': [0.0, 0, 6], 'false,false,false,true': [5.141, 82, 39], 'false,false,false,false': [2.277, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.038, 0, 12], 'false,true,true,false': [0.974, 1, 30], 'false,true,false': [7.74e-08, 107, 0], 'false,false,true,true': [0.183, 0, 18], 'false,false,true,false': [0.014, 32, 0], 'false,false,false,true': [4.363, 64, 28], 'false,false,false,false': [2.026, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.028, 0, 15], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.237, 0, 21], 'true,false': [0.341, 85, 0], 'false,true': [0.943, 1, 8], 'false,false,true,true': [1.349, 2, 31], 'false,false,true,false': [4.94e-08, 68, 0], 'false,false,false,true': [4.767, 73, 34], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.938, 1, 12], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.894, 1, 4], 'false,true,true': [0.984, 2, 4], 'false,true,false': [0.217, 0, 3], 'false,false,true,true': [0.046, 0, 13], 'false,false,true,false': [2.711, 123, 28], 'false,false,false,true': [2.163, 36, 15], 'false,false,false,false': [4.547, 62, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.051, 0, 8], 'true,false': [1.37, 3, 10], 'false,true,true,true': [0.3, 0, 25], 'false,true,true,false': [0.075, 0, 17], 'false,true,false': [0.068, 140, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.233, 0, 5], 'false,false,false,true': [2.095, 32, 15], 'false,false,false,false': [4.534, 61, 31]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.076, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 3], 'true,false': [0.839, 1, 8], 'false,true': [2.384, 127, 42], 'false,false,true,true': [0.378, 0, 18], 'false,false,true,false': [0.016, 33, 0], 'false,false,false,true': [4.647, 67, 34], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.076, 0, 23], 'true,true,false,true': [0.013, 0, 2], 'true,true,false,false': [0.247, 0, 2], 'true,false': [4.758, 176, 57], 'false,true,true': [0.017, 0, 3], 'false,true,false': [0.0, 0, 2], 'false,false,true': [1.489, 41, 16], 'false,false,false,true': [0.454, 3, 1], 'false,false,false,false': [2.049, 14, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.261, 2, 13], 'false,true': [2.186, 109, 42], 'false,false,true,true': [0.899, 3, 4], 'false,false,true,false': [4.566, 95, 41], 'false,false,false,true': [0.484, 6, 1], 'false,false,false,false': [2.0, 12, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.05, 0, 6], 'true,true,false': [0.791, 1, 2], 'true,false': [0.117, 0, 10], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.258, 0, 3], 'false,true,false': [0.132, 0, 3], 'false,false,true': [2.553, 139, 41], 'false,false,false,true': [4.287, 71, 39], 'false,false,false,false': [1.985, 12, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.872, 1, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.024, 0, 4], 'true,false,false': [0.056, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.453, 1, 3], 'false,true,false,false': [0.143, 0, 3], 'false,false': [5.34, 214, 87]}]]
[{'': [-2.9605947323337506e-16, 0.20859994626277595], 'false': [0.1912755466897524, 0.2236464833867436], 'false,false': [-1.4802973661668753e-16, 0.21420745069393812], 'false,false,false': [0.21842770302575093, 0.19204389574759959], 'false,true': [0.062222222222223345, 2.258080728051166e-17], 'false,true,true': [0.10560000000000053, -8.881784197001253e-17], 'true': [0.0, -2.7328566760003855e-16], 'true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.09000000000000016, 0.18257479050834663], 'false': [0.14873059921868192, 0.21329898786867021], 'false,false': [0.22216231170422607, 0.2085572862751993], 'false,false,true': [0.0018670341126546654, 6.161783589725411e-06], 'false,false,false': [0.20691019740538685, 0.21606648199445994], 'false,true': [0.022343286942966747, 5.602994703715743e-17], 'true': [0.08999999999999994, 0.09000000000000008], 'false,true,true': [0.0001234619129496147, 0.030571358984576615]}, {'': [0.12188760554293544, 0.16261269619237032], 'false': [0.09876543209876536, 0.1600894825063928], 'false,false': [0.10388842465849754, 0.21240752862848636], 'false,false,false': [0.21240752862848636, nan], 'true': [0.0035574013303820476, 0.001366130951096384], 'false,false,true': [0.05513083584313576, 3.591898020846095e-17], 'true,true': [5.1819905219296913e-05, 0.004126774325892295], 'true,true,false': [-7.401486830834377e-17, 0.002673193658693779]}, {'': [0.08732035222453147, 0.11838051204397988], 'false': [0.1457214456438098, 0.11576849954118737], 'false,true': [0.16138938728848504, 0.015647456135160127], 'false,false': [0.05912484249994911, 0.1769079920758958], 'false,false,false': [0.09174864621119141, 0.22227370638318156], 'true': [0.06774086078683678, 0.12244897959183668], 'true,false': [0.0, 0.15999999999999998], 'false,false,true': [0.00016551978826703144, 0.04866462343963243]}, {'': [0.09809963647566831, 0.10705990240497978], 'false': [0.04642120904718675, 0.17789730521636338], 'false,false': [0.011098591714272965, 0.17980496274664412], 'false,false,false': [0.093423006068553, 0.223464216109961], 'true': [0.000325217042369097, 0.14427777277253653], 'false,true': [0.0033179071214733164, 3.3365347908772704e-05], 'false,false,true': [0.0, 0.010889733487034236], 'false,true,true': [0.003599619017655691, 0.00033519755977190154]}, {'': [0.03921434523403597, 0.10005369229282364], 'false': [0.03362202948419608, 0.1711970799417378], 'false,false': [0.08677848382665845, 0.21377669217368228], 'false,false,false': [0.21377669217368228, nan], 'false,false,true': [0.007946812482227604, 7.5617945498966206e-06], 'true': [0.0006241611278549386, 0.07827110997554378], 'true,true': [0.0008165320541935195, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09430662632455732, 0.08059427690040696], 'true': [0.009796985225336449, 0.09716954559890734], 'false': [0.0005381060558658501, 0.08183439856982809], 'false,false': [0.03890216060492866, 0.1837505410657986], 'false,false,false': [0.05145439630152787, 0.20999999999999988], 'true,true': [0.0002523858555576174, 0.05062476836037963], 'true,true,false': [8.386756484387442e-05, 0.030515059292652913], 'false,true': [0.00010064384189208593, 0.0]}, {'': [0.08104995438946404, 0.09642011917766263], 'false': [0.031644331284003076, 0.1545857336211989], 'false,false': [0.1514886179683966, 0.17214782356079475], 'false,false,false': [0.03344368949960916, 0.2222222222222222], 'false,false,true': [0.11541262463266243, 0.15333023370211465], 'true': [0.00018001279599761945, 0.10595395071363066], 'true,true': [-4.625929269271485e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.04863929773867454, 0.09485151668995594], 'false': [0.013477970781318, 0.09546644237947423], 'false,false': [0.03619858052534897, 0.17305857835422592], 'false,false,false': [0.16707685621090468, 0.2073902748146859], 'true': [0.09065720829655753, 0.0013731668751292615], 'true,true': [0.0004226017630206552, 0.20849104745582006], 'false,true': [0.018574461668582606, 0.005787899870248127], 'false,true,true': [0.0, 0.022143641037329603]}, {'': [0.043965511370437874, 0.09391168428945672], 'false': [0.04893689316020963, 0.09475163994186428], 'false,true': [0.0, 0.05586041891483557], 'false,true,false': [0.0514032794478067, 0.006800184997400038], 'true': [0.0845049098929602, 0.0010701095716464826], 'true,false': [0.00016808836449564156, 0.0006165153666814694], 'true,false,true': [0.0, 0.00013815250706847304], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;complex(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.7672398441904211;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.3097618383253188;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.12933537577747847;  // std dev = 4.829, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.5735252546657348;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.7338169954488791;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7254658279988021;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6964939269792351;  // std dev = 0.994, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.811362980823043;  // std dev = 0.181, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16732832446475449;  // std dev = 0.134, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.47472729961632054;  // std dev = 1.616, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.10995210019100003;  // std dev = 4.316, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.567337208764602;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5325758113894016;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6526310549045184;  // std dev = 0.244, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.1251371899629861;  // std dev = 0.134, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5864906512178958;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5402718524825112;  // std dev = 0.997, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11231637819360625;  // std dev = 6.66e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4262429207768426;  // std dev = 0.845, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07353354509644888;  // std dev = 4.788, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4354166907220987;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.467629772758714;  // std dev = 0.086, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.42705467887881543;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.40599861389316555;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5701034784795084;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.21890582657855062;  // std dev = 1.405, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.006768532565806756;  // std dev = 2.557, 136.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=28 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.2125905865971507;  // std dev = 1.640, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.07244023309705208;  // std dev = 4.812, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3469400845187832;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.0326754557095398;  // std dev = 0.961, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.33080107053818913;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(F, I) )
%   | | | then return 0.3636636204985254;  // std dev = 0.806, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.4366729863628848;  // std dev = 0.048, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.10194203676207436;  // std dev = 0.030, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.368925766528813;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06955094237331527;  // std dev = 4.969, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.2545808290797946;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2728344895714639;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07408279871256677;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.272866541123728;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then return 0.007273704369647429;  // std dev = 0.205, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | else return 0.12318289202925135;  // std dev = 0.216, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.426697370639075;  // std dev = 0.379, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.15859462908855318;  // std dev = 0.089, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.22986856500943523;  // std dev = 1.788, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.06834019615237555;  // std dev = 4.210, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19630212352869625;  // std dev = 0.221, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return 0.3045612895714427;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return -0.05288310392609923;  // std dev = 0.141, 100.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=11 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.019768692401662496;  // std dev = 2.110, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.1051161634936917;  // std dev = 3.775, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.24485052760174364;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then return -0.03864386310733178;  // std dev = 0.171, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.16435828114758627;  // std dev = 1.864, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.001233092071516606;  // std dev = 1.494, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20609741223410222;  // std dev = 0.038, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E) )
%   | | then if ( enzyme(A, F), interaction(D, A) )
%   | | | then return -0.21204711002144355;  // std dev = 0.551, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.044541758995857945;  // std dev = 0.984, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.02995104014516835;  // std dev = 0.873, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.08115325678729639;  // std dev = 1.385, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( enzyme(I, J), phenotype(I, K) )
%   | | | then return 0.15173656117794496;  // std dev = 1.998, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.04219484838940246;  // std dev = 2.939, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.09963041840119533;  // std dev = 0.966, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.020314325947714002;  // std dev = 3.416, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1860456632625385;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1328971238527019;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.3442895201275488;  // std dev = 0.988, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.17835622369658868;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22914304229455545;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1553171969036435;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.21582898782444965;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I) )
%   | | then return 0.009028410266328333;  // std dev = 0.303, 302.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=83 */
%   | | else return -0.08006430058310035;  // std dev = 0.364, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.19737642182162354;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.07786945376935221;  // std dev = 0.602, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15790692934249792;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.2268304384389065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17529189989718882;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3089072337544483;  // std dev = 0.195, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.1221292591365447;  // std dev = 0.700, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06391989726262284;  // std dev = 3.642, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.018089183392804544;  // std dev = 3.156, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */


Results
   AUC ROC   = 0.943814
   AUC PR    = 0.44198
   CLL	      = -0.190191
   Precision = 0.320856 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.437956


Total learning time: 8.564 seconds
Total inference time: 9.605 seconds
AUC ROC: 0.943814


Results scoring model
   AUC ROC   = 0.957812
   AUC PR    = 0.326487
   CLL	      = -0.190733
   Precision = 0.267327 at threshold = 0.5
   Recall    = 0.723214
   F1        = 0.390361


Total scoring time: 7.974 seconds
Refined model CLL: -0.190733


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943814
   AUC PR    = 0.44198
   CLL	      = -0.190191
   Precision = 0.320856 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.437956


Total learning time: 28.724 seconds
Total inference time: 9.605 seconds
AUC ROC: 0.943814
Total revision time: 28.724
Best scored revision CLL: -0.190733


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:26:02
{'AUC ROC': 0.943814, 'AUC PR': 0.44198, 'CLL': -0.190191, 'Precision': [0.320856, 0.5], 'Recall': 0.689655, 'F1': 0.437956, 'Learning time': 28.724, 'Inference time': 9.605, 'parameter_0.4': {'AUC ROC': 0.942487, 'AUC PR': 0.336938, 'CLL': -0.203776, 'Precision': [0.319149, 0.5], 'Recall': 0.689655, 'F1': 0.436364, 'Learning time': 3.857, 'Inference time': 8.111}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7711924133603819;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7748156017661781;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return 0.7438632208137973;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16384841696479857;  // std dev = 6.400, 193.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=59 */
%   | | | else return 0.10814893509951236;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7286527424097229;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.6640267103248813;  // std dev = 0.980, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5796576370786348;  // std dev = 1.592, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.7187410095290874;  // std dev = 0.993, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8224267975947793;  // std dev = 0.171, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1620167670364477;  // std dev = 0.017, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.17822329115443136;  // std dev = 5.222, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | | else return 0.177800771169089;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5872865392032426;  // std dev = 0.119, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5694949405383016;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6268779603202519;  // std dev = 0.994, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.13033758228131978;  // std dev = 0.416, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5817343164478785;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5846926045767059;  // std dev = 0.079, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.11231637819360613;  // std dev = 5.16e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.11702591142704784;  // std dev = 5.974, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42747472429711164;  // std dev = 0.072, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2633999233484341;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.4459733878722876;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.36482673829687573;  // std dev = 0.767, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.36995597480413356;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39257936880143274;  // std dev = 0.977, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.008455052791837472;  // std dev = 3.218, 242.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=43 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.09107154373161387;  // std dev = 2.541, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.08467289141415225;  // std dev = 5.897, 169.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3391199434531471;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.2758616371757172;  // std dev = 0.789, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.29588406282216545;  // std dev = 2.006, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return 0.43227422150109934;  // std dev = 0.098, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.10070029955129;  // std dev = 0.059, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.0894753841660046;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4933184456852759;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.0876853462791759;  // std dev = 2.462, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.10889837060663789;  // std dev = 5.737, 149.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.25933709731649385;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27004904033448335;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.28348930432551656;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, G) )
%   | then return 0.003007240906777715;  // std dev = 3.173, 265.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=64 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46617001998973306;  // std dev = 0.426, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.14984650249132522;  // std dev = 0.141, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07459816213036377;  // std dev = 5.875, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.25383905585929595;  // std dev = 0.475, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.11949575358543574;  // std dev = 0.293, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3162534742705197;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.022022540931539433;  // std dev = 5.947, 339.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=88 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.22631157382919817;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.02519577593726391;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.028575944991864864;  // std dev = 1.730, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.07150537177369518;  // std dev = 0.498, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.02515544606003732;  // std dev = 2.734, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1605880714658774;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16779823046840758;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20105582251049703;  // std dev = 0.076, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, G) )
%   | then return -0.0027767524734140484;  // std dev = 3.096, 261.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=64 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3229543729559029;  // std dev = 0.437, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.053590998164272305;  // std dev = 5.486, 183.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=61 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.017193687291816705;  // std dev = 0.463, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08428597409691312;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1517256601198028;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.008190178256876757;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17047607466231735;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.19934828304693383;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0839857855147271;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.340683349642696;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.005254442010172974;  // std dev = 3.041, 261.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=61 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.030554946222988544;  // std dev = 5.545, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
%   | | | else return -0.01803446306972821;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return -0.00538202347043336;  // std dev = 1.425, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.13310167579252086;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13534277945509215;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.038572331560218553;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14439412740695448;  // std dev = 0.331, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.12644986612692152;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34000934717521636;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.02025018295191857;  // std dev = 6.767, 466.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=131 */


Results
   AUC ROC   = 0.941955
   AUC PR    = 0.316956
   CLL	      = -0.200101
   Precision = 0.322581 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.43956


Total learning time: 4.282 seconds
Total inference time: 8.984 seconds
AUC ROC: 0.941955


Results scoring model
   AUC ROC   = 0.946551
   AUC PR    = 0.290041
   CLL	      = -0.198379
   Precision = 0.260304 at threshold = 0.5
   Recall    = 0.710059
   F1        = 0.380952


Total scoring time: 10.449 seconds
Parameter learned model CLL: -0.198379


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 2], 'true,false': [1.351, 2, 21], 'false,true,true,true': [1.658, 3, 33], 'false,true,true,false': [1.882, 4, 31], 'false,true,false': [0.0, 183, 0], 'false,false,true': [0.935, 1, 7], 'false,false,false,true': [6.4, 134, 59], 'false,false,false,false': [2.872, 33, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.033, 0, 15], 'true,false': [0.98, 1, 13], 'false,true,true,true': [1.592, 3, 16], 'false,true,true,false': [0.993, 1, 48], 'false,true,false': [0.0, 192, 0], 'false,false,true,true': [0.171, 0, 25], 'false,false,true,false': [0.017, 46, 0], 'false,false,false,true': [5.222, 80, 42], 'false,false,false,false': [2.582, 20, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.119, 0, 23], 'true,true,false,true': [0.03, 0, 6], 'true,true,false,false': [0.994, 1, 31], 'true,false': [0.416, 122, 0], 'false,true': [0.028, 0, 13], 'false,false,true,true': [0.079, 0, 44], 'false,false,true,false': [5.16e-08, 97, 0], 'false,false,false,true': [5.974, 118, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.072, 0, 18], 'true,false,true': [0.913, 1, 5], 'true,false,false': [0.0, 0, 5], 'false,true,true': [0.767, 1, 7], 'false,true,false': [0.819, 1, 3], 'false,false,true,true': [0.977, 2, 18], 'false,false,true,false': [3.218, 199, 43], 'false,false,false,true': [2.541, 44, 21], 'false,false,false,false': [5.897, 120, 49]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.091, 0, 15], 'true,false': [0.789, 1, 13], 'false,true,true,true': [2.006, 5, 40], 'false,true,true,false': [0.098, 0, 24], 'false,true,false': [0.059, 194, 0], 'false,false,true,true': [0.599, 1, 2], 'false,false,true,false': [0.291, 0, 5], 'false,false,false,true': [2.462, 41, 21], 'false,false,false,false': [5.737, 100, 49]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.053, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 5], 'true,false': [0.032, 0, 12], 'false,true': [3.173, 201, 64], 'false,false,true,true': [0.426, 0, 25], 'false,false,true,false': [0.141, 48, 0], 'false,false,false,true': [5.875, 111, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.475, 1, 35], 'true,true,false,true': [0.293, 1, 3], 'true,true,false,false': [0.728, 1, 2], 'true,false': [5.947, 251, 88], 'false,true,true': [0.01, 0, 4], 'false,true,false': [0.875, 1, 3], 'false,false,true': [1.73, 58, 23], 'false,false,false,true': [0.498, 9, 1], 'false,false,false,false': [2.734, 26, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.076, 0, 21], 'false,true': [3.096, 197, 64], 'false,false,true,true': [0.437, 0, 5], 'false,false,true,false': [5.486, 122, 61], 'false,false,false,true': [0.463, 3, 1], 'false,false,false,false': [2.582, 20, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.036, 0, 11], 'true,true,false': [0.811, 1, 4], 'true,false': [0.07, 0, 13], 'false,true,true,true': [0.106, 0, 3], 'false,true,true,false': [0.764, 1, 4], 'false,true,false': [0.124, 0, 3], 'false,false,true': [3.041, 200, 61], 'false,false,false,true': [5.545, 128, 59], 'false,false,false,false': [2.789, 34, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [1.425, 3, 15], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.018, 0, 5], 'true,false,false': [0.807, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.331, 1, 3], 'false,true,false,true': [0.029, 0, 4], 'false,true,false,false': [0.129, 0, 3], 'false,false': [6.767, 335, 131]}]]
[{'': [0.06222222222222342, 0.20272207742137624], 'false': [0.1884803769607545, 0.21551020408163293], 'false,false': [0.10937499999999978, 0.20812191778383118], 'false,false,false': [0.21224730865258162, 0.18749999999999947], 'false,true': [0.08887125570323266, -2.0627094446587609e-16], 'false,true,true': [0.07638888888889046, 0.10122448979591983], 'true': [-2.5376526277146434e-16, 0.07939508506616223], 'true,true': [0.0, 0.0]}, {'': [0.03421241186257654, 0.18034384408635437], 'false': [0.1398235197452729, 0.22272664531372932], 'false,false': [0.22150417169421766, 0.22328430666939306], 'false,false,false': [0.22354543974124194, 0.22222222222222193], 'false,false,true': [0.0011737633647040014, 6.306736923685726e-06], 'false,true': [0.055692373364999305, -2.7755575615628914e-17], 'false,true,true': [0.13346705256977584, 0.020129851968000732], 'true': [7.372759003552906e-05, 0.0686293025367614]}, {'': [0.12717319445276554, 0.16410414697718675], 'false': [6.138970684797476e-05, 0.16209515658919235], 'false,false': [0.1043393998208953, 0.20993494749319574], 'false,false,false': [0.20993494749319574, nan], 'true': [0.016924027200516948, 0.0014166126752299959], 'false,false,true': [0.00014270658872359766, 2.7469435660828616e-17], 'true,true': [0.0006138325123955174, 0.02644452506316952], 'true,true,false': [0.00015475058537872677, 0.030853940257866586]}, {'': [0.03359493618522325, 0.11503328178423296], 'false': [0.10490883982200522, 0.11294849279464086], 'false,false': [0.05451316430457616, 0.17619267966227226], 'false,false,false': [0.09931577478736274, 0.2057493470122536], 'false,true': [0.07347233051638458, 0.16776431905514808], 'false,false,true': [0.04768115510706237, 0.04280080024000852], 'true': [0.0002844179381362475, 0.08402197326540453], 'true,false': [0.13888888888888887, 0.0]}, {'': [0.022738886852282248, 0.11544006340163776], 'false': [0.054608817240694094, 0.18350516645293224], 'false,false': [0.09365744828112872, 0.18482139731269756], 'false,false,false': [0.09777624580435533, 0.22090930221522664], 'false,false,true': [0.11963925251346867, 0.0169099088652529], 'false,true': [0.0626649825732427, 1.770003214833118e-05], 'false,true,true': [0.0894026248346616, 0.00039998460408374736], 'true': [0.00055306359123836, 0.04443961178530035]}, {'': [0.0002949282752189467, 0.10300049274335944], 'false': [0.037985492736791464, 0.1736002531524767], 'false,false': [0.08821059173832418, 0.2117860408729432], 'false,false,false': [0.2117860408729432, nan], 'false,false,true': [0.0072634286211919275, 0.0004129163745055786], 'true': [0.0002654762327151533, 8.686247970099426e-05], 'true,true': [0.0002588447858130616, 0.00020117773118545347], 'true,true,false': [nan, 0.00020117773118545347]}, {'': [0.10000609197725306, 0.08702170536051623], 'true': [0.0214676435912379, 0.10433654239722946], 'false': [0.11163690834116068, 0.085083952876642], 'false,true': [2.6013071449379477e-05, 0.19161983011759723], 'false,false': [0.036966102164259135, 0.1694324436979566], 'false,false,false': [0.02477957466120172, 0.20758264105506058], 'true,true': [0.006278649430040207, 0.09748789289615196], 'true,true,false': [0.021421523307605585, 0.17678766150039119]}, {'': [0.00048604631772241377, 0.09866461812301576], 'false': [0.03672630231730409, 0.16913535474183353], 'false,false': [0.16300122325680258, 0.20284640372240603], 'false,false,false': [0.05355596354842656, 0.22222222222222243], 'false,false,true': [0.03826994614614245, 0.16447948410314633], 'true': [1.0609467926890406e-05, 0.0002757373049959182], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.02706655433884014, 0.09726027943551743], 'false': [0.06673815072641277, 0.09724749212407713], 'false,false': [0.03543426625830145, 0.16641881944361062], 'false,false,false': [0.16441450133353572, 0.17284488314912272], 'false,true': [0.07741928859456271, 0.0051240662430808714], 'false,true,true': [0.003751219934032967, 0.11662944010205492], 'true': [0.04663674520744242, 0.0003743703499376386], 'true,true': [0.00011912672652294757, 0.13139401655291033]}, {'': [0.08689997163163622, 0.0971126728841433], 'false': [0.019916894215067128, 0.09826081956490879], 'true': [0.11279902002278429, 0.048838184810770915], 'true,false': [4.742228693828597e-05, 0.09300844614134143], 'false,true': [0.027420788684190577, 0.013660155428865959], 'false,true,true': [nan, 0.027420788684190577], 'false,true,false': [0.00021434486284022808, 0.005526387452738202], 'true,false,true': [0.0, 6.49561886774841e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.5724346493852266;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8427643197148973;  // std dev = 0.123, 65.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23421731116788838;  // std dev = 5.240, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
%   | | else if ( location(A, J) )
%   | | | then return 0.14847151574467257;  // std dev = 4.377, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7338517475231129;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.7236210089356155;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.611456889929945;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.7021598377757505;  // std dev = 0.990, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8180696935328143;  // std dev = 0.184, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.16842834486789376;  // std dev = 0.035, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.25676997661645456;  // std dev = 3.390, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.12674637153494714;  // std dev = 4.743, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5670500486168418;  // std dev = 0.016, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.6346732024677199;  // std dev = 0.063, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.12687504625718649;  // std dev = 0.032, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then return 0.5757120169061084;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2321151602227555;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5238025082820873;  // std dev = 1.358, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.1123163781936062;  // std dev = 8.02e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.031184982439546743;  // std dev = 2.468, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.15856254595746708;  // std dev = 5.328, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4140192973127303;  // std dev = 0.013, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.472538347442379;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10093575495195878;  // std dev = 0.003, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.02769641165097525;  // std dev = 1.362, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | | else return 0.048120596779387265;  // std dev = 2.629, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6304371105586712;  // std dev = 0.914, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.166798068709511;  // std dev = 0.442, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5543765738485541;  // std dev = 0.443, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0637035533062168;  // std dev = 5.334, 200.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34162443785866503;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.32306585250414316;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3203875852046182;  // std dev = 1.701, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return 0.32707260526734966;  // std dev = 1.338, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else return -0.10286982606571252;  // std dev = 0.081, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.29167790449150854;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6773256414503833;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.020186710135495986;  // std dev = 2.289, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.08880723138344478;  // std dev = 5.434, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.24836059297406274;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.2672010677557827;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20394894128194815;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3108343907959182;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, H) )
%   | then return 0.02010742690895932;  // std dev = 0.189, 240.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=64 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4087402846492808;  // std dev = 0.502, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.13236060413887651;  // std dev = 0.093, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.12393450603335933;  // std dev = 4.057, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return 0.03018393986890592;  // std dev = 3.676, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1884903695057623;  // std dev = 0.239, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.010161893283035127;  // std dev = 0.167, 101.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=20 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.05813495377957408;  // std dev = 3.841, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | | else return 0.02141333488297324;  // std dev = 3.848, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2326539355612183;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.24709510591917624;  // std dev = 1.954, 42.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=29 */
%   | | | else return -0.12955187385515485;  // std dev = 0.422, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.19373108843059328;  // std dev = 0.358, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.45554563553123223;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16060614761957573;  // std dev = 0.185, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( enzyme(A, F), enzyme(E, G) )
%   | | then if ( interaction(H, A), enzyme(H, F) )
%   | | | then return -0.11740665146291185;  // std dev = 0.842, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return -0.016346710846905383;  // std dev = 1.076, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, I), enzyme(I, J) )
%   | | | then return -0.016525708084940655;  // std dev = 1.908, 105.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=22 */
%   | | | else return 0.01650505797329532;  // std dev = 1.968, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), interaction(N, M) )
%   | | | then return 0.04017256302021817;  // std dev = 4.087, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
%   | | | else return 0.30266946700890873;  // std dev = 1.423, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, P), location(A, Q) )
%   | | | then return 0.03878722702381261;  // std dev = 2.460, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return -0.03258954468236753;  // std dev = 2.808, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11452203788464521;  // std dev = 0.195, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.17934276832494295;  // std dev = 0.021, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then return 0.3517577010942251;  // std dev = 0.029, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return -0.05452507637203264;  // std dev = 1.150, 98.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=9 */
%   | | | else return 0.026726832982640402;  // std dev = 5.330, 244.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=80 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), phenotype(K, L) )
%   | | | then return -0.007998911403012635;  // std dev = 1.029, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.16635281093485096;  // std dev = 0.624, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return -0.04492867549060051;  // std dev = 1.236, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.021938412566061865;  // std dev = 2.478, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.03843201417962644;  // std dev = 0.305, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.1545129240787643;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.1387216587307018;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G), interaction(H, E) )
%   | | | then return 0.05696286345471306;  // std dev = 0.376, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1700567952527387;  // std dev = 0.956, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return -0.08400687871189429;  // std dev = 1.124, 43.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=4 */
%   | | | else return -2.853013589917031E-4;  // std dev = 2.347, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( location(A, K) )
%   | | | then return 0.007594870596750996;  // std dev = 5.584, 367.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=105 */
%   | | | else return 0.08980258699047355;  // std dev = 1.502, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */


Results
   AUC ROC   = 0.964338
   AUC PR    = 0.346389
   CLL	      = -0.183867
   Precision = 0.326087 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.442804


Total learning time: 14.583 seconds
Total inference time: 10.906 seconds
AUC ROC: 0.964338


Results scoring model
   AUC ROC   = 0.974175
   AUC PR    = 0.31672
   CLL	      = -0.189963
   Precision = 0.276644 at threshold = 0.5
   Recall    = 0.721893
   F1        = 0.4


Total scoring time: 14.002 seconds
Refined model CLL: -0.189963


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964338
   AUC PR    = 0.346389
   CLL	      = -0.183867
   Precision = 0.326087 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.442804


Total learning time: 43.316 seconds
Total inference time: 10.906 seconds
AUC ROC: 0.964338
Total revision time: 43.316
Best scored revision CLL: -0.189963


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:27:06
{'AUC ROC': 0.964338, 'AUC PR': 0.346389, 'CLL': -0.183867, 'Precision': [0.326087, 0.5], 'Recall': 0.689655, 'F1': 0.442804, 'Learning time': 43.316, 'Inference time': 10.906, 'parameter_0.6': {'AUC ROC': 0.941955, 'AUC PR': 0.316956, 'CLL': -0.200101, 'Precision': [0.322581, 0.5], 'Recall': 0.689655, 'F1': 0.43956, 'Learning time': 4.282, 'Inference time': 8.984}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8331489350995117;  // std dev = 0.987, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.8348931211460235;  // std dev = 0.988, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15854419201650954;  // std dev = 7.292, 253.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=76 */
%   | | | else return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.6194734122109544;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7243753094634359;  // std dev = 0.000752, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.6617954948122671;  // std dev = 1.936, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.72185061215968;  // std dev = 2.487, 66.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=59 */
%   | | | else return -0.16359277234214972;  // std dev = 0.028, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1803585911605519;  // std dev = 4.751, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return 0.10561599234741015;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.49667942433594353;  // std dev = 1.355, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5672033121153935;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5215123217566083;  // std dev = 3.142, 92.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=75 */
%   | else return -0.13041215329529857;  // std dev = 0.371, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5232957956786971;  // std dev = 0.967, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5525138115828279;  // std dev = 0.988, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return -0.11231637819360611;  // std dev = 8.30e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.17930992348949196;  // std dev = 5.347, 126.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4409596027981461;  // std dev = 0.045, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.3302541921860446;  // std dev = 0.928, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.44501761616783037;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5329374721645636;  // std dev = 0.377, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2677207283025934;  // std dev = 0.569, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33115479759526695;  // std dev = 1.244, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | | else return -7.899629585667095E-4;  // std dev = 3.635, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.09454307988368242;  // std dev = 4.505, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | | | else return 0.0684321926650232;  // std dev = 5.416, 144.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3383711439829191;  // std dev = 0.042, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.24776399460901521;  // std dev = 1.217, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3592057785215156;  // std dev = 1.380, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | | else return 0.4017541866101138;  // std dev = 0.985, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.10288980984635229;  // std dev = 0.192, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.512308782142563;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3752702141196308;  // std dev = 0.241, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.11281397585478027;  // std dev = 4.368, 143.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=54 */
%   | | | else return 0.08948184029358809;  // std dev = 5.291, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2654246085694619;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29412982542547716;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2412145205083345;  // std dev = 0.972, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, G) )
%   | then return 0.0013347784764014422;  // std dev = 3.614, 320.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=81 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4731103733535141;  // std dev = 1.766, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | | else return -0.15178034125351472;  // std dev = 0.025, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07595788957998464;  // std dev = 5.397, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19550680377762397;  // std dev = 1.640, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.01940568124167593;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.37489936909755706;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.004061993180802915;  // std dev = 6.504, 461.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=116 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.2385882781973433;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2486950567748024;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.016890433067517235;  // std dev = 1.985, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.03940930784649371;  // std dev = 1.296, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.06835472869180804;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18026340351317072;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20787761541699587;  // std dev = 0.087, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( interaction(A, F) )
%   | then return -0.010911258038863817;  // std dev = 3.757, 335.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=81 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.0012821154406227936;  // std dev = 1.335, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.0306492652495639;  // std dev = 5.836, 245.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=80 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.048442119609312405;  // std dev = 1.258, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.13902530234354765;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16600088879530053;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.1754774778641371;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.12755509598602652;  // std dev = 0.816, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.2716002989813267;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.012923091202360662;  // std dev = 1.571, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else return -0.05476520760011648;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.0022101915789334782;  // std dev = 3.437, 316.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=77 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04730791917377318;  // std dev = 5.704, 217.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=76 */
%   | | | else return 0.047967149935329016;  // std dev = 2.955, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10124993644782916;  // std dev = 0.965, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1480476215517298;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16239082536560664;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.01300082545935473;  // std dev = 1.316, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24986735870727972;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.14903559887133255;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.27113457379461314;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0011396806831112326;  // std dev = 7.450, 639.000 (wgt'ed) examples reached here.  /* #neg=467 #pos=172 */


Results
   AUC ROC   = 0.945539
   AUC PR    = 0.236855
   CLL	      = -0.200399
   Precision = 0.208191 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.321053


Total learning time: 8.509 seconds
Total inference time: 10.65 seconds
AUC ROC: 0.945539


Results scoring model
   AUC ROC   = 0.967082
   AUC PR    = 0.214241
   CLL	      = -0.195397
   Precision = 0.162976 at threshold = 0.5
   Recall    = 0.817778
   F1        = 0.271787


Total scoring time: 25.761 seconds
Parameter learned model CLL: -0.195397


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [5.96e-08, 0, 29], 'false,true,true,true': [0.987, 1, 39], 'false,true,true,false': [0.988, 1, 42], 'false,true,false': [0.0, 231, 0], 'false,false,true': [0.0, 0, 11], 'false,false,false,true': [7.292, 177, 76], 'false,false,false,false': [3.509, 35, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [7.3e-08, 0, 20], 'true,false': [1.342, 2, 18], 'false,true,true,true': [0.000752, 0, 21], 'false,true,true,false': [1.936, 4, 60], 'false,true,false': [0.0, 234, 0], 'false,false,true,true': [2.487, 7, 59], 'false,false,true,false': [0.028, 102, 0], 'false,false,false,true': [4.751, 67, 36], 'false,false,false,false': [2.824, 29, 11]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [1.355, 2, 29], 'true,true,false,true': [0.029, 0, 7], 'true,true,false,false': [3.142, 17, 75], 'true,false': [0.371, 162, 0], 'false,true': [0.967, 1, 21], 'false,false,true,true': [0.988, 1, 46], 'false,false,true,false': [8.3e-08, 134, 0], 'false,false,false,true': [5.347, 79, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.045, 0, 19], 'true,false,true': [0.928, 1, 9], 'true,false,false': [0.031, 0, 10], 'false,true,true': [0.377, 0, 12], 'false,true,false': [0.569, 1, 3], 'false,false,true,true': [1.244, 5, 24], 'false,false,true,false': [3.635, 222, 53], 'false,false,false,true': [4.505, 116, 54], 'false,false,false,false': [5.416, 103, 41]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.042, 0, 21], 'true,false': [1.217, 2, 17], 'false,true,true,true': [1.38, 2, 51], 'false,true,true,false': [0.985, 1, 30], 'false,true,false': [0.192, 217, 0], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.241, 0, 7], 'false,false,false,true': [4.368, 89, 54], 'false,false,false,false': [5.291, 88, 41]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.039, 0, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 2], 'true,false': [0.972, 1, 23], 'false,true': [3.614, 239, 81], 'false,false,true,true': [1.766, 3, 59], 'false,false,true,false': [0.025, 113, 0], 'false,false,false,true': [5.397, 93, 47], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [1.64, 3, 46], 'true,true,false,true': [0.751, 2, 2], 'true,true,false,false': [0.029, 0, 5], 'true,false': [6.504, 345, 116], 'false,true,true': [0.015, 0, 4], 'false,true,false': [0.018, 0, 5], 'false,false,true': [1.985, 81, 28], 'false,false,false,true': [1.296, 17, 8], 'false,false,false,false': [2.728, 23, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.087, 0, 29], 'false,true': [3.757, 254, 81], 'false,false,true,true': [1.335, 4, 7], 'false,false,true,false': [5.836, 165, 80], 'false,false,false,true': [1.258, 15, 8], 'false,false,false,false': [2.553, 16, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.061, 0, 16], 'true,true,false': [0.038, 0, 5], 'true,false': [0.816, 1, 17], 'false,true,true,true': [0.036, 0, 3], 'false,true,true,false': [1.571, 3, 9], 'false,true,false': [0.812, 2, 3], 'false,false,true': [3.437, 239, 77], 'false,false,false,true': [5.704, 141, 76], 'false,false,false,false': [2.955, 35, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.965, 1, 21], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.022, 0, 3], 'true,false,false': [1.316, 2, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.085, 0, 4], 'false,true,false,true': [0.0, 0, 3], 'false,true,false,false': [0.175, 0, 8], 'false,false': [7.45, 467, 172]}]]
[{'': [1.7763568394002505e-15, 0.2083375060086537], 'false': [0.19141750172420846, 0.22222222222222437], 'false,false': [-1.6148698540002277e-16, 0.21368926991267945], 'false,false,false': [0.21015794653876826, 0.22805212620027385], 'false,true': [0.023515749745971405, -2.0762612408574356e-16], 'false,true,true': [0.024375000000001545, 0.022714981070850387], 'true': [-2.9605947323337506e-16, 1.2250736823450003e-16], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [0.04749999999999917, 0.180104494016077], 'false': [0.13788611528747524, 0.21980096952709624], 'false,false': [0.2238167861955079, 0.21475062123503447], 'false,false,true': [0.09369752696316364, 7.677466530036877e-06], 'false,false,false': [0.219159091221168, 0.19937499999999994], 'false,true': [0.044835933284525294, -7.021923403612101e-17], 'true': [2.6645352591003756e-16, 0.09000000000000004], 'false,true,true': [2.6955651679015447e-08, 0.058580175081190566]}, {'': [0.1445493927128311, 0.1533640513412625], 'false': [0.042523771682071665, 0.14983811506841135], 'false,false': [0.09036726252040068, 0.22692075880882565], 'false,false,false': [0.22692075880882565, nan], 'true': [0.09032792811029625, 0.0008496034218670315], 'false,false,true': [0.020784182907354707, 5.1368528005044557e-17], 'true,true': [0.05925973660728379, 0.09986854795150424], 'true,true,false': [0.0001179625258031106, 0.10731065361791015]}, {'': [0.02456704844268182, 0.11204949783536601], 'false': [0.042340383483413485, 0.10962248236878866], 'false,false': [0.05806868151895659, 0.1582199869003226], 'false,false,false': [0.11937049281931099, 0.20371485725694813], 'false,false,true': [0.053395048227969436, 0.04805024661132121], 'false,true': [0.011853394143964838, 0.08104641058319997], 'true': [0.00010464762098593676, 0.04642107486795275], 'true,false': [0.08615995746604199, 9.687052785156691e-05]}, {'': [0.039130789315499605, 0.1132197551099608], 'false': [0.05572045834833148, 0.17075095456551487], 'false,false': [0.009634318288492795, 0.17320261508649545], 'false,false,false': [0.13340776662356563, 0.21703008003847493], 'false,true': [0.034644288162405106, 0.0001698855449030018], 'true': [8.305788234288936e-05, 0.07797873912116177], 'false,true,true': [0.035927001754966784, 0.0313090063091758], 'false,false,true': [0.0, 0.008310708797219608]}, {'': [0.024492717622756597, 0.09723013448668738], 'false': [0.040805260377062426, 0.15200340393602738], 'false,false': [0.10715963274857743, 0.2080357279765048], 'false,false,false': [0.2080357279765048, nan], 'false,false,true': [0.05031279076727861, 5.4718712734332035e-06], 'true': [0.00019832836399940785, 0.03937436528647715], 'true,true': [0.00011795282364934767, 6.645164824126137e-06], 'true,true,false': [nan, 6.645164824126137e-06]}, {'': [0.09241461141104516, 0.07639028560370763], 'true': [0.06205837133698214, 0.09175421260515733], 'false': [8.635610148542848e-05, 0.0781592490903884], 'false,false': [0.0361338797000292, 0.15480238791462672], 'false,false,false': [0.06720375510941229, 0.21885813148788955], 'true,true': [0.05487778904982241, 0.10113813153652232], 'true,true,false': [0.14097475643191504, 0.00016817707664142922], 'false,true': [5.263415673813915e-05, 6.7935002521613e-05]}, {'': [0.00033567917685775167, 0.09171402387367783], 'false': [0.04212597886979008, 0.14462553616655904], 'false,false': [0.14006790312285683, 0.16408308531514137], 'false,false,false': [0.0688576417325996, 0.24142661179698235], 'false,false,true': [0.16203972007195516, 0.1390376018830642], 'true': [0.0, 0.0002592527812390687], 'true,true': [0.0, nan]}, {'': [0.017637154147215464, 0.09358262370662697], 'false': [0.1680323715518921, 0.09104593926407062], 'false,true': [0.17761412850670374, 0.13197390362914113], 'false,true,true': [0.00044163041160270405, 0.20571654111815527], 'false,false': [0.0373777497611504, 0.15229879844849395], 'false,false,false': [0.14995423127627727, 0.16172013705907698], 'true': [0.0002633014728185213, 0.03701459970134809], 'true,true': [0.0002355889155415368, 0.00028355823486325704]}, {'': [0.06744153823053703, 0.0862728031771458], 'false': [0.004731534361959707, 0.08686687497279512], 'true': [0.04231275000538997, 0.09517254077613092], 'true,false': [0.0001499558023243197, 0.12367862471462746], 'false,true': [0.0018123968230529183, 0.005754430605586599], 'false,true,false': [0.0, 0.003846480352504511], 'false,true,true': [nan, 0.0018123968230529183], 'true,false,true': [0.0, 0.0001676353389486416]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;phenotype(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8224346493852265;  // std dev = 0.186, 84.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=81 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.24276431971489668;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.1706489350995134;  // std dev = 7.181, 240.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=75 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6736898847067113;  // std dev = 0.214, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.35801933462185453;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.07281740330686556;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.6795567519843413;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, G) )
%   | then return 0.06498145675721625;  // std dev = 0.359, 357.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=81 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7057320887286188;  // std dev = 2.641, 67.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=59 */
%   | | | else return -0.16750499918120432;  // std dev = 0.047, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.14061260877829546;  // std dev = 2.095, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.21684612580510934;  // std dev = 4.936, 104.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5949626426886138;  // std dev = 0.263, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5256556355536135;  // std dev = 0.884, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.5453352935474517;  // std dev = 3.377, 90.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=75 */
%   | else return -0.13992988740304324;  // std dev = 0.174, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.49826390379868973;  // std dev = 0.292, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6922520204735647;  // std dev = 0.989, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | | else return -0.13274885075430057;  // std dev = 1.41e-07, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07274511019806723;  // std dev = 5.032, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | | else return 0.21417439143211164;  // std dev = 2.556, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.42553366823087;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5252623074459483;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(F, C), interaction(A, F) )
%   | | then return 0.4425660255458336;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.460071898841409;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.1259993839713861;  // std dev = 0.160, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4423852229282271;  // std dev = 1.692, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.012244817598938623;  // std dev = 3.725, 203.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=33 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12799743192791024;  // std dev = 6.287, 241.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=87 */
%   | | | else return 0.08188756135289393;  // std dev = 4.281, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return 0.2244767246389678;  // std dev = 0.267, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.34707091100629456;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.37208534314491815;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.13920353044767494;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5062875682677802;  // std dev = 0.164, 83.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | | else return -0.12182289750588626;  // std dev = 0.283, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5465904549587086;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.017235276363187623;  // std dev = 3.022, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | else return 0.08550596328402355;  // std dev = 6.214, 231.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=76 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.28245920651789713;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.19062753152084738;  // std dev = 1.035, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.21391611883114733;  // std dev = 0.232, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.04885221963360442;  // std dev = 0.233, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   | | else return 0.0246980515552299;  // std dev = 0.242, 253.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=68 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.42906688405447824;  // std dev = 2.355, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | else return -0.15136706878271708;  // std dev = 0.060, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5247512697305854;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.07260796222113539;  // std dev = 5.276, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.20727767140003123;  // std dev = 0.271, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | else return 0.25555367283425245;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.04728603318590737;  // std dev = 0.194, 130.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=17 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.0034071833208165463;  // std dev = 2.464, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.058057782894579725;  // std dev = 5.502, 230.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=79 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2460820759253738;  // std dev = 0.041, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( location(A, M) )
%   | | | then return 0.09457421852680956;  // std dev = 2.254, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 7.905975687179193E-4;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.009667322649446235;  // std dev = 0.273, 113.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.09999643920652294;  // std dev = 0.239, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.1984034427622737;  // std dev = 0.143, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( complex(E, F), enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.09138839418895446;  // std dev = 0.482, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.19930410548540767;  // std dev = 0.737, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.019050968823343537;  // std dev = 0.170, 96.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=20 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.44707997366510444;  // std dev = 0.884, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return -0.1675551689803774;  // std dev = 1.101, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05629065195873278;  // std dev = 5.207, 224.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=77 */
%   | | | else return 0.01785836351641914;  // std dev = 3.529, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16911950958263222;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return -0.4909156374997342;  // std dev = 0.756, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.18780688152604771;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20131102099725195;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.24911948416404397;  // std dev = 0.155, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.10115005236015204;  // std dev = 0.491, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10788671302676894;  // std dev = 0.087, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.061968895706586216;  // std dev = 2.564, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
%   | | | else return 0.011653445550021697;  // std dev = 6.737, 512.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=145 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1555396669811408;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.27658816741486647;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.15575053373458336;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11527631046176307;  // std dev = 0.235, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21112451890034786;  // std dev = 0.125, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.07571969460270644;  // std dev = 1.195, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.06103748390206322;  // std dev = 3.230, 154.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=29 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.034853342471168884;  // std dev = 2.522, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | | else return 0.019851078395353123;  // std dev = 6.023, 390.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=117 */


Results
   AUC ROC   = 0.963769
   AUC PR    = 0.370336
   CLL	      = -0.195958
   Precision = 0.231939 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.348571


Total learning time: 16.914 seconds
Total inference time: 13.244 seconds
AUC ROC: 0.963769


Results scoring model
   AUC ROC   = 0.975801
   AUC PR    = 0.283975
   CLL	      = -0.193457
   Precision = 0.176583 at threshold = 0.5
   Recall    = 0.817778
   F1        = 0.29045


Total scoring time: 26.83 seconds
Refined model CLL: -0.193457


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.963769
   AUC PR    = 0.370336
   CLL	      = -0.195958
   Precision = 0.231939 at threshold = 0.5
   Recall    = 0.701149
   F1        = 0.348571


Total learning time: 78.014 seconds
Total inference time: 13.244 seconds
AUC ROC: 0.963769
Total revision time: 78.014
Best scored revision CLL: -0.193457


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:28:49
{'AUC ROC': 0.963769, 'AUC PR': 0.370336, 'CLL': -0.195958, 'Precision': [0.231939, 0.5], 'Recall': 0.701149, 'F1': 0.348571, 'Learning time': 78.014, 'Inference time': 13.244, 'parameter_0.8': {'AUC ROC': 0.945539, 'AUC PR': 0.236855, 'CLL': -0.200399, 'Precision': [0.208191, 0.5], 'Recall': 0.701149, 'F1': 0.321053, 'Learning time': 8.509, 'Inference time': 10.65}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7748156017661787;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8015451615146066;  // std dev = 1.682, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | | else return 0.825362049853611;  // std dev = 1.391, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return -0.14185106490048785;  // std dev = 8.43e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16190320131111546;  // std dev = 7.872, 293.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=89 */
%   | | | else return 0.22046777567922138;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7283168841164877;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.6833496474872477;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6935259125350252;  // std dev = 0.981, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.715811339744695;  // std dev = 0.996, 83.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   | | else return -0.12544463852839202;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7931261044080632;  // std dev = 0.999, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.16388670399987407;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16918867954602038;  // std dev = 6.668, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | | | else return 0.17834042125019112;  // std dev = 3.614, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5679184254074706;  // std dev = 0.071, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5621696539615307;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.651237131049202;  // std dev = 0.438, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return -0.13095504420543264;  // std dev = 0.558, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5783735310114486;  // std dev = 0.025, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5062962603753899;  // std dev = 2.156, 81.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=76 */
%   | | | else return -0.11231637819360629;  // std dev = 5.58e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13155675276094753;  // std dev = 7.660, 272.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=88 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34377457037858006;  // std dev = 1.456, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.3485937438104778;  // std dev = 0.948, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4411394894032093;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.35883945772319753;  // std dev = 1.411, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else return 0.3534990502179867;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32282327947776684;  // std dev = 1.498, 36.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return -5.77235588133621E-4;  // std dev = 4.272, 365.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=73 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0603995275884522;  // std dev = 3.234, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | | | else return 0.1189503835225466;  // std dev = 7.412, 249.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=82 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3427513862457707;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.34772165241107245;  // std dev = 0.045, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.32102321300667885;  // std dev = 2.078, 72.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=66 */
%   | | | else return 0.41008568011029517;  // std dev = 0.994, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.10137045514908999;  // std dev = 0.068, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.31514415770938703;  // std dev = 0.709, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.36310414660297063;  // std dev = 0.898, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.05610592390776836;  // std dev = 3.179, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | | | else return 0.05470314073227231;  // std dev = 7.652, 287.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=82 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.26939841635600403;  // std dev = 0.044, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.28764263168882587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.275715312329306;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.11059192371517874;  // std dev = 1.772, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   else if ( interaction(A, G) )
%   | then return 0.004053623946699494;  // std dev = 4.239, 420.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=109 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47097424264914506;  // std dev = 0.616, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.14146132828069727;  // std dev = 0.027, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07652599949757714;  // std dev = 7.624, 271.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=88 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.21226070208918638;  // std dev = 1.437, 66.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=60 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.08050196444931983;  // std dev = 0.354, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.3913148603287119;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.022921838525164624;  // std dev = 7.510, 520.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=138 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.2275484199863426;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24741417060568036;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.018542957017952742;  // std dev = 2.585, 153.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=42 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04281427794636584;  // std dev = 0.948, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1430297943787342;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.17908348556778372;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17743013699236365;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18328679651026014;  // std dev = 0.980, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(A, G) )
%   | then return 0.004963661206097956;  // std dev = 3.901, 421.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=109 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1568579829047196;  // std dev = 0.994, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.037310705495994786;  // std dev = 7.012, 311.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=94 */
%   | | else if ( complex(A, J) )
%   | | | then return 9.995169245803115E-5;  // std dev = 0.986, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.06322385497683045;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16995041600459074;  // std dev = 0.088, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.19363770266544053;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.04594483816090602;  // std dev = 1.405, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.23442493633556646;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2645954280101871;  // std dev = 0.378, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3541974972018031;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.005185910695005236;  // std dev = 4.018, 414.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05125753051302932;  // std dev = 6.852, 278.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=89 */
%   | | | else return 0.04449027352275704;  // std dev = 3.711, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.09196239072403292;  // std dev = 1.248, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.16415200916062248;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15708218165829846;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1246294467401499;  // std dev = 1.518, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.19429000092596627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08463547414780016;  // std dev = 0.827, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.12673561450860538;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.34223189525173314;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.015017601463117794;  // std dev = 8.762, 774.000 (wgt'ed) examples reached here.  /* #neg=558 #pos=216 */


Results
   AUC ROC   = 0.942331
   AUC PR    = 0.314468
   CLL	      = -0.200154
   Precision = 0.322581 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.43956


Total learning time: 5.832 seconds
Total inference time: 8.791 seconds
AUC ROC: 0.942331


Results scoring model
   AUC ROC   = 0.946642
   AUC PR    = 0.279005
   CLL	      = -0.202911
   Precision = 0.2574 at threshold = 0.5
   Recall    = 0.70922
   F1        = 0.377715


Total scoring time: 16.015 seconds
Parameter learned model CLL: -0.202911


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 2], 'true,false': [1.658, 3, 33], 'false,true,true,true': [1.682, 3, 50], 'false,true,true,false': [1.391, 2, 59], 'false,true,false': [8.43e-08, 297, 0], 'false,false,true': [0.964, 1, 13], 'false,false,false,true': [7.872, 204, 89], 'false,false,false,false': [3.993, 44, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.044, 0, 28], 'true,false': [0.973, 1, 18], 'false,true,true,true': [0.981, 1, 27], 'false,true,true,false': [0.996, 1, 82], 'false,true,false': [0.0, 311, 0], 'false,false,true,true': [0.999, 1, 39], 'false,false,true,false': [0.021, 56, 0], 'false,false,false,true': [6.668, 135, 68], 'false,false,false,false': [3.614, 37, 20]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.071, 0, 35], 'true,true,false,true': [0.037, 0, 12], 'true,true,false,false': [0.438, 0, 50], 'true,false': [0.558, 167, 0], 'false,true': [0.025, 0, 21], 'false,false,true,true': [2.156, 5, 76], 'false,false,true,false': [5.58e-08, 160, 0], 'false,false,false,true': [7.66, 184, 88], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [1.456, 3, 29], 'true,false,true': [0.948, 1, 11], 'true,false,false': [1.49e-08, 0, 6], 'false,true,true': [1.411, 3, 17], 'false,true,false': [0.82, 1, 3], 'false,false,true,true': [1.498, 7, 29], 'false,false,true,false': [4.272, 292, 73], 'false,false,false,true': [3.234, 83, 32], 'false,false,false,false': [7.412, 167, 82]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.054, 0, 28], 'true,false': [0.045, 0, 18], 'false,true,true,true': [2.078, 6, 66], 'false,true,true,false': [0.994, 1, 43], 'false,true,false': [0.068, 310, 0], 'false,false,true,true': [0.709, 1, 5], 'false,false,true,false': [0.898, 1, 8], 'false,false,false,true': [3.179, 80, 32], 'false,false,false,false': [7.652, 205, 82]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.044, 0, 20], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.029, 0, 5], 'true,false': [1.772, 4, 20], 'false,true': [4.239, 311, 109], 'false,false,true,true': [0.616, 0, 39], 'false,false,true,false': [0.027, 81, 0], 'false,false,false,true': [7.624, 183, 88], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.437, 6, 60], 'true,true,false,true': [0.354, 2, 4], 'true,true,false,false': [0.754, 1, 4], 'true,false': [7.51, 382, 138], 'false,true,true': [0.008, 0, 5], 'false,true,false': [0.015, 0, 4], 'false,false,true': [2.585, 111, 42], 'false,false,false,true': [0.948, 10, 5], 'false,false,false,false': [3.44, 29, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [7.45e-09, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.98, 1, 33], 'false,true': [3.901, 312, 109], 'false,false,true,true': [0.994, 3, 8], 'false,false,true,false': [7.012, 217, 94], 'false,false,false,true': [0.986, 14, 5], 'false,false,false,false': [3.586, 36, 20]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.088, 0, 24], 'true,true,false': [0.023, 0, 5], 'true,false': [1.405, 3, 17], 'false,true,true,true': [0.177, 0, 7], 'false,true,true,false': [0.378, 0, 10], 'false,true,false': [0.152, 0, 3], 'false,false,true': [4.018, 312, 102], 'false,false,false,true': [6.852, 189, 89], 'false,false,false,false': [3.711, 47, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [1.248, 2, 29], 'true,false,true,true': [0.001, 0, 3], 'true,false,true,false': [0.017, 0, 6], 'true,false,false': [1.518, 4, 8], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.827, 1, 6], 'false,true,false,true': [0.02, 0, 7], 'false,true,false,false': [0.126, 0, 6], 'false,false': [8.762, 558, 216]}]]
[{'': [0.05747605164514856, 0.2099491579333181], 'false': [0.19487215917500056, 0.22368011543685198], 'false,false': [0.06632653061224467, 0.2157443301486547], 'false,false,false': [0.21148761196985497, 0.23104389834068595], 'false,true': [0.04193598030163421, 2.392399783704041e-17], 'true': [-2.7328566760003855e-16, 0.07638888888888919], 'false,true,true': [0.053399786400854646, 0.03171190540177315], 'true,true': [-1.6148698540002277e-16, 0.0]}, {'': [0.020684130980280064, 0.18118831862601784], 'false': [0.14001382283003766, 0.22520242622666753], 'false,false': [0.23300365470834936, 0.22122867053908762], 'false,false,true': [0.024937868685022745, 8.108522752760447e-06], 'false,false,false': [0.2190015452126589, 0.22909496965121423], 'false,true': [0.017691999168019213, -8.567637489068732e-17], 'true': [6.777939596469551e-05, 0.04986149584487545], 'false,true,true': [0.03433544085825207, 0.011952065514350609]}, {'': [0.13024773368201836, 0.1655663134525733], 'false': [2.9415174098564496e-05, 0.16388659114021029], 'false,false': [0.10468443434333882, 0.21573403181711592], 'false,false,false': [0.21573403181711592, nan], 'true': [0.003845121901707173, 0.0018616054481732274], 'false,false,true': [0.05740603141204681, 1.9428902930940238e-17], 'true,true': [0.00014251441066345398, 0.004359746026353841], 'true,true,false': [0.00011684445570414592, 0.0038426200533556456]}, {'': [0.06135609770070239, 0.12074853499995583], 'false': [0.11096603493943091, 0.11840404673005174], 'false,false': [0.05965162059352867, 0.18041150139702727], 'false,false,false': [0.09092727585262908, 0.22065647134381827], 'false,true': [0.09952184911074138, 0.1681631974559436], 'true': [0.06626390261490778, 0.05181691037512559], 'false,false,true': [0.06232867595092858, 0.04999814546584607], 'true,false': [0.0748704605535833, 3.700743415417188e-17]}, {'': [0.00011354103460390148, 0.11268771702862863], 'false': [0.05421573169782079, 0.17192922270944208], 'false,false': [0.08777400472767441, 0.17207052996291702], 'false,false,false': [0.09022159952373174, 0.20401102362287227], 'false,false,true': [0.08370441853765759, 0.08956699797381651], 'false,true': [0.047630666995600826, 1.5038232610049336e-05], 'false,true,true': [0.05999958636143183, 0.022467230405672636], 'true': [0.0001036772547137981, 0.0001138477513173481]}, {'': [0.06932613093101189, 0.10761205078309019], 'false': [0.0427842673977366, 0.1749469587500292], 'false,false': [0.08544620845965967, 0.2144681260348743], 'false,false,false': [0.2144681260348743, nan], 'false,false,true': [0.009715630127454453, 8.947732946305048e-06], 'true': [0.00012321668385387814, 0.13086337886932567], 'true,true': [9.722446671298624e-05, 0.0001568040130998464], 'true,true,false': [0.0, 0.0001644546578691508]}, {'': [0.10362777435574846, 0.08981664743928879], 'true': [0.039259428253480125, 0.10846881262826971], 'false': [0.00013012035140781542, 0.092128156687392], 'false,false': [0.04367043660073857, 0.20078015087922174], 'false,false,false': [0.05985704431123053, 0.24156601416076642], 'true,true': [0.031285502257323634, 0.08702530345561407], 'true,true,false': [0.02085452786863892, 0.11373678529911117], 'false,true': [1.3254131130691072e-05, 5.6954211382104214e-05]}, {'': [0.020432637302818312, 0.0974232200540002], 'false': [0.036137796252014215, 0.16168849528425963], 'false,false': [0.15621740419585023, 0.185150070935618], 'false,false,false': [0.05118862555976458, 0.22959183673469438], 'false,false,true': [0.08990865834128572, 0.1580745089072876], 'true': [3.5584824415756643e-07, 0.028239484021581614], 'true,true': [5.046468293750712e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.044482487344709803, 0.10058927539546374], 'false': [0.011384321223537764, 0.10136255483241831], 'false,false': [0.038989545621445305, 0.17349865226679909], 'false,false,false': [0.16888447582424873, 0.19127812527411872], 'true': [0.00036533428613863073, 0.09874212724664723], 'false,true': [0.010470032191877561, 0.007717519959217933], 'false,true,true': [0.00447514496544383, 0.014291640898897761], 'true,true': [0.00032190314452793894, 0.00010945544916372562]}, {'': [0.08444984184560352, 0.09842289631480353], 'false': [0.04483996285440911, 0.09917941468490604], 'true': [0.05024952415798788, 0.12957290505976662], 'true,false': [4.5343904817597545e-05, 0.19213510581435378], 'false,true': [0.08681046097835739, 0.01278475370677079], 'false,true,true': [0.0, 0.09770894099846905], 'false,true,false': [5.4399493930468566e-05, 0.0026314083064552705], 'true,false,true': [6.513531682581878e-07, 5.102936033806368e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8010060779566548;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8401309170814929;  // std dev = 0.133, 111.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=109 */
%   | | else return -0.14185106490048777;  // std dev = 1.37e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8364098046647294;  // std dev = 0.989, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.23745927992709853;  // std dev = 5.226, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | | | else return 0.21000078695136293;  // std dev = 4.963, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7319500247039071;  // std dev = 0.116, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.6782291467738063;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5709216795344656;  // std dev = 2.436, 46.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=39 */
%   | | | else return 0.7090110855356894;  // std dev = 0.993, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7562998478903035;  // std dev = 0.992, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return -0.1530539490125103;  // std dev = 0.260, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17334489184542845;  // std dev = 3.742, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.14080518270288978;  // std dev = 6.370, 189.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=59 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5857435819349305;  // std dev = 0.147, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.5022464885362848;  // std dev = 0.952, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.6075030967883043;  // std dev = 0.063, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | else return -0.13597022761851918;  // std dev = 0.067, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5720000054046247;  // std dev = 0.030, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5250032759154751;  // std dev = 1.946, 80.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=76 */
%   | | | else return -0.1123163781936064;  // std dev = 6.32e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.05717326794940538;  // std dev = 2.566, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.15239025943857082;  // std dev = 6.814, 219.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=76 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.15534516029654688;  // std dev = 0.941, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.39624947878548833;  // std dev = 0.195, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.37464553494635333;  // std dev = 0.227, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.33283888718718957;  // std dev = 0.283, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | else return 0.001117619061953211;  // std dev = 0.220, 402.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=79 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4824860453272122;  // std dev = 0.470, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.11858066604987995;  // std dev = 0.173, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.09767835843844436;  // std dev = 3.547, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.15051667458139695;  // std dev = 6.211, 166.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=61 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3370069245346688;  // std dev = 0.078, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.30557708684043716;  // std dev = 0.228, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.24834530333278626;  // std dev = 2.036, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | | else return 0.40822545009034794;  // std dev = 1.113, 82.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=81 */
%   | | else return -0.101439075529108;  // std dev = 0.079, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.19413531963135888;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.5770116680210834;  // std dev = 0.481, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.024267261946649243;  // std dev = 2.338, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | | | else return 0.06980060471025237;  // std dev = 7.123, 266.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=82 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.23873405827771427;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E) )
%   | | then return -0.1321191909093479;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.0678109101437625;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.27432352873586463;  // std dev = 0.029, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, G) )
%   | then return 0.014769340765707002;  // std dev = 0.205, 402.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=109 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3442186983947858;  // std dev = 0.428, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.10703606801888699;  // std dev = 0.154, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.05264621571754171;  // std dev = 5.361, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return 0.11418167214133157;  // std dev = 4.780, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.27675087652186947;  // std dev = 0.174, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | else if ( interaction(A, F), location(A, G) )
%   | | then return 0.005932599431562378;  // std dev = 0.194, 258.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=68 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.05964740116011009;  // std dev = 5.310, 196.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=64 */
%   | | | else return -0.007820347185624583;  // std dev = 3.616, 107.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=28 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.23349915853341707;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.26148309000587344;  // std dev = 0.497, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10795045333781049;  // std dev = 2.774, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else if ( enzyme(A, P), complex(A, Q) )
%   | | | then return -0.01079144133966107;  // std dev = 1.151, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.039427693201529446;  // std dev = 2.756, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.1860790045645608;  // std dev = 0.029, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.22473450674367412;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.1435174168775236;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1355961132028899;  // std dev = 0.977, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.32090501754920664;  // std dev = 0.145, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.07585336137640983;  // std dev = 2.794, 146.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=70 */
%   | | | else return -0.09696597349830631;  // std dev = 0.153, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.005981707258581587;  // std dev = 3.795, 136.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=32 */
%   | | | else return 0.028915794660114288;  // std dev = 6.741, 378.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11439658178238743;  // std dev = 0.199, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0.15520668901444845;  // std dev = 0.183, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.017416649187386522;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.19971453017270907;  // std dev = 1.116, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return -0.034220203885056026;  // std dev = 0.180, 122.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=25 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), location(A, J) )
%   | | | then return 0.14322298265436328;  // std dev = 0.987, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.395744055895919;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -7.154779632369705E-4;  // std dev = 2.242, 188.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=47 */
%   | | | else return 0.028837212298858085;  // std dev = 7.670, 463.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=143 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15986218260274465;  // std dev = 0.033, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, D), complex(A, F) )
%   | | | then return 0.204860974220061;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.040251210276735755;  // std dev = 1.171, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(A, G), interaction(H, D) )
%   | | | then return 0.12008216151879193;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3852392393957591;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11390439746749781;  // std dev = 0.711, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.016139224846325052;  // std dev = 2.117, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.011667837714174262;  // std dev = 2.403, 193.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=47 */
%   | | | else return 0.037035261782854635;  // std dev = 7.579, 436.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=143 */


Results
   AUC ROC   = 0.970603
   AUC PR    = 0.401315
   CLL	      = -0.183122
   Precision = 0.338983 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.454545


Total learning time: 19.105 seconds
Total inference time: 11.207 seconds
AUC ROC: 0.970603


Results scoring model
   AUC ROC   = 0.970734
   AUC PR    = 0.3265
   CLL	      = -0.189977
   Precision = 0.27248 at threshold = 0.5
   Recall    = 0.70922
   F1        = 0.393701


Total scoring time: 28.398 seconds
Refined model CLL: -0.189977


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970603
   AUC PR    = 0.401315
   CLL	      = -0.183122
   Precision = 0.338983 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.454545


Total learning time: 69.35 seconds
Total inference time: 11.207 seconds
AUC ROC: 0.970603
Total revision time: 69.35
Best scored revision CLL: -0.189977


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 01:30:19
{'AUC ROC': 0.970603, 'AUC PR': 0.401315, 'CLL': -0.183122, 'Precision': [0.338983, 0.5], 'Recall': 0.689655, 'F1': 0.454545, 'Learning time': 69.35, 'Inference time': 11.207, 'parameter_1.0': {'AUC ROC': 0.942331, 'AUC PR': 0.314468, 'CLL': -0.200154, 'Precision': [0.322581, 0.5], 'Recall': 0.689655, 'F1': 0.43956, 'Learning time': 5.832, 'Inference time': 8.791}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7331489350995123;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04862512557570276;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41183736048488795;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7580193346218546;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7439976143448208;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7072710062855105;  // std dev = 0.977, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8304336328503454;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.15647416039562942;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06641184420077005;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.3332054912315484;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.6294863082990865;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5307189310172489;  // std dev = 0.691, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return -0.11819845487540782;  // std dev = 0.045, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6214673841420917;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4700274172815052;  // std dev = 1.887, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.1444525051117879;  // std dev = 1.821, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.4692482086065727;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.5271099671385784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4408690886725063;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5201636838697734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.12559254252831317;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.031164618419725936;  // std dev = 3.251, 130.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.02933216531167972;  // std dev = 0.669, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.09005980556930551;  // std dev = 1.861, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3649958870502072;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.34362800596224785;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.4344264894628165;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.38644664573249765;  // std dev = 1.364, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else return -0.10448868899869308;  // std dev = 0.009, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39186841285341933;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return -0.05109983770418048;  // std dev = 0.687, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.11368485710431281;  // std dev = 1.803, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.28217128548333437;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2769255655729266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.024441834485662672;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.038706022694070516;  // std dev = 2.541, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45945088709187326;  // std dev = 0.221, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.11333761493887551;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05943948357622221;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16843176367581833;  // std dev = 0.887, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.024147551700491682;  // std dev = 1.916, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.25783899235317975;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05349498157993542;  // std dev = 2.219, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return -0.029587316674932595;  // std dev = 0.283, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07351597143701892;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.20031612515195407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23153323975627418;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then return 0.031011241348293965;  // std dev = 2.421, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12582386097063347;  // std dev = 1.476, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.22076787558415822;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11934028421785223;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.20010050334247664;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1806909084442493;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return -0.11386721511962337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18513079480935946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.02547737689390966;  // std dev = 2.446, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.08430823626208146;  // std dev = 1.515, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1988158003402194;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17012920607678717;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16454868700642156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15093559511190863;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, I), interaction(G, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1588117634352617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.024080590704164993;  // std dev = 3.095, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */


Results
   AUC ROC   = 0.969716
   AUC PR    = 0.129141
   CLL	      = -0.198202
   Precision = 0.078582 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.145506


Total learning time: 3.027 seconds
Total inference time: 11.625 seconds
AUC ROC: 0.969716


Results scoring model
   AUC ROC   = 0.981645
   AUC PR    = 0.254525
   CLL	      = -0.171076
   Precision = 0.18677 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.309677


Total scoring time: 5.07 seconds
Parameter learned model CLL: -0.171076


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.894, 1, 4], 'false,true,true,true': [1.323, 2, 14], 'false,true,true,false': [0.982, 1, 27], 'false,true,false': [8.43e-08, 92, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [1.799, 17, 4], 'false,false,false,false': [1.155, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.801, 1, 2], 'true,false': [1.49e-08, 0, 3], 'false,true,true,true': [0.0, 0, 2], 'false,true,true,false': [0.977, 1, 39], 'false,true,false': [0.0, 83, 0], 'false,false,true,true': [0.031, 0, 2], 'false,false,true,false': [0.031, 11, 0], 'false,false,false,true': [1.535, 11, 3], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.691, 1, 10], 'true,false': [0.045, 23, 0], 'false,true': [0.065, 0, 3], 'false,false,true,true': [1.887, 4, 34], 'false,false,true,false': [4.59e-08, 61, 0], 'false,false,false,true': [1.821, 11, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true': [0.008, 0, 2], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.147, 2, 4], 'false,false,true,false': [3.251, 93, 37], 'false,false,false,true': [0.669, 7, 1], 'false,false,false,false': [1.861, 13, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), enzyme(A, L)'}, {'true,true': [0.043, 0, 3], 'true,false': [0.01, 0, 2], 'false,true,true,true': [0.041, 0, 11], 'false,true,true,false': [1.364, 2, 30], 'false,true,false': [0.009, 76, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.687, 10, 1], 'false,false,false,false': [1.803, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.885, 1, 3], 'false,true': [2.541, 87, 41], 'false,false,true,true': [0.221, 0, 2], 'false,false,true,false': [0.012, 3, 0], 'false,false,false,true': [1.875, 12, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'enzyme(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'enzyme(A, I), interaction(A, J)'}, {'true,true,true': [0.887, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [1.916, 41, 9], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.003, 0, 2], 'false,false,true': [2.219, 57, 33], 'false,false,false,true': [0.283, 3, 1], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.051, 0, 4], 'false,true': [2.421, 85, 41], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.476, 8, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'enzyme(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.042, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.013, 0, 3], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.446, 85, 41], 'false,false,false,true': [1.515, 8, 4], 'false,false,false,false': [0.905, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,false': 'enzyme(A, I), interaction(G, J)'}, {'true,true': [0.037, 0, 2], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.002, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.095, 96, 47]}]]
[{'': [0.1388888888888887, 0.20628099173553818], 'false': [0.21058607266436108, 0.18311533888228312], 'false,true': [0.06353305785124083, 7.723290606088045e-17], 'false,false': [0.25, 0.1728395061728397], 'false,false,false': [0.15419501133786834, 0.22222222222222224], 'true': [0.0, 0.15999999999999998], 'false,true,true': [0.10937499999999967, 0.03443877551020513], 'true,true': [0.0, nan]}, {'': [0.1369538082180759, 0.16607633521382445], 'false': [0.1630083586470484, 0.17280742531816565], 'false,false': [0.12693870355121775, 0.19881045380847678], 'false,false,false': [0.1683673469387754, 0.25], 'false,true': [0.0227801051203011, -2.140188963132832e-17], 'true': [0.21398663682746819, 7.401486830834377e-17], 'false,false,true': [0.0004705644289023647, 8.8757992113679e-05], 'false,true,true': [0.0, 0.02385487972205249]}, {'': [0.11123497168593238, 0.13206281621165916], 'false': [0.0014226255809164368, 0.12897087681905123], 'false,false': [0.11617318416507749, 0.20720525672897952], 'false,false,false': [0.20720525672897952, nan], 'false,false,true': [0.09370634225847575, 3.45807171604557e-17], 'true': [0.04048038429061762, 8.978180628991057e-05], 'true,true': [0.0, 0.04334750299153392], 'true,true,false': [nan, 0.043347502991533886]}, {'': [0.0010056411688751155, 0.09917003549648977], 'false': [0.0, 0.0983572189567906], 'false,false': [0.08775989265262087, 0.15351759102863724], 'false,false,false': [0.05594882214318606, 0.19249550593849193], 'false,false,true': [0.219362078855365, 0.08129256473601594], 'true': [3.485869909167216e-05, 0.001652775359688848], 'true,false': [0.0, 0.0], 'false,true': [nan, 0.0]}, {'': [0.0004961566507473592, 0.08746926350622608], 'false': [0.07425052430283323, 0.1433730398705529], 'false,false': [0.0, 0.14442441805544284], 'false,false,false': [0.042867497224694955, 0.20318206216086318], 'false,true': [0.043761901314042194, 1.1658934108953117e-06], 'false,true,true': [0.00015251992620278867, 0.058163725713827524], 'true': [0.0006113187994837103, 4.9461622329327604e-05], 'false,false,true': [nan, 0.0]}, {'': [0.14491203787390305, 0.06965943010223039], 'true': [6.879394344613821e-06, 0.19567149284924598], 'false': [0.0504449497282812, 0.180492965029586], 'false,false': [0.08851459974945115, 0.20682406079115734], 'false,false,false': [0.20682406079115734, nan], 'false,false,true': [0.024363377848880596, 4.74137930465505e-05], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.08218767423593269, 0.06479963836856895], 'true': [0.11243865878111436, 0.07339801799652551], 'true,true': [0.11243865878111436, nan], 'false': [4.179673000079265e-06, 0.06514702288680113], 'false,false': [0.05469657374930193, 0.12624105322577328], 'false,false,false': [0.020058569450038952, 0.17283950617283952], 'false,true': [nan, 4.179673000079265e-06]}, {'': [0.0006704446571358491, 0.06529030996114878], 'false': [0.04652030454029798, 0.1882276768433324], 'false,false': [0.18159090240188003, 0.20142882726255149], 'false,false,false': [0.0, 0.24000000000000007], 'false,false,true': [nan, 0.18159090240188003], 'true': [0.0, 0.0006431541725759465], 'true,true': [0.0, nan]}, {'': [0.0004817873358156366, 0.06425810941184829], 'false': [0.022349952485373026, 0.0648442276734288], 'false,false': [0.04748819053463185, 0.1859424601852195], 'false,false,false': [0.1912756585678533, 0.16388726719788052], 'false,true': [0.0, 0.0], 'true': [0.0008976359021907326, 5.386200858692458e-05], 'true,true': [0.0008976359021907326, nan], 'false,true,true': [0.0, nan]}, {'': [0.0003560035099192116, 0.06666353236883733], 'false': [0.0, 0.06700365196613857], 'true': [0.0006974846073678383, 4.2431122791064535e-05], 'true,false': [0.0, 1.8745938771061454e-06], 'false,true': [nan, 0.0], 'true,false,true': [nan, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), interaction(H, E).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), enzyme(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
7;false,false,false;enzyme(A, I).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.7470378239884012;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7304083623374575;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6147838259508212;  // std dev = 2.096, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8012433862288051;  // std dev = 0.061, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1555325621642444;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0665658717468251;  // std dev = 1.484, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.2580193346218546;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.6331225519476189;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5817777179793802;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12091400055213407;  // std dev = 0.022, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.46101101230514896;  // std dev = 2.084, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.12622036225920003;  // std dev = 0.873, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4445666922685785;  // std dev = 1.060, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.08204398976255307;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.04671896789388441;  // std dev = 0.688, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4553380969959103;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02433162717004879;  // std dev = 1.895, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.18723361752352313;  // std dev = 1.474, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.07187430587566422;  // std dev = 2.395, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3853725575923293;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3560543904224588;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.19581358286696096;  // std dev = 1.561, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.32738218041749156;  // std dev = 1.890, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | else if ( phenotype(A, I), location(A, J) )
%   | | | then return -0.11070572359937123;  // std dev = 0.080, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.10514867225034034;  // std dev = 0.045, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.45153983084654914;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.15045849202641207;  // std dev = 1.433, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.04443383037835233;  // std dev = 0.876, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.3102498505065788;  // std dev = 0.000311, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.02157122285360019;  // std dev = 0.896, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.08932900769018803;  // std dev = 0.000554, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1100263770993132;  // std dev = 1.909, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | else return -0.025296354420167533;  // std dev = 0.251, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4383429862201639;  // std dev = 0.134, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1578342682850825;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.406415532464176;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23618605703769271;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then return 0.017852135383309972;  // std dev = 0.184, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.28107944276196967;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24997208590182732;  // std dev = 0.849, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.14177643758516711;  // std dev = 0.217, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.24181919182331002;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.17151853744662637;  // std dev = 0.882, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.08448422699246778;  // std dev = 1.080, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.07036750849001928;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.026610759728016797;  // std dev = 1.510, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24545663926986205;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.19083070806275212;  // std dev = 1.262, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return -0.1239673721875089;  // std dev = 0.765, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( location(A, G) )
%   | | | then return 0.043234417944828546;  // std dev = 1.770, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return -0.09423937701493193;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.04265485472250917;  // std dev = 1.013, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.01145804784222779;  // std dev = 1.007, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.010122833918854296;  // std dev = 0.345, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05580321741497914;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.24339213147648248;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17670413215765712;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2681864057932961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.0756051831178172;  // std dev = 0.983, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.05994079267061305;  // std dev = 1.410, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.2951944072057339;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.02020673680252079;  // std dev = 2.497, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.2017421906647493;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then return 0.1754098552805201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1410386582582786;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return -0.21188499896268997;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.04344448791907448;  // std dev = 1.558, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | | else return -0.01637696822833543;  // std dev = 1.929, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.08252402348362832;  // std dev = 1.519, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.06970997050204478;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */


Results
   AUC ROC   = 0.976306
   AUC PR    = 0.153644
   CLL	      = -0.175568
   Precision = 0.083264 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.153257


Total learning time: 7.347 seconds
Total inference time: 13.007 seconds
AUC ROC: 0.976306


Results scoring model
   AUC ROC   = 0.988147
   AUC PR    = 0.342894
   CLL	      = -0.164165
   Precision = 0.200837 at threshold = 0.5
   Recall    = 0.90566
   F1        = 0.328767


Total scoring time: 5.722 seconds
Refined model CLL: -0.164165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976306
   AUC PR    = 0.153644
   CLL	      = -0.175568
   Precision = 0.083264 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.153257


Total learning time: 21.166000000000004 seconds
Total inference time: 13.007 seconds
AUC ROC: 0.976306
Total revision time: 21.166000000000004
Best scored revision CLL: -0.164165


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:31:06
{'AUC ROC': 0.976306, 'AUC PR': 0.153644, 'CLL': -0.175568, 'Precision': [0.083264, 0.5], 'Recall': 0.961538, 'F1': 0.153257, 'Learning time': 21.166000000000004, 'Inference time': 13.007, 'parameter_0.2': {'AUC ROC': 0.969716, 'AUC PR': 0.129141, 'CLL': -0.198202, 'Precision': [0.078582, 0.5], 'Recall': 0.980769, 'F1': 0.145506, 'Learning time': 3.027, 'Inference time': 11.625}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7547006592374428;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return 0.786720363670941;  // std dev = 1.927, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06403128804068885;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6280701409318342;  // std dev = 0.942, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.6447685450832903;  // std dev = 2.514, 77.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5945127769489441;  // std dev = 1.720, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.15243629209455897;  // std dev = 0.031, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5768227737294375;  // std dev = 0.099, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5859719722151355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27621346175782424;  // std dev = 3.356, 69.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=38 */
%   | else return -0.11738225899297616;  // std dev = 0.082, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.49563194968142527;  // std dev = 2.119, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | | | else return -0.11231637819360624;  // std dev = 5.87e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.2630039957948454;  // std dev = 1.569, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4406230851886903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5204158775769325;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.35185131966895716;  // std dev = 0.830, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.0410867667919367;  // std dev = 4.352, 258.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=67 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.08743114546904689;  // std dev = 2.417, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3582600845066809;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3756896509792431;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.40598813858345656;  // std dev = 1.343, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.40520553748550975;  // std dev = 1.658, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | else return -0.11029761988919087;  // std dev = 0.222, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3364272041351165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38952933815185486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.10303005857691888;  // std dev = 2.338, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2808119823313105;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1473088872820103;  // std dev = 0.945, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.016054556530940352;  // std dev = 4.084, 262.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=78 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3346408019083387;  // std dev = 1.848, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.14221080458671193;  // std dev = 0.030, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2607725261764312;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( function(A, F) )
%   | | | then return -0.10497903811392162;  // std dev = 0.440, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.016328841993005678;  // std dev = 2.740, 111.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=23 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.046920227752419844;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.04386575594128518;  // std dev = 3.102, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.10764574282874738;  // std dev = 1.339, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.06874926903187209;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19762255849196375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2645571582457588;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then return 0.02874869154150012;  // std dev = 3.576, 254.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22350685367563705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.01524951532702545;  // std dev = 1.891, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( function(A, J) )
%   | | | then return 0.12845148803303855;  // std dev = 1.054, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16994135064036808;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2096528215653747;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.18711707712295766;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.24663375147475158;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.023888264604248872;  // std dev = 3.645, 243.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=77 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.003342150750164674;  // std dev = 1.846, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.21001756298480284;  // std dev = 0.868, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14729398784618852;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.18587461152079332;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17572759240454158;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24816333839264015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.16030376321023143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1602738147814099;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.008091450529806886;  // std dev = 4.414, 295.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=88 */


Results
   AUC ROC   = 0.970961
   AUC PR    = 0.124009
   CLL	      = -0.202197
   Precision = 0.0777 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.143781


Total learning time: 18.69 seconds
Total inference time: 54.544 seconds
AUC ROC: 0.970961


Results scoring model
   AUC ROC   = 0.983866
   AUC PR    = 0.272688
   CLL	      = -0.170807
   Precision = 0.163097 at threshold = 0.5
   Recall    = 0.933962
   F1        = 0.2777


Total scoring time: 58.613 seconds
Parameter learned model CLL: -0.170807


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 6], 'false,true,true,true': [1.64, 3, 26], 'false,true,true,false': [1.927, 4, 52], 'false,true,false': [0.0, 163, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [2.358, 27, 7], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [5.16e-08, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.942, 1, 8], 'false,true,true,false': [2.514, 7, 70], 'false,true,false': [0.0, 167, 0], 'false,false,true,true': [1.72, 4, 13], 'false,false,true,false': [0.031, 26, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.099, 0, 19], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [3.356, 31, 38], 'true,false': [0.082, 86, 0], 'false,true': [0.0, 0, 2], 'false,false,true,true': [2.119, 5, 46], 'false,false,true,false': [5.87e-08, 76, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.569, 3, 15], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.004, 0, 2], 'false,false,true,true': [0.83, 2, 10], 'false,false,true,false': [4.352, 191, 67], 'false,false,false,true': [2.417, 27, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.067, 0, 9], 'true,false': [0.079, 0, 6], 'false,true,true,true': [1.343, 2, 28], 'false,true,true,false': [1.658, 3, 50], 'false,true,false': [0.222, 166, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.338, 23, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.06, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.945, 1, 6], 'true,false': [0.0, 0, 0], 'false,true': [4.084, 184, 78], 'false,false,true,true': [1.848, 5, 13], 'false,false,true,false': [0.03, 29, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.201, 0, 19], 'true,true,false,true': [0.44, 1, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.74, 88, 23], 'false,true,true': [0.922, 1, 4], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.102, 107, 54], 'false,false,false,true': [1.339, 4, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.943, 1, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.075, 0, 6], 'false,true': [3.576, 176, 78], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.891, 26, 7], 'false,false,false,true': [1.054, 6, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.08, 0, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.071, 0, 2], 'false,false,true': [3.645, 166, 77], 'false,false,false,true': [1.846, 24, 7], 'false,false,false,false': [0.868, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.0, 0, 8], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.07, 0, 6], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 1], 'false,false': [4.414, 207, 88]}]]
[{'': [-2.3684757858670006e-16, 0.2129177319211105], 'false': [0.2155957336108224, 0.19748263888888837], 'false,true': [0.07557093425605518, -1.5801947344358056e-16], 'false,false': [0.0, 0.1819470699432887], 'false,false,false': [0.1634948096885815, 0.22222222222222207], 'false,true,true': [0.09274673008323524, 0.06632653061224492], 'true': [-2.9605947323337506e-16, -1.4802973661668753e-16], 'true,true': [-2.220446049250313e-16, 0.0]}, {'': [1.7763568394002506e-16, 0.16698329355400857], 'false': [0.16099139634687284, 0.20219490361681802], 'false,false': [0.20219490361681802, nan], 'false,false,true': [0.1740220566605235, 3.748334291896728e-05], 'false,true': [0.08381147414380193, -2.659216825449477e-18], 'false,true,true': [0.09861591381130541, 0.08205190450674599], 'true': [2.4223047810003414e-16, 0.0]}, {'': [0.1256461822134764, 0.12498630958076125], 'true': [0.14242973830496833, 7.723585195944206e-05], 'true,true': [0.000519667227771648, 0.16222036124581624], 'true,true,false': [0.0, 0.1632006619054344], 'false': [0.0, 0.12417333767270318], 'false,false': [0.12417333767270318, nan], 'false,false,true': [0.08803730598428905, 4.5285412846552437e-17]}, {'': [0.13677763809073548, 0.08737397826033651], 'true': [0.13677763809073548, nan], 'false': [0.00141951839886445, 0.08638666435074964], 'false,false': [0.07678618538152118, 0.1536728007460587], 'false,false,false': [0.1536728007460587, nan], 'false,false,true': [0.05741700089774091, 0.07339487291309915], 'false,true': [0.0, 6.981025925667517e-06]}, {'': [0.0007926757637393145, 0.08777495391641661], 'false': [0.07760193756704489, 0.15541402167994967], 'false,false': [0.0007049591592829252, 0.1607604951462588], 'false,false,false': [0.1607604951462588, nan], 'false,true': [0.05485444774524646, 0.0002972745331599185], 'false,true,true': [0.060094591147501604, 0.051888107465606494], 'true': [0.0004990591339209476, 0.0010508268360142996], 'false,false,true': [0.0, 0.0]}, {'': [0.0604645047565494, 0.07327854241555352], 'false': [0.06365997976211961, 0.126393818484025], 'false,false': [0.126393818484025, nan], 'false,false,true': [0.18967599663611107, 3.0668060919773036e-05], 'true': [0.0604645047565494, nan], 'true,true': [0.000399650874138698, 0.12766526499440084], 'true,true,false': [nan, 0.12766526499440084]}, {'': [0.06831518643705076, 0.07027860194954112], 'false': [0.17017621438892666, 0.06734043391326469], 'false,true': [0.17017621438892666, nan], 'true': [0.022647587323970726, 0.06761736385773974], 'false,false': [0.059751318159364304, 0.19924875438143574], 'false,false,false': [0.19924875438143574, nan], 'true,true': [0.002123316776821561, 0.09659435138684205], 'true,true,false': [0.09659435138684205, nan]}, {'': [0.06468777379982657, 0.059145539931401134], 'true': [0.09038363811515275, 0.0009488761688365988], 'true,true': [0.09876543209876548, 0.0], 'false': [0.05034537777880467, 0.10880676621703225], 'false,false': [0.10675815486021292, 0.10102424188598337], 'false,false,true': [0.0, 0.10831664446970415], 'false,false,false': [0.10102424188598337, nan], 'true,true,false': [nan, 0.0]}, {'': [0.0008163975718696944, 0.06277210394784463], 'false': [0.0024759050025506637, 0.0629910301355773], 'false,false': [0.054671477034681656, 0.1159267698500926], 'false,false,false': [0.10992938543426659, 0.10764039125983434], 'false,true': [0.0, 0.002533112661860168], 'true': [0.0, 0.0009083562093441046], 'false,true,true': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.0005512839718839239, 0.06571618910709731], 'false': [0.001715986023194523, 0.06603544596759124], 'false,true': [0.0, 2.242270986940742e-10], 'true': [0.0, 0.0007050537994109136], 'true,false': [0.0007050537994109136, nan], 'true,false,true': [0.0, 0.000807853909272895], 'false,true,false': [0.0, 0.0], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6081489350995123;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | else return 0.7984474425621992;  // std dev = 1.939, 67.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | | else return -0.14185106490048816;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.00966408661466381;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7251239146986216;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5443356231566908;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.6354974682694434;  // std dev = 1.327, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.7215700213907614;  // std dev = 1.004, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.25255727397538064;  // std dev = 1.956, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.41461979295475554;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.15458117970763313;  // std dev = 0.088, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5689314129596189;  // std dev = 0.078, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2380060159913123;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.2767467152121302;  // std dev = 0.550, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.27171564371279666;  // std dev = 3.465, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | else return -0.12316491762897366;  // std dev = 0.170, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6545705631638903;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.30941921861009647;  // std dev = 2.726, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | else return 0.49377990679030437;  // std dev = 0.643, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.11231637819360629;  // std dev = 3.65e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.43106554376166256;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5139434063231667;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.22934651658545507;  // std dev = 0.527, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5524851440410662;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4755247487871061;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.09437252997093712;  // std dev = 3.292, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.053081395764687046;  // std dev = 2.549, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.0066496780775936295;  // std dev = 3.083, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3259106115809632;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.3776869101370583;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.11055738786219702;  // std dev = 0.964, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.4491254076262376;  // std dev = 1.038, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.3424225622455878;  // std dev = 2.333, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | else return -0.12094192619849813;  // std dev = 0.292, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.505998390506598;  // std dev = 0.040, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.29689942471373326;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0014703068634714753;  // std dev = 1.985, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2590481749430597;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32858779590946813;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.36768529972036934;  // std dev = 0.191, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.11629601016289023;  // std dev = 0.482, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.021402844515431257;  // std dev = 2.797, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
%   | | | else return -0.1162998909518104;  // std dev = 1.206, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.3275096077007978;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.07445525383606906;  // std dev = 1.958, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.12666893707608307;  // std dev = 0.083, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16512181256464395;  // std dev = 0.239, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0.3429202599771126;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.11149323388849759;  // std dev = 0.067, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.08717029450529835;  // std dev = 1.260, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.021099270979735525;  // std dev = 2.196, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   else if ( interaction(I, A) )
%   | then if ( phenotype(A, J), location(I, K) )
%   | | then if ( location(A, K), interaction(I, I) )
%   | | | then return -0.1672444511316095;  // std dev = 0.745, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.010615423945813619;  // std dev = 2.176, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.07234770411311225;  // std dev = 0.223, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | else return 0.45701286536457036;  // std dev = 0.671, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2127664823981433;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2533592737447068;  // std dev = 1.309, 40.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=35 */
%   | | | else return -0.11207752050973721;  // std dev = 0.522, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.039810100805027775;  // std dev = 2.357, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | | else return 0.08360993796388418;  // std dev = 0.768, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.27027501826394307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.016240018101256453;  // std dev = 2.111, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.40143788169909883;  // std dev = 0.202, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.010107424642792507;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14853764159807392;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.18055843536953425;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2620943676769956;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H) )
%   | | then return 0.2203715082949671;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0790288977675908;  // std dev = 0.352, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), complex(I, L) )
%   | | | then return 0.038879499343004206;  // std dev = 0.865, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return -0.07454629965149706;  // std dev = 1.451, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.018965910252267702;  // std dev = 1.913, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.022778176382037784;  // std dev = 3.079, 196.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=63 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.130714673248027;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18087510290199935;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.0569473937145335;  // std dev = 0.278, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( function(A, G), interaction(E, H) )
%   | | | then return -0.3151570465610236;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.160725446209655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.21359034587116335;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.013121457253011046;  // std dev = 3.012, 220.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=67 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07561128295455348;  // std dev = 1.397, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | | else return -0.008063719198624525;  // std dev = 2.044, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */


Results
   AUC ROC   = 0.980306
   AUC PR    = 0.193696
   CLL	      = -0.191112
   Precision = 0.080645 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.14881


Total learning time: 61.031 seconds
Total inference time: 90.958 seconds
AUC ROC: 0.980306


Results scoring model
   AUC ROC   = 0.989592
   AUC PR    = 0.428081
   CLL	      = -0.160755
   Precision = 0.179963 at threshold = 0.5
   Recall    = 0.915094
   F1        = 0.300775


Total scoring time: 116.455 seconds
Refined model CLL: -0.160755


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.980306
   AUC PR    = 0.193696
   CLL	      = -0.191112
   Precision = 0.080645 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.14881


Total learning time: 254.789 seconds
Total inference time: 90.958 seconds
AUC ROC: 0.980306
Total revision time: 254.789
Best scored revision CLL: -0.160755


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:37:47
{'AUC ROC': 0.980306, 'AUC PR': 0.193696, 'CLL': -0.191112, 'Precision': [0.080645, 0.5], 'Recall': 0.961538, 'F1': 0.14881, 'Learning time': 254.789, 'Inference time': 90.958, 'parameter_0.4': {'AUC ROC': 0.970961, 'AUC PR': 0.124009, 'CLL': -0.202197, 'Precision': [0.0777, 0.5], 'Recall': 0.961538, 'F1': 0.143781, 'Learning time': 18.69, 'Inference time': 54.544}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | else return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.22400259363609892;  // std dev = 6.168, 164.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=60 */
%   | | | else return 0.1604745164948612;  // std dev = 3.012, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5194734122109544;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.737867194699831;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6715085856425721;  // std dev = 1.686, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return -0.12544463852839138;  // std dev = 2.98e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5639127462138012;  // std dev = 4.468, 104.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=77 */
%   | | | else return -0.16940814940673277;  // std dev = 0.041, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.337470359539106;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.564824538156481;  // std dev = 0.064, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5934108111126738;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.36279294888231656;  // std dev = 5.512, 162.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=102 */
%   | else return -0.13157430800659276;  // std dev = 0.239, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5797092488971517;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5820319281494992;  // std dev = 0.068, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.11231637819360629;  // std dev = 3.65e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.7861806538629108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.35471019463043374;  // std dev = 1.332, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.41160566438034996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.44332391695807455;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43265617281393687;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.0011295802610281672;  // std dev = 3.501, 230.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=45 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.12296832120562856;  // std dev = 5.825, 195.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=72 */
%   | | | else return 0.626182574518569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3345640763775538;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.38219718663003255;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.38943374731944086;  // std dev = 1.164, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return 0.3766896763005718;  // std dev = 1.382, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.11247896850815056;  // std dev = 0.370, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.341010033288042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.341010033288042;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.07598482524325217;  // std dev = 5.899, 214.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=72 */
%   | | | else return -0.19421576392963627;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.26328666477295154;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18030240505355616;  // std dev = 0.941, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2929717696511557;  // std dev = 0.062, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G) )
%   | then return 0.006819826812800482;  // std dev = 3.090, 245.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=60 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.24842662009305855;  // std dev = 5.163, 118.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=77 */
%   | | | else return -0.15572228570722718;  // std dev = 0.036, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.14570205045191834;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19314342556437006;  // std dev = 0.593, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else if ( location(A, F) )
%   | | | then return 0.21463180809641724;  // std dev = 0.487, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015095322246367712;  // std dev = 5.657, 331.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=94 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H) )
%   | | then return 0.10840161148842521;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.03476315245403262;  // std dev = 1.694, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.025178775195655027;  // std dev = 2.314, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.057151559043854494;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18419937731800984;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18957100233687407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.23400318891607017;  // std dev = 0.139, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, G) )
%   | then return -0.0013194167010400978;  // std dev = 3.267, 233.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=60 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.015227175538339272;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0390079068115469;  // std dev = 5.038, 180.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=62 */
%   | | else if ( location(A, J) )
%   | | | then return 0.032736488135362396;  // std dev = 2.292, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.12365867078537611;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1575608595912871;  // std dev = 0.026, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.208470312872783;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( location(E, G), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09189395794778371;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.011442533137630382;  // std dev = 2.917, 222.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=58 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04350400617416768;  // std dev = 4.935, 173.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=60 */
%   | | | else return 0.018360420126889078;  // std dev = 2.465, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13776418933714218;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, E), location(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.18269732756542156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17495543206166436;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2692473260808787;  // std dev = 0.634, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), location(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054363141955220275;  // std dev = 0.433, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, J), interaction(K, G) )
%   | | | then return 0.02322831579660452;  // std dev = 0.904, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.016239359779736055;  // std dev = 6.315, 450.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=131 */


Results
   AUC ROC   = 0.956988
   AUC PR    = 0.135412
   CLL	      = -0.239772
   Precision = 0.107209 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.179845


Total learning time: 27.621 seconds
Total inference time: 45.698 seconds
AUC ROC: 0.956988


Results scoring model
   AUC ROC   = 0.96794
   AUC PR    = 0.227597
   CLL	      = -0.202532
   Precision = 0.255132 at threshold = 0.5
   Recall    = 0.54717
   F1        = 0.348


Total scoring time: 89.049 seconds
Parameter learned model CLL: -0.202532


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 12], 'false,true,true,true': [1.867, 4, 27], 'false,true,true,false': [2.23e-07, 0, 33], 'false,true,false': [0.0, 173, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [6.168, 104, 60], 'false,false,false,false': [3.012, 30, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'location(A, G)', 'false,false,true': 'location(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 13], 'true,false': [1.265, 2, 8], 'false,true,true,true': [0.037, 0, 11], 'false,true,true,false': [1.686, 3, 49], 'false,true,false': [2.98e-08, 160, 0], 'false,false,true,true': [4.468, 27, 77], 'false,false,true,false': [0.041, 122, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), location(A, D)', 'true': 'location(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.064, 0, 24], 'true,true,false,true': [0.031, 0, 9], 'true,true,false,false': [5.512, 60, 102], 'true,false': [0.239, 189, 0], 'false,true': [0.049, 0, 4], 'false,false,true,true': [0.068, 0, 19], 'false,false,true,false': [3.65e-08, 57, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true': [1.332, 2, 20], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.026, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.047, 0, 13], 'false,false,true,false': [3.501, 185, 45], 'false,false,false,true': [5.825, 123, 72], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), location(A, L)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.126, 0, 10], 'false,true,true,true': [1.164, 1, 34], 'false,true,true,false': [1.382, 2, 26], 'false,true,false': [0.37, 173, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 4], 'false,false,false,true': [5.899, 142, 72], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.031, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.941, 1, 7], 'true,false': [0.062, 0, 2], 'false,true': [3.09, 185, 60], 'false,false,true,true': [5.163, 41, 77], 'false,false,true,false': [0.036, 121, 0], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'location(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'location(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.593, 3, 23], 'true,true,false,true': [0.487, 1, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.657, 237, 94], 'false,true,true': [0.898, 1, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.694, 49, 20], 'false,false,false,true': [2.314, 30, 12], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true,true': [7.45e-09, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.139, 0, 12], 'false,true': [3.267, 173, 60], 'false,false,true,true': [0.988, 1, 3], 'false,false,true,false': [5.038, 118, 62], 'false,false,false,true': [2.292, 27, 12], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'location(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.026, 0, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.087, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.927, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.917, 164, 58], 'false,false,false,true': [4.935, 113, 60], 'false,false,false,false': [2.465, 27, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'location(A, E), location(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), location(A, I)', 'false,true,false': 'location(A, J), interaction(K, G)'}, {'true,true': [0.024, 0, 12], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.076, 0, 7], 'true,false,false': [0.634, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.433, 1, 2], 'false,true,false,true': [0.904, 1, 5], 'false,true,false,false': [0.0, 0, 0], 'false,false': [6.315, 319, 131]}]]
[{'': [0.0, 0.21288584878051245], 'false': [0.1890722640602474, 0.23255606977572116], 'false,false': [0.0, 0.22829004177460385], 'false,false,false': [0.2320047590719811, 0.2109248242293126], 'false,true': [0.058593749999999445, -1.8225626531418756e-16], 'false,true,true': [0.11238293444328941, 1.5072118637335459e-15], 'true': [-2.9605947323337506e-16, -1.4802973661668753e-16], 'true,true': [-2.220446049250313e-16, 0.0]}, {'': [0.07939508506616284, 0.185476803896584], 'false': [0.14544399215874845, 0.22244124104976754], 'false,false': [0.22194557304263637, 0.25], 'false,false,false': [nan, 0.25], 'false,false,true': [0.19199405773429004, 1.3447104248226391e-05], 'false,true': [0.04577704844512132, 5.551115123125783e-18], 'true': [1.3664283380001927e-16, 0.15999999999999992], 'false,true,true': [0.00012687421284321684, 0.0546649571036223]}, {'': [0.15260642211112407, 0.10347090768396221], 'true': [0.16203309822545647, 0.0003023796515005568], 'true,true': [0.00017003697007515287, 0.1803126091092946], 'true,true,false': [0.00010455272724198118, 0.18752497840878102], 'false': [0.0005925725034123808, 0.09601989996842973], 'false,false': [0.09045871654199161, 0.0], 'false,false,true': [0.0002451882768133485, 2.337311630789803e-17], 'false,false,false': [0.0, nan]}, {'': [0.0773010335826633, 0.11392047288125562], 'false': [9.457513430035012e-05, 0.11354160223283], 'false,false': [0.05989308424011379, 0.17437236960455363], 'false,false,false': [0.17397462471755015, 0.0], 'true': [0.08067397368915316, 0.0], 'false,false,true': [0.00017306964831418872, 0.053306433280287814], 'false,true': [9.457513430035012e-05, nan], 'true,false': [0.0, nan]}, {'': [0.001406673597682825, 0.11179924401120112], 'false': [0.06262155624861376, 0.16232633528421436], 'false,false': [2.2204460492503132e-17, 0.1644397195077982], 'false,false,false': [0.16262035227938457, 0.22222222222222218], 'false,true': [0.05189005504217432, 0.0007899253920908651], 'false,true,true': [0.03874451379775429, 0.06823175307206943], 'true': [0.00015675610891867237, 0.0015931044964866635], 'false,false,true': [0.0, 0.0]}, {'': [0.0422903746235307, 0.09628206339242576], 'false': [0.03898146825660039, 0.1536891110552086], 'false,false': [0.15238361115913748, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.22593701513679249, 1.0799727472512252e-05], 'true': [0.04596737085152007, 0.0019260990783401266], 'true,true': [8.146039696476277e-05, 0.11066440411664749], 'true,true,false': [nan, 0.11066440411664749]}, {'': [0.09277096866887356, 0.0797875283420131], 'true': [0.019689932991785453, 0.09667471667201948], 'false': [0.11514073469281794, 0.07725340203937277], 'false,true': [0.11514073469281794, nan], 'false,false': [0.04159629855048967, 0.13312985275221234], 'false,false,false': [0.1275181413312201, 0.25], 'true,true': [0.013541396354642906, 0.05925523729388102], 'true,true,false': [0.05925523729388102, nan]}, {'': [0.0015127493862170382, 0.09408223756550627], 'false': [0.045803748498667106, 0.143173669895332], 'false,false': [0.14325170601922055, 0.14259856226361184], 'false,false,true': [0.24397724092298181, 0.14100106681696545], 'false,false,false': [0.1347265620770157, 0.2222222222222222], 'true': [2.849812873431359e-06, 0.0016074632049910647], 'true,true': [6.938893903907228e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0010298894885342404, 0.09015179141837765], 'false': [0.10738616488089511, 0.08975361601623703], 'false,true': [0.10738616488089511, nan], 'false,true,true': [nan, 0.1073861648808951], 'false,false': [0.03833467005700423, 0.14296373231823017], 'false,false,false': [0.1407733307265789, 0.15192374227234823], 'true': [5.795773226386728e-05, 0.0008447856777971231], 'true,true': [5.795773226386728e-05, nan]}, {'': [0.033636317443849366, 0.0890896038991265], 'false': [0.1117773586961582, 0.08862993467129178], 'false,true': [0.0624877831910215, 0.13609902064875082], 'false,true,false': [0.13609902064875082, nan], 'false,true,true': [nan, 0.0624877831910215], 'true': [4.640772485637462e-05, 0.07253242123250778], 'true,false': [0.0007338828548264856, 0.20118515899105], 'true,false,true': [0.0, 0.0008312311444099481]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), location(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;location(A, G).;true;true
1;false,false,true;location(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), location(A, D).;true;true
2;true;location(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;location(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
3;false,false,false;location(A, J), interaction(K, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;location(A, D), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;location(A, H).;true;true
5;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), location(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;location(A, E), location(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1418510649004882;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.18247325942383796;  // std dev = 6.367, 185.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=60 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776211;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return -0.12544463852839136;  // std dev = 2.63e-09, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5005539491316983;  // std dev = 4.995, 114.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=77 */
%   | | | else return -0.16773488890626573;  // std dev = 0.056, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return 0.33445375461232985;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3553664367462845;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5849228963481937;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3385387079173125;  // std dev = 5.753, 172.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=102 */
%   | else return -0.13456928304646423;  // std dev = 0.036, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.11231637819360628;  // std dev = 4.08e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return 0.7829724125795249;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.466522527999248;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.4289393664562283;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.20363071648756728;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.4372493631116775;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0641551520641992;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, K) )
%   | | then return 0.01712434255127787;  // std dev = 0.235, 252.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=58 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.11510898996254572;  // std dev = 5.979, 213.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=72 */
%   | | | else return 0.6224829660294054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.33039719861841294;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.29551036869156705;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.33225379783759584;  // std dev = 1.378, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.43494103094058173;  // std dev = 0.212, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.11049181180164379;  // std dev = 0.019, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.35873124798318645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2789807136866106;  // std dev = 0.661, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.1854096747627889;  // std dev = 2.232, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.06570294447588683;  // std dev = 5.593, 200.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=61 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.23961242791653253;  // std dev = 0.182, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.31019671221582906;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return -0.10364934402112999;  // std dev = 1.101, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.013458544865711256;  // std dev = 1.073, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.07979840467847907;  // std dev = 1.520, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.014911998704777848;  // std dev = 2.110, 122.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.29830406277004906;  // std dev = 4.951, 114.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=77 */
%   | | | else return -0.15277365985978902;  // std dev = 0.061, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else return 0.45311679635005664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(C, E) )
%   | then return 0.04600111720127618;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.24009642594704916;  // std dev = 0.048, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), interaction(F, F) )
%   | | then return -0.09512528488204386;  // std dev = 0.159, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( enzyme(A, H), phenotype(F, I) )
%   | | | then return 0.053973862613041;  // std dev = 0.594, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.018456140701610852;  // std dev = 1.011, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), location(K, M) )
%   | | | then return 0.028205699983189413;  // std dev = 3.276, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.16850354972264078;  // std dev = 1.958, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.04614085557254167;  // std dev = 4.331, 161.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=54 */
%   | | | else return -0.001063821367660501;  // std dev = 2.342, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1887789073497334;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2368666687289009;  // std dev = 0.585, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return -0.04440292590659725;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.25270785075501856;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then return -3.601732439454085E-4;  // std dev = 0.186, 250.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=60 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), complex(J, K) )
%   | | | then return 0.01931043229239857;  // std dev = 3.915, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.17985662855110304;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13224543673856634;  // std dev = 2.914, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   | | | else return -0.001218174877121233;  // std dev = 2.178, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1666998854344041;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.22322105462339983;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09440273356220846;  // std dev = 0.017, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( recursion_proteinclass(F, B), interaction(G, A) )
%   | | | then return 0.2978858660818177;  // std dev = 0.470, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.012610103851972147;  // std dev = 2.284, 151.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=34 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return -0.025466160838966852;  // std dev = 1.424, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.11064022815178061;  // std dev = 3.517, 89.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=40 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.006358219210795347;  // std dev = 4.211, 130.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=42 */
%   | | | else return 0.23384207081940458;  // std dev = 0.368, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.08893192280613046;  // std dev = 0.243, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.01943323299727942;  // std dev = 0.771, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.11209062831894798;  // std dev = 1.886, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( location(A, I) )
%   | | | then return 0.031664799575823244;  // std dev = 1.589, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.22285590505698094;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4084330109986618;  // std dev = 0.443, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1697176318014813;  // std dev = 0.615, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.028750489174715073;  // std dev = 2.014, 134.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=26 */
%   | | | else return 0.014041289076593482;  // std dev = 4.935, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */


Results
   AUC ROC   = 0.943578
   AUC PR    = 0.123681
   CLL	      = -0.252023
   Precision = 0.052187 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.09666


Total learning time: 47.832 seconds
Total inference time: 51.132 seconds
AUC ROC: 0.943578


Results scoring model
   AUC ROC   = 0.973534
   AUC PR    = 0.275841
   CLL	      = -0.199975
   Precision = 0.161721 at threshold = 0.5
   Recall    = 0.685535
   F1        = 0.261705


Total scoring time: 123.854 seconds
Refined model CLL: -0.199975


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.943578
   AUC PR    = 0.123681
   CLL	      = -0.252023
   Precision = 0.052187 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.09666


Total learning time: 288.356 seconds
Total inference time: 51.132 seconds
AUC ROC: 0.943578
Total revision time: 288.356
Best scored revision CLL: -0.199975


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:44:13
{'AUC ROC': 0.943578, 'AUC PR': 0.123681, 'CLL': -0.252023, 'Precision': [0.052187, 0.5], 'Recall': 0.653846, 'F1': 0.09666, 'Learning time': 288.356, 'Inference time': 51.132, 'parameter_0.6': {'AUC ROC': 0.956988, 'AUC PR': 0.135412, 'CLL': -0.239772, 'Precision': [0.107209, 0.5], 'Recall': 0.557692, 'F1': 0.179845, 'Learning time': 27.621, 'Inference time': 45.698}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7929315437951642;  // std dev = 1.675, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | | else return 0.821111898062474;  // std dev = 1.963, 108.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=104 */
%   | | else return -0.14185106490048754;  // std dev = 2.33e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17698951480965672;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6759951513413889;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.49937152935622797;  // std dev = 1.453, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6057090140496748;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.6715297200540286;  // std dev = 2.747, 141.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=133 */
%   | | else return -0.1254446385283922;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7089549226699117;  // std dev = 1.335, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.16831927362675397;  // std dev = 0.049, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2126594690598523;  // std dev = 2.799, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.09039195948110414;  // std dev = 1.667, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5788726213719905;  // std dev = 0.066, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.583542430488837;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5071492696620812;  // std dev = 1.986, 47.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=40 */
%   | else return -0.12380530943827449;  // std dev = 0.432, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4395131379267368;  // std dev = 1.610, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5621098832768076;  // std dev = 1.380, 116.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=114 */
%   | | | else return -0.11231637819360696;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.12362707049579053;  // std dev = 3.337, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4572795244911015;  // std dev = 0.170, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4566944690482354;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.07431332097316987;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.5205391864020029;  // std dev = 0.284, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5040073672393921;  // std dev = 0.232, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3218986769661186;  // std dev = 1.284, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.03624300301290627;  // std dev = 5.476, 451.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=124 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.0664403120023706;  // std dev = 2.372, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.10728458312474029;  // std dev = 3.072, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2836726094010017;  // std dev = 0.922, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.3184051604481022;  // std dev = 1.028, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.28492647172174895;  // std dev = 2.509, 56.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | | | else return 0.377049376275235;  // std dev = 2.180, 103.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=98 */
%   | | else return -0.10616261306074755;  // std dev = 0.195, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.19670201485702943;  // std dev = 1.018, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4740483412153089;  // std dev = 0.173, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.04591209406640498;  // std dev = 2.361, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.03766945751538406;  // std dev = 3.184, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.16942311065656251;  // std dev = 0.934, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30146014449857605;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2643285426986829;  // std dev = 0.891, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(G, A) )
%   | then return 0.010588434752459654;  // std dev = 4.990, 546.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=147 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4707954049834593;  // std dev = 1.006, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1437128385020769;  // std dev = 0.039, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09367047318142752;  // std dev = 3.192, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.17838333544413784;  // std dev = 1.725, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.5439466857925943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5736906469151276;  // std dev = 0.204, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.016116408220649754;  // std dev = 4.079, 251.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=53 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.2609317497209618;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.18960672570362194;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then return 0.0345787925724961;  // std dev = 4.040, 309.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=102 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.09289620617898194;  // std dev = 0.730, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14302885051942146;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19620605605426916;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14633847048382995;  // std dev = 1.336, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(F, A) )
%   | then return 0.017643986233700396;  // std dev = 4.729, 507.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=147 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.23397261279144346;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.0075023681650492995;  // std dev = 3.357, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.17104339007084624;  // std dev = 1.310, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11319251330670428;  // std dev = 1.408, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17624714704487832;  // std dev = 0.071, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.19087771866835412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21948915631835497;  // std dev = 0.154, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.2093461224520633;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.28377021281633824;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.264348806062827;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.01088775304173506;  // std dev = 4.688, 507.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=141 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.039083369700114244;  // std dev = 3.531, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | | else return 0.02606055629728263;  // std dev = 1.690, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.10636197131199385;  // std dev = 0.952, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return -0.8110417177910796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.18369282630922112;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.18473967478223244;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19498539574250143;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J), interaction(G, K) )
%   | | | then return 0.17397066794170524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03303070191467809;  // std dev = 0.938, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.01925248269403415;  // std dev = 5.960, 569.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=169 */


Results
   AUC ROC   = 0.970461
   AUC PR    = 0.115651
   CLL	      = -0.19307
   Precision = 0.079721 at threshold = 0.5
   Recall    = 0.990385
   F1        = 0.147564


Total learning time: 8.522 seconds
Total inference time: 20.846 seconds
AUC ROC: 0.970461


Results scoring model
   AUC ROC   = 0.983548
   AUC PR    = 0.269191
   CLL	      = -0.163301
   Precision = 0.175066 at threshold = 0.5
   Recall    = 0.933962
   F1        = 0.294862


Total scoring time: 25.806 seconds
Parameter learned model CLL: -0.163301


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 21], 'false,true,true,true': [1.675, 3, 43], 'false,true,true,false': [1.963, 4, 104], 'false,true,false': [2.33e-07, 353, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.871, 47, 22], 'false,false,false,false': [1.732, 6, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.978, 1, 22], 'true,false': [1.453, 3, 10], 'false,true,true,true': [1.324, 2, 14], 'false,true,true,false': [2.747, 8, 133], 'false,true,false': [0.0, 356, 0], 'false,false,true,true': [1.335, 2, 16], 'false,false,true,false': [0.049, 30, 0], 'false,false,false,true': [2.799, 21, 13], 'false,false,false,false': [1.667, 10, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.066, 0, 19], 'true,true,false,true': [0.018, 0, 4], 'true,true,false,false': [1.986, 7, 40], 'true,false': [0.432, 117, 0], 'false,true': [1.61, 3, 18], 'false,false,true,true': [1.38, 2, 114], 'false,false,true,false': [0.0, 273, 0], 'false,false,false,true': [3.337, 35, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.17, 0, 21], 'true,false,true': [0.0, 0, 8], 'true,false,false': [1.047, 2, 3], 'false,true,true': [0.284, 0, 6], 'false,true,false': [0.232, 0, 5], 'false,false,true,true': [1.284, 4, 17], 'false,false,true,false': [5.476, 327, 124], 'false,false,false,true': [2.372, 34, 14], 'false,false,false,false': [3.072, 29, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.922, 1, 19], 'true,false': [1.028, 1, 13], 'false,true,true,true': [2.509, 7, 49], 'false,true,true,false': [2.18, 5, 98], 'false,true,false': [0.195, 346, 0], 'false,false,true,true': [1.018, 1, 3], 'false,false,true,false': [0.173, 0, 2], 'false,false,false,true': [2.361, 37, 14], 'false,false,false,false': [3.184, 37, 14]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.934, 1, 10], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.891, 1, 20], 'false,true': [4.99, 399, 147], 'false,false,true,true': [1.006, 1, 16], 'false,false,true,false': [0.039, 32, 0], 'false,false,false,true': [3.192, 31, 17], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [1.725, 4, 36], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.204, 0, 3], 'true,false': [4.079, 198, 53], 'false,true,true': [0.006, 0, 8], 'false,true,false': [1.149, 3, 3], 'false,false,true': [4.04, 207, 102], 'false,false,false,true': [0.73, 4, 3], 'false,false,false,false': [1.409, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.014, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [1.336, 2, 21], 'false,true': [4.729, 360, 147], 'false,false,true,true': [0.745, 1, 3], 'false,false,true,false': [3.357, 65, 23], 'false,false,false,true': [1.31, 10, 3], 'false,false,false,false': [1.408, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'phenotype(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.071, 0, 19], 'true,true,false': [0.0, 0, 1], 'true,false': [0.154, 0, 12], 'false,true,true,true': [0.015, 0, 3], 'false,true,true,false': [0.04, 0, 3], 'false,true,false': [0.158, 0, 5], 'false,false,true': [4.688, 366, 141], 'false,false,false,true': [3.531, 77, 22], 'false,false,false,false': [1.69, 11, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(G, K)'}, {'true,true': [0.952, 1, 20], 'true,false,true,true': [0.0, 1, 0], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.137, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.034, 0, 6], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.938, 1, 4], 'false,false': [5.96, 400, 169]}]]
[{'': [1.4432899320127035e-15, 0.21120293847566823], 'false': [0.2058751444277187, 0.23543400713436533], 'false,false': [0.1388888888888887, 0.22618503276939622], 'false,false,false': [0.21718126444024455, 0.25], 'false,true': [0.04338842975207159, 1.534812566620613e-16], 'false,true,true': [0.06096408317580449, 0.035665294924556515], 'true': [-1.6148698540002277e-16, -3.383536836952858e-16], 'true,true': [-1.6148698540002277e-16, nan]}, {'': [0.09243661115573026, 0.16230079098350927], 'false': [0.1508882176025407, 0.22097225177748192], 'false,false': [0.21756775906657466, 0.22424325384333552], 'false,false,false': [0.23048675804984237, 0.19849133931841337], 'false,false,true': [0.099039501724139, 8.095766405031845e-05], 'false,true': [0.05963874693365025, -1.197543936674326e-16], 'true': [0.04158790170132352, 0.16246899615390434], 'false,true,true': [0.10964219338187103, 0.05352308204308119]}, {'': [0.12295710524646049, 0.11931753751559146], 'true': [0.05755779680031102, 0.0015914076074287447], 'false': [0.12346242746455353, 0.11365937120185611], 'false,false': [0.10008506323683458, 0.21413560205658186], 'false,false,false': [0.21413560205658186, nan], 'false,false,true': [0.01641603768698656, -9.76020241428709e-17], 'true,true': [0.0002297333927946691, 0.07774255991341793], 'true,true,false': [8.32595703024741e-05, 0.0838941432450945]}, {'': [0.05147948853129398, 0.08862183538862026], 'false': [0.012262416497522991, 0.08609167594223392], 'false,false': [0.07048219801045985, 0.16592050790337723], 'false,false,false': [0.11721717558261457, 0.2194070599920842], 'false,false,true': [0.07845560251551345, 0.0664804595559798], 'true': [0.0013684570863495996, 0.11896218686651297], 'true,false': [-8.326672684688674e-17, 0.21932301360480772], 'false,true': [0.013417800698508323, 0.010726882159163153]}, {'': [0.05635944333276453, 0.08285722253741931], 'false': [0.06638723866249112, 0.15954761638984158], 'false,false': [0.19466770924611332, 0.15408245208683452], 'false,false,true': [0.2588761524370323, 0.014970166367986398], 'false,false,false': [0.10930057954724963, 0.1988303540977628], 'false,true': [0.0713989783513396, 0.00010943394515468266], 'false,true,true': [0.11238867730199202, 0.04612431518575505], 'true': [0.042474980766358875, 0.07548477214900162]}, {'': [0.051167089170834, 0.0633264001500697], 'false': [0.045596909413818505, 0.15885916283755427], 'false,false': [0.10623618306393931, 0.2122829440910117], 'false,false,false': [0.2122829440910117, nan], 'false,false,true': [0.05951286364980952, 4.6793802725656614e-05], 'true': [0.06935448413793079, 0.03778082426937172], 'true,true': [0.0792822706054739, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07530861355817944, 0.06191890285251002], 'true': [0.09097457160941716, 0.0662920572363996], 'true,true': [0.07438771170054773, 0.24463195126842996], 'true,true,false': [0.0, 0.013897633159065522], 'false': [0.1439731713801386, 0.05834951212684134], 'false,true': [4.351707732080934e-06, 0.2199402159883521], 'false,false': [0.05282055598771924, 0.15801078371433877], 'false,false,false': [0.07617376082619724, 0.22056224062872934]}, {'': [0.05304996246853796, 0.0622476164807838], 'false': [0.044103278711805, 0.14239896114307599], 'false,false': [0.13094691195056643, 0.18759681244388313], 'false,false,false': [0.13201174899693832, 0.2201467742614109], 'false,false,true': [0.13881703587777738, 0.12805395441748246], 'true': [1.7648993486491467e-05, 0.07760869762038082], 'true,true': [1.7648993486491467e-05, nan]}, {'': [0.0013301139434310702, 0.06030490786397849], 'false': [0.0032656436267998394, 0.06021647046299158], 'false,false': [0.04334009990181132, 0.13264800041612793], 'false,false,false': [0.1259384072108685, 0.16809970880223346], 'false,true': [0.0016906446862403797, 0.004983002274181336], 'false,true,true': [7.191445636641387e-05, 0.0005399023028394567], 'true': [0.0002590889942991004, 0.0019856924198860537], 'true,true': [0.0002620225758554561, 0.0]}, {'': [0.054095524413911245, 0.06300922358306242], 'false': [0.07964973869057476, 0.062424015443710984], 'false,true': [0.00018760426464082178, 0.14952563661408272], 'false,true,false': [0.0, 0.17612008493294934], 'true': [0.04311592246986223, 0.07183018736201824], 'true,false': [0.2198881807169851, 0.0018806177072404895], 'true,false,true': [0.0, 0.0], 'false,true,true': [nan, 0.00018760426464082178]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;phenotype(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;phenotype(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8126943896449668;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.7018989350995116;  // std dev = 2.054, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.8030308248632899;  // std dev = 2.572, 127.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=120 */
%   | | else return -0.14185106490048766;  // std dev = 1.84e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.7232974077295843;  // std dev = 0.020, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.5946166022772511;  // std dev = 0.341, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.4613253176601465;  // std dev = 1.893, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.6975681723411866;  // std dev = 2.204, 139.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=134 */
%   | | else return -0.1254446385283922;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.778319754022543;  // std dev = 0.967, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.16240771287629766;  // std dev = 0.048, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5419529315187496;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1535771557629374;  // std dev = 3.072, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5274998199373929;  // std dev = 0.251, 71.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=63 */
%   | else return -0.13072089694309177;  // std dev = 0.054, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5725787880547715;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.02550128387777059;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.45407271244919917;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5321387265627967;  // std dev = 2.343, 120.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=114 */
%   | | | else return -0.1123163781936067;  // std dev = 0.000, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.0817569182944656;  // std dev = 1.912, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.27360124774462924;  // std dev = 2.431, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4303067116716152;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5149789959207903;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.431113082242523;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5003587135379642;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10083833449617055;  // std dev = 0.005, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.33898890794127257;  // std dev = 1.177, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.04337630689350781;  // std dev = 4.933, 383.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=104 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5568680783663451;  // std dev = 0.260, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.05780977897457097;  // std dev = 4.515, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3281167356428523;  // std dev = 0.054, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.2179467285999962;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.4375420268059726;  // std dev = 0.132, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.33436374046690526;  // std dev = 3.280, 131.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=118 */
%   | | else return -0.10528918399990797;  // std dev = 0.167, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5991678899513203;  // std dev = 0.324, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.19053039050425094;  // std dev = 0.344, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09101436037141664;  // std dev = 3.200, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return -0.04535717550193524;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23107547694301478;  // std dev = 0.219, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.04838973137331548;  // std dev = 1.529, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.009208907572870701;  // std dev = 1.833, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08359547613125867;  // std dev = 0.003, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.03278942634492227;  // std dev = 4.384, 385.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=121 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2873332781689998;  // std dev = 1.719, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.1294668005835014;  // std dev = 0.066, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( location(A, J) )
%   | | | then return 0.04195321783173727;  // std dev = 2.866, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.05665278739562641;  // std dev = 1.414, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.25746049392048864;  // std dev = 0.186, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.28747341464820847;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.09161216377983754;  // std dev = 0.109, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.01790389948975136;  // std dev = 3.725, 164.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=48 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2853466362723761;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3468845256664488;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14771440707416045;  // std dev = 0.947, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.0026107284651065033;  // std dev = 1.790, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.04559141530061507;  // std dev = 3.618, 224.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=77 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.17423495478577578;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1317488315024927;  // std dev = 0.258, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, E) )
%   | | then return -0.06640448444558496;  // std dev = 0.152, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( location(E, F), location(A, F) )
%   | | | then return 0.0550009532790186;  // std dev = 1.436, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.02765210859268219;  // std dev = 1.515, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.18019854151530174;  // std dev = 4.137, 223.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=148 */
%   | | | else return -0.12188565525620335;  // std dev = 0.878, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.006239761599266657;  // std dev = 0.379, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1638790431743854;  // std dev = 1.218, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1572043757599038;  // std dev = 0.014, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.20689244017794728;  // std dev = 0.038, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.19946825990767206;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3253184706188645;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10501123705487246;  // std dev = 0.706, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return -0.06555967293233626;  // std dev = 0.938, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return -0.03469708230807523;  // std dev = 1.427, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.0018796493117307664;  // std dev = 3.677, 283.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=83 */
%   | | | else return 0.039073954444383135;  // std dev = 3.913, 219.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=73 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.1334450441612662;  // std dev = 0.010, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.11339355750816738;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.17523666661565848;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.1893196752066257;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.24409070533472402;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, H), interaction(J, A) )
%   | | | then return -0.019821121167132354;  // std dev = 0.815, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return -0.0670971024535181;  // std dev = 2.505, 85.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=17 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.03827552560580731;  // std dev = 2.316, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | | | else return 0.018118577510067194;  // std dev = 4.563, 399.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=125 */


Results
   AUC ROC   = 0.978239
   AUC PR    = 0.152165
   CLL	      = -0.180919
   Precision = 0.086093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.158537


Total learning time: 20.017 seconds
Total inference time: 22.724 seconds
AUC ROC: 0.978239


Results scoring model
   AUC ROC   = 0.98974
   AUC PR    = 0.373377
   CLL	      = -0.150519
   Precision = 0.192456 at threshold = 0.5
   Recall    = 0.938679
   F1        = 0.319422


Total scoring time: 30.586 seconds
Refined model CLL: -0.150519


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978239
   AUC PR    = 0.152165
   CLL	      = -0.180919
   Precision = 0.086093 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.158537


Total learning time: 84.931 seconds
Total inference time: 22.724 seconds
AUC ROC: 0.978239
Total revision time: 84.931
Best scored revision CLL: -0.150519


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:46:22
{'AUC ROC': 0.978239, 'AUC PR': 0.152165, 'CLL': -0.180919, 'Precision': [0.086093, 0.5], 'Recall': 1.0, 'F1': 0.158537, 'Learning time': 84.931, 'Inference time': 22.724, 'parameter_0.8': {'AUC ROC': 0.970461, 'AUC PR': 0.115651, 'CLL': -0.19307, 'Precision': [0.079721, 0.5], 'Recall': 0.990385, 'F1': 0.147564, 'Learning time': 8.522, 'Inference time': 20.846}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7781489350995122;  // std dev = 1.918, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.8581489350995125;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #pos=60 */
%   | | else return -0.14185106490048807;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17041659309207713;  // std dev = 7.601, 269.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=84 */
%   | | | else return 0.20143251718906383;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6858976925751838;  // std dev = 0.974, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6627867205773588;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7305751289884227;  // std dev = 0.033, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.7139948679360189;  // std dev = 0.987, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5189513117119487;  // std dev = 5.998, 171.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=118 */
%   | | | else return -0.16469581209888107;  // std dev = 0.022, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5393671994031206;  // std dev = 0.942, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.46998011977000054;  // std dev = 1.340, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.3185260727716659;  // std dev = 7.343, 280.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=161 */
%   | else return -0.12884693328346408;  // std dev = 0.282, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3294187696870353;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5659947412752049;  // std dev = 0.059, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.11231637819360614;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4528808060577901;  // std dev = 0.193, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.49004760794377233;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2527172345879346;  // std dev = 0.984, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.38143133215865244;  // std dev = 0.828, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.014612058215566185;  // std dev = 4.529, 363.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=80 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.09299951864802464;  // std dev = 7.491, 346.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.28594624275986164;  // std dev = 0.967, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.31688710175533696;  // std dev = 0.958, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.41828485286259065;  // std dev = 0.526, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | | else return 0.384197138464138;  // std dev = 1.625, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.11122663926783316;  // std dev = 0.314, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3884589358108754;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.420223679349237;  // std dev = 0.135, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.0850149269905017;  // std dev = 7.376, 339.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=107 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27085737390798115;  // std dev = 0.079, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.29323107487183864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29903581025124765;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.6835473562650142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G) )
%   | then return 0.003613303764749929;  // std dev = 4.092, 427.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=106 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.30823177882028474;  // std dev = 6.092, 172.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=118 */
%   | | | else return -0.1494358218448221;  // std dev = 0.021, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2026775110463851;  // std dev = 1.087, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else if ( function(A, F) )
%   | | | then return 0.2029712518219555;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015141621426679425;  // std dev = 6.914, 500.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=136 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.2527284876223736;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.024986742196567244;  // std dev = 2.644, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.05039786305741567;  // std dev = 3.108, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.13543735185748837;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17438039405812622;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.057105533109888064;  // std dev = 1.680, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   else if ( interaction(A, G) )
%   | then return 0.002257053127205455;  // std dev = 4.015, 413.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.16274446174047058;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.03891800307735399;  // std dev = 6.107, 282.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=89 */
%   | | else if ( function(A, J) )
%   | | | then return 0.11139952882032639;  // std dev = 2.761, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17062309819676624;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.2940397387664816;  // std dev = 0.700, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.15032954500812573;  // std dev = 0.781, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.18360662487407922;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2235883421314803;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.16114557028519103;  // std dev = 0.571, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.001226397671353551;  // std dev = 3.964, 411.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.036270992797407545;  // std dev = 6.084, 262.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=84 */
%   | | | else return 0.019261838574086334;  // std dev = 3.065, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15187691236087272;  // std dev = 0.124, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return -0.1532094371692018;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.17630009795037502;  // std dev = 0.100, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0.16402522432845645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10406652385994088;  // std dev = 0.441, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return -0.026028219250471874;  // std dev = 1.270, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2484146624714806;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.011954851296912246;  // std dev = 7.836, 755.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=209 */


Results
   AUC ROC   = 0.957998
   AUC PR    = 0.128966
   CLL	      = -0.218373
   Precision = 0.103757 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.174962


Total learning time: 43.376 seconds
Total inference time: 52.942 seconds
AUC ROC: 0.957998


Results scoring model
   AUC ROC   = 0.972287
   AUC PR    = 0.318316
   CLL	      = -0.195079
   Precision = 0.290381 at threshold = 0.5
   Recall    = 0.603774
   F1        = 0.392157


Total scoring time: 140.223 seconds
Parameter learned model CLL: -0.195079


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 2], 'true,false': [0.975, 1, 19], 'false,true,true,true': [1.918, 4, 46], 'false,true,true,false': [0.0, 0, 60], 'false,true,false': [0.0, 268, 0], 'false,false,true': [0.957, 1, 11], 'false,false,false,true': [7.601, 185, 84], 'false,false,false,false': [3.886, 44, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.974, 1, 27], 'true,false': [0.966, 1, 14], 'false,true,true,true': [0.033, 0, 20], 'false,true,true,false': [0.987, 1, 86], 'false,true,false': [0.0, 288, 0], 'false,false,true,true': [5.998, 53, 118], 'false,false,true,false': [0.022, 170, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [0.942, 2, 49], 'true,true,false,true': [1.34, 2, 13], 'true,true,false,false': [7.343, 119, 161], 'true,false': [0.282, 330, 0], 'false,true': [1.226, 2, 6], 'false,false,true,true': [0.059, 0, 36], 'false,false,true,false': [2.98e-08, 74, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.193, 0, 41], 'true,false': [0.0, 0, 0], 'false,true,true': [0.107, 0, 11], 'false,true,false': [0.984, 2, 4], 'false,false,true,true': [0.828, 2, 22], 'false,false,true,false': [4.529, 283, 80], 'false,false,false,true': [7.491, 239, 107], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.967, 1, 23], 'true,false': [0.958, 1, 18], 'false,true,true,true': [0.526, 0, 54], 'false,true,true,false': [1.625, 3, 52], 'false,true,false': [0.314, 276, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.135, 0, 9], 'false,false,false,true': [7.376, 232, 107], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.079, 0, 26], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.088, 0, 14], 'true,false': [0.0, 1, 0], 'false,true': [4.092, 321, 106], 'false,false,true,true': [6.092, 54, 118], 'false,false,true,false': [0.021, 175, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.087, 3, 48], 'true,true,false,true': [0.893, 2, 6], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.914, 364, 136], 'false,true,true': [0.037, 0, 9], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.644, 98, 43], 'false,false,false,true': [3.108, 50, 23], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.976, 1, 20], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.68, 4, 19], 'false,true': [4.015, 307, 106], 'false,false,true,true': [0.887, 2, 6], 'false,false,true,false': [6.107, 193, 89], 'false,false,false,true': [2.761, 37, 23], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.077, 0, 25], 'true,true,false': [0.7, 1, 1], 'true,false': [0.781, 1, 15], 'false,true,true,true': [0.009, 0, 3], 'false,true,true,false': [0.057, 0, 8], 'false,true,false': [0.571, 1, 4], 'false,false,true': [3.964, 309, 102], 'false,false,false,true': [6.084, 178, 84], 'false,false,false,false': [3.065, 51, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.124, 0, 26], 'true,false,true,true': [0.826, 1, 2], 'true,false,true,false': [0.1, 0, 13], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.441, 1, 3], 'false,true,false,true': [1.27, 2, 8], 'false,true,false,false': [0.046, 0, 3], 'false,false': [7.836, 546, 209]}]]
[{'': [0.023242630385488926, 0.21334304730247836], 'false': [0.20178606421992829, 0.22410490157220503], 'false,false': [0.07638888888888877, 0.21704046201814262], 'false,false,false': [0.21475656776440413, 0.2254399643573189], 'false,true': [0.03504132231405208, -6.296787303844171e-17], 'false,true,true': [0.0736000000000007, -4.736951571734001e-16], 'true': [1.6148698540002277e-16, 0.047499999999999785], 'true,true': [-8.881784197001253e-17, 0.0]}, {'': [0.043898203002518385, 0.18100718677346728], 'false': [0.14268415988495653, 0.22235244965329995], 'false,false': [0.22235244965329995, nan], 'false,false,true': [0.21040039426007268, 2.818081657420551e-06], 'false,true': [0.009154175389374204, -8.018277400070575e-17], 'true': [0.03389544424179095, 0.06222222222222224], 'false,true,true': [5.2820620888827106e-05, 0.01119505673067157]}, {'': [0.1463986936045605, 0.1102489260085796], 'true': [0.1702625543747319, 0.00024035034786349922], 'true,true': [0.017387321120282507, 0.18999569547026013], 'true,true,false': [0.11970786772412276, 0.19259475913487925], 'false': [0.18785959584338507, 0.10133083703237923], 'false,false': [0.10133083703237923, nan], 'false,false,true': [9.616445399461703e-05, 1.200241107702872e-17]}, {'': [0.000911696733143746, 0.11208965591150309], 'false': [0.07053421737775985, 0.11039199829819413], 'false,false': [0.06260850522437243, 0.16220327111831984], 'false,false,false': [0.16220327111831984, nan], 'false,true': [0.0010400351614362985, 0.16149417297301374], 'false,false,true': [0.028549015038812464, 0.05651579065501639], 'true': [0.000911696733143746, nan]}, {'': [0.04332399978175428, 0.1086153569034425], 'false': [0.0611849528219488, 0.1588043216794906], 'false,false': [0.0018011881762355656, 0.16048799117185908], 'false,false,false': [0.16048799117185908, nan], 'false,true': [0.027052893203643284, 0.00035698279570391746], 'true': [0.038982898434386154, 0.048273168729161285], 'false,true,true': [0.00511655459683646, 0.04801473330191202], 'false,false,true': [0.0, 0.0020179978641157417]}, {'': [0.022130935079069883, 0.09440067769747988], 'false': [0.0392165417269639, 0.15930217951431158], 'false,false': [0.15930217951431158, nan], 'false,false,true': [0.21574511575114824, 2.4652189508092956e-06], 'true': [0.000518338030925394, 0.0], 'true,true': [0.00023805796835100286, 0.0005143644211987209], 'true,true,false': [0.0, 0.0005488584068102613]}, {'': [0.09237868405193561, 0.07667705533706981], 'true': [0.0335630333416017, 0.09560534520350061], 'false': [0.00014845138630160804, 0.07795860340294078], 'false,false': [0.049595401336201266, 0.1323168680991496], 'false,false,false': [0.1323168680991496, nan], 'true,true': [0.023175146613324534, 0.09978573665020206], 'true,true,false': [0.09978573665020206, nan], 'false,true': [0.00014845138630160804, nan]}, {'': [0.0837944954184101, 0.08215554924720826], 'true': [0.041528274947575085, 0.122721786215288], 'false': [0.039026133999216936, 0.13158931320542472], 'false,false': [0.13171073777010683, 0.12705009209878595], 'false,false,true': [0.09838414744754646, 0.1322331938706301], 'false,false,false': [0.12705009209878595, nan], 'true,true': [0.0453514739229025, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.035065504249992094, 0.08284788725749104], 'false': [0.0213603131930514, 0.08346551747143745], 'false,false': [0.03823534991171868, 0.1381649421991168], 'false,false,false': [0.1412758420372685, 0.12692508125286173], 'true': [0.03319272381544606, 0.03810052772767346], 'true,true': [0.0002360063789936806, 0.24523358801671763], 'false,true': [0.0006217504456031874, 0.06515899021769161], 'false,true,true': [2.5704625981356106e-05, 0.00040930279663841523]}, {'': [0.023481761945994196, 0.08209317431663316], 'false': [0.11160522508538381, 0.08133764159904287], 'false,true': [0.03947930533585943, 0.13762315361282884], 'false,true,false': [0.16131617917818147, 0.0007087899376664412], 'false,true,true': [0.0, 0.048630122517449664], 'true': [0.0005870574108499713, 0.05982161580239431], 'true,false': [0.05982161580239431, nan], 'true,false,true': [0.22751707828940984, 0.0007645628455154083]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995121;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8164822684328454;  // std dev = 1.384, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return 0.8417554924765617;  // std dev = 0.992, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | | else return -0.14185106490048796;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.18098358076880294;  // std dev = 5.269, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.2993254056877476;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.14312302836376178;  // std dev = 6.271, 193.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.11947341221095438;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6715366543661413;  // std dev = 0.225, 112.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=106 */
%   | | else return -0.1254446385283919;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.8335381935831453;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.33701438407479456;  // std dev = 7.295, 213.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=107 */
%   | | else return -0.16556608883689908;  // std dev = 0.008, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5688947583702401;  // std dev = 0.035, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.2794011454939792;  // std dev = 3.818, 121.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=70 */
%   | | | else return 0.43580202243955596;  // std dev = 6.292, 179.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=118 */
%   | else return -0.13632248696074792;  // std dev = 0.035, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( complex(A, I) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0553664367462845;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.27176410803507534;  // std dev = 2.619, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.14399850257657737;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.11231637819360615;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.4323494019242315;  // std dev = 0.045, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.41422726790148084;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.28036649645961415;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1965010858564351;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5630951968806118;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.06010484170781016;  // std dev = 1.570, 56.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | | else return 0.03776848025495873;  // std dev = 2.000, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.15700683132498927;  // std dev = 3.138, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.07043628173474589;  // std dev = 8.420, 577.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=165 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3161680496164913;  // std dev = 0.002, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.16129513658505393;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3538143109814934;  // std dev = 0.045, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4681896974362762;  // std dev = 0.128, 108.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=106 */
%   | | else return -0.11663586884984618;  // std dev = 0.021, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.11121751394356709;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44664532953077607;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.019093046196705196;  // std dev = 3.195, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return 0.08494314924864355;  // std dev = 6.910, 287.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=89 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.25276466894012983;  // std dev = 0.006, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.2464718924317147;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.5188612129164891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09180526120992286;  // std dev = 0.015, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.10790125270371258;  // std dev = 0.546, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.027997583718654045;  // std dev = 4.243, 356.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=102 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.20109826965802555;  // std dev = 4.949, 101.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=56 */
%   | | | else return 0.2843914889474256;  // std dev = 4.571, 100.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=62 */
%   | | else return -0.14675389524242588;  // std dev = 0.007, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.42814269818877465;  // std dev = 0.150, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.1393390207816736;  // std dev = 0.077, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.22315586822789651;  // std dev = 0.042, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.021089362083560458;  // std dev = 1.514, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
%   | | | else return 0.036376322127582884;  // std dev = 6.569, 376.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=118 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then if ( enzyme(A, K) )
%   | | then return -0.13140871916600494;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2374094091666082;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, L), interaction(M, A) )
%   | | then return 0.12280473248829879;  // std dev = 0.355, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | else return 0.026561785223210017;  // std dev = 0.262, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.1694944071104029;  // std dev = 0.010, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.18744015124245533;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2188197273410976;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), phenotype(F, H) )
%   | | then return -0.06649455449774244;  // std dev = 1.196, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.25907665200650176;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, I) )
%   | | | then return -0.07007024347206925;  // std dev = 1.844, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | | | else return 0.03244362921643506;  // std dev = 2.901, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.026601928083318373;  // std dev = 2.186, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | | else return 0.036439748595926566;  // std dev = 7.220, 479.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=152 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.12042848542547666;  // std dev = 0.158, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.06413603410582805;  // std dev = 0.318, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.1755721943833249;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.04046158217579081;  // std dev = 1.094, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.7261221152128036;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.010409215599234845;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then return -0.005131643809626762;  // std dev = 0.211, 414.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=100 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.003278430839401676;  // std dev = 3.163, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.06126482069107117;  // std dev = 6.173, 255.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=88 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.09936903421185833;  // std dev = 0.190, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.13387273946556788;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.17146205395695785;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20638190174868692;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22164414347672118;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08519958829565322;  // std dev = 0.107, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.003596425273131043;  // std dev = 3.526, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.0037007056362411165;  // std dev = 4.917, 254.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=67 */
%   | | | else return 0.02662396848988365;  // std dev = 5.580, 363.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=109 */


Results
   AUC ROC   = 0.965485
   AUC PR    = 0.159548
   CLL	      = -0.215078
   Precision = 0.133929 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.217391


Total learning time: 162.45 seconds
Total inference time: 65.426 seconds
AUC ROC: 0.965485


Results scoring model
   AUC ROC   = 0.976952
   AUC PR    = 0.300686
   CLL	      = -0.198504
   Precision = 0.319846 at threshold = 0.5
   Recall    = 0.626415
   F1        = 0.423469


Total scoring time: 285.013 seconds
Refined model CLL: -0.198504


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957998
   AUC PR    = 0.128966
   CLL	      = -0.218373
   Precision = 0.103757 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.174962


Total learning time: 631.0619999999999 seconds
Total inference time: 52.942 seconds
AUC ROC: 0.957998
Total revision time: 631.0619999999999
Best scored revision CLL: -0.195079


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 01:58:53
{'AUC ROC': 0.957998, 'AUC PR': 0.128966, 'CLL': -0.218373, 'Precision': [0.103757, 0.5], 'Recall': 0.557692, 'F1': 0.174962, 'Learning time': 631.0619999999999, 'Inference time': 52.942, 'parameter_1.0': {'AUC ROC': 0.957998, 'AUC PR': 0.128966, 'CLL': -0.218373, 'Precision': [0.103757, 0.5], 'Recall': 0.557692, 'F1': 0.174962, 'Learning time': 43.376, 'Inference time': 52.942}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5456489350995123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7529469723680443;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5585089584601949;  // std dev = 2.217, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.776992534714518;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19999981628405664;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.449759200045749;  // std dev = 1.323, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2858355735032413;  // std dev = 2.167, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else return -0.12646135347982004;  // std dev = 0.250, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46352984631647537;  // std dev = 1.612, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.30732680410825886;  // std dev = 1.217, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.477173055975193;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5243573381268691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.21608623434386276;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.01633024281591718;  // std dev = 2.934, 121.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=26 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12816975044356824;  // std dev = 1.459, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.37306396720903273;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3451752037422594;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.37957436604868894;  // std dev = 1.347, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return 0.4376441878507333;  // std dev = 0.918, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.10665489431237604;  // std dev = 0.118, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.2307234920557468;  // std dev = 1.181, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.29017804210015935;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28187554307520435;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2453503643163799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return -0.006657563282326926;  // std dev = 3.001, 144.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=35 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16467188062086757;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.21547437481582515;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.19020701641390506;  // std dev = 1.184, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.031444389890375034;  // std dev = 1.891, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( location(A, G) )
%   | | then return 0.2273237581278038;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.0030503306700177934;  // std dev = 2.177, 92.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=21 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return -0.05311081109757371;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19970208402201528;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.106739506883105;  // std dev = 0.908, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.013119602273577818;  // std dev = 2.710, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1076128667568024;  // std dev = 1.157, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( location(A, I) )
%   | | | then return 0.35630650236164674;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1702440348459076;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16720385740166238;  // std dev = 0.000817, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18239131209290152;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( location(E, G), interaction(A, F) )
%   | | | then return 0.26039068028499224;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3066266870101617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.008369593345008763;  // std dev = 2.689, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12396144987245501;  // std dev = 0.972, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.013031712397196638;  // std dev = 0.585, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.02339210496155804;  // std dev = 0.924, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( location(A, E), location(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.16976058586854414;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.143831969787385;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), location(A, I) )
%   | | | then return -0.7799269932133082;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0.22222470008529285;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01641467336704814;  // std dev = 3.323, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */


Results
   AUC ROC   = 0.978718
   AUC PR    = 0.30521
   CLL	      = -0.176022
   Precision = 0.108723 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.19479


Total learning time: 12.288 seconds
Total inference time: 14.17 seconds
AUC ROC: 0.978718


Results scoring model
   AUC ROC   = 0.974076
   AUC PR    = 0.237256
   CLL	      = -0.180878
   Precision = 0.090598 at threshold = 0.5
   Recall    = 0.963636
   F1        = 0.165625


Total scoring time: 42.646 seconds
Parameter learned model CLL: -0.180878


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 1, 0], 'true,false': [0.0, 0, 10], 'false,true,true,true': [1.854, 5, 11], 'false,true,true,false': [1.03e-07, 0, 24], 'false,true,false': [8.94e-08, 101, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.491, 4, 5], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'location(A, G)', 'false,false,true': 'location(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.077, 0, 7], 'false,true,true,false': [2.217, 6, 28], 'false,true,false': [0.0, 111, 0], 'false,false,true,true': [0.096, 0, 7], 'false,false,true,false': [0.0, 2, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), location(A, D)', 'true': 'location(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.323, 2, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [2.167, 13, 18], 'true,false': [0.25, 56, 0], 'false,true': [0.0, 0, 6], 'false,false,true,true': [1.612, 3, 18], 'false,false,true,false': [4.08e-08, 57, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.217, 2, 12], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.103, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.179, 2, 5], 'false,false,true,false': [2.934, 95, 26], 'false,false,false,true': [1.459, 10, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), location(A, K)'}, {'true,true': [0.073, 0, 8], 'true,false': [0.0, 0, 5], 'false,true,true,true': [1.347, 2, 18], 'false,true,true,false': [0.918, 1, 17], 'false,true,false': [0.118, 84, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.181, 5, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.037, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 5], 'true,false': [0.0, 0, 1], 'false,true': [3.001, 109, 35], 'false,false,true,true': [1.438, 3, 7], 'false,false,true,false': [0.077, 8, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'location(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'location(A, I), interaction(A, J)'}, {'true,true,true': [1.184, 2, 14], 'true,true,false': [0.0, 0, 0], 'true,false': [1.891, 50, 11], 'false,true,true': [0.039, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.177, 71, 21], 'false,false,false,true': [0.846, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.908, 1, 10], 'false,true': [2.71, 98, 35], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.157, 5, 5], 'false,false,false,true': [0.0, 0, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'location(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.017, 0, 5], 'true,true,false': [0.000817, 0, 2], 'true,false': [0.043, 0, 6], 'false,true,true,true': [0.119, 0, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.689, 91, 31], 'false,false,false,true': [0.972, 5, 5], 'false,false,false,false': [0.585, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'location(A, E), location(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), location(A, I)'}, {'true,true': [0.924, 1, 7], 'true,false,true,true': [0.022, 0, 3], 'true,false,true,false': [0.0, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.069, 2, 0], 'false,true,true,false': [0.108, 0, 4], 'false,true,false': [0.0, 0, 0], 'false,false': [3.323, 104, 38]}]]
[{'': [0.06632653061224467, 0.19996537396122008], 'false': [0.18661033147226122, 0.23140495867768587], 'false,false': [nan, 0.23140495867768587], 'false,false,false': [0.2469135802469134, 0.0], 'false,true': [0.10937500000000178, 7.91446116564468e-17], 'false,true,true': [0.21484374999999967, 4.440892098500626e-16], 'true': [0.18750000000000006, -8.881784197001253e-17], 'true,true': [1.4802973661668753e-16, 0.0]}, {'': [1.3664283380001927e-16, 0.1496246787418387], 'false': [0.13512941865262734, 0.16600703309834966], 'false,false': [0.16600703309834966, nan], 'false,false,true': [0.001323379781431885, 0.0], 'false,true': [0.12538990147470888, -6.00120553851436e-18], 'false,true,true': [0.0008403594221927538, 0.1445777472071295], 'true': [0.0, 0.0]}, {'': [0.12019075359187899, 0.1089542063950506], 'true': [0.14605716859296136, 0.0011151743953839047], 'true,true': [0.11666310307625609, 0.15151783547512218], 'true,true,false': [nan, 0.1515178354751223], 'false': [-7.401486830834377e-17, 0.09856335298213141], 'false,false': [0.09856335298213141, nan], 'false,false,true': [0.12377019965025544, 2.921639538487254e-17]}, {'': [0.09955608062435323, 0.0895347215362059], 'true': [0.1058578208071919, 0.0], 'false': [0.003065904518053275, 0.08648664648892813], 'false,false': [0.08015165300655065, 0.12519548815578999], 'false,false,false': [0.12519548815578999, nan], 'false,false,true': [0.19847460275213544, 0.07112435811165072], 'false,true': [0.0035312835701954612, 0.0], 'true,false': [0.0, nan]}, {'': [0.0005915958188211266, 0.08467332234977798], 'false': [0.07875124897898868, 0.11624077839816016], 'false,false': [nan, 0.11624077839816016], 'false,false,false': [0.11624077839816016, nan], 'false,true': [0.07075053147604339, 0.0001645682527398091], 'false,true,true': [0.09072124773554506, 0.04678605505688411], 'true': [0.0006621958487744162, 0.0]}, {'': [0.00040056301751596637, 0.07234562584009248], 'false': [0.06252932258973422, 0.1508710356206067], 'false,false': [0.1508710356206067, nan], 'false,false,true': [0.20675405606396918, 0.0007332736649928728], 'true': [0.0003023019990661217, 0.0], 'true,true': [0.00019967332490657328, 0.000405772107021618], 'true,true,false': [nan, 0.0004057721070216291]}, {'': [0.07273178459295504, 0.056339988313402346], 'true': [0.0876140301042026, 0.05861954953131529], 'true,true': [0.0876140301042026, nan], 'false': [0.0002225197152605734, 0.05694183202204182], 'false,false': [0.0515055401956307, 0.17895388992838474], 'false,false,false': [0.17895388992838474, nan], 'false,true': [0.0002225197152605734, nan]}, {'': [0.060342147889452136, 0.06199717537322615], 'false': [0.0552166797568985, 0.12019678840481628], 'false,false': [0.13392805868738697, 0.0], 'false,false,true': [nan, 0.13392805868738697], 'true': [0.0, 0.07494723143921078], 'false,false,false': [0.0, nan], 'true,true': [0.0, nan]}, {'': [0.00020952253833167027, 0.06367505110928202], 'false': [0.003946359839731087, 0.06356355805284719], 'false,false': [0.05926802486799594, 0.09575297856062033], 'false,false,false': [0.09449965017097528, 0.08548120917141928], 'false,true': [0.004727371040168978, 0.0], 'false,true,true': [0.004727371040168978, nan], 'true': [4.4186998522805733e-05, 0.0003111912740893785], 'true,true': [5.908737767384431e-05, 3.3413715054900206e-07]}, {'': [0.06546435064591612, 0.08411469799775413], 'false': [0.22592559616444052, 0.07775363570129325], 'false,true': [0.22592559616444052, nan], 'false,true,true': [0.002354213927862281, 0.002941948488978538], 'true': [0.10675138536851184, 0.0002454433939770434], 'true,false': [0.0002454433939770434, nan], 'true,false,true': [0.00015474022201202495, -2.3129646346357427e-18]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), location(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(F, H), interaction(H, A).;true;true
0;false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;location(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), location(A, D).;true;true
2;true;location(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;location(A, D), location(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;location(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), location(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(G, H), location(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5109237132780766;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.5535064926913563;  // std dev = 2.218, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( location(G, H), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.14423227775916972;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.8083320024141825;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.19030125048549765;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17446605314889307;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.19665426981165113;  // std dev = 1.631, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.45792127472858046;  // std dev = 1.362, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5829979972534438;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6942870278536697;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12093890398383295;  // std dev = 0.020, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | then if ( complex(A, N), phenotype(A, P) )
%   | | | then return -0.03950665865774967;  // std dev = 0.691, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.17487031156591895;  // std dev = 2.450, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.44827888680648903;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4199660246617397;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.5465741265289249;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.04564539353362209;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( location(I, H), complex(I, J) )
%   | | | then return -0.06760660952231487;  // std dev = 2.152, 74.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=9 */
%   | | | else return 0.12387896984152322;  // std dev = 2.251, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.012126685655447;  // std dev = 1.143, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.37876567736465167;  // std dev = 1.051, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3358638739899036;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.13965489470801046;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.32017780395771367;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.265771938207384;  // std dev = 1.649, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.5213860866497626;  // std dev = 0.225, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.11242458259565392;  // std dev = 0.021, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( enzyme(A, M), enzyme(K, N) )
%   | | | then return -0.15060060936775063;  // std dev = 0.752, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.13213094272499562;  // std dev = 0.967, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.35060663718127505;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27989020622482064;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.12202092151500277;  // std dev = 0.848, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2523031560681084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.05647568217690222;  // std dev = 0.238, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.005990497920404505;  // std dev = 2.323, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
%   | | | else return -0.10535130548216413;  // std dev = 1.320, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | else if ( location(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.09278996294932197;  // std dev = 1.362, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.18821705172304617;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1805617047459124;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2686549994733087;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4157875679648519;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.12758803303308305;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.05886770369345976;  // std dev = 0.944, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.0852832178984663;  // std dev = 1.591, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.24340374591400496;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, L) )
%   | | then if ( interaction(M, A), location(M, L) )
%   | | | then return -0.06729179300585632;  // std dev = 2.198, 71.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=12 */
%   | | | else return 0.048430630574853493;  // std dev = 1.417, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.07440122733924058;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return -0.0026128351472474165;  // std dev = 0.654, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.19848560215430355;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.07493283176939175;  // std dev = 2.650, 67.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=31 */
%   | | | else return -0.09812776682035214;  // std dev = 0.310, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.010836494488054134;  // std dev = 0.379, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2099047385806686;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.21016868674147693;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.16409483193969623;  // std dev = 1.031, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0032350864824133184;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.175691737011621;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.18559412131382946;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1665402582779499;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.13551721160287952;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.344337102408223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return 0.006429919237164021;  // std dev = 1.732, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return -0.12623421593021544;  // std dev = 1.166, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.020422867168025063;  // std dev = 1.928, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.46585112967391606;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15389375154236795;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1264498312882868;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16324162613997317;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), location(A, H) )
%   | | then return 0.23929605029671952;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2712355850152264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3278425798393799;  // std dev = 1.132, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return -0.10644440648072497;  // std dev = 0.509, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.047014558147792186;  // std dev = 1.227, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.003165853370786081;  // std dev = 1.351, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */


Results
   AUC ROC   = 0.972161
   AUC PR    = 0.193142
   CLL	      = -0.183755
   Precision = 0.112565 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.200935


Total learning time: 39.472 seconds
Total inference time: 29.122 seconds
AUC ROC: 0.972161


Results scoring model
   AUC ROC   = 0.988783
   AUC PR    = 0.306658
   CLL	      = -0.168993
   Precision = 0.102857 at threshold = 0.5
   Recall    = 0.981818
   F1        = 0.186207


Total scoring time: 80.60900000000001 seconds
Refined model CLL: -0.168993


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.972161
   AUC PR    = 0.193142
   CLL	      = -0.183755
   Precision = 0.112565 at threshold = 0.5
   Recall    = 0.934783
   F1        = 0.200935


Total learning time: 175.01500000000001 seconds
Total inference time: 29.122 seconds
AUC ROC: 0.972161
Total revision time: 175.01500000000001
Best scored revision CLL: -0.168993


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 02:02:32
{'AUC ROC': 0.972161, 'AUC PR': 0.193142, 'CLL': -0.183755, 'Precision': [0.112565, 0.5], 'Recall': 0.934783, 'F1': 0.200935, 'Learning time': 175.01500000000001, 'Inference time': 29.122, 'parameter_0.2': {'AUC ROC': 0.978718, 'AUC PR': 0.30521, 'CLL': -0.176022, 'Precision': [0.108723, 0.5], 'Recall': 0.934783, 'F1': 0.19479, 'Learning time': 12.288, 'Inference time': 14.17}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.8278459047964812;  // std dev = 0.985, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.6974346493852267;  // std dev = 2.748, 56.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=47 */
%   | | else return -0.14185106490048846;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.26991364098186527;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7373228684706171;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5716315653292457;  // std dev = 1.597, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.6176930794321631;  // std dev = 2.818, 72.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=63 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.596595733006408;  // std dev = 1.311, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.18500120622502075;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18420075709152192;  // std dev = 1.325, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4641150718358009;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5657806263711772;  // std dev = 0.700, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6032983363495996;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4981532134864648;  // std dev = 1.682, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | else return -0.13767481043126684;  // std dev = 0.547, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4628530220013465;  // std dev = 0.952, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4126761109711214;  // std dev = 3.103, 61.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=49 */
%   | | | else return -0.11231637819360611;  // std dev = 8.16e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.08369057231982405;  // std dev = 1.770, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.44282824226738343;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4366542794913946;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4401692067661319;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3436878278424582;  // std dev = 0.819, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.4792648180167424;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3201133614390515;  // std dev = 1.483, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.02232770842609484;  // std dev = 4.202, 252.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=56 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.1848353924334063;  // std dev = 1.516, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.13709764026488674;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.33790268999652273;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.33445003753093144;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.25036773989303057;  // std dev = 2.503, 45.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=36 */
%   | | | else return 0.3738398545913453;  // std dev = 2.293, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | | else return -0.1034812568457748;  // std dev = 0.079, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.5818255346896584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.34702031409842804;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.08195746502329143;  // std dev = 1.673, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.03494420742425067;  // std dev = 1.629, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.28251993411295245;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2502977551834313;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.26332504083417424;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(G, A) )
%   | then return 0.01504717915533447;  // std dev = 4.288, 288.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=79 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3921904754269895;  // std dev = 0.935, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17390558763306055;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14979410673001523;  // std dev = 1.537, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16218115069874767;  // std dev = 1.782, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.44432040616957347;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4009885754773811;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.02416294906737369;  // std dev = 2.664, 115.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=23 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.21606259474500328;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21782524197262415;  // std dev = 0.000839, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.017757594412439202;  // std dev = 3.362, 167.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=46 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.2142352126881756;  // std dev = 0.468, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6226428268448999;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.20805582880413498;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.6316291177703575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.18788732394719657;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(G, A) )
%   | then return 0.020653987483704978;  // std dev = 4.113, 272.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=79 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.32423917268904046;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.019240738616060186;  // std dev = 1.756, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.0892393557590213;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2447135513030154;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16537604905203318;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.17416979674561706;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16307640793824135;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.28299805698972863;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15256377659129852;  // std dev = 0.349, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26014872191832755;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.013903125840571101;  // std dev = 3.827, 283.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=73 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05298080828116714;  // std dev = 1.669, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.02730026161249171;  // std dev = 1.239, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1512714538371105;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return -0.3343762950338609;  // std dev = 0.698, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1638094879526335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1355948553573488;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return -0.7520843202218382;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.2469780868769754;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14766855972202764;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.01789009763970747;  // std dev = 4.318, 297.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=84 */


Results
   AUC ROC   = 0.987964
   AUC PR    = 0.408667
   CLL	      = -0.157027
   Precision = 0.460227 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.604478


Total learning time: 7.495 seconds
Total inference time: 4.632 seconds
AUC ROC: 0.987964


Results scoring model
   AUC ROC   = 0.974708
   AUC PR    = 0.160797
   CLL	      = -0.18157
   Precision = 0.103415 at threshold = 0.5
   Recall    = 0.963636
   F1        = 0.186784


Total scoring time: 24.98 seconds
Parameter learned model CLL: -0.18157


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.866, 1, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 15], 'false,true,true,true': [0.985, 1, 32], 'false,true,true,false': [2.748, 9, 47], 'false,true,false': [0.0, 212, 0], 'false,false,true': [0.0, 0, 2], 'false,false,false,true': [2.029, 10, 7], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.065, 0, 8], 'true,false': [2.98e-08, 0, 10], 'false,true,true,true': [1.597, 3, 16], 'false,true,true,false': [2.818, 9, 63], 'false,true,false': [0.0, 182, 0], 'false,false,true,true': [1.311, 2, 8], 'false,false,true,false': [0.029, 7, 0], 'false,false,false,true': [1.325, 5, 3], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.7, 1, 18], 'true,true,false,true': [0.022, 0, 2], 'true,true,false,false': [1.682, 5, 26], 'true,false': [0.547, 62, 0], 'false,true': [0.952, 1, 10], 'false,false,true,true': [3.103, 12, 49], 'false,false,true,false': [8.16e-08, 132, 0], 'false,false,false,true': [1.77, 11, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.065, 0, 12], 'true,false,true': [0.004, 0, 5], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.819, 2, 6], 'false,true,false': [0.025, 0, 2], 'false,false,true,true': [1.483, 4, 17], 'false,false,true,false': [4.202, 196, 56], 'false,false,false,true': [1.516, 8, 7], 'false,false,false,false': [1.555, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.059, 0, 12], 'true,false': [0.007, 0, 6], 'false,true,true,true': [2.503, 9, 36], 'false,true,true,false': [2.293, 6, 43], 'false,true,false': [0.079, 192, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.673, 10, 7], 'false,false,false,false': [1.629, 9, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.028, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 2], 'true,false': [0.01, 0, 12], 'false,true': [4.288, 209, 79], 'false,false,true,true': [0.935, 1, 8], 'false,false,true,false': [0.022, 6, 0], 'false,false,false,true': [1.537, 6, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [1.782, 6, 28], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [2.664, 92, 23], 'false,true,true': [0.006, 0, 5], 'false,true,false': [0.000839, 0, 2], 'false,false,true': [3.362, 121, 46], 'false,false,false,true': [0.468, 1, 2], 'false,false,false,false': [0.0, 0, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.044, 0, 15], 'false,true': [4.113, 193, 79], 'false,false,true,true': [0.021, 0, 2], 'false,false,true,false': [1.756, 17, 7], 'false,false,false,true': [0.86, 4, 2], 'false,false,false,false': [1.195, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'phenotype(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.026, 0, 8], 'true,true,false': [0.811, 1, 2], 'true,false': [0.036, 0, 8], 'false,true,true,true': [0.043, 0, 4], 'false,true,true,false': [0.349, 1, 2], 'false,true,false': [0.072, 0, 2], 'false,false,true': [3.827, 210, 73], 'false,false,false,true': [1.669, 10, 7], 'false,false,false,false': [1.239, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(G, K)'}, {'true,true': [0.052, 0, 10], 'true,false,true,true': [0.698, 1, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.005, 0, 6], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.079, 0, 6], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.837, 1, 2], 'false,false': [4.318, 213, 84]}]]
[{'': [0.04986149584487499, 0.20219023838247852], 'false': [0.1935740223617846, 0.24999999999999956], 'false,false': [0.0, 0.24826388888888848], 'false,false,false': [0.24221453287197234, 0.24489795918367332], 'false,true': [0.09973488195934872, -2.388026883155997e-16], 'false,true,true': [0.02938475665748541, 0.13488520408163301], 'true': [0.18750000000000006, -2.3684757858670006e-16], 'true,true': [0.18750000000000006, nan]}, {'': [0.00031466971729946874, 0.1680061681220654], 'false': [0.15812137092244416, 0.24394525555414173], 'false,false': [0.24914593001889174, 0.23578506853124254], 'false,false,true': [0.17191734075335177, 0.00012320645608646097], 'false,false,false': [0.2195024021883725, 0.22222222222222224], 'false,true': [0.11566258426803949, -3.660075905357659e-17], 'false,true,true': [0.13430447339044307, 0.11030021226131476], 'true': [0.000531005147942798, 8.881784197001253e-17]}, {'': [0.14189552467842884, 0.12232437592563365], 'true': [0.06511252520823156, 0.004830959162142515], 'false': [0.08235743710249001, 0.11614802877352516], 'false,false': [0.10946608838464113, 0.19591358011412743], 'false,false,false': [0.19591358011412743, nan], 'false,false,true': [0.15783855660351526, 5.0464682937507114e-17], 'true,true': [0.025822389440230308, 0.08636313234256307], 'true,true,false': [0.00024334104212375696, 0.09124921779749073]}, {'': [0.00023994676607371387, 0.09188449626057685], 'false': [0.07010520047629878, 0.08938435124032545], 'false,false': [0.07902844204040141, 0.18916744798391597], 'false,false,false': [0.1531743188171532, 0.2417898059447981], 'false,false,true': [0.10475377538568219, 0.07006341078929318], 'false,true': [0.0838794560278948, 0.00030328205814031395], 'true': [0.00034736612481826395, 4.289831162037257e-06], 'true,false': [3.0886784367023524e-06, 0.0]}, {'': [0.00019635571762267724, 0.09058767837897246], 'false': [0.08015699800056973, 0.1813055935638518], 'false,false': [0.013783372904224073, 0.18233134471348963], 'false,false,false': [0.16473060740762194, 0.20409522054371104], 'false,true': [0.12639894677627453, 3.264241214427412e-05], 'false,true,true': [0.13924368716700772, 0.10730444449531376], 'false,false,true': [0.0, 0.0], 'true': [0.00028587779233391064, 9.364362167973983e-06]}, {'': [0.00015031710066960703, 0.07411194323957736], 'false': [0.06383786257263606, 0.1689104368094683], 'false,false': [0.13517197238648776, 0.21477051684996204], 'false,false,false': [0.21477051684996204, nan], 'false,false,true': [0.09704860919308847, 7.816560933384305e-05], 'true': [0.00038776902697603327, 7.766824470160453e-06], 'true,true': [0.0002007748276398602, 6.957821567098177e-05], 'true,true,false': [nan, 6.957821567098177e-05]}, {'': [0.07620186573744536, 0.07034162795658998], 'true': [0.09176079598892185, 0.0617169552756511], 'true,true': [0.09336163513353953, 0.0004694118877841824], 'false': [5.593563927057994e-06, 0.07181684978328202], 'false,false': [0.06769242720701019, 0.08385136806477847], 'false,false,false': [0.07303356838748896, 0.0], 'true,true,false': [0.0, 0.0], 'false,true': [6.802372174002924e-06, 3.52310988931126e-07]}, {'': [0.03391669301240824, 0.07373336232832542], 'false': [0.062187889081152636, 0.14952841364701003], 'false,false': [0.12705277839963888, 0.17284678603150727], 'false,false,false': [0.12339031791966627, 0.20408163265306126], 'false,false,true': [0.00021647799169684234, 0.12854720475644227], 'true': [0.132200776781964, 0.0001273725923492656], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.04990495749574526, 0.06172812643669633], 'false': [0.01772892732838818, 0.06166413031477186], 'false,false': [0.051754013389522575, 0.172971619846113], 'false,false,false': [0.16387328753299155, 0.19185712248699877], 'true': [0.08264868531213726, 0.00016114846541865138], 'true,true': [8.165902217149856e-05, 0.21897914470469446], 'false,true': [0.021818510995468006, 0.0025657608298867846], 'false,true,true': [0.00045507816729763173, 0.040581315812234446]}, {'': [0.04760928249060509, 0.06624809817335518], 'false': [0.16953439952207378, 0.06276665419156484], 'false,true': [0.1231184092579007, 0.23341258110039131], 'false,true,false': [nan, 0.23341258110039131], 'false,true,true': [0.0, 0.0010487593802066635], 'true': [0.00027498247192303814, 0.09300071558312015], 'true,false': [0.2174209474784047, 3.661082220475509e-06], 'true,false,true': [0.2434017297609849, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
6;false,false;interaction(I, A).;true;true
6;false,false,false;phenotype(A, J), interaction(A, K).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,true;recursion_proteinclass(I, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;phenotype(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,true;interaction(G, H), phenotype(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A), location(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.6581489350995116;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return 0.8389181658687426;  // std dev = 0.990, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7373228684706172;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6285643213018633;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.7506627629851973;  // std dev = 0.081, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.6099545644667023;  // std dev = 2.295, 52.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=46 */
%   | | else return -0.12544463852839166;  // std dev = 0.000, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6915019140922767;  // std dev = 0.963, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.17334456312555768;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.18823241499436646;  // std dev = 1.037, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.39025554341577445;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5473319354462461;  // std dev = 0.157, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.48596876481914464;  // std dev = 0.311, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | else return -0.14242370210535227;  // std dev = 0.076, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), phenotype(A, I) )
%   | | then return 0.23544305843859922;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5871062176565432;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5463840558145504;  // std dev = 1.380, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | | else return -0.11231637819360611;  // std dev = 7.15e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.020280378793942264;  // std dev = 1.442, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.39800751475331914;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22045372865561141;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.46632341587188825;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.2783594093110037;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.43196966108781953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.49101010366114095;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2079705314186437;  // std dev = 0.821, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.03016232843010963;  // std dev = 2.003, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.0013750747364522195;  // std dev = 1.925, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.054182875851426664;  // std dev = 4.205, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.36289263485075507;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3608238147805256;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.27871159840854715;  // std dev = 3.105, 73.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=61 */
%   | | | else return 0.43298751733043594;  // std dev = 0.124, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.10373577036073826;  // std dev = 0.138, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.5702543396381827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32593474795333843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.023494282968141895;  // std dev = 1.789, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.33077815068386524;  // std dev = 1.026, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2321138148024641;  // std dev = 0.219, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.38420725453080146;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.061686206257703956;  // std dev = 1.032, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.03644982868653827;  // std dev = 2.701, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return -0.021333829485139205;  // std dev = 2.643, 96.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=25 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3864616566682683;  // std dev = 1.048, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.15480335855610367;  // std dev = 0.108, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.03803760384077181;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.09903431489671531;  // std dev = 1.007, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.28112189719794195;  // std dev = 0.135, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then return -0.004290795090674686;  // std dev = 0.255, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else return -0.053944564387196275;  // std dev = 0.200, 91.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.23760036728654224;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.27230092473371137;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.01880484712286942;  // std dev = 2.676, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.06884783427608325;  // std dev = 1.224, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.1301428367994354;  // std dev = 0.542, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.007644579952677732;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.1916404767194999;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21423225392907458;  // std dev = 0.034, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25961697130196687;  // std dev = 0.407, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.006392712619878038;  // std dev = 1.463, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.049381219176824885;  // std dev = 1.658, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return 0.012781691794598631;  // std dev = 2.631, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.3628053436060058;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.06741717093577;  // std dev = 1.498, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.2536013297173784;  // std dev = 0.808, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1682836980811509;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.15208144334856524;  // std dev = 0.861, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.09291538509667528;  // std dev = 0.254, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.13319315970155027;  // std dev = 0.177, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2339069117909392;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return -0.02039399657212347;  // std dev = 3.194, 205.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=47 */
%   | | | else return 0.0504609548434782;  // std dev = 1.632, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.013058466606265716;  // std dev = 1.637, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.1028323295614482;  // std dev = 1.403, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.14702190231708454;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.3048957286315221;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.16882314030100948;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then if ( interaction(F, G), phenotype(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03878560165225055;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.2330750741243086;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1247547226326886;  // std dev = 3.300, 137.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=77 */
%   | | | else return -0.12087730580297641;  // std dev = 1.193, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else return 0.06482027955507123;  // std dev = 0.219, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */


Results
   AUC ROC   = 0.991368
   AUC PR    = 0.497622
   CLL	      = -0.148289
   Precision = 0.457627 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.60223


Total learning time: 13.122 seconds
Total inference time: 6.325 seconds
AUC ROC: 0.991368


Results scoring model
   AUC ROC   = 0.982039
   AUC PR    = 0.208088
   CLL	      = -0.174884
   Precision = 0.099442 at threshold = 0.5
   Recall    = 0.972727
   F1        = 0.180438


Total scoring time: 31.198 seconds
Refined model CLL: -0.174884


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991368
   AUC PR    = 0.497622
   CLL	      = -0.148289
   Precision = 0.457627 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.60223


Total learning time: 76.795 seconds
Total inference time: 6.325 seconds
AUC ROC: 0.991368
Total revision time: 76.795
Best scored revision CLL: -0.174884


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 02:04:01
{'AUC ROC': 0.991368, 'AUC PR': 0.497622, 'CLL': -0.148289, 'Precision': [0.457627, 0.5], 'Recall': 0.880435, 'F1': 0.60223, 'Learning time': 76.795, 'Inference time': 6.325, 'parameter_0.4': {'AUC ROC': 0.987964, 'AUC PR': 0.408667, 'CLL': -0.157027, 'Precision': [0.460227, 0.5], 'Recall': 0.880435, 'F1': 0.604478, 'Learning time': 7.495, 'Inference time': 4.632}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.8164822684328455;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7781489350995122;  // std dev = 1.918, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.7717291820130932;  // std dev = 2.529, 81.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=74 */
%   | | else return -0.14185106490048785;  // std dev = 9.88e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15083186192878065;  // std dev = 2.913, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7257225930047225;  // std dev = 0.014, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.6444723199359784;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6155825101903719;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.6111906727365177;  // std dev = 3.501, 112.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=98 */
%   | | else return -0.12544463852839194;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8174439284357649;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1662276521934332;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.32552245932188634;  // std dev = 2.070, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.10874113578563507;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5865660487352337;  // std dev = 0.084, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5840846279154613;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6314441968233672;  // std dev = 0.185, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.13818082959778524;  // std dev = 0.621, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5187810997682378;  // std dev = 0.982, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5540238793719274;  // std dev = 2.183, 104.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=99 */
%   | | | else return -0.11231637819360668;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.34821741419585145;  // std dev = 2.222, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42719852753229365;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.35513223613450345;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4551866540148029;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.44805891986341895;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5330252544471253;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2945204096015292;  // std dev = 1.893, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | | else return 0.03339310928990192;  // std dev = 4.831, 358.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=90 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09630193885325061;  // std dev = 1.336, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2531089142141288;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3345207125259155;  // std dev = 0.069, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.21517511973477568;  // std dev = 1.082, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.284957841311724;  // std dev = 2.459, 58.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=50 */
%   | | | else return 0.3498041133361495;  // std dev = 2.719, 78.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=70 */
%   | | else return -0.10446758939371183;  // std dev = 0.056, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.2874632607464862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4341561086464135;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.09061950513840444;  // std dev = 1.301, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.07378282926644462;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2577967263596035;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2769599452616333;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2302447336948177;  // std dev = 0.957, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(G, A) )
%   | then return 0.011503647462018294;  // std dev = 4.964, 428.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=120 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4572414357394286;  // std dev = 0.247, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.15985021465517543;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.18466852195597455;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.20493606797809558;  // std dev = 1.620, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1607792997587083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.506755457050639;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.058295299244146816;  // std dev = 3.265, 188.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=31 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.23571090771723532;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2640315694310622;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then return 0.022612447288180768;  // std dev = 3.998, 255.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=77 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.012922566145136186;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11617215129660775;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.16869707457225513;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16459626964985472;  // std dev = 0.984, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(F, A) )
%   | then return 0.0012297788425304063;  // std dev = 5.133, 419.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=120 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.16148351534863303;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08596022610469053;  // std dev = 1.849, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.08315399980678148;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.03664719950550334;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16623151781642914;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.05043557364916562;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.06427301357175431;  // std dev = 0.886, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.23153626488351575;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2508564527910393;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24412391040034617;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return -0.00710592475909797;  // std dev = 5.026, 445.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=113 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.03394321071875539;  // std dev = 2.069, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.10169695491448566;  // std dev = 1.221, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.10281090042679979;  // std dev = 0.938, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.15597922933911512;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1731235951498109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19918778447990992;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08753451909773377;  // std dev = 0.943, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, J), interaction(G, K) )
%   | | | then return 0.09919151612555088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19090359301562487;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.009106415434187958;  // std dev = 5.381, 460.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=129 */


Results
   AUC ROC   = 0.983134
   AUC PR    = 0.464695
   CLL	      = -0.181186
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.626016


Total learning time: 6.471 seconds
Total inference time: 4.199 seconds
AUC ROC: 0.983134


Results scoring model
   AUC ROC   = 0.976222
   AUC PR    = 0.199522
   CLL	      = -0.175104
   Precision = 0.122576 at threshold = 0.5
   Recall    = 0.951807
   F1        = 0.217182


Total scoring time: 18.878 seconds
Parameter learned model CLL: -0.175104


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 1, 0], 'true,false': [0.979, 1, 23], 'false,true,true,true': [1.918, 4, 46], 'false,true,true,false': [2.529, 7, 74], 'false,true,false': [9.88e-08, 300, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [2.913, 29, 12], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.014, 0, 16], 'true,false': [0.957, 1, 11], 'false,true,true,true': [1.625, 3, 22], 'false,true,true,false': [3.501, 14, 98], 'false,true,false': [0.0, 279, 0], 'false,false,true,true': [0.109, 0, 7], 'false,false,true,false': [0.027, 6, 0], 'false,false,false,true': [2.07, 9, 9], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.084, 0, 17], 'true,true,false,true': [0.061, 0, 4], 'true,true,false,false': [0.185, 0, 16], 'true,false': [0.621, 86, 0], 'false,true': [0.982, 1, 18], 'false,false,true,true': [2.183, 5, 99], 'false,false,true,false': [0.0, 207, 0], 'false,false,false,true': [2.222, 9, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.057, 0, 13], 'true,false,true': [0.961, 1, 11], 'true,false,false': [1.05e-08, 0, 3], 'false,true,true': [0.066, 0, 7], 'false,true,false': [0.082, 0, 3], 'false,false,true,true': [1.893, 5, 23], 'false,false,true,false': [4.831, 268, 90], 'false,false,false,true': [1.336, 12, 6], 'false,false,false,false': [2.176, 9, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), complex(A, L)'}, {'true,true': [0.069, 0, 17], 'true,false': [1.082, 2, 10], 'false,true,true,true': [2.459, 8, 50], 'false,true,true,false': [2.719, 8, 70], 'false,true,false': [0.056, 283, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [1.301, 11, 6], 'false,false,false,false': [2.449, 15, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.052, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.035, 0, 3], 'true,false': [0.957, 1, 15], 'false,true': [4.964, 308, 120], 'false,false,true,true': [0.247, 0, 7], 'false,false,true,false': [0.048, 12, 0], 'false,false,false,true': [2.268, 9, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true,true': [1.62, 5, 40], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.263, 0, 3], 'true,false': [3.265, 157, 31], 'false,true,true': [0.041, 0, 6], 'false,true,false': [0.018, 0, 4], 'false,false,true': [3.998, 178, 77], 'false,false,false,true': [0.404, 2, 1], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.984, 1, 23], 'false,true': [5.133, 299, 120], 'false,false,true,true': [0.818, 1, 4], 'false,false,true,false': [1.849, 17, 11], 'false,false,false,true': [0.457, 6, 1], 'false,false,false,false': [1.369, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'complex(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.052, 0, 15], 'true,true,false': [0.831, 1, 3], 'true,false': [0.886, 2, 9], 'false,true,true,true': [0.13, 0, 6], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.086, 0, 3], 'false,false,true': [5.026, 332, 113], 'false,false,false,true': [2.069, 22, 12], 'false,false,false,false': [1.221, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(G, K)'}, {'true,true': [0.938, 1, 18], 'true,false,true,true': [0.034, 0, 4], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.047, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.943, 1, 7], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.069, 0, 2], 'false,false': [5.381, 331, 129]}]]
[{'': [0.06420927467300945, 0.20496465757065457], 'false': [0.20090331124401992, 0.23187869822485158], 'false,false': [1.4802973661668753e-16, 0.21990837151186954], 'false,false,false': [0.20701963117192096, 0.24999999999999986], 'false,true': [0.0769185944875047, 3.256654205567126e-17], 'false,true,true': [0.0736000000000007, 0.07895137936290061], 'true': [0.15999999999999986, 0.03993055555555536], 'true,true': [0.0, 0.0]}, {'': [0.034362253814635695, 0.16597933258496977], 'false': [0.15592001348887138, 0.242578891729193], 'false,false': [0.2414481210304117, 0.2388856873200536], 'false,false,true': [0.0017071142306478596, 0.00012531231504736562], 'false,false,false': [0.23814966916027588, 0.2099999999999999], 'false,true': [0.10872984903609434, -7.640244470538712e-17], 'false,true,true': [0.1056601296260839, 0.10941153451040751], 'true': [1.301742019754748e-05, 0.07638888888888899]}, {'': [0.12004482628767302, 0.12903742824326353], 'false': [0.050723677959804044, 0.12514878307516727], 'false,false': [0.11414585305440578, 0.23516677084294318], 'false,false,false': [0.23516677084294318, nan], 'true': [0.0017258920144301649, 0.004489954360997448], 'false,false,true': [0.045809671236037734, -3.8616453030440226e-17], 'true,true': [0.0004129502430012141, 0.002265913485763482], 'true,true,false': [0.0009375367941771295, 0.002149421905231763]}, {'': [0.03465091555777332, 0.08690880286287744], 'false': [0.0026321816929914645, 0.0850127896641879], 'false,false': [0.0743230408475984, 0.18239083196596903], 'false,false,false': [0.09916224263802348, 0.24927703151070174], 'false,false,true': [0.12791430968483225, 0.06518530383367223], 'true': [0.0002539845532755641, 0.06320348369195704], 'true,false': [0.07700217730747318, 3.700743415417188e-17], 'false,true': [0.00062657195829674, 0.002258443131799237]}, {'': [0.04401393010510367, 0.08286636781067289], 'false': [0.07231409914011322, 0.17707770817651372], 'false,false': [0.004781953694442491, 0.1831966668304532], 'false,false,false': [0.09954115356145697, 0.2399676765170587], 'false,true': [0.09984097075379987, 1.1072047679296195e-05], 'false,true,true': [0.10424955301036096, 0.0947694687501004], 'true': [0.0002805376139957715, 0.09762000743932142], 'false,false,true': [0.0, 0.0]}, {'': [0.0331428539046459, 0.06876005086497634], 'false': [0.057584283519899415, 0.1757124881692803], 'false,false': [0.09195279874031256, 0.24497397123304546], 'false,false,false': [0.24497397123304546, nan], 'false,false,true': [0.008748766499441547, 0.00019297185061961653], 'true': [0.00039719551085320065, 0.057253787752977695], 'true,true': [0.00029957620879490006, 0.0004146316980128591], 'true,true,false': [nan, 0.0004146316980128591]}, {'': [0.07036970835770653, 0.06635587889822742], 'true': [0.06026471588927205, 0.0567003780598054], 'false': [0.00039135259921339036, 0.06704919133494172], 'false,false': [0.06269062286856661, 0.1871632964358142], 'false,false,false': [0.054382904751475274, 0.25], 'true,true': [0.058310132495035936, 0.03967367129861818], 'true,true,false': [0.0, 0.02297335304453485], 'false,true': [0.00027870245871952637, 7.909188200874717e-05]}, {'': [0.03461027655667203, 0.07045578399483965], 'false': [0.06289190659632254, 0.1344577526219949], 'false,false': [0.12460623365075363, 0.13945292218806019], 'false,false,false': [0.029817010226236222, 0.2343750000000001], 'false,false,true': [0.1337283610140821, 0.12211307518159724], 'true': [0.0, 0.04037625361121094], 'true,true': [0.0, nan]}, {'': [0.054955765899981066, 0.06379135360860128], 'false': [0.0024755342698494997, 0.06389616781521675], 'false,false': [0.05675754317484773, 0.134991045031641], 'false,false,false': [0.1258955109397233, 0.16572219869444874], 'true': [0.04425499014884634, 0.07142828756869096], 'true,true': [0.0001825308331161198, 0.17246516374797116], 'false,true': [0.002459757247554571, 0.0024447398597251626], 'false,true,true': [0.002816392551559086, 0.0]}, {'': [0.03287114453690471, 0.06362050982359672], 'false': [0.08279435499747545, 0.06293641392596613], 'false,true': [0.11110602722843907, 0.0034423046603609306], 'false,true,true': [nan, 0.11110602722843907], 'true': [0.04629472568567082, 0.0007887391775683564], 'false,true,false': [0.0, 0.002359755308044449], 'true,false': [0.00027345472121839134, 0.0005537208044930561], 'true,false,true': [0.0002830325457127969, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;complex(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;complex(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.6795775065280845;  // std dev = 3.510, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return 0.838918165868743;  // std dev = 0.990, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return -0.14185106490048802;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.3381489350995123;  // std dev = 2.498, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7225389374776875;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.2944054410872211;  // std dev = 0.498, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.7334872420017352;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6631978869379194;  // std dev = 0.270, 130.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=120 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8021842997533476;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18264594545923696;  // std dev = 0.044, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.2626151077974432;  // std dev = 1.449, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.12741900072157958;  // std dev = 2.322, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.606517502558727;  // std dev = 0.036, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11231637819360629;  // std dev = 7.45e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.1437496355605266;  // std dev = 0.668, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.1538408613946403;  // std dev = 0.050, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5759187395127277;  // std dev = 0.176, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.510518700283805;  // std dev = 2.888, 108.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=99 */
%   | | | else return -0.11231637819360682;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.18825952097808518;  // std dev = 2.251, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.5528664632126663;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then return 0.42333353724660655;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.1735144325904413;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.41614576294409095;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, I), interaction(I, A) )
%   | | then return 0.3459092905690549;  // std dev = 0.251, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.21350303651498553;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.4330795918383421;  // std dev = 0.185, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then return 0.031829687687965;  // std dev = 0.273, 424.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=112 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.02438826310999281;  // std dev = 1.404, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.3476129214371933;  // std dev = 1.984, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2784857403776841;  // std dev = 0.233, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, E) )
%   | | | then return -0.2925754968947045;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4098319276192315;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3574652687425302;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.32376166523666006;  // std dev = 0.324, 139.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=120 */
%   | | else return -0.10459370138231636;  // std dev = 0.078, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.45055293021219445;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.11457499222506441;  // std dev = 1.849, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.0013085515308125806;  // std dev = 2.166, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.05403573316832714;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26796955782668314;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.35900955632342857;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then return -0.017986135562683563;  // std dev = 1.244, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.27700778773880197;  // std dev = 0.067, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(J, A) )
%   | then return 0.02963338786796286;  // std dev = 0.240, 402.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=120 */
%   | else if ( complex(A, K) )
%   | | then return 0.09059011084147904;  // std dev = 0.297, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.015315784076172166;  // std dev = 1.633, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.12391899681789388;  // std dev = 1.939, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.23576577858874098;  // std dev = 0.949, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.12769046339320006;  // std dev = 1.936, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | else return 0.4821103281101915;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.42164621880260955;  // std dev = 0.650, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.19141060704649027;  // std dev = 0.774, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.06006036663429203;  // std dev = 0.207, 118.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=16 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.2595890408101239;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return -0.005137493956007851;  // std dev = 0.254, 165.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=43 */
%   | | else return 0.06134215440545837;  // std dev = 0.244, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.1695018537949543;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.21294268945332862;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.5935863702780896;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.1768432924077328;  // std dev = 0.217, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.22877399548258498;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11897864956214708;  // std dev = 0.568, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.027314029593850705;  // std dev = 2.266, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.05989686949273644;  // std dev = 2.184, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
%   | | | else return 0.015075194206837847;  // std dev = 4.369, 289.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=82 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17517348180066875;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.20992366328912102;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.1859224186314488;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02421106470461787;  // std dev = 0.256, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.006658146591906539;  // std dev = 0.964, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.06744130807178722;  // std dev = 2.547, 74.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=35 */
%   | | | else return -0.10054249650459515;  // std dev = 0.166, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03291012560758092;  // std dev = 2.171, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.041409767213761724;  // std dev = 4.010, 232.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=79 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.09857554934591631;  // std dev = 0.225, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.16434307750632884;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13271766786174838;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.14063919130083116;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, H), interaction(F, I) )
%   | | | then return 0.08803395926827051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.005423884658302162;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11273264670008444;  // std dev = 0.109, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.027182211707805753;  // std dev = 4.265, 367.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=112 */
%   | | | else return -0.005171464830040632;  // std dev = 2.596, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */


Results
   AUC ROC   = 0.98548
   AUC PR    = 0.521616
   CLL	      = -0.174579
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.626016


Total learning time: 13.835 seconds
Total inference time: 5.958 seconds
AUC ROC: 0.98548


Results scoring model
   AUC ROC   = 0.981779
   AUC PR    = 0.262246
   CLL	      = -0.172699
   Precision = 0.119245 at threshold = 0.5
   Recall    = 0.951807
   F1        = 0.211938


Total scoring time: 31.698 seconds
Refined model CLL: -0.172699


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98548
   AUC PR    = 0.521616
   CLL	      = -0.174579
   Precision = 0.5 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.626016


Total learning time: 70.882 seconds
Total inference time: 5.958 seconds
AUC ROC: 0.98548
Total revision time: 70.882
Best scored revision CLL: -0.172699


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 02:05:23
{'AUC ROC': 0.98548, 'AUC PR': 0.521616, 'CLL': -0.174579, 'Precision': [0.5, 0.5], 'Recall': 0.836957, 'F1': 0.626016, 'Learning time': 70.882, 'Inference time': 5.958, 'parameter_0.6': {'AUC ROC': 0.983134, 'AUC PR': 0.464695, 'CLL': -0.181186, 'Precision': [0.5, 0.5], 'Recall': 0.836957, 'F1': 0.626016, 'Learning time': 6.471, 'Inference time': 4.199}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7748156017661789;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7134120929942497;  // std dev = 3.067, 76.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=65 */
%   | | | else return 0.709026128081967;  // std dev = 3.803, 114.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=97 */
%   | | else return -0.1418510649004874;  // std dev = 2.73e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14703782398840126;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7325420984713532;  // std dev = 0.033, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.7359812264346159;  // std dev = 5.96e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.616290195632624;  // std dev = 2.084, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return 0.6140651047210013;  // std dev = 4.162, 149.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=129 */
%   | | else return -0.12544463852839224;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8378093660801661;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16261395652327582;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18658859751295065;  // std dev = 2.161, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.18959269682015148;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5892449756690726;  // std dev = 0.109, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6159806957781473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6126834975823096;  // std dev = 0.764, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return -0.14064495608100397;  // std dev = 0.668, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4865437599129983;  // std dev = 1.657, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5132619057855399;  // std dev = 3.788, 155.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=139 */
%   | | | else return -0.11231637819360697;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.16036629725182366;  // std dev = 2.673, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.33678737689250077;  // std dev = 0.932, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4016759465837924;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.3508243380636316;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3327655792572745;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.35738755535740996;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41587260498700174;  // std dev = 1.467, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return 0.009622934623464531;  // std dev = 6.306, 531.000 (wgt'ed) examples reached here.  /* #neg=411 #pos=120 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.13848609523694858;  // std dev = 1.574, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.08173600442118686;  // std dev = 2.502, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.28176848776604013;  // std dev = 1.354, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | else return 0.21863141738669256;  // std dev = 1.311, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3089565750094961;  // std dev = 2.703, 77.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=67 */
%   | | | else return 0.37937224125655716;  // std dev = 3.162, 106.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=95 */
%   | | else return -0.10231693323419117;  // std dev = 0.063, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.5651599659179831;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22576626217534493;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.12636353235417805;  // std dev = 1.510, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.21658457497873213;  // std dev = 2.218, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2692380402636101;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31128221521844673;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2119777163862534;  // std dev = 1.629, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   else if ( interaction(G, A) )
%   | then return 0.01780756925005058;  // std dev = 5.993, 561.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=162 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.48175947138315756;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1590610599025129;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 2.7054787301345054E-4;  // std dev = 2.752, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.22293489891840873;  // std dev = 1.723, 63.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.11570148343669176;  // std dev = 0.356, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5533776967473168;  // std dev = 0.226, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.0393478496290669;  // std dev = 3.452, 244.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=40 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.2662343049853408;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.26487897738721444;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03362142834879471;  // std dev = 4.786, 318.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=102 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.07706441611229753;  // std dev = 0.456, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.04606444549922747;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18382196358291836;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22059461180780504;  // std dev = 0.102, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(F, A) )
%   | then return 0.008956344576041372;  // std dev = 5.818, 582.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=162 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.028477327539661465;  // std dev = 1.182, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.012372585355485266;  // std dev = 2.269, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.05453968022084337;  // std dev = 0.457, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2032079890058613;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1343503091101482;  // std dev = 0.925, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0.17379378156408998;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06338692418657066;  // std dev = 1.216, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11519393827611099;  // std dev = 1.130, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.15875165710105044;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.005170324441589664;  // std dev = 5.694, 576.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=154 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.010706766957226914;  // std dev = 2.221, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.04084922467350194;  // std dev = 1.614, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.11881103277661685;  // std dev = 0.982, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17478209415937898;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.18888617276911573;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15971976759278037;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( enzyme(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3567952472633191;  // std dev = 0.152, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.014673419031847193;  // std dev = 6.222, 592.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=172 */


Results
   AUC ROC   = 0.984992
   AUC PR    = 0.42817
   CLL	      = -0.148105
   Precision = 0.490683 at threshold = 0.5
   Recall    = 0.858696
   F1        = 0.624506


Total learning time: 7.9 seconds
Total inference time: 4.578 seconds
AUC ROC: 0.984992


Results scoring model
   AUC ROC   = 0.975688
   AUC PR    = 0.171155
   CLL	      = -0.173446
   Precision = 0.11349 at threshold = 0.5
   Recall    = 0.959276
   F1        = 0.202968


Total scoring time: 23.477 seconds
Parameter learned model CLL: -0.173446


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.658, 3, 33], 'false,true,true,true': [3.067, 11, 65], 'false,true,true,false': [3.803, 17, 97], 'false,true,false': [2.73e-07, 379, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.04, 32, 13], 'false,false,false,false': [1.754, 8, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.033, 0, 24], 'true,false': [5.96e-08, 0, 14], 'false,true,true,true': [2.084, 5, 33], 'false,true,true,false': [4.162, 20, 129], 'false,true,false': [0.0, 386, 0], 'false,false,true,true': [0.013, 0, 9], 'false,false,true,false': [0.017, 14, 0], 'false,false,false,true': [2.161, 14, 8], 'false,false,false,false': [1.595, 7, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.109, 0, 12], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.764, 1, 25], 'true,false': [0.668, 72, 0], 'false,true': [1.657, 3, 32], 'false,false,true,true': [3.788, 16, 139], 'false,false,true,false': [0.0, 286, 0], 'false,false,false,true': [2.673, 21, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true': [0.932, 1, 10], 'true,false,true': [0.975, 1, 19], 'true,false,false': [0.949, 1, 9], 'false,true,true': [0.955, 3, 8], 'false,true,false': [0.827, 1, 3], 'false,false,true,true': [1.467, 3, 34], 'false,false,true,false': [6.306, 411, 120], 'false,false,false,true': [1.574, 14, 9], 'false,false,false,false': [2.502, 21, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), enzyme(A, L)'}, {'true,true': [1.354, 2, 26], 'true,false': [1.311, 2, 12], 'false,true,true,true': [2.703, 10, 67], 'false,true,true,false': [3.162, 11, 95], 'false,true,false': [0.063, 389, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.51, 13, 9], 'false,false,false,false': [2.218, 11, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 3], 'true,false': [1.629, 3, 30], 'false,true': [5.993, 399, 162], 'false,false,true,true': [0.022, 0, 9], 'false,false,true,false': [0.022, 15, 0], 'false,false,false,true': [2.752, 29, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true,true': [1.723, 6, 57], 'true,true,false,true': [0.356, 1, 1], 'true,true,false,false': [0.226, 0, 3], 'true,false': [3.452, 204, 40], 'false,true,true': [0.019, 0, 4], 'false,true,false': [0.014, 0, 9], 'false,false,true': [4.786, 216, 102], 'false,false,false,true': [0.456, 6, 1], 'false,false,false,false': [1.633, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'enzyme(A, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.102, 0, 33], 'false,true': [5.818, 420, 162], 'false,false,true,true': [1.182, 4, 4], 'false,false,true,false': [2.269, 28, 12], 'false,false,false,true': [0.457, 5, 1], 'false,false,false,false': [1.414, 4, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'enzyme(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.925, 1, 22], 'true,true,false': [0.032, 0, 4], 'true,false': [1.216, 2, 12], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.13, 2, 8], 'false,true,false': [0.843, 1, 3], 'false,false,true': [5.694, 422, 154], 'false,false,false,true': [2.221, 33, 13], 'false,false,false,false': [1.614, 9, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(G, K)'}, {'true,true': [0.982, 1, 26], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.022, 0, 3], 'true,false,false': [0.068, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.956, 1, 8], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.152, 0, 3], 'false,false': [6.222, 420, 172]}]]
[{'': [0.06781677572873421, 0.2060997732426328], 'false': [0.2036502234673134, 0.22574576726686382], 'false,false': [1.4802973661668753e-16, 0.2140309155766939], 'false,false,false': [0.20543209876543156, 0.2366863905325442], 'false,true': [0.12565096952909188, 1.9685220911559503e-16], 'false,true,true': [0.1237880886426584, 0.1268851954447544], 'true': [0.0, 0.07638888888888869], 'true,true': [0.0, nan]}, {'': [3.113837155279803e-05, 0.16496602719259396], 'false': [0.15818767630137381, 0.22718898835139906], 'false,false': [0.23840708145315723, 0.21867091657345547], 'false,false,true': [1.7561798605569834e-05, 2.1773046230085962e-05], 'false,false,false': [0.21230088731712415, 0.23140495867768587], 'false,true': [0.11586273935767712, -1.2425293954354083e-16], 'false,true,true': [0.11430035697632268, 0.11626019320229265], 'true': [4.4944884361649194e-05, 2.5376526277146434e-16]}, {'': [0.13632079822885945, 0.13410092624198036], 'true': [0.015369948325577218, 0.006197735953166034], 'false': [0.07844586577446776, 0.12852483101382195], 'false,false': [0.1217487160966933, 0.21648380900288663], 'false,false,false': [0.21648380900288663, nan], 'false,false,true': [0.09259522814287607, -1.0092936587501423e-16], 'true,true': [0.0009836990039383913, 0.02159303575161681], 'true,true,false': [0.0, 0.022423134477940438]}, {'': [0.06716171370195771, 0.09360805099624497], 'false': [0.10646678655744411, 0.09121358827839789], 'false,true': [0.08287872422752587, 0.1708893807128638], 'false,false': [0.08385022773628023, 0.16560923759808246], 'false,false,false': [0.1077307108816837, 0.20858516767987306], 'false,false,true': [0.05816978544910227, 0.07488887053161862], 'true': [0.07889949822537606, 0.06224130801979717], 'true,false': [0.047499999999999876, 0.09000000000000004]}, {'': [0.08542277373394436, 0.08398846804114664], 'true': [0.06545108960500733, 0.12270861555442732], 'false': [0.07511328572351364, 0.1763890233041541], 'false,false': [0.18826443281794397, 0.1735221613001364], 'false,false,true': [0.0, 0.22222222222222224], 'false,false,false': [0.10370334760726094, 0.2460591324644485], 'false,true': [0.09578057274915278, 1.0072039114554141e-05], 'false,true,true': [0.09490337226331996, 0.09433147739505017]}, {'': [0.0656341859990658, 0.0733408204231347], 'false': [0.06402416594987567, 0.15361376740779084], 'false,false': [0.09628803430988177, 0.18474920090998717], 'false,false,false': [0.18474920090998717, nan], 'false,false,true': [5.620141142248514e-05, 3.302655498900557e-05], 'true': [0.0004742252442661993, 0.08038996907989704], 'true,true': [0.0, 0.0001597802466058081], 'true,true,false': [nan, 0.0001597802466058081]}, {'': [0.062148912430313764, 0.07586948828045283], 'false': [4.4024600530579736e-05, 0.07676886302655025], 'false,false': [0.0720436569340598, 0.15483124982659213], 'false,false,false': [0.029728679169519746, 0.22222222222222218], 'true': [0.05128564920114464, 0.04884861542237814], 'true,true': [0.04711126690303152, 0.08151735150940227], 'true,true,false': [0.06326412414021178, 0.01706198267635824], 'false,true': [9.40210837602623e-05, 2.1238737348704282e-05]}, {'': [0.0004258400521074986, 0.06669464879731808], 'false': [0.05816251410755961, 0.14673334399636334], 'false,false': [0.1365799009478628, 0.17406283647584697], 'false,false,false': [0.03485107882928174, 0.24999999999999994], 'false,false,true': [0.17454441321970968, 0.12870887926290317], 'true': [-5.551115123125783e-18, 0.0003124365803511797], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.05839291894838618, 0.06487222768549436], 'false': [0.1423548102414918, 0.06284981556798627], 'false,true': [0.12772735215460618, 0.1775682591235396], 'false,true,true': [nan, 0.12772735215460618], 'false,false': [0.056277756193161776, 0.125798494014384], 'false,false,false': [0.10724942035441973, 0.18604888171185893], 'true': [0.03193188519543317, 0.10554001162205814], 'true,true': [0.037210431827731885, 0.000254941580375808]}, {'': [0.025819364561091167, 0.06653367758261473], 'false': [0.08535328480364616, 0.0654020320883466], 'false,true': [0.10154387586706681, 0.0076524530978545795], 'false,true,true': [nan, 0.10154387586706681], 'true': [0.0357293712105577, 0.0004557673873047119], 'false,true,false': [nan, 0.0076524530978545795], 'true,false': [0.00015430786745791272, 0.0005065226355628893], 'true,false,true': [nan, 0.00015430786745791272]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;enzyme(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), enzyme(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.6741489350995105;  // std dev = 4.332, 125.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=102 */
%   | | | else return 0.8258908705833835;  // std dev = 1.391, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | else return -0.14185106490048746;  // std dev = 2.63e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12481560176617904;  // std dev = 2.422, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.3343394112899885;  // std dev = 2.289, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 4.21e-08, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.6086393364096254;  // std dev = 0.324, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5127751719600372;  // std dev = 2.882, 46.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | | | else return 0.657003783796187;  // std dev = 3.282, 139.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=127 */
%   | | else return -0.12544463852839227;  // std dev = 0.000, 411.000 (wgt'ed) examples reached here.  /* #neg=411 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8289907495285032;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16651915561208872;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1886084838372639;  // std dev = 2.150, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.32359775515932315;  // std dev = 1.404, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5556386934309909;  // std dev = 0.233, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | else return -0.12589059861207655;  // std dev = 0.358, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), complex(A, H) )
%   | | then return 0.569861815524455;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.481091169176535;  // std dev = 0.939, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2809205711366235;  // std dev = 1.486, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4786367635211958;  // std dev = 4.246, 160.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=139 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6798848304739152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08198272748595724;  // std dev = 2.498, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.419104049230995;  // std dev = 0.163, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return 0.19718496323248502;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.004358534325522759;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.2978363227978492;  // std dev = 0.489, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4958826310690011;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(I, A), complex(A, J) )
%   | | | then return -0.002264695553660863;  // std dev = 2.955, 124.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=24 */
%   | | | else return 0.05465894836997973;  // std dev = 5.562, 377.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=109 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.009886907213680383;  // std dev = 2.215, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.15506922982476887;  // std dev = 2.841, 71.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.08945831433036865;  // std dev = 0.420, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.37038512683345803;  // std dev = 0.143, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.34775070445791373;  // std dev = 0.191, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), complex(A, J) )
%   | | | then return 0.3372535630245239;  // std dev = 2.726, 61.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=52 */
%   | | | else return 0.4134335093663355;  // std dev = 2.383, 116.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=110 */
%   | | else return -0.10647145577558764;  // std dev = 0.112, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3959127265543989;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.03155275820527218;  // std dev = 1.823, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.14839986985981635;  // std dev = 2.274, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24029177236070667;  // std dev = 0.215, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1810996952706724;  // std dev = 1.359, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.018637128153299022;  // std dev = 2.089, 100.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=19 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.04512978735531406;  // std dev = 4.578, 351.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=112 */
%   | | | else return 0.10294480813955907;  // std dev = 1.452, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5058164068055275;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14831109988779542;  // std dev = 0.091, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03867596748729044;  // std dev = 1.821, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.039023358324524915;  // std dev = 1.912, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.22812729082309302;  // std dev = 0.098, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.04671803851732667;  // std dev = 0.223, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12269321062492106;  // std dev = 0.626, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.006104159587681515;  // std dev = 3.586, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.13553174913465055;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.24017926919929028;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A) )
%   | | then return 0.022866542676531647;  // std dev = 0.241, 335.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=102 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12141007363723354;  // std dev = 1.171, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.20312082317170294;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.19515554442967736;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.30289212131330007;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.1484029165929541;  // std dev = 0.953, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return -0.012778374048611965;  // std dev = 1.217, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.25975946708690306;  // std dev = 0.137, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), complex(I, L) )
%   | | | then return 0.03350765642785583;  // std dev = 1.741, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.060786863843007875;  // std dev = 2.719, 114.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=17 */
%   | | else if ( interaction(M, A), interaction(A, M) )
%   | | | then return 0.056048344264646846;  // std dev = 1.903, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.00889319966418674;  // std dev = 5.312, 403.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17646873111881886;  // std dev = 0.029, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.12948914773902576;  // std dev = 0.269, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.3235075785923118;  // std dev = 2.274, 94.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=86 */
%   | | | else return 0.06124702885111631;  // std dev = 4.044, 196.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=86 */
%   | | else return -0.12867584019322223;  // std dev = 0.092, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3177342593146605;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1107206413369645;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.08324072881699474;  // std dev = 0.640, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.31277165419486963;  // std dev = 0.536, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.15286353558627222;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.251000050639483;  // std dev = 1.285, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.14704359669252207;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, I), enzyme(C, I) )
%   | | then return 0.21864042349462207;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.3183122402087589;  // std dev = 1.004, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05256223333057877;  // std dev = 0.908, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(L, A), location(A, M) )
%   | then return -0.007502458031391064;  // std dev = 0.231, 548.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=152 */
%   | else if ( enzyme(A, N), location(A, P) )
%   | | then return 0.013885691426515391;  // std dev = 0.208, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else return 0.12093605360874955;  // std dev = 0.341, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */


Results
   AUC ROC   = 0.996246
   AUC PR    = 0.555441
   CLL	      = -0.155646
   Precision = 0.490683 at threshold = 0.5
   Recall    = 0.858696
   F1        = 0.624506


Total learning time: 40.6 seconds
Total inference time: 8.853 seconds
AUC ROC: 0.996246


Results scoring model
   AUC ROC   = 0.985956
   AUC PR    = 0.28009
   CLL	      = -0.168687
   Precision = 0.113187 at threshold = 0.5
   Recall    = 0.959276
   F1        = 0.202483


Total scoring time: 61.375 seconds
Refined model CLL: -0.168687


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.996246
   AUC PR    = 0.555441
   CLL	      = -0.155646
   Precision = 0.490683 at threshold = 0.5
   Recall    = 0.858696
   F1        = 0.624506


Total learning time: 133.352 seconds
Total inference time: 8.853 seconds
AUC ROC: 0.996246
Total revision time: 133.352
Best scored revision CLL: -0.168687


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 02:07:50
{'AUC ROC': 0.996246, 'AUC PR': 0.555441, 'CLL': -0.155646, 'Precision': [0.490683, 0.5], 'Recall': 0.858696, 'F1': 0.624506, 'Learning time': 133.352, 'Inference time': 8.853, 'parameter_0.8': {'AUC ROC': 0.984992, 'AUC PR': 0.42817, 'CLL': -0.148105, 'Precision': [0.490683, 0.5], 'Recall': 0.858696, 'F1': 0.624506, 'Learning time': 7.9, 'Inference time': 4.578}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6948836289770625;  // std dev = 3.659, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | | else return 0.7851562343695832;  // std dev = 3.045, 137.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=127 */
%   | | else return -0.14185106490048752;  // std dev = 1.63e-07, 481.000 (wgt'ed) examples reached here.  /* #neg=481 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10008441897048011;  // std dev = 3.372, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6567069457845901;  // std dev = 1.374, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.7194734122109543;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7227674274149294;  // std dev = 0.985, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.6340605939330729;  // std dev = 4.224, 190.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=170 */
%   | | else return -0.12544463852839233;  // std dev = 0.000, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8153676052774709;  // std dev = 0.190, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1564589278574567;  // std dev = 0.014, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12364787381977735;  // std dev = 2.479, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.052870194304237485;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5868954566490033;  // std dev = 0.068, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5804247903065597;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6287445027545082;  // std dev = 0.319, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.13484163930057075;  // std dev = 0.825, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.43026802753506405;  // std dev = 1.880, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4677129561365349;  // std dev = 4.742, 197.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=171 */
%   | | | else return -0.11231637819360621;  // std dev = 0.000, 398.000 (wgt'ed) examples reached here.  /* #neg=398 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.11194128734947512;  // std dev = 2.871, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.36171899074864905;  // std dev = 1.290, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4617067273029947;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.07321378190740553;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.259436267167295;  // std dev = 1.360, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.5222300881195984;  // std dev = 0.269, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.30356154094014315;  // std dev = 2.385, 51.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=41 */
%   | | | else return 0.027202612720129245;  // std dev = 6.766, 642.000 (wgt'ed) examples reached here.  /* #neg=486 #pos=156 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09220614558569144;  // std dev = 1.788, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.10714056200870792;  // std dev = 2.657, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.350986986511292;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return 0.19328554996127278;  // std dev = 1.575, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.29954229022351975;  // std dev = 2.994, 99.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=85 */
%   | | | else return 0.3670607296257823;  // std dev = 3.682, 139.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=124 */
%   | | else return -0.10396422597423388;  // std dev = 0.062, 470.000 (wgt'ed) examples reached here.  /* #neg=470 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.32885294454188474;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4519701977654404;  // std dev = 0.230, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.09965001831695572;  // std dev = 1.713, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.05248416842462914;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2848449605697795;  // std dev = 0.107, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26806622086517207;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2643664077516535;  // std dev = 0.972, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(G, A) )
%   | then return 0.02473692573599093;  // std dev = 6.525, 699.000 (wgt'ed) examples reached here.  /* #neg=490 #pos=209 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44931813424591327;  // std dev = 0.426, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14282202862325202;  // std dev = 0.012, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06268404858377263;  // std dev = 2.780, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2322160273032978;  // std dev = 1.652, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18368939330880507;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6566397403527567;  // std dev = 0.292, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.01989248768170712;  // std dev = 3.706, 280.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=53 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.14285139735836858;  // std dev = 0.923, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.14362852331315842;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then return 0.02997816017372357;  // std dev = 5.415, 405.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=131 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.08635556684323882;  // std dev = 0.575, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07913164131350188;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1914510263587208;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14099308759204668;  // std dev = 1.557, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   else if ( interaction(F, A) )
%   | then return 0.01109581056625891;  // std dev = 6.464, 719.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=209 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3133617714685711;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.06678232168175693;  // std dev = 2.308, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.012804401892942083;  // std dev = 0.655, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.09854741302248306;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1429604666496373;  // std dev = 0.791, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return -0.10247868683650704;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.2168336747966676;  // std dev = 0.179, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.24000002113490862;  // std dev = 0.173, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3026952247000129;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.25127652239036635;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.00726857972593706;  // std dev = 6.254, 719.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=197 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.023121361120427772;  // std dev = 2.480, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.0910819481672887;  // std dev = 1.454, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.16172051793346764;  // std dev = 0.129, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.13714228441096418;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1777539637884239;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10272618122513602;  // std dev = 0.851, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09274408157973646;  // std dev = 1.236, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else if ( complex(A, J), interaction(G, K) )
%   | | | then return -0.08187896243930504;  // std dev = 0.498, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20596476166811728;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.01491566959022993;  // std dev = 6.789, 762.000 (wgt'ed) examples reached here.  /* #neg=545 #pos=217 */


Results
   AUC ROC   = 0.983283
   AUC PR    = 0.493729
   CLL	      = -0.146462
   Precision = 0.531034 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.649789


Total learning time: 8.996 seconds
Total inference time: 4.501 seconds
AUC ROC: 0.983283


Results scoring model
   AUC ROC   = 0.978189
   AUC PR    = 0.226749
   CLL	      = -0.170084
   Precision = 0.117673 at threshold = 0.5
   Recall    = 0.963899
   F1        = 0.209741


Total scoring time: 27.485 seconds
Parameter learned model CLL: -0.170084


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.953, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 33], 'false,true,true,true': [3.659, 16, 82], 'false,true,true,false': [3.045, 10, 127], 'false,true,false': [1.63e-07, 481, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.372, 47, 15], 'false,false,false,false': [1.879, 12, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [1.374, 2, 27], 'true,false': [4.21e-08, 0, 16], 'false,true,true,true': [0.985, 1, 39], 'false,true,true,false': [4.224, 20, 170], 'false,true,false': [0.0, 460, 0], 'false,false,true,true': [0.19, 0, 13], 'false,false,true,false': [0.014, 21, 0], 'false,false,false,true': [2.479, 22, 9], 'false,false,false,false': [1.535, 11, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.068, 0, 33], 'true,true,false,true': [0.087, 0, 6], 'true,true,false,false': [0.319, 0, 29], 'true,false': [0.825, 145, 0], 'false,true': [1.88, 4, 26], 'false,false,true,true': [4.742, 26, 171], 'false,false,true,false': [0.0, 398, 0], 'false,false,false,true': [2.871, 29, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [1.29, 2, 23], 'true,false,true': [0.02, 0, 15], 'true,false,false': [1.369, 3, 5], 'false,true,true': [1.36, 3, 11], 'false,true,false': [0.269, 0, 6], 'false,false,true,true': [2.385, 10, 41], 'false,false,true,false': [6.766, 486, 156], 'false,false,false,true': [1.788, 22, 10], 'false,false,false,false': [2.657, 24, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), complex(A, L)'}, {'true,true': [0.115, 0, 30], 'true,false': [1.575, 3, 13], 'false,true,true,true': [2.994, 14, 85], 'false,true,true,false': [3.682, 15, 124], 'false,true,false': [0.062, 470, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.23, 0, 3], 'false,false,false,true': [1.713, 19, 10], 'false,false,false,false': [2.727, 29, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.107, 0, 17], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.058, 0, 4], 'true,false': [0.972, 1, 22], 'false,true': [6.525, 490, 209], 'false,false,true,true': [0.426, 0, 13], 'false,false,true,false': [0.012, 29, 0], 'false,false,false,true': [2.78, 29, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true,true': [1.652, 7, 69], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.292, 0, 3], 'true,false': [3.706, 227, 53], 'false,true,true': [0.923, 1, 8], 'false,true,false': [0.89, 1, 6], 'false,false,true': [5.415, 274, 131], 'false,false,false,true': [0.575, 3, 3], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [1.557, 3, 33], 'false,true': [6.464, 510, 209], 'false,false,true,true': [0.674, 1, 4], 'false,false,true,false': [2.308, 28, 15], 'false,false,false,true': [0.655, 7, 3], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'complex(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.791, 1, 25], 'true,true,false': [1.196, 2, 5], 'true,false': [0.179, 0, 13], 'false,true,true,true': [0.173, 0, 8], 'false,true,true,false': [0.055, 0, 3], 'false,true,false': [0.211, 0, 6], 'false,false,true': [6.254, 522, 197], 'false,false,false,true': [2.48, 38, 15], 'false,false,false,false': [1.454, 10, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(G, K)'}, {'true,true': [0.129, 0, 30], 'true,false,true,true': [0.024, 0, 5], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.851, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.236, 2, 12], 'false,true,false,true': [0.498, 1, 2], 'false,true,false,false': [0.183, 0, 3], 'false,false': [6.789, 545, 217]}]]
[{'': [0.022210743801654168, 0.20694375000000215], 'false': [0.20669415748572367, 0.20904195011337978], 'false,false': [0.0, 0.18907226406024627], 'false,true': [0.098397464916257, 5.5395743432440246e-17], 'false,false,false': [0.18340270551508792, 0.20761245674740467], 'false,true,true': [0.13660974593919284, 0.0676647663700827], 'true': [0.0826446280991734, -2.153159805333637e-16], 'true,true': [0.0826446280991734, nan]}, {'': [0.04288010044074547, 0.16592565917137944], 'false': [0.16109408261518224, 0.20784733557210947], 'false,false': [0.22410291061886442, 0.19002170599648527], 'false,false,true': [0.0027646353897784557, 9.827122193535004e-06], 'false,false,false': [0.19824258909477732, 0.16836734693877556], 'false,true': [0.08293532003083155, -1.351575856065408e-16], 'false,true,true': [0.02425010767036797, 0.09392159683146649], 'true': [0.06513732980364806, 1.1102230246251565e-16]}, {'': [0.1225661571273061, 0.12329647767070147], 'false': [0.11781087254983721, 0.11808552917464742], 'true': [0.0021309587807546372, 0.004691234050417326], 'false,false': [0.11230483416583227, 0.20100523925940086], 'false,false,false': [0.20100523925940086, nan], 'false,false,true': [0.11415153745342763, -2.6779248835179654e-17], 'true,true': [0.00014072409689738018, 0.003460707214587241], 'true,true,false': [0.0012705224445047996, 0.003513598386404335]}, {'': [0.09047402482092998, 0.08896726961505079], 'true': [0.06660386912496723, 0.11577670207322947], 'true,false': [2.8009165453675895e-05, 0.23437499999999997], 'false': [0.11059787186255358, 0.086294612377907], 'false,true': [0.13212422233933313, 0.012027306118570428], 'false,false': [0.0794691903693844, 0.15545847475634658], 'false,false,false': [0.0999178492041801, 0.20762386563621235], 'false,false,true': [0.11150937182495468, 0.07130332597858481]}, {'': [0.05988484432148741, 0.08315469469216223], 'false': [0.07596926168509216, 0.15055207034500198], 'false,false': [0.014220418808646973, 0.15311193316918242], 'false,false,false': [0.10124211416301075, 0.19073306469452925], 'false,true': [0.09573357301595914, 8.243477516840702e-06], 'false,true,true': [0.0905500426282219, 0.09752915751943504], 'true': [0.0004420457732577561, 0.15512069393206634], 'false,false,true': [0.0, 0.017637554797886274]}, {'': [0.02191692271678118, 0.06866820156627461], 'false': [0.060908873883673845, 0.13337755857337194], 'false,false': [0.07926818034757067, 0.18855673584981528], 'false,false,false': [0.18855673584981528, nan], 'false,false,true': [0.013984431174385099, 4.984471193941167e-06], 'true': [0.0007489658701969894, 0.04110163186232722], 'true,true': [0.0006734524729363103, 0.0008419957226845909], 'true,true,false': [nan, 0.0008419957226845909]}, {'': [0.059783159950398436, 0.07695030303698179], 'false': [0.10275431547846874, 0.07551654498383142], 'false,true': [0.09467047293867802, 0.11314748760767089], 'false,false': [0.07239485713039019, 0.15194677663251224], 'false,false,false': [0.055158788665828795, 0.21000000000000005], 'true': [0.041717791864460674, 0.04905307343400882], 'true,true': [0.0358954274625306, 0.06328026876616777], 'true,true,false': [0.0, 0.028453183995975184]}, {'': [0.05311679330246373, 0.06442193265667845], 'false': [0.05811392040290232, 0.12807297076277296], 'false,false': [0.12616001165181898, 0.1309290897921993], 'false,false,false': [0.04289195270177716, 0.22222222222222218], 'false,false,true': [0.09085964094016581, 0.12393122414382755], 'true': [-5.551115123125783e-18, 0.06731797906857727], 'true,true': [-5.551115123125783e-18, nan]}, {'': [0.05585765712832461, 0.060417325888243924], 'false': [0.005072720835468993, 0.06034249841250267], 'false,false': [0.05439404730214734, 0.12236946463291926], 'false,false,false': [0.11607001364744259, 0.1410277013439131], 'true': [0.07240459899987246, 0.0024761337686841378], 'true,true': [0.024070349105972735, 0.20446969684107966], 'false,true': [0.0037684714054943003, 0.00744191085274426], 'false,true,true': [0.0037328312880891903, 0.0010048291367055762]}, {'': [0.017389355956181168, 0.06154128117804617], 'false': [0.09682415851256236, 0.06049480100136129], 'false,true': [0.10908509196452947, 0.0675555199894579], 'false,true,true': [nan, 0.10908509196452947], 'false,true,false': [0.08257374454595529, 0.011110290678945589], 'true': [0.000555180086518529, 0.052297154623144215], 'true,false': [0.0003263291705626221, 0.09054833905563014], 'true,false,true': [0.00011671025436555405, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;complex(A, F).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;complex(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.801006077956655;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.6569655031468469;  // std dev = 5.212, 169.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=135 */
%   | | | else return 0.8318331456258287;  // std dev = 1.395, 76.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=74 */
%   | | else return -0.14185106490048718;  // std dev = 2.98e-07, 443.000 (wgt'ed) examples reached here.  /* #neg=443 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2152917922423695;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6622551367427778;  // std dev = 0.254, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.5308607257211749;  // std dev = 0.400, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5005940647899169;  // std dev = 3.330, 59.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=44 */
%   | | | else return 0.6369162669457061;  // std dev = 4.206, 185.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=165 */
%   | | else return -0.12544463852839235;  // std dev = 0.000, 511.000 (wgt'ed) examples reached here.  /* #neg=511 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8072913286173359;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16688280289817045;  // std dev = 0.038, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.12717525463857543;  // std dev = 2.016, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.2916084188281048;  // std dev = 1.760, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.626720155742227;  // std dev = 0.042, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return -0.15576107537980566;  // std dev = 0.512, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.11393138997747686;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.12122576591739925;  // std dev = 0.282, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5955303087620318;  // std dev = 0.078, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5135412016360456;  // std dev = 4.100, 190.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=171 */
%   | | | else return -0.1123163781936065;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.30643841595027643;  // std dev = 1.696, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.03974662966996229;  // std dev = 2.073, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.44382318425304645;  // std dev = 0.129, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.15459407690173702;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.44216738699528085;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.30152706163822773;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), interaction(I, H) )
%   | | then return 0.027037007230872344;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.48399049876594497;  // std dev = 0.069, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10793513376772666;  // std dev = 0.054, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.03687716608278023;  // std dev = 4.228, 222.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | | | else return 0.06697075528913082;  // std dev = 6.920, 508.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=157 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.29581618658427467;  // std dev = 0.204, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.02559711449143145;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3591695650862391;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.3951427300237335;  // std dev = 2.147, 68.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=62 */
%   | | | else return 0.32979133908324226;  // std dev = 4.351, 170.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=147 */
%   | | else return -0.10562293738903052;  // std dev = 0.106, 497.000 (wgt'ed) examples reached here.  /* #neg=497 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39159960053911436;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.22061172456513242;  // std dev = 1.769, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.049801201772648115;  // std dev = 2.427, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.23112836876735113;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.2589901734027942;  // std dev = 0.211, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09351981211898178;  // std dev = 0.071, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.05585470852056097;  // std dev = 3.105, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.026670548267628345;  // std dev = 5.845, 531.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=165 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.43339074160048396;  // std dev = 0.414, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.15218148891866304;  // std dev = 0.061, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.05278361365531932;  // std dev = 2.520, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.12481451654726505;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2400635260034236;  // std dev = 0.248, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | else return 0.5337143135527829;  // std dev = 0.224, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.031047440921329474;  // std dev = 0.230, 284.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=53 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.07636042878896641;  // std dev = 0.217, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.18295124782561026;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.014209500108482744;  // std dev = 2.374, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | else if ( complex(A, I) )
%   | | then return 0.014281113647182361;  // std dev = 0.248, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.07128325616112413;  // std dev = 2.322, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | | else return 0.05087658506001026;  // std dev = 3.054, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.18457698483634463;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.3620866251431769;  // std dev = 1.136, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.026733463996296905;  // std dev = 1.461, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.2440881073703704;  // std dev = 0.147, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(A, H) )
%   | | then return -0.07138619847235658;  // std dev = 0.201, 100.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=12 */
%   | | else if ( phenotype(H, I), interaction(A, J) )
%   | | | then return 0.12845128788376928;  // std dev = 0.799, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.023429609364378583;  // std dev = 2.850, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18813300088819893;  // std dev = 0.247, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.021731127636399443;  // std dev = 0.250, 594.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=174 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14983580453252918;  // std dev = 0.181, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return 0.10879596845425915;  // std dev = 0.311, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.19735031981110956;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.33839824850713257;  // std dev = 1.058, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.027067710682767993;  // std dev = 0.996, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.21720122622472143;  // std dev = 1.940, 47.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=38 */
%   | | | else return -0.036812873426392105;  // std dev = 4.056, 326.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=54 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.0657729901668486;  // std dev = 1.981, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.03112932851925491;  // std dev = 4.457, 305.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=102 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14021790389019748;  // std dev = 0.172, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.10539657565927141;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.2162158918943197;  // std dev = 0.785, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.06713468402474075;  // std dev = 0.015, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.00804240618246994;  // std dev = 2.117, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, H), location(A, J) )
%   | | | then return -0.04010330155643053;  // std dev = 1.182, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   | | | else return 0.02105614586264109;  // std dev = 2.719, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2145601611948921;  // std dev = 0.290, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.030129439937090875;  // std dev = 5.496, 430.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=138 */


Results
   AUC ROC   = 0.983408
   AUC PR    = 0.482135
   CLL	      = -0.144817
   Precision = 0.538462 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.655319


Total learning time: 18.888 seconds
Total inference time: 4.51 seconds
AUC ROC: 0.983408


Results scoring model
   AUC ROC   = 0.981706
   AUC PR    = 0.235628
   CLL	      = -0.169212
   Precision = 0.123326 at threshold = 0.5
   Recall    = 0.963899
   F1        = 0.218673


Total scoring time: 30.068 seconds
Refined model CLL: -0.169212


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983408
   AUC PR    = 0.482135
   CLL	      = -0.144817
   Precision = 0.538462 at threshold = 0.5
   Recall    = 0.836957
   F1        = 0.655319


Total learning time: 85.437 seconds
Total inference time: 4.51 seconds
AUC ROC: 0.983408
Total revision time: 85.437
Best scored revision CLL: -0.169212


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 02:09:26
{'AUC ROC': 0.983408, 'AUC PR': 0.482135, 'CLL': -0.144817, 'Precision': [0.538462, 0.5], 'Recall': 0.836957, 'F1': 0.655319, 'Learning time': 85.437, 'Inference time': 4.51, 'parameter_1.0': {'AUC ROC': 0.983283, 'AUC PR': 0.493729, 'CLL': -0.146462, 'Precision': [0.531034, 0.5], 'Recall': 0.836957, 'F1': 0.649789, 'Learning time': 8.996, 'Inference time': 4.501}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.38791828808222334;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.666062960819082;  // std dev = 1.374, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4244199908230316;  // std dev = 1.523, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.15622435028173504;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5935607095933304;  // std dev = 0.149, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5782974392917013;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3235993322626709;  // std dev = 2.080, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | else return -0.126739566571618;  // std dev = 0.321, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4543837917783057;  // std dev = 1.630, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4216466142382205;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4347469583778756;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5114678196077233;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.49342721431791636;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02134331308698972;  // std dev = 2.875, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.09040480221097841;  // std dev = 1.639, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.1562482186979802;  // std dev = 1.196, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.3198121107466625;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.2271008034420946;  // std dev = 1.623, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.3425363876918043;  // std dev = 1.632, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else return -0.1089382373789062;  // std dev = 0.202, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07874803841092903;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.19107941838419065;  // std dev = 1.464, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27760229779154466;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33645851636605584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.02547534247720782;  // std dev = 2.737, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.05954563309526785;  // std dev = 1.798, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.16371658705487696;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.21812416927365472;  // std dev = 0.840, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( function(A, F) )
%   | | | then return -0.36811735818702623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.005197060902634121;  // std dev = 2.012, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return -0.04446454448907544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.02637089211551624;  // std dev = 2.295, 86.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=26 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.4259404295438749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19080246869739184;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.236831674029371;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then return -0.007784663732689924;  // std dev = 2.960, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10144029841140172;  // std dev = 1.472, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( function(A, I) )
%   | | | then return 0.32643050405284935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16672954931986164;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.16734051931978186;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.22836854544492818;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.2386360432495125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2785815466460712;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.007719564772083451;  // std dev = 2.605, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.02855344696205514;  // std dev = 1.727, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return -0.20510688678563113;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.05375259345768488;  // std dev = 0.957, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.19063611352216425;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22254289058851753;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20926092087833903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.004912858837422723;  // std dev = 2.999, 161.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=40 */


Results
   AUC ROC   = 0.98512
   AUC PR    = 0.276458
   CLL	      = -0.159041
   Precision = 0.235669 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.37


Total learning time: 11.591 seconds
Total inference time: 19.158 seconds
AUC ROC: 0.98512


Results scoring model
   AUC ROC   = 0.977111
   AUC PR    = 0.159314
   CLL	      = -0.177146
   Precision = 0.114094 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.202783


Total scoring time: 43.355 seconds
Parameter learned model CLL: -0.177146


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.0, 0, 14], 'false,true,true,false': [0.98, 1, 24], 'false,true,false': [7.88e-08, 83, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [1.854, 11, 5], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [2.98e-08, 0, 9], 'true,false': [0.0, 0, 3], 'false,true,true,true': [1.418, 3, 6], 'false,true,true,false': [1.374, 2, 32], 'false,true,false': [0.0, 78, 0], 'false,false,true,true': [1.523, 4, 6], 'false,false,true,false': [0.049, 10, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.149, 0, 13], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [2.08, 11, 17], 'true,false': [0.321, 46, 0], 'false,true': [1.05e-08, 0, 3], 'false,false,true,true': [1.63, 3, 22], 'false,false,true,false': [0.0, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.083, 0, 12], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.046, 0, 3], 'false,false,true,true': [0.012, 0, 6], 'false,false,true,false': [2.875, 91, 29], 'false,false,false,true': [1.639, 13, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [1.196, 2, 9], 'true,false': [0.0, 0, 3], 'false,true,true,true': [1.623, 4, 15], 'false,true,true,false': [1.632, 3, 23], 'false,true,false': [0.202, 78, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [1.464, 7, 5], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.071, 0, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.0, 0, 0], 'false,true': [2.737, 89, 38], 'false,false,true,true': [1.798, 8, 6], 'false,false,true,false': [1.05e-08, 11, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.84, 1, 15], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.012, 44, 11], 'false,true,true': [0.866, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.295, 60, 26], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.066, 0, 5], 'false,true': [2.96, 103, 38], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.472, 10, 5], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.015, 0, 7], 'true,true,false': [0.01, 0, 3], 'true,false': [0.007, 0, 2], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.041, 0, 3], 'false,false,true': [2.605, 98, 35], 'false,false,false,true': [1.727, 13, 5], 'false,false,false,false': [0.0, 2, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.957, 1, 10], 'true,false,true,true': [0.006, 0, 2], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.042, 0, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [2.999, 121, 40]}]]
[{'': [-1.4802973661668753e-16, 0.2146773301141806], 'false': [0.21445847890352193, 0.21606648199445994], 'false,false': [0.0, 0.20061728395061712], 'false,true': [0.024983563445103548, 7.490661370964911e-17], 'false,false,false': [0.2148437499999998, 0.0], 'false,true,true': [-2.5376526277146434e-16, 0.0384000000000006], 'true': [-2.5376526277146434e-16, 0.0], 'true,true': [-2.5376526277146434e-16, nan]}, {'': [7.401486830834377e-17, 0.1656867292404724], 'false': [0.1599566159304026, 0.20035297107246186], 'false,false': [0.20035297107246186, nan], 'false,false,true': [0.23189516905252452, 0.00023684766390473787], 'false,true': [0.1034835761887079, -2.5620531337503614e-17], 'false,true,true': [0.22341876212320402, 0.05554346579058949], 'true': [9.868649107779169e-17, 0.0]}, {'': [0.13098843385603073, 0.12024946047828955], 'true': [0.11959158155059121, 0.0022407986723174075], 'false': [3.700743415417188e-17, 0.11687667817799294], 'true,true': [0.0017106540035368967, 0.15132080443050652], 'true,true,false': [0.0, 0.15448818350465407], 'false,false': [0.11687667817799294, nan], 'false,false,true': [0.10624915855743183, -5.551115123125783e-18]}, {'': [0.0005782760719898287, 0.08801717509863302], 'false': [0.0016250523700602204, 0.08512151178182184], 'false,false': [0.0756969721730799, 0.14919469844886313], 'false,false,false': [0.14919469844886313, nan], 'false,false,true': [2.2216461399512017e-05, 0.06886817615859699], 'false,true': [0.0, 0.0006952138564511786], 'true': [0.0005782760719898287, nan]}, {'': [0.1066746528949036, 0.09519582622104143], 'true': [0.13003492288046348, 0.0], 'false': [0.08220252504498159, 0.1976569471115397], 'false,false': [0.25, 0.17853212547195976], 'false,false,true': [nan, 0.25], 'false,false,false': [0.17853212547195976, nan], 'false,true': [0.1209254576661895, 0.0005225157518143527], 'false,true,true': [0.1385751660166275, 0.10240132480251946]}, {'': [0.0006873010634966906, 0.07315242671444619], 'false': [0.058998859136479335, 0.1416125559102669], 'false,false': [0.1416125559102669, nan], 'false,false,true': [0.23094731578907304, 1.0092936587501423e-17], 'true': [0.0006873010634966906, nan], 'true,true': [0.00046111177295247367, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07694151751524676, 0.068093165407134], 'true': [0.060578759841821525, 0.07357956406885123], 'false': [0.1875, 0.062353111963956515], 'false,true': [0.1875, nan], 'false,false': [0.06124302383647228, 0.0], 'true,true': [0.04414851300726288, 0.0], 'false,false,false': [0.0, nan], 'true,true,false': [0.0, nan]}, {'': [0.0008788527884317313, 0.07128320784704262], 'false': [0.06212859663039746, 0.1383075804620293], 'false,false': [0.14436429878650323, 0.0], 'false,false,true': [nan, 0.14436429878650323], 'true': [-7.93016446160826e-18, 0.00087334550853162], 'false,false,false': [0.0, nan], 'true,true': [-7.93016446160826e-18, nan]}, {'': [0.0005578450063710069, 0.06470646776329102], 'false': [0.0007236565577153353, 0.06455033335222711], 'false,false': [0.051023130139555374, 0.1519781328590572], 'false,false,false': [0.16574748035426537, 0.0], 'false,true': [0.0, 0.0005659645998859949], 'true': [3.456986280171992e-05, 2.688431386572293e-05], 'true,true': [3.359559067222676e-05, 3.658186539864938e-05], 'false,true,true': [0.0, nan]}, {'': [0.07288193393267378, 0.05561796997210836], 'true': [0.08324681681663149, 2.06104772394744e-05], 'false': [0.0004747087425299931, 0.055874568796279084], 'false,true': [0.0005888423101944595, 0.0], 'false,true,true': [nan, 0.0005888423101944595], 'true,false': [2.06104772394744e-05, nan], 'true,false,true': [2.06104772394744e-05, nan], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(F, H), interaction(H, A).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,false;interaction(H, A).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, G), interaction(G, A) )
%   | | | then return 0.6816783468642181;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.6081489350995116;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=24 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.13592671287729013;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.5674743582286368;  // std dev = 2.196, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.7650112399922094;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.8407840358908217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1596872316804073;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.15535709761835814;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.6013795644640179;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6051187958633287;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.318982885645334;  // std dev = 2.118, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | else if ( interaction(H, A) )
%   | | then return -0.12076142733533819;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return -0.21151357787806652;  // std dev = 0.082, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5530909034495729;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.189719263909063;  // std dev = 1.170, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.41671409104090146;  // std dev = 1.652, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.40304001099049475;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, D) )
%   | | then return 0.4805008051323141;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4158294145781549;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.45554793139888583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5824122865686113;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.13607414076558197;  // std dev = 1.380, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.027926520965646864;  // std dev = 3.212, 126.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=29 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3561750686378815;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05995298950278546;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3109130301103211;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3638952998658713;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3195711648511483;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.16554515994562127;  // std dev = 1.747, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.4264133087313365;  // std dev = 1.622, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | else return -0.11749326058150875;  // std dev = 0.022, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(A, K), enzyme(I, L) )
%   | | | then return -0.2706054617542842;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05869680983219794;  // std dev = 1.229, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.07356920444693003;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.2683642381788375;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.40312240482529055;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2568048399448934;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.23411981431497553;  // std dev = 0.728, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), interaction(I, H) )
%   | | then return 0.024889625936124093;  // std dev = 0.248, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | else return 0.2034879243994269;  // std dev = 0.267, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.3669507015599339;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.044381182177041185;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.13462480096770668;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.30624658179599556;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.10843852821871665;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.17834446302063456;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03354870143691066;  // std dev = 1.760, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.20880980880209243;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.2108106627396999;  // std dev = 0.952, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.007481270640598441;  // std dev = 2.106, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else return 0.09247351958195915;  // std dev = 0.529, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.18129082760607879;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21183879190210203;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37846209985986873;  // std dev = 0.271, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.1266817033550138;  // std dev = 0.194, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( location(A, H) )
%   | | | then return -0.057248078983841724;  // std dev = 2.257, 85.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=15 */
%   | | | else return 0.08620182117108979;  // std dev = 0.649, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.1774550298701698;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0924376670340721;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.4437342041513863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15250787113194228;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15614793717990286;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2259634791855229;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.25478358054467853;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3018071240185209;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.08556148395297927;  // std dev = 1.309, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.0016125154068013148;  // std dev = 2.406, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.026800781606495364;  // std dev = 1.399, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.16156385765594025;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E), interaction(A, A) )
%   | | then return 0.11842197338831184;  // std dev = 0.000984, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14178527672607483;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.1890044225427206;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.22121387014090862;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2745693089485306;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3690885385997356;  // std dev = 0.357, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11910093159850584;  // std dev = 0.546, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.10535825712212149;  // std dev = 0.920, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.00463651521643016;  // std dev = 2.163, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */


Results
   AUC ROC   = 0.987177
   AUC PR    = 0.312174
   CLL	      = -0.160055
   Precision = 0.168103 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.283636


Total learning time: 36.049 seconds
Total inference time: 31.138 seconds
AUC ROC: 0.987177


Results scoring model
   AUC ROC   = 0.989491
   AUC PR    = 0.31494
   CLL	      = -0.163634
   Precision = 0.13253 at threshold = 0.5
   Recall    = 0.982143
   F1        = 0.233546


Total scoring time: 70.422 seconds
Refined model CLL: -0.163634


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987177
   AUC PR    = 0.312174
   CLL	      = -0.160055
   Precision = 0.168103 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.283636


Total learning time: 161.417 seconds
Total inference time: 31.138 seconds
AUC ROC: 0.987177
Total revision time: 161.417
Best scored revision CLL: -0.163634


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 02:12:58
{'AUC ROC': 0.987177, 'AUC PR': 0.312174, 'CLL': -0.160055, 'Precision': [0.168103, 0.5], 'Recall': 0.906977, 'F1': 0.283636, 'Learning time': 161.417, 'Inference time': 31.138, 'parameter_0.2': {'AUC ROC': 0.98512, 'AUC PR': 0.276458, 'CLL': -0.159041, 'Precision': [0.235669, 0.5], 'Recall': 0.860465, 'F1': 0.37, 'Learning time': 11.591, 'Inference time': 19.158}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.6763307532813305;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7369368138873904;  // std dev = 1.875, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.7564540198452752;  // std dev = 2.322, 59.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | else return -0.14185106490048838;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7282722315525004;  // std dev = 0.053, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5046686895771393;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6710450895819894;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.6367066255113546;  // std dev = 2.675, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5509420785016513;  // std dev = 1.888, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -0.16260677834232812;  // std dev = 0.021, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5292783062253152;  // std dev = 0.952, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.11508190213304306;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2311296612108463;  // std dev = 3.382, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | else return -0.12058749451300162;  // std dev = 0.121, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6237862248424019;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4784006549405876;  // std dev = 2.483, 57.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | | else return -0.11231637819360611;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.46307404303650324;  // std dev = 0.243, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.5413049816641076;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5441090391863515;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.36398318778828465;  // std dev = 1.110, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.03337621373995904;  // std dev = 4.352, 255.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=63 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.07740663922349159;  // std dev = 2.610, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3533474318452408;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22559796231505033;  // std dev = 0.956, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.36344024356464383;  // std dev = 1.558, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   | | | else return 0.3128004150770054;  // std dev = 2.930, 62.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=52 */
%   | | else return -0.1096880061717738;  // std dev = 0.191, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.5659824003337129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4050830485927376;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.04536700257154139;  // std dev = 2.617, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27499458838120316;  // std dev = 0.168, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14769073893099843;  // std dev = 0.830, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.28555707021897214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.018790707855902557;  // std dev = 4.292, 287.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=82 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3381774826007489;  // std dev = 1.998, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return -0.14380279403132457;  // std dev = 0.012, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.19774515338960127;  // std dev = 1.143, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04403895481667008;  // std dev = 3.207, 127.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=23 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( function(A, G) )
%   | | then return 0.26331089403693114;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.034211949406494094;  // std dev = 3.598, 182.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=57 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return -0.0018764995126613854;  // std dev = 0.801, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1673033623911665;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20590186614298234;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.24672968641919685;  // std dev = 0.188, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then return 0.010941284505796074;  // std dev = 4.295, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11608154784989888;  // std dev = 2.077, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | else if ( function(A, J) )
%   | | | then return 0.154230826253476;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.04912975334902488;  // std dev = 0.939, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.08712593106556174;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.22810300299977038;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.2924161079527339;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2698095605101164;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return -0.001771719257457684;  // std dev = 4.304, 286.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=77 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06711569105778682;  // std dev = 2.197, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -0.031515804311541135;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.07525542352229146;  // std dev = 0.925, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.2200851156710305;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16187486331914883;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16936294401628385;  // std dev = 0.381, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17512178191450023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.021535401358896995;  // std dev = 4.693, 304.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=89 */


Results
   AUC ROC   = 0.984523
   AUC PR    = 0.310742
   CLL	      = -0.160164
   Precision = 0.237179 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.371859


Total learning time: 22.863 seconds
Total inference time: 20.705 seconds
AUC ROC: 0.984523


Results scoring model
   AUC ROC   = 0.976477
   AUC PR    = 0.237773
   CLL	      = -0.176619
   Precision = 0.114124 at threshold = 0.5
   Recall    = 0.893805
   F1        = 0.202405


Total scoring time: 88.694 seconds
Parameter learned model CLL: -0.176619


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 1], 'true,false': [1.279, 2, 9], 'false,true,true,true': [1.875, 4, 29], 'false,true,true,false': [2.322, 6, 53], 'false,true,false': [0.0, 194, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [2.728, 23, 11], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.053, 0, 12], 'true,false': [1.225, 2, 6], 'false,true,true,true': [0.967, 1, 13], 'false,true,true,false': [2.675, 8, 69], 'false,true,false': [0.0, 188, 0], 'false,false,true,true': [1.888, 5, 13], 'false,false,true,false': [0.021, 21, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.952, 2, 24], 'true,true,false,true': [0.976, 2, 2], 'true,true,false,false': [3.382, 33, 31], 'true,false': [0.121, 76, 0], 'false,true': [0.064, 0, 6], 'false,false,true,true': [2.483, 7, 50], 'false,false,true,false': [6.83e-08, 114, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.243, 0, 18], 'true,false': [0.0, 0, 0], 'false,true,true': [0.082, 0, 3], 'false,true,false': [0.006, 0, 3], 'false,false,true,true': [1.11, 2, 14], 'false,false,true,false': [4.352, 192, 63], 'false,false,false,true': [2.61, 28, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.218, 0, 11], 'true,false': [0.956, 1, 7], 'false,true,true,true': [1.558, 3, 30], 'false,true,true,false': [2.93, 10, 52], 'false,true,false': [0.191, 185, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.617, 33, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.168, 0, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.83, 1, 4], 'true,false': [0.0, 0, 1], 'false,true': [4.292, 205, 82], 'false,false,true,true': [1.998, 6, 13], 'false,false,true,false': [0.012, 27, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'function(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true,true': [1.143, 3, 24], 'true,true,false': [0.0, 0, 0], 'true,false': [3.207, 104, 23], 'false,true,true': [0.077, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.598, 125, 57], 'false,false,false,true': [0.801, 5, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.188, 0, 9], 'false,true': [4.295, 202, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.077, 19, 11], 'false,false,false,true': [0.605, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.939, 1, 9], 'true,true,false': [0.852, 1, 3], 'true,false': [0.131, 0, 6], 'false,true,true,true': [0.027, 0, 3], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.067, 0, 3], 'false,false,true': [4.304, 209, 77], 'false,false,false,true': [2.197, 19, 11], 'false,false,false,false': [0.738, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.925, 1, 12], 'true,false,true,true': [0.088, 0, 3], 'true,false,true,false': [0.022, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.381, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [4.693, 215, 89]}]]
[{'': [0.08999999999999968, 0.20686390532544421], 'false': [0.2045087779353519, 0.2222222222222217], 'false,false': [0.0, 0.21606648199445933], 'false,false,false': [0.2188581314878888, 0.18750000000000003], 'false,true': [0.09688090737240111, -2.3120108347864086e-16], 'false,true,true': [0.10651974288338066, 0.09135305946567075], 'true': [-2.9605947323337506e-16, 0.14876033057851218], 'true,true': [-2.220446049250313e-16, 0.0]}, {'': [0.08713900515539201, 0.1659730926068166], 'false': [0.15849036050278173, 0.21796619003607445], 'false,false': [0.21796619003607445, nan], 'false,false,true': [0.19807797062434407, 2.0017813813703416e-05], 'false,true': [0.08906235832368166, -2.362176648138631e-17], 'false,true,true': [0.06674889306818813, 0.09293794737346316], 'true': [0.00023225766541575452, 0.1875]}, {'': [0.13445889102377734, 0.11930319299963271], 'true': [0.1606432875240827, 0.00019252824144949665], 'true,true': [0.034893144750682906, 0.18299812596598822], 'true,true,false': [0.23799450193288776, 0.17876867115117606], 'false': [0.0006867010786801112, 0.11360980824756849], 'false,false': [0.11360980824756849, nan], 'false,false,true': [0.10819834925279795, 4.0902953538821554e-17]}, {'': [0.0032859405738715364, 0.09480262670461843], 'false': [0.0011330018311535757, 0.09212703881381507], 'false,false': [0.08050910517464478, 0.17031501370053487], 'false,false,false': [0.17031501370053487, nan], 'false,false,true': [0.07699248716894916, 0.07427656183931414], 'true': [0.0032859405738715364, nan], 'false,true': [0.0022491451062320125, 1.2927186781068004e-05]}, {'': [0.05463456089530786, 0.09359920118614992], 'false': [0.08306136721487463, 0.15637765727088673], 'false,false': [0.23574202652468224, 0.15217674190373146], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.15217674190373146, nan], 'false,true': [0.11646993996705526, 0.00019628067495428347], 'false,true,true': [0.07352241017885411, 0.1384383201682349], 'true': [0.004334086463207401, 0.11434933447009338]}, {'': [0.04095767923172015, 0.07524781789549177], 'false': [0.0641930779154527, 0.14307249126105928], 'false,false': [0.14307249126105928, nan], 'false,false,true': [0.21002546687028778, 5.374477290764901e-06], 'true': [0.04312210192928808, 0.0], 'true,true': [0.0021758968620743456, 0.13787770670943683], 'true,true,false': [nan, 0.13787770670943683]}, {'': [0.08372955505976944, 0.07122355070721637], 'true': [0.04839016983763838, 0.08099325020873258], 'false': [0.0008497828713118216, 0.07193353853591913], 'false,false': [0.0711278117520697, 0.09162829492414691], 'false,false,false': [0.09162829492414691, nan], 'true,true': [0.04839016983763838, nan], 'false,true': [0.0008497828713118216, nan]}, {'': [0.0034479564687135175, 0.07389482156609606], 'false': [0.06496162369678457, 0.13777989378421523], 'false,false': [0.14376400306601175, 0.09161492642717035], 'false,false,true': [nan, 0.14376400306601175], 'false,false,false': [0.09161492642717035, nan], 'true': [0.00014714513500037793, 0.003925938231184996], 'true,true': [-3.469446951953614e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09388496124284271, 0.07510073856670772], 'true': [0.118649174330557, 0.002864459371169007], 'true,true': [0.08815914370543661, 0.18161309979672408], 'false': [0.0010094782189354983, 0.07507981679108648], 'false,false': [0.06475605367864463, 0.1589881112946927], 'false,false,false': [0.16090267648952902, 0.1360451912638998], 'false,true': [0.0002485288473251616, 0.001514899596908148], 'false,true,true': [0.0002485288473251616, nan]}, {'': [0.048626450033063824, 0.0717773148184349], 'false': [0.020742053956044223, 0.07245511115359886], 'true': [0.06581167436059578, 0.0022287301021111003], 'false,true': [0.02419432520386999, 0.0], 'false,true,true': [nan, 0.02419432520386999], 'true,false': [0.0022287301021111003, nan], 'true,false,true': [0.0026004897297971417, 0.00016275373499016754], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.5822868661339945;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | else return 0.7823913593419369;  // std dev = 2.150, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.324815601766179;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.15226658215833588;  // std dev = 1.879, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 1.49e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.45568772185754525;  // std dev = 1.881, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.6643588696739788;  // std dev = 2.346, 76.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=70 */
%   | | else return -0.12544463852839163;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.820029202799621;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4207475943146043;  // std dev = 1.870, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.1861558896066797;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.16141551998147677;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5599434339904564;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2090766097965275;  // std dev = 2.243, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.348677058171911;  // std dev = 1.693, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.4861315155087137;  // std dev = 1.820, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | else return -0.13303264761548259;  // std dev = 0.044, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.38079128194945544;  // std dev = 2.110, 33.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=24 */
%   | | | else return 0.2660292054079338;  // std dev = 2.541, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else return -0.11231637819360614;  // std dev = 3.73e-09, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(E, A), phenotype(E, D) )
%   | | | then return 0.43956597683104776;  // std dev = 0.084, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1354111387578559;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.2491530825083567;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.42858931406110823;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.4988152350315383;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(G, J) )
%   | | | then return 0.091609046663256;  // std dev = 1.717, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return -0.13430553951303312;  // std dev = 0.490, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.07412518278802116;  // std dev = 4.509, 216.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=68 */
%   | | | else return 0.17013198529487938;  // std dev = 2.170, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.3251113843854191;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.4194252482938721;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.33687461896713244;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.19472132546368418;  // std dev = 1.808, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.4212130172092256;  // std dev = 2.306, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | else return -0.11888665907015158;  // std dev = 0.025, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.386074487983763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.22174871260748152;  // std dev = 1.430, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0470860659150098;  // std dev = 1.599, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.22144342705926284;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.25224218287277067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.11058484346475642;  // std dev = 2.180, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return -0.09888591103839507;  // std dev = 0.115, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.029721485195190578;  // std dev = 1.167, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.10448912836574353;  // std dev = 2.979, 119.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=54 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.1352864397658461;  // std dev = 2.079, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.10524202038728206;  // std dev = 1.209, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.17554538163016675;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2462357737298092;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(A, H) )
%   | | | then return 0.03311626544467435;  // std dev = 1.398, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return -0.21980718029344581;  // std dev = 1.209, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09351409318959748;  // std dev = 1.548, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return -0.005175947808490211;  // std dev = 2.361, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.2323747691913768;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then return 0.0876377109342257;  // std dev = 0.253, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.024032494416750542;  // std dev = 2.671, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.09086507999181631;  // std dev = 1.148, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19706457419317977;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(D, F), location(A, G) )
%   | | then if ( recursion_proteinclass(D, B), location(D, G) )
%   | | | then return 0.26302026123178124;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12211851168696344;  // std dev = 1.314, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else if ( interaction(H, A), interaction(D, H) )
%   | | | then return -0.08563100188760657;  // std dev = 1.010, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.06349187370083029;  // std dev = 1.386, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.07932612712559453;  // std dev = 1.202, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.047065451709643574;  // std dev = 1.235, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.02318474549192006;  // std dev = 2.657, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | | else return 0.06461837745570488;  // std dev = 2.574, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.1520987055120782;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.21484427753308033;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15893849175916205;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.10688939550197088;  // std dev = 0.352, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.25391689610296986;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4085673729534781;  // std dev = 0.406, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1126265886054938;  // std dev = 0.615, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.03934148169120101;  // std dev = 1.454, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.06994562660584884;  // std dev = 3.274, 149.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, A), complex(A, E) )
%   | | then return -0.06257462274332933;  // std dev = 0.853, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.13515048166828508;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.170954080833526;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.20641514343693493;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.16896133152569315;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.031040289054775363;  // std dev = 1.659, 49.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=8 */
%   | | | else return -0.14997165344728897;  // std dev = 0.673, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.048953217013964566;  // std dev = 2.260, 73.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=33 */
%   | | | else return -0.017769870689124695;  // std dev = 3.550, 169.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=48 */


Results
   AUC ROC   = 0.985868
   AUC PR    = 0.252646
   CLL	      = -0.172209
   Precision = 0.222874 at threshold = 0.5
   Recall    = 0.883721
   F1        = 0.355972


Total learning time: 78.621 seconds
Total inference time: 38.53 seconds
AUC ROC: 0.985868


Results scoring model
   AUC ROC   = 0.983934
   AUC PR    = 0.221179
   CLL	      = -0.184936
   Precision = 0.126341 at threshold = 0.5
   Recall    = 0.938053
   F1        = 0.222689


Total scoring time: 168.156 seconds
Refined model CLL: -0.184936


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984523
   AUC PR    = 0.310742
   CLL	      = -0.160164
   Precision = 0.237179 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.371859


Total learning time: 358.334 seconds
Total inference time: 20.705 seconds
AUC ROC: 0.984523
Total revision time: 358.334
Best scored revision CLL: -0.176619


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 02:19:57
{'AUC ROC': 0.984523, 'AUC PR': 0.310742, 'CLL': -0.160164, 'Precision': [0.237179, 0.5], 'Recall': 0.860465, 'F1': 0.371859, 'Learning time': 358.334, 'Inference time': 20.705, 'parameter_0.4': {'AUC ROC': 0.984523, 'AUC PR': 0.310742, 'CLL': -0.160164, 'Precision': [0.237179, 0.5], 'Recall': 0.860465, 'F1': 0.371859, 'Learning time': 22.863, 'Inference time': 20.705}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7765162820382877;  // std dev = 1.917, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0.7359267128772896;  // std dev = 3.107, 90.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=79 */
%   | | else return -0.14185106490048802;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20508771060971645;  // std dev = 3.332, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7234145445547744;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5336614886487066;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6072552096568508;  // std dev = 1.614, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return 0.6151184845600726;  // std dev = 3.622, 119.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=104 */
%   | | else return -0.12544463852839202;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5070214158680844;  // std dev = 2.464, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return -0.16426870302522392;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.4954537890252137;  // std dev = 1.746, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.3662567165887276;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.26851666525949713;  // std dev = 4.063, 93.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=49 */
%   | else return -0.12564241324841388;  // std dev = 0.501, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5948104033473391;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4988486232760375;  // std dev = 2.833, 83.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=74 */
%   | | | else return -0.11231637819360638;  // std dev = 2.11e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4180127616029806;  // std dev = 0.962, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.16508363545765625;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.41911759085963807;  // std dev = 0.616, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.38037595802460694;  // std dev = 1.243, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.04180027346938688;  // std dev = 5.414, 366.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=97 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.05152225766964545;  // std dev = 3.280, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3583472634303567;  // std dev = 0.183, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.13763515304625693;  // std dev = 1.378, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.38999803351265355;  // std dev = 1.810, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   | | | else return 0.38305412424294905;  // std dev = 2.663, 86.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=78 */
%   | | else return -0.11198238919520948;  // std dev = 0.301, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4371333105294156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.09272052334847859;  // std dev = 3.051, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2825916193889439;  // std dev = 0.156, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.33311958249319473;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2972154185986473;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.030595543578075934;  // std dev = 4.841, 424.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=124 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4116195450289703;  // std dev = 2.130, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return -0.14725853361926772;  // std dev = 0.039, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.097532222035834;  // std dev = 2.251, 46.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=35 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009533567641007554;  // std dev = 3.638, 176.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=38 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( function(A, G) )
%   | | then return 0.16549238027052435;  // std dev = 0.942, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.03347121964450276;  // std dev = 4.196, 261.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=84 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.030330939333637633;  // std dev = 0.788, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1180330220891317;  // std dev = 0.931, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22040341974246946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.10747586106976184;  // std dev = 1.334, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(G, A) )
%   | then return 0.018122916829689167;  // std dev = 4.829, 428.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=124 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.052908307673119305;  // std dev = 2.805, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( function(A, J) )
%   | | | then return -0.02003158191855722;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18053012511340322;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.19218057426504173;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.05553152477562577;  // std dev = 1.239, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.3374940417839296;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2988607469153131;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.014827226043777824;  // std dev = 4.715, 405.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=116 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12272163997714328;  // std dev = 2.511, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.13633809567131133;  // std dev = 0.595, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.010161063897508016;  // std dev = 1.563, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.2483817602263213;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19942335329480704;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11531528069548291;  // std dev = 1.001, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19612090188595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.013622072048757879;  // std dev = 5.488, 461.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=134 */


Results
   AUC ROC   = 0.984975
   AUC PR    = 0.322929
   CLL	      = -0.167218
   Precision = 0.235669 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.37


Total learning time: 33.949 seconds
Total inference time: 20.942 seconds
AUC ROC: 0.984975


Results scoring model
   AUC ROC   = 0.975433
   AUC PR    = 0.206385
   CLL	      = -0.18383
   Precision = 0.114221 at threshold = 0.5
   Recall    = 0.893491
   F1        = 0.202549


Total scoring time: 138.011 seconds
Parameter learned model CLL: -0.18383


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false': [0.0, 0, 1], 'true,false': [0.964, 1, 13], 'false,true,true,true': [1.917, 4, 45], 'false,true,true,false': [3.107, 11, 79], 'false,true,false': [0.0, 274, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.332, 32, 17], 'false,false,false,false': [0.949, 9, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.027, 0, 18], 'true,false': [1.265, 2, 8], 'false,true,true,true': [1.614, 3, 20], 'false,true,true,false': [3.622, 15, 104], 'false,true,false': [0.0, 302, 0], 'false,false,true,true': [2.464, 9, 19], 'false,false,true,false': [0.066, 36, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.746, 4, 36], 'true,true,false,true': [0.586, 1, 2], 'true,true,false,false': [4.063, 44, 49], 'true,false': [0.501, 141, 0], 'false,true': [0.065, 0, 8], 'false,false,true,true': [2.833, 9, 74], 'false,false,true,false': [2.11e-08, 169, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.962, 1, 26], 'true,false': [0.0, 0, 0], 'false,true,true': [1.161, 2, 4], 'false,true,false': [0.616, 1, 5], 'false,false,true,true': [1.243, 3, 19], 'false,false,true,false': [5.414, 269, 97], 'false,false,false,true': [3.28, 46, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.183, 0, 16], 'true,false': [1.378, 3, 10], 'false,true,true,true': [1.81, 4, 46], 'false,true,true,false': [2.663, 8, 78], 'false,true,false': [0.301, 269, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.051, 41, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.156, 0, 19], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.045, 0, 6], 'true,false': [0.0, 0, 1], 'false,true': [4.841, 300, 124], 'false,false,true,true': [2.13, 6, 19], 'false,false,true,false': [0.039, 29, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'function(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true,true': [2.251, 11, 35], 'true,true,false': [0.0, 0, 0], 'true,false': [3.638, 138, 38], 'false,true,true': [0.942, 1, 10], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.196, 177, 84], 'false,false,false,true': [0.788, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.931, 1, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [1.334, 2, 13], 'false,true': [4.829, 304, 124], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.805, 28, 17], 'false,false,false,true': [0.869, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.034, 0, 14], 'true,true,false': [0.042, 0, 3], 'true,false': [1.239, 2, 9], 'false,true,true,true': [0.02, 0, 4], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.079, 0, 5], 'false,false,true': [4.715, 289, 116], 'false,false,false,true': [2.511, 20, 17], 'false,false,false,false': [0.595, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [1.563, 3, 17], 'true,false,true,true': [0.06, 0, 4], 'true,false,true,false': [0.028, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.001, 2, 8], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [5.488, 327, 134]}]]
[{'': [0.035665294924555065, 0.21092482422931524], 'false': [0.21009679367294418, 0.21638888888888838], 'false,false': [0.0, 0.2120080436656128], 'false,false,false': [0.22657226155768379, 0.09000000000000005], 'false,true': [0.09626830909373645, -4.2139852029567983e-17], 'false,true,true': [0.07496876301541104, 0.1072839506172843], 'true': [-2.7328566760003855e-16, 0.06632653061224467], 'true,true': [-1.4802973661668753e-16, 0.0]}, {'': [0.06543555334218405, 0.16083716259018488], 'false': [0.15431410177018243, 0.20579415567135112], 'false,false': [0.20579415567135112, nan], 'false,false,true': [0.21675092914575633, 0.00012141036765523731], 'false,true': [0.11075148040558792, -8.528865619636965e-17], 'false,true,true': [0.11328555403620068, 0.11025168657336194], 'true': [4.0384562793822137e-05, 0.15999999999999986]}, {'': [0.13155636531615883, 0.11847540064522367], 'true': [0.15695266717875106, 0.001782998395681379], 'true,true': [0.07622734182864846, 0.17584601809129588], 'true,true,false': [0.1145317686165528, 0.17752536218055223], 'false': [0.000521999048925248, 0.11434720336706042], 'false,false': [0.11434720336706042, nan], 'false,false,true': [0.096677302760032, 2.6277468038465243e-18]}, {'': [0.03426437894506949, 0.10033248571815385], 'false': [0.16006049471987674, 0.09734944811902992], 'false,true': [0.22452234373384897, 0.06333202045731645], 'false,false': [0.08566550435613196, 0.16810628328888927], 'false,false,false': [0.16810628328888927, nan], 'false,false,true': [0.07022424618695174, 0.08009383011706771], 'true': [0.03426437894506949, nan]}, {'': [0.0787147184897693, 0.09107506577076352], 'false': [0.08105516512520924, 0.1570725495426549], 'false,false': [0.0, 0.1577577933455104], 'false,false,false': [0.1577577933455104, nan], 'false,true': [0.07626124885452658, 0.00033576483419164274], 'true': [0.0020834714161781787, 0.1461535005129631], 'false,true,true': [0.0655326718113642, 0.0824810664867881], 'false,false,true': [nan, 0.0]}, {'': [0.001458928444182076, 0.06795612009581894], 'false': [0.05528123058820641, 0.16167407814012227], 'false,false': [0.16167407814012227, nan], 'false,false,true': [0.1814138981519526, 5.2961000088803324e-05], 'true': [0.0015170457569954187, 0.0], 'true,true': [0.0012752848156602579, 0.00034228502907037345], 'true,true,false': [nan, 0.00034228502907037345]}, {'': [0.08433466143897493, 0.06941581065388973], 'true': [0.11013130984287148, 0.07521712212559871], 'true,true': [0.11013130984287148, nan], 'false': [0.08068870786010485, 0.0682609867931751], 'false,true': [0.08068870786010485, nan], 'false,false': [0.06744888120457042, 0.10357794014065304], 'false,false,false': [0.10357794014065304, nan]}, {'': [0.09167233024530053, 0.06680579664478449], 'true': [0.06257514876993799, 0.11867554850140817], 'false': [0.0544795215784017, 0.16963627910401652], 'false,false': [0.17486207578632432, 0.12574848560996246], 'false,false,true': [nan, 0.17486207578632432], 'false,false,false': [0.12574848560996246, nan], 'true,true': [0.06664007187254786, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.058830243109801304, 0.06625067664499917], 'false': [0.0010991022558062527, 0.06588487422358294], 'false,false': [0.054880439500363414, 0.1665084601706976], 'false,false,false': [0.1704135476172496, 0.11817421272080951], 'true': [0.00019186113569321715, 0.13965217388688703], 'false,true': [9.562981495353506e-05, 0.0012385328874193412], 'true,true': [8.052018041916036e-05, 0.0005996721711238653], 'false,true,true': [9.562981495353506e-05, nan]}, {'': [0.09412005256031634, 0.06621901434322107], 'true': [0.12217050589538125, 0.001075292641541011], 'false': [0.09161310527309473, 0.06533599481531188], 'false,true': [0.10018082048986081, 0.0], 'false,true,true': [nan, 0.10018082048986081], 'true,false': [0.001075292641541011, nan], 'true,false,true': [0.0008859959750123145, 0.00016142970397650113], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.6729637499143266;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=22 */
%   | | | else return 0.8204130860429073;  // std dev = 1.962, 106.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=102 */
%   | | else return -0.1418510649004877;  // std dev = 1.63e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.05045662740720463;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7373228684706172;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5139122245676099;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=22 */
%   | | | else return 0.6802972713891857;  // std dev = 2.183, 107.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=102 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.4157509015734087;  // std dev = 2.290, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.8243503921470802;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.17258907379695781;  // std dev = 0.075, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), enzyme(G, H) )
%   | | | then return 0.3642539144918416;  // std dev = 1.211, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.5752871191883953;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.047130710169194553;  // std dev = 2.898, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.3103524500946881;  // std dev = 3.597, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | else return -0.12197463879764828;  // std dev = 0.028, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.5759457787501623;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( location(A, M) )
%   | | | then return 0.27782600742304453;  // std dev = 4.116, 121.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=71 */
%   | | | else return 0.08172150316223337;  // std dev = 1.083, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.1123163781936062;  // std dev = 7.60e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.43863368617696014;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.15879016491361483;  // std dev = 1.139, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.4456327520396187;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.5200453443493115;  // std dev = 0.864, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.243127312032725;  // std dev = 0.864, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.11772184586851493;  // std dev = 0.055, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.0025017919779625006;  // std dev = 0.309, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.14247069915978267;  // std dev = 2.740, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.07195525303318871;  // std dev = 4.452, 202.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3353263418888919;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.41176041741861485;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3300473303378436;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), complex(A, H) )
%   | | | then return 0.2316140926664114;  // std dev = 2.215, 50.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | | | else return 0.3669260970105484;  // std dev = 3.357, 98.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=84 */
%   | | else return -0.11187947184316593;  // std dev = 0.021, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3614139864351512;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2948907965281003;  // std dev = 1.749, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return 0.009449102548580142;  // std dev = 1.694, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.05932060949917097;  // std dev = 1.457, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.30520615957045655;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.21148227822560564;  // std dev = 0.992, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.26513611373248414;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24429986805848458;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(I, A) )
%   | then return 0.02690135205849594;  // std dev = 0.247, 426.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=124 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.08894158865532015;  // std dev = 1.191, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3116833067331027;  // std dev = 1.926, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return -0.14845077960650344;  // std dev = 0.040, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, D) )
%   | | then return 0.3033918920092404;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.026748901014752188;  // std dev = 1.152, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, A), phenotype(A, F) )
%   | | then return -0.19588419839574514;  // std dev = 0.210, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.017126737071623547;  // std dev = 0.253, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2477229338588239;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.25246237081423045;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06796904824657994;  // std dev = 2.502, 96.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=37 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.15115268150200148;  // std dev = 0.964, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.02323446424575334;  // std dev = 4.345, 265.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=78 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.19826873699766523;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.04716087818922569;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18451017259891278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1621578208415238;  // std dev = 0.224, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( complex(A, F), location(A, G) )
%   | then return -0.005770436831646094;  // std dev = 0.216, 187.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=47 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return -0.09098586399398342;  // std dev = 1.227, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.020663257597350684;  // std dev = 1.802, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.0786137590665284;  // std dev = 3.029, 87.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=39 */
%   | | | else return 0.03905358963060537;  // std dev = 2.869, 141.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1708352564449164;  // std dev = 0.032, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.05973421670447135;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return -0.1438619432965468;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21635734194228354;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2056564310951543;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1781571468274838;  // std dev = 4.089, 197.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=126 */
%   | | | else return -0.11885859129272448;  // std dev = 1.103, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.23105364214991006;  // std dev = 0.444, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11788245282985302;  // std dev = 1.098, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.15730684576475437;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.1863346463346958;  // std dev = 1.052, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.15036575411374775;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18359351279124736;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.09142908072808312;  // std dev = 0.670, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2144947202223364;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.23105793786597217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then return -0.025490222360285093;  // std dev = 0.248, 189.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=41 */
%   | | else return 0.026666171761842314;  // std dev = 0.219, 288.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=93 */


Results
   AUC ROC   = 0.988654
   AUC PR    = 0.325054
   CLL	      = -0.169014
   Precision = 0.167347 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.284722


Total learning time: 125.57 seconds
Total inference time: 38.966 seconds
AUC ROC: 0.988654


Results scoring model
   AUC ROC   = 0.987536
   AUC PR    = 0.31242
   CLL	      = -0.172693
   Precision = 0.12675 at threshold = 0.5
   Recall    = 0.964497
   F1        = 0.224055


Total scoring time: 262.814 seconds
Refined model CLL: -0.172693


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988654
   AUC PR    = 0.325054
   CLL	      = -0.169014
   Precision = 0.167347 at threshold = 0.5
   Recall    = 0.953488
   F1        = 0.284722


Total learning time: 560.344 seconds
Total inference time: 38.966 seconds
AUC ROC: 0.988654
Total revision time: 560.344
Best scored revision CLL: -0.172693


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 02:30:18
{'AUC ROC': 0.988654, 'AUC PR': 0.325054, 'CLL': -0.169014, 'Precision': [0.167347, 0.5], 'Recall': 0.953488, 'F1': 0.284722, 'Learning time': 560.344, 'Inference time': 38.966, 'parameter_0.6': {'AUC ROC': 0.984975, 'AUC PR': 0.322929, 'CLL': -0.167218, 'Precision': [0.235669, 0.5], 'Recall': 0.860465, 'F1': 0.37, 'Learning time': 33.949, 'Inference time': 20.942}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.783522069427871;  // std dev = 2.151, 67.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=62 */
%   | | | else return 0.7792015666784582;  // std dev = 2.879, 114.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=105 */
%   | | else return -0.1418510649004875;  // std dev = 2.51e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1860177875585285;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6825393443832677;  // std dev = 0.966, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.659917616822094;  // std dev = 0.979, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6987521440577679;  // std dev = 0.981, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.5990553161864799;  // std dev = 4.361, 162.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=140 */
%   | | else return -0.12544463852839227;  // std dev = 0.000, 413.000 (wgt'ed) examples reached here.  /* #neg=413 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.48471927567224193;  // std dev = 2.891, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   | | | else return -0.16345830264536745;  // std dev = 0.039, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5540594893001941;  // std dev = 0.988, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.33621123419385446;  // std dev = 1.168, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.2722765330196708;  // std dev = 4.598, 120.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=64 */
%   | else return -0.11900037832323312;  // std dev = 0.166, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5906659919238316;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4855701811118096;  // std dev = 3.407, 111.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=98 */
%   | | | else return -0.11231637819360674;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4181627410288628;  // std dev = 1.001, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.3720950721199555;  // std dev = 0.855, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.5227421367704681;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.34744250025906376;  // std dev = 1.391, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.031122780924107758;  // std dev = 6.241, 525.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=128 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.07880024012126852;  // std dev = 3.499, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2502727267299773;  // std dev = 1.364, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0.15136472186389432;  // std dev = 1.717, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.32366709931194776;  // std dev = 2.791, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | | else return 0.42790896967901787;  // std dev = 2.225, 108.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=103 */
%   | | else return -0.10872117578240094;  // std dev = 0.280, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.43753443157175764;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41632287018422;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.09321732040165534;  // std dev = 3.442, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.25380455284443243;  // std dev = 0.976, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31483120418286836;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.30881958589224445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.027204283726741132;  // std dev = 5.729, 548.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=167 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3176463682242003;  // std dev = 2.779, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return -0.15130228738920837;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.1844135079289213;  // std dev = 1.980, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | else if ( function(A, F) )
%   | | | then return 0.09081183590848238;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009426503481764185;  // std dev = 4.005, 228.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=47 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.25589032404173956;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03287806512957975;  // std dev = 4.709, 351.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=112 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.06602461813888898;  // std dev = 1.014, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.06474200578964619;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20366881473331178;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22510603896625767;  // std dev = 0.157, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(G, A) )
%   | then return 0.015809086526602147;  // std dev = 5.677, 557.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=167 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.11227468179566631;  // std dev = 0.942, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11725792208721666;  // std dev = 2.720, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | else if ( function(A, J) )
%   | | | then return 0.06428688204770486;  // std dev = 0.941, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1835827825691972;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.18494712815626624;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19151909431695466;  // std dev = 0.137, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.279513309866099;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12489869877691337;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.006926291378912271;  // std dev = 5.592, 553.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=156 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.036904237650237176;  // std dev = 2.910, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return -0.07225736565227488;  // std dev = 1.118, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15781404224550227;  // std dev = 0.022, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.20003199159650578;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14568338049482685;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.8537544986752799;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return -0.7233944649992288;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.24779236825014453;  // std dev = 0.103, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.19881772259803776;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20964504467456624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.010540665097133183;  // std dev = 6.379, 612.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=178 */


Results
   AUC ROC   = 0.98491
   AUC PR    = 0.24069
   CLL	      = -0.163871
   Precision = 0.237179 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.371859


Total learning time: 40.414 seconds
Total inference time: 20.385 seconds
AUC ROC: 0.98491


Results scoring model
   AUC ROC   = 0.975988
   AUC PR    = 0.168117
   CLL	      = -0.180746
   Precision = 0.116438 at threshold = 0.5
   Recall    = 0.902655
   F1        = 0.206269


Total scoring time: 159.721 seconds
Parameter learned model CLL: -0.180746


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 2], 'true,false': [1.345, 2, 19], 'false,true,true,true': [2.151, 5, 62], 'false,true,true,false': [2.879, 9, 105], 'false,true,false': [2.51e-07, 364, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [1.309, 12, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.966, 1, 22], 'true,false': [0.979, 1, 12], 'false,true,true,true': [0.981, 1, 27], 'false,true,true,false': [4.361, 22, 140], 'false,true,false': [0.0, 413, 0], 'false,false,true,true': [2.891, 13, 25], 'false,false,true,false': [0.039, 28, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.988, 1, 45], 'true,true,false,true': [1.168, 3, 6], 'true,true,false,false': [4.598, 56, 64], 'true,false': [0.166, 166, 0], 'false,true': [0.01, 0, 13], 'false,false,true,true': [3.407, 13, 98], 'false,false,true,false': [0.0, 218, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.001, 1, 34], 'true,false': [0.0, 0, 0], 'false,true,true': [0.855, 2, 8], 'false,true,false': [0.089, 0, 6], 'false,false,true,true': [1.391, 5, 28], 'false,false,true,false': [6.241, 397, 128], 'false,false,false,true': [3.499, 57, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [1.364, 2, 18], 'true,false': [1.717, 4, 16], 'false,true,true,true': [2.791, 9, 64], 'false,true,true,false': [2.225, 5, 103], 'false,true,false': [0.28, 391, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.442, 46, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.976, 1, 22], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.055, 0, 11], 'true,false': [0.0, 0, 1], 'false,true': [5.729, 381, 167], 'false,false,true,true': [2.779, 12, 25], 'false,false,true,false': [0.0, 34, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.98, 6, 47], 'true,true,false,true': [0.707, 1, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.005, 181, 47], 'false,true,true': [0.055, 0, 16], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.709, 239, 112], 'false,false,false,true': [1.014, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [1.312, 2, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.157, 0, 19], 'false,true': [5.677, 390, 167], 'false,false,true,true': [0.942, 2, 1], 'false,false,true,false': [2.72, 32, 21], 'false,false,false,true': [0.941, 7, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.024, 0, 16], 'true,true,false': [0.006, 0, 3], 'true,false': [0.137, 0, 15], 'false,true,true,true': [0.077, 0, 8], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.991, 1, 6], 'false,false,true': [5.592, 397, 156], 'false,false,false,true': [2.91, 47, 20], 'false,false,false,false': [1.118, 10, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.022, 0, 19], 'true,false,true,true': [0.071, 0, 5], 'true,false,true,false': [0.004, 0, 10], 'true,false,false': [0.0, 2, 0], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.103, 0, 11], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false': [6.379, 434, 178]}]]
[{'': [0.05246913580247073, 0.21320746452854858], 'false': [0.21252756501978237, 0.21778435239973812], 'false,false': [1.4802973661668753e-16, 0.2072888888888898], 'false,true': [0.07136534293825618, 1.7324359285359586e-16], 'false,false,false': [0.2203708680462237, 0.12244897959183677], 'false,true,true': [0.06905769659166784, 0.07271468144044578], 'true': [-2.3684757858670006e-16, 0.0861678004535146], 'true,true': [-2.7328566760003855e-16, 0.0]}, {'': [0.05267267934680437, 0.16006111356336178], 'false': [0.15145287760764717, 0.2292824158103758], 'false,false': [0.2292824158103758, nan], 'false,false,true': [0.21994779912823256, 5.539120592880166e-05], 'false,true': [0.10642602709417065, -1.290331844600666e-16], 'false,true,true': [0.034391633078760746, 0.11741165402718656], 'true': [0.040601213322682586, 0.07370294183222342]}, {'': [0.13157159682123523, 0.1199987075397187], 'true': [0.14930898354764055, 0.000165620122131225], 'true,true': [0.02122796796849393, 0.174765542453399], 'true,true,false': [0.15159608443872966, 0.1762180671988552], 'false': [7.436702864251397e-06, 0.11518897991386126], 'false,false': [0.11518897991386126, nan], 'false,false,true': [0.10455246684789975, -4.889055521285093e-17]}, {'': [0.028648931020109358, 0.09083348138759709], 'false': [0.05146968362623963, 0.08837354287660598], 'false,false': [0.07884190974339253, 0.154963046753657], 'false,false,false': [0.154963046753657, nan], 'false,false,true': [0.05860362743233407, 0.07419661199504135], 'false,true': [0.07305702564069796, 0.0013066939639240587], 'true': [0.028648931020109358, nan]}, {'': [0.12265265829332586, 0.08701836462564236], 'true': [0.0929746513858228, 0.14743926848753458], 'false': [0.07614754180687966, 0.17142852697077243], 'false,false': [9.998451922158906e-05, 0.1741814238020952], 'false,false,false': [0.1741814238020952, nan], 'false,true': [0.07299845444248167, 0.0002002308532142482], 'false,true,true': [0.10670835421406681, 0.04583049110359389], 'false,false,true': [0.0, 0.0]}, {'': [0.028141037214294812, 0.07223447869692745], 'false': [0.059890338117936266, 0.1636685980489105], 'false,false': [0.1636685980489105, nan], 'false,false,true': [0.20875639437750831, -3.918434204559376e-17], 'true': [0.028933170446426706, 0.0], 'true,true': [0.0414346589511864, 0.000274347423328658], 'true,true,false': [nan, 0.000274347423328658]}, {'': [0.07804830243304113, 0.06375418732914477], 'true': [0.08068823122242151, 0.07036331694710568], 'true,true': [0.07398051612668706, 0.25000000000000006], 'true,true,false': [0.25000000000000006, nan], 'false': [0.00018807228651573915, 0.06447868629873797], 'false,false': [0.06317368871654169, 0.1143023653774036], 'false,false,false': [0.1143023653774036, nan], 'false,true': [0.00018807228651573915, nan]}, {'': [0.054601162189988006, 0.06736492936483054], 'false': [0.05786357961676461, 0.14139291705755413], 'false,false': [0.1505894834246154, 0.088488388992416], 'false,false,true': [0.295535490159275, 0.13956257017851725], 'false,false,false': [0.088488388992416, nan], 'true': [0.10322923344330237, 0.0012971555268920653], 'true,true': [0.1147224655600639, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0005839493316922769, 0.0661193274024002], 'false': [0.07175817767250332, 0.06506960989030554], 'false,true': [0.0007403077110220563, 0.14017176271527648], 'false,false': [0.056546633191762584, 0.1245734153234814], 'false,false,false': [0.12642125351622044, 0.104150127258956], 'false,true,true': [0.0007403077110220563, nan], 'true': [3.380833794002459e-05, 0.0012474819333351927], 'true,true': [3.735270802966012e-05, 1.3337503316598887e-05]}, {'': [0.05440574663718614, 0.06693217324704893], 'false': [0.05855298249005401, 0.0664985436011801], 'false,true': [0.07293171728597005, 2.6051311855304626e-05], 'false,true,true': [0.0, 0.000961551313130915], 'true': [2.642287965181593e-05, 0.10835648520297371], 'true,false': [0.000990332849633413, 0.0], 'true,false,true': [0.0009988722473225353, 1.4726412283228019e-06], 'false,true,false': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;function(A, E), function(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,true;interaction(G, H), function(A, I).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.5854216623722386;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=32 */
%   | | | else return 0.7891834178581307;  // std dev = 3.051, 145.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=135 */
%   | | else return -0.14185106490048746;  // std dev = 2.63e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.051697322196286546;  // std dev = 2.200, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25820965689537545;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.6607973727216229;  // std dev = 0.263, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6242028876620385;  // std dev = 0.321, 189.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=167 */
%   | | else return -0.12544463852839224;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.517937705178353;  // std dev = 1.849, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return 0.2959663546860756;  // std dev = 2.645, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else return -0.1590855457341318;  // std dev = 0.066, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5183079049167297;  // std dev = 0.228, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360633;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3143553881315044;  // std dev = 4.957, 140.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=84 */
%   | else return -0.12202269461106086;  // std dev = 0.430, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J), complex(A, K) )
%   | | | then return 0.5698045316621705;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.0069749418134537385;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6029767124112789;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | then return 0.2295951549146014;  // std dev = 0.388, 192.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=98 */
%   | | else return -0.1123163781936062;  // std dev = 9.88e-08, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4472231728393459;  // std dev = 0.256, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.2530051293207518;  // std dev = 0.524, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4702222560963647;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.47715395970738267;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(I, A), interaction(I, G) )
%   | | | then return -0.046304234491554644;  // std dev = 2.239, 85.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=11 */
%   | | | else return 0.0540266181336709;  // std dev = 3.055, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11994984080900263;  // std dev = 5.006, 209.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=76 */
%   | | | else return 0.056857186257491026;  // std dev = 4.882, 254.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=69 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then return -0.01101837157692461;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3223149617564087;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3510020564698565;  // std dev = 0.229, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.344747530661657;  // std dev = 1.994, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.45596230080871447;  // std dev = 2.878, 150.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=141 */
%   | | else return -0.11679036793843163;  // std dev = 0.371, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3619464610318279;  // std dev = 0.000754, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.0675848907662601;  // std dev = 2.934, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.13918190679482548;  // std dev = 1.854, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2390736289533307;  // std dev = 0.182, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0.26080231964352046;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.3002044198922076;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1049986134325361;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.003999420886812539;  // std dev = 2.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.05984323107335091;  // std dev = 5.196, 390.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=136 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.3333052956744533;  // std dev = 2.273, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return 0.1562750845915506;  // std dev = 1.817, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return -0.14590416803935638;  // std dev = 0.075, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.2507105708269872;  // std dev = 0.152, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.21149125098755722;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1105251725388165;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then return -0.0029283388560223693;  // std dev = 0.241, 160.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=37 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.1568938764408016;  // std dev = 2.125, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.0051369264855420935;  // std dev = 2.622, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.08094075191379949;  // std dev = 0.327, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.24182617763782457;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.026086969170495206;  // std dev = 0.257, 384.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=115 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15173334975488545;  // std dev = 0.227, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return -0.06458513574806136;  // std dev = 1.579, 68.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=8 */
%   | | | else return 0.014087665877854576;  // std dev = 5.145, 347.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=109 */
%   | | else if ( enzyme(A, H), phenotype(E, I) )
%   | | | then return 0.13382051049202198;  // std dev = 1.344, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.037506137706844696;  // std dev = 1.716, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.05358226476684064;  // std dev = 1.381, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.12421328190046649;  // std dev = 1.167, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.3381526578337527;  // std dev = 1.164, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.0942712312508122;  // std dev = 2.628, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15623066924575776;  // std dev = 0.157, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return -0.24342434809841504;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22558130852329625;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.21313189738582064;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.23327519200064756;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( location(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.09636813335501139;  // std dev = 3.799, 127.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=62 */
%   | | | else return -0.12219788463056232;  // std dev = 0.919, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09650300677608985;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.025256567775154982;  // std dev = 5.237, 369.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=116 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.09049028471321421;  // std dev = 0.240, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else return 0.15338323868066453;  // std dev = 0.025, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(E, F), function(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10388267396822119;  // std dev = 1.020, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.16704658427059652;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.11699379397304095;  // std dev = 3.491, 113.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=62 */
%   | | | else return -0.09964178635314826;  // std dev = 0.470, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12175681505528092;  // std dev = 0.288, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.033564980591361745;  // std dev = 5.135, 342.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=116 */


Results
   AUC ROC   = 0.985646
   AUC PR    = 0.258175
   CLL	      = -0.176978
   Precision = 0.190709 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.315152


Total learning time: 105.949 seconds
Total inference time: 31.173 seconds
AUC ROC: 0.985646


Results scoring model
   AUC ROC   = 0.98112
   AUC PR    = 0.217072
   CLL	      = -0.186518
   Precision = 0.113228 at threshold = 0.5
   Recall    = 0.946903
   F1        = 0.202268


Total scoring time: 278.961 seconds
Refined model CLL: -0.186518


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98491
   AUC PR    = 0.24069
   CLL	      = -0.163871
   Precision = 0.237179 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.371859


Total learning time: 585.0450000000001 seconds
Total inference time: 20.385 seconds
AUC ROC: 0.98491
Total revision time: 585.0450000000001
Best scored revision CLL: -0.180746


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 02:40:55
{'AUC ROC': 0.98491, 'AUC PR': 0.24069, 'CLL': -0.163871, 'Precision': [0.237179, 0.5], 'Recall': 0.860465, 'F1': 0.371859, 'Learning time': 585.0450000000001, 'Inference time': 20.385, 'parameter_0.8': {'AUC ROC': 0.98491, 'AUC PR': 0.24069, 'CLL': -0.163871, 'Precision': [0.237179, 0.5], 'Recall': 0.860465, 'F1': 0.371859, 'Learning time': 40.414, 'Inference time': 20.385}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7522665821583358;  // std dev = 2.837, 85.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=76 */
%   | | | else return 0.7817600462106211;  // std dev = 3.187, 144.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=133 */
%   | | else return -0.14185106490048727;  // std dev = 2.63e-07, 460.000 (wgt'ed) examples reached here.  /* #neg=460 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2102616111558493;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7258163551164906;  // std dev = 0.049, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.7194734122109543;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.622732486960447;  // std dev = 2.102, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return 0.6556728406066821;  // std dev = 3.708, 186.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=171 */
%   | | else return -0.12544463852839235;  // std dev = 0.000, 494.000 (wgt'ed) examples reached here.  /* #neg=494 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8008187763373952;  // std dev = 0.193, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1651474316479036;  // std dev = 0.033, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18474595969269178;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5900953879456752;  // std dev = 0.098, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5683542804381514;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5932774466772761;  // std dev = 0.779, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.13437413184417354;  // std dev = 0.874, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.38208818196065103;  // std dev = 2.032, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.495252208539228;  // std dev = 4.024, 184.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=166 */
%   | | | else return -0.1123163781936065;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.15009140326841153;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.40082293780574435;  // std dev = 0.835, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.45871303154684506;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4601570227727949;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3883166298656364;  // std dev = 0.520, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.3303671459180532;  // std dev = 0.768, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3269762732406996;  // std dev = 1.988, 48.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | | | else return 0.019676235817802618;  // std dev = 6.672, 681.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=159 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.0779802993979183;  // std dev = 1.803, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.1121565534760814;  // std dev = 3.466, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.30591638931449755;  // std dev = 0.835, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.2916487902644902;  // std dev = 0.959, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3109580777175269;  // std dev = 2.702, 92.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=81 */
%   | | | else return 0.362272931986317;  // std dev = 3.582, 142.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=128 */
%   | | else return -0.1032473569060166;  // std dev = 0.077, 502.000 (wgt'ed) examples reached here.  /* #neg=502 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3066902429178687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3137571480110922;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.05439174681387936;  // std dev = 1.797, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.09295565453853463;  // std dev = 3.462, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2739599677153982;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26958331966026283;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18566934743526298;  // std dev = 1.341, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(G, A) )
%   | then return 0.025066182238024433;  // std dev = 6.236, 710.000 (wgt'ed) examples reached here.  /* #neg=501 #pos=209 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4425829229368932;  // std dev = 0.464, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14482606923851937;  // std dev = 0.031, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10154989409522047;  // std dev = 3.396, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.18928515062730583;  // std dev = 2.290, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.02151417886816484;  // std dev = 0.214, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7207608734927412;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.021973419739251893;  // std dev = 4.403, 302.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=56 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.2372270653921532;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2497151531634342;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03838819669826621;  // std dev = 5.281, 407.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=139 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.08053733685638943;  // std dev = 0.643, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0755069525668189;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19091971947148834;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1786675892629107;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14438586947951937;  // std dev = 1.363, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( interaction(G, A) )
%   | then return 0.00781651115634105;  // std dev = 6.380, 730.000 (wgt'ed) examples reached here.  /* #neg=521 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.04005900965321324;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010428270717548557;  // std dev = 3.630, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1009673933631761;  // std dev = 0.595, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.0225367855131986;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1346125546167292;  // std dev = 0.968, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.16016191287264542;  // std dev = 0.954, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.1191720870235673;  // std dev = 0.953, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.22773959288377293;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1666809752828587;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2615124725187518;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.022421079087458082;  // std dev = 5.940, 637.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=197 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05594108374228574;  // std dev = 3.535, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return -3.147544652711322E-4;  // std dev = 1.056, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.16534382171415257;  // std dev = 0.104, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.15355710423380955;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15153300597800404;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0029326602277048677;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22886937776482477;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, J), interaction(G, K) )
%   | | | then return 0.14445518790603432;  // std dev = 0.000707, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1211090363162245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.005930022598835764;  // std dev = 7.303, 772.000 (wgt'ed) examples reached here.  /* #neg=547 #pos=225 */


Results
   AUC ROC   = 0.984598
   AUC PR    = 0.309433
   CLL	      = -0.15838
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.393035


Total learning time: 9.204 seconds
Total inference time: 5.334 seconds
AUC ROC: 0.984598


Results scoring model
   AUC ROC   = 0.978395
   AUC PR    = 0.263516
   CLL	      = -0.172105
   Precision = 0.12619 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.222409


Total scoring time: 27.709 seconds
Parameter learned model CLL: -0.172105


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.949, 1, 9], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 31], 'false,true,true,true': [2.837, 9, 76], 'false,true,true,false': [3.187, 11, 133], 'false,true,false': [2.63e-07, 460, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [4.025, 46, 25], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.049, 0, 28], 'true,false': [5.16e-08, 0, 14], 'false,true,true,true': [2.102, 5, 38], 'false,true,true,false': [3.708, 15, 171], 'false,true,false': [0.0, 494, 0], 'false,false,true,true': [0.193, 0, 14], 'false,false,true,false': [0.033, 26, 0], 'false,false,false,true': [3.313, 31, 17], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.098, 0, 35], 'true,true,false,true': [0.076, 0, 7], 'true,true,false,false': [0.779, 1, 33], 'true,false': [0.874, 161, 0], 'false,true': [2.032, 5, 24], 'false,false,true,true': [4.024, 18, 166], 'false,false,true,false': [0.0, 348, 0], 'false,false,false,true': [3.431, 34, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.835, 1, 26], 'true,false,true': [0.002, 0, 12], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.52, 1, 10], 'false,true,false': [0.768, 1, 6], 'false,false,true,true': [1.988, 10, 38], 'false,false,true,false': [6.672, 522, 159], 'false,false,false,true': [1.803, 23, 10], 'false,false,false,false': [3.466, 36, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), complex(A, L)'}, {'true,true': [0.835, 1, 26], 'true,false': [0.959, 1, 16], 'false,true,true,true': [2.702, 11, 81], 'false,true,true,false': [3.582, 14, 128], 'false,true,false': [0.077, 502, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.797, 25, 10], 'false,false,false,false': [3.462, 36, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.054, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.061, 0, 9], 'true,false': [1.341, 2, 18], 'false,true': [6.236, 501, 209], 'false,false,true,true': [0.464, 0, 14], 'false,false,true,false': [0.031, 42, 0], 'false,false,false,true': [3.396, 32, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true,true': [2.29, 9, 65], 'true,true,false,true': [0.214, 1, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [4.403, 246, 56], 'false,true,true': [0.065, 0, 11], 'false,true,false': [0.002, 0, 6], 'false,false,true': [5.281, 268, 139], 'false,false,false,true': [0.643, 4, 3], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.363, 2, 31], 'false,true': [6.38, 521, 209], 'false,false,true,true': [0.852, 2, 2], 'false,false,true,false': [3.63, 68, 26], 'false,false,false,true': [0.595, 3, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'complex(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.968, 1, 22], 'true,true,false': [0.954, 2, 3], 'true,false': [0.953, 1, 17], 'false,true,true,true': [0.119, 0, 9], 'false,true,true,false': [0.609, 1, 1], 'false,true,false': [0.129, 0, 6], 'false,false,true': [5.94, 440, 197], 'false,false,false,true': [3.535, 51, 25], 'false,false,false,false': [1.056, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(G, K)'}, {'true,true': [0.104, 0, 25], 'true,false,true,true': [0.038, 0, 6], 'true,false,true,false': [0.032, 0, 6], 'true,false,false': [0.905, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.097, 0, 12], 'false,true,false,true': [0.000707, 0, 3], 'false,true,false,false': [0.0, 0, 1], 'false,false': [7.303, 547, 225]}]]
[{'': [0.022714981070850387, 0.21411514241683724], 'false': [0.21132412511770304, 0.23252741445369413], 'false,false': [0.0, 0.223544781535783], 'false,false,false': [0.22812933941678357, 0.1874999999999999], 'false,true': [0.07970862493088009, 1.5060416681871688e-16], 'false,true,true': [0.09467128027681644, 0.07055362654321466], 'true': [0.07638888888888877, 0.0], 'true,true': [0.08999999999999977, 0.0]}, {'': [6.556476618183435e-05, 0.16293674110183315], 'false': [0.1551419278016395, 0.22174108987295277], 'false,false': [0.2132389489752351, 0.22835234368807522], 'false,false,false': [0.22873263888888937, 0.2222222222222222], 'false,false,true': [0.002668870799231726, 4.108698452791433e-05], 'false,true': [0.07950119124605702, -1.4023869784738819e-16], 'false,true,true': [0.10272083367442057, 0.07392946320819245], 'true': [8.493617437250427e-05, 1.9032394707859825e-16]}, {'': [0.12001310253388289, 0.12855931402762436], 'false': [0.1423897939922682, 0.12417377957261319], 'false,false': [0.11394609948892569, 0.22632181357673467], 'false,false,false': [0.22632181357673467, nan], 'true': [0.008233012660410818, 0.0047394589355916035], 'false,false,true': [0.08798560384869054, -3.317907889684376e-17], 'true,true': [0.0002747113358547588, 0.01502615419089433], 'true,true,false': [0.0008316530905669543, 0.017842499049239336]}, {'': [0.016995173615109823, 0.08506107063347185], 'false': [0.048601222424663595, 0.08366147005862513], 'false,false': [0.07230203333077541, 0.1757059292814063], 'false,false,false': [0.09847514082969935, 0.22245948154235837], 'false,false,true': [0.08234946601744175, 0.0653760129340789], 'false,true': [0.024547962609708263, 0.0843470038234512], 'true': [0.02580348948190827, 5.331248847662007e-07], 'true,false': [1.8955551454406341e-07, 0.0]}, {'': [0.036808771838093904, 0.0815343151251611], 'false': [0.07056918834364118, 0.16614831946082348], 'false,false': [9.363965174369326e-06, 0.17132675635440045], 'false,false,false': [0.09223011593363949, 0.22200825327499338], 'false,true': [0.08666005790664559, 1.1906715509673861e-05], 'false,true,true': [0.07935528741914188, 0.09035744528625222], 'true': [0.02582107388373858, 0.05413490702276937], 'false,false,true': [0.0, 0.0]}, {'': [0.042886904554345226, 0.06688162926921286], 'false': [0.054773396176067364, 0.14748672255035636], 'false,false': [0.06856671488993936, 0.23064431684053466], 'false,false,false': [0.23064431684053466, nan], 'false,false,true': [0.01540918668292208, 2.3559936811634596e-05], 'true': [0.00028265072584523115, 0.08991667392338946], 'true,true': [0.00019317896337137281, 0.00041979842484431], 'true,true,false': [nan, 0.00041979842484434697]}, {'': [0.07340164399822671, 0.0683291775619264], 'true': [0.07307137491118948, 0.0641987591045489], 'true,true': [0.07084287084573283, 0.1239417718796022], 'true,true,false': [0.022930677838271452, 0.0], 'false': [0.0002840195647024626, 0.06950058256513966], 'false,false': [0.06851319168311606, 0.10807538683528675], 'false,false,false': [0.05914772309676991, 0.22222222222222224], 'false,true': [0.00038333359895004193, 1.033500071153289e-06]}, {'': [0.04256516642979395, 0.06655717246475808], 'false': [0.055756206165392515, 0.13954566253064998], 'false,false': [0.1419775466783852, 0.11401990241672037], 'false,false,true': [0.18135915556250182, 0.14019769412706445], 'false,false,false': [0.05893185781456295, 0.18749999999999997], 'true': [2.233111160052345e-05, 0.05625535191879744], 'true,true': [-6.1679056923619804e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.06798656709125403, 0.06758139190723246], 'true': [0.07868968098918136, 0.05049503967628929], 'true,true': [0.04070767523434753, 0.18203134697128057], 'false': [0.041176182464194015, 0.06755622646976138], 'false,false': [0.05538996934019454, 0.15503628022164553], 'false,false,false': [0.1644133955522102, 0.09291471643187604], 'false,true': [0.0581842060442719, 0.0027948302745247435], 'false,true,true': [0.0015858158646753033, 0.18559439264009334]}, {'': [0.022400390011241143, 0.06853315635196221], 'false': [0.0021432741213913975, 0.06909386756344443], 'true': [0.0004338292708882241, 0.05062608682220269], 'true,false': [0.00020946742364940282, 0.13653674648518185], 'false,true': [0.000787293544575296, 0.00010232045644110316], 'false,true,true': [nan, 0.000787293544575296], 'true,false,true': [0.00024672863875264034, 0.0001701577216716016], 'false,true,false': [1.6657674121086283e-07, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;complex(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;complex(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.6289822684328447;  // std dev = 2.912, 48.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=37 */
%   | | | else return 0.8084251781934335;  // std dev = 2.924, 181.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=172 */
%   | | else return -0.14185106490048752;  // std dev = 1.69e-07, 480.000 (wgt'ed) examples reached here.  /* #neg=480 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05814893509951236;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.1795775065280838;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6973960110865499;  // std dev = 0.180, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.5430028239756602;  // std dev = 0.381, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.6095727097626017;  // std dev = 4.875, 214.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=187 */
%   | | | else return 0.7293988668982507;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.1254446385283923;  // std dev = 0.000, 457.000 (wgt'ed) examples reached here.  /* #neg=457 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8133652838556683;  // std dev = 0.222, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14907796748644578;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.07014750622804031;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.20327444121256044;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.613804768558801;  // std dev = 0.050, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(F, H) )
%   | | | then return -0.16477707959442162;  // std dev = 0.895, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.11231637819360633;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.12191954138364337;  // std dev = 0.066, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5905173850828574;  // std dev = 0.075, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5178877754911178;  // std dev = 3.558, 180.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=166 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.08131335992545999;  // std dev = 1.501, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.21138079719507585;  // std dev = 2.995, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.393982839090194;  // std dev = 0.187, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.4959035045052591;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.08353516495323648;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.10641026005443868;  // std dev = 0.447, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return 0.04476821514661315;  // std dev = 4.533, 271.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=78 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.1011112313556907;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04423318501167756;  // std dev = 2.360, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.04884451545813664;  // std dev = 2.315, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.0987743660831568;  // std dev = 5.440, 263.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=93 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.2990531651141005;  // std dev = 0.189, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), interaction(F, F) )
%   | | | then return -0.16071470089627846;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.34623584620921916;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.3090335547227982;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1507053428204131;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(I, A) )
%   | then return 0.04062970537134287;  // std dev = 0.265, 719.000 (wgt'ed) examples reached here.  /* #neg=510 #pos=209 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.35799125793436104;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.11461340786473372;  // std dev = 3.654, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.2455887490543143;  // std dev = 0.931, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2702372835207926;  // std dev = 0.029, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.20407592937629981;  // std dev = 0.626, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.31464436440727883;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.3014738938924876;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(H, A) )
%   | then return 0.04218634632567299;  // std dev = 0.260, 701.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=209 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.45067794918531096;  // std dev = 0.405, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14568982627181346;  // std dev = 0.039, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.03235326574217673;  // std dev = 2.534, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.12196857174763343;  // std dev = 2.347, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2820990830767177;  // std dev = 0.215, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return -0.05585678130906177;  // std dev = 0.182, 227.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=27 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.26775545314205096;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023604265679553225;  // std dev = 3.619, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.25984592447146515;  // std dev = 0.074, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.21776590498352089;  // std dev = 4.529, 203.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=137 */
%   | | | else return -0.11986448679221426;  // std dev = 0.556, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.07461645181733212;  // std dev = 1.131, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.05658999619558523;  // std dev = 0.731, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.16593404587078475;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.22154120935513197;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.1927286096123206;  // std dev = 1.485, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.20786989866094568;  // std dev = 0.103, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.26428214843127307;  // std dev = 0.210, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.009578680385193853;  // std dev = 0.220, 210.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=46 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.26263572028612314;  // std dev = 0.133, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.006996141264119405;  // std dev = 2.554, 141.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=33 */
%   | | | else return 0.04562291272545227;  // std dev = 5.857, 415.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=140 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.07069897565241223;  // std dev = 0.269, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else return 0.19051874979220376;  // std dev = 0.053, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( complex(F, H), interaction(A, G) )
%   | | | then return 0.1888016852575481;  // std dev = 0.467, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.09642562168998343;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.29777864186889563;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, I), location(A, J) )
%   | | | then return -0.043438347771329634;  // std dev = 2.738, 133.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=28 */
%   | | | else return 0.017298610107228756;  // std dev = 5.683, 564.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=165 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.007865977562157997;  // std dev = 1.771, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.14425926182284612;  // std dev = 3.012, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.025372190154754806;  // std dev = 0.288, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0.16781428548768648;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.16078837503016485;  // std dev = 0.029, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.00487168151285926;  // std dev = 0.691, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.28253899550258843;  // std dev = 0.146, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.1062094175171458;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11442980004750951;  // std dev = 0.088, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.005961187113672131;  // std dev = 5.417, 475.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=128 */
%   | | | else return 0.020722764024017504;  // std dev = 5.087, 306.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=97 */


Results
   AUC ROC   = 0.987527
   AUC PR    = 0.339807
   CLL	      = -0.169357
   Precision = 0.264214 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.41039


Total learning time: 21.763 seconds
Total inference time: 5.953 seconds
AUC ROC: 0.987527


Results scoring model
   AUC ROC   = 0.985578
   AUC PR    = 0.323856
   CLL	      = -0.17543
   Precision = 0.145845 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.252381


Total scoring time: 35.688 seconds
Refined model CLL: -0.17543


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984598
   AUC PR    = 0.309433
   CLL	      = -0.15838
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.393035


Total learning time: 94.364 seconds
Total inference time: 5.334 seconds
AUC ROC: 0.984598
Total revision time: 94.364
Best scored revision CLL: -0.172105


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 02:42:42
{'AUC ROC': 0.984598, 'AUC PR': 0.309433, 'CLL': -0.15838, 'Precision': [0.25, 0.5], 'Recall': 0.918605, 'F1': 0.393035, 'Learning time': 94.364, 'Inference time': 5.334, 'parameter_1.0': {'AUC ROC': 0.984598, 'AUC PR': 0.309433, 'CLL': -0.15838, 'Precision': [0.25, 0.5], 'Recall': 0.918605, 'F1': 0.393035, 'Learning time': 9.204, 'Inference time': 5.334}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951236;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5982612909988335;  // std dev = 1.875, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1712421867293595;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.2172345439576231;  // std dev = 1.925, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.28162893957529533;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5651035616066314;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5850622575388377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5970227214063693;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11884275962410414;  // std dev = 0.052, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.38457781132732505;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5491722855400011;  // std dev = 0.981, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.06849818084641032;  // std dev = 2.257, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4388630247761852;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4595386292857062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5094488353039668;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.4399235122567243;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.7606266816897679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1992448918142676;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.01748222142371289;  // std dev = 2.718, 118.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=28 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.012414684368126733;  // std dev = 0.546, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11435921657986099;  // std dev = 1.998, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.33177576584653534;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3534677023219122;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.38531295091401463;  // std dev = 0.110, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3703898317524049;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return -0.10321844501023977;  // std dev = 0.018, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5976040022961182;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return -0.05916139337756691;  // std dev = 0.571, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.10753517321923184;  // std dev = 1.988, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.24724413684846036;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2761485418706115;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.008584274624570306;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.007469461283936961;  // std dev = 2.449, 142.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=36 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4920278794069064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.1136979849712669;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20484769829029503;  // std dev = 1.841, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.13469216185726185;  // std dev = 1.180, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( complex(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5633128515460186;  // std dev = 0.231, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.05636029569431302;  // std dev = 2.020, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.24078697991703404;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3028630885049699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then return 0.02251267940018219;  // std dev = 2.123, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.11197880567330497;  // std dev = 0.368, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12206331291923281;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18312740936670546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17567960986048214;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22260853122461036;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then return 0.01213634599992632;  // std dev = 2.556, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.43868349276658364;  // std dev = 0.232, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04851179335659836;  // std dev = 1.632, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.34617441920122904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5929687840702245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16802659159115965;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20493003694358858;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.029044564741465155;  // std dev = 0.901, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.22775930061390948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19639871379615237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0017023755624118956;  // std dev = 2.449, 136.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=35 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.026402273931563996;  // std dev = 1.780, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.16768803291676396;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15050240711772614;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.15683699069138313;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1566025130353367;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19969253037667267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028881880122037226;  // std dev = 0.228, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16723449590036576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.00567822204325881;  // std dev = 3.183, 144.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=42 */


Results
   AUC ROC   = 0.976675
   AUC PR    = 0.210727
   CLL	      = -0.179605
   Precision = 0.096882 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.17665


Total learning time: 2.933 seconds
Total inference time: 11.468 seconds
AUC ROC: 0.976675


Results scoring model
   AUC ROC   = 0.982539
   AUC PR    = 0.353927
   CLL	      = -0.163756
   Precision = 0.143251 at threshold = 0.5
   Recall    = 0.928571
   F1        = 0.24821


Total scoring time: 5.675 seconds
Parameter learned model CLL: -0.163756


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.0, 0, 16], 'false,true,true,false': [0.0, 0, 20], 'false,true,false': [7.88e-08, 85, 0], 'false,false,true': [0.707, 1, 1], 'false,false,false,true': [1.936, 15, 5], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.894, 1, 4], 'false,true,true,true': [2.11e-08, 0, 7], 'false,true,true,false': [1.875, 4, 29], 'false,true,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.077, 8, 0], 'false,false,false,true': [1.925, 10, 6], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.062, 0, 10], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.029, 0, 3], 'true,false': [0.052, 27, 0], 'false,true': [0.874, 1, 4], 'false,false,true,true': [0.981, 1, 31], 'false,false,true,false': [6.99e-08, 85, 0], 'false,false,false,true': [2.257, 19, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.1, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.227, 2, 7], 'false,false,true,false': [2.718, 90, 28], 'false,false,false,true': [0.546, 4, 1], 'false,false,false,false': [1.998, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), complex(A, L)'}, {'true,true': [0.055, 0, 7], 'true,false': [0.08, 0, 5], 'false,true,true,true': [0.11, 0, 11], 'false,true,true,false': [1.361, 2, 25], 'false,true,false': [0.018, 79, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [0.571, 8, 1], 'false,false,false,false': [1.988, 12, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.065, 0, 6], 'true,false': [0.693, 1, 2], 'false,true': [2.449, 106, 36], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [1.841, 8, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true,true': [1.18, 3, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.231, 0, 2], 'true,false': [2.02, 48, 8], 'false,true,true': [0.028, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.123, 61, 25], 'false,false,false,true': [0.368, 1, 1], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.062, 0, 6], 'false,true': [2.556, 85, 36], 'false,false,true,true': [0.232, 0, 2], 'false,false,true,false': [1.632, 11, 4], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'complex(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.048, 0, 5], 'true,true,false': [0.0, 0, 1], 'true,false': [0.901, 1, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.449, 101, 35], 'false,false,false,true': [1.78, 11, 5], 'false,false,false,false': [0.485, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(G, K)'}, {'true,true': [0.05, 0, 6], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.026, 0, 4], 'true,false,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.228, 1, 1], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.183, 102, 42]}]]
[{'': [-1.4802973661668753e-16, 0.21054606868080433], 'false': [0.209002117341713, 0.2176000000000001], 'false,false': [0.25, 0.21172022684310027], 'false,false,false': [0.18749999999999983, 0.22222222222222224], 'false,true': [1.7763568394002505e-15, 7.314410515177502e-17], 'false,true,true': [-2.220446049250313e-16, -8.881784197001253e-17], 'true': [-1.4802973661668753e-16, -1.4802973661668753e-16], 'true,true': [0.0, 0.0]}, {'': [0.07100591715976333, 0.16006930740170827], 'false': [0.15029095680190963, 0.20483952364776675], 'false,false': [0.0903335086965409, 0.2341061399597587], 'false,false,false': [0.23165866987839911, 0.25], 'false,true': [0.08999999999999933, -2.114710523095536e-17], 'false,false,true': [0.0, 0.0007403769119306049], 'false,true,true': [6.344131569286608e-17, 0.10651974288337883], 'true': [-1.1102230246251565e-16, 0.16]}, {'': [0.10798720605104135, 0.11807397058013147], 'false': [0.1527791697149984, 0.11348712991180877], 'false,false': [0.09517687152125458, 0.1958832835769946], 'false,false,false': [0.1958832835769946, nan], 'true': [0.0005106559140517497, 0.00010115992961882106], 'false,false,true': [0.030099697686882698, 5.747036833353752e-17], 'true,true': [0.00037924640218385265, 0.00024140142437595324], 'true,true,false': [0.0, 0.00028610539185310496]}, {'': [0.0012335259968363859, 0.0932427128200525], 'false': [0.02571263072109986, 0.09002667783338052], 'false,false': [0.07222238731867557, 0.18145207289779455], 'false,false,false': [0.05958997829821798, 0.21017279058551405], 'false,false,true': [0.16740836724250385, 0.06262118760974816], 'false,true': [0.0, 0.0], 'true': [0.0010086528515223403, 0.0006227571661963083], 'true,false': [0.0, 0.0]}, {'': [0.0008929452390658196, 0.08599076676169352], 'false': [0.06603965898474118, 0.16905262846818772], 'false,false': [0.0, 0.16468109245525164], 'false,false,false': [0.0362236144396006, 0.2196472496913569], 'false,true': [0.04909463773970942, 4.264632291515866e-06], 'false,true,true': [0.0010912554511320186, 0.0685871056241426], 'true': [0.0004303969702126003, 0.0012660310857633972], 'false,false,true': [nan, 0.0]}, {'': [0.049068257145128254, 0.06304020492582635], 'false': [0.04223866368542657, 0.19152405139367926], 'false,false': [0.05870461164426962, 0.22605545760165982], 'false,false,false': [0.22605545760165982, nan], 'false,false,true': [0.0, 0.0], 'true': [0.0006290902662450359, 0.16011885236624193], 'true,true': [0.0, 0.0007142979252012424], 'true,true,false': [nan, 0.0007142979252012701]}, {'': [0.08771699541240743, 0.05727001393264188], 'true': [0.08889131160090008, 0.07289864790068991], 'true,true': [0.07742006701988174, 0.02678838676372608], 'false': [0.0009133914920062269, 0.05753164951252618], 'false,false': [0.05242385494137294, 0.15881436931598605], 'false,false,false': [0.06757788998877558, 0.24999999999999997], 'true,true,false': [nan, 0.02678838676372608], 'false,true': [0.00025449450831965814, 0.0]}, {'': [0.0007628460857856586, 0.07175028272461274], 'false': [0.05400749711725543, 0.17192861249423305], 'false,false': [0.17554906316003097, 0.015226864632772702], 'false,false,true': [0.026849241217325154, 0.17746582902449262], 'false,false,false': [0.0, 0.0], 'true': [1.2326603885531862e-05, 0.000632888598508898], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.06790530586064973, 0.060967391369898594], 'true': [0.0005724168460600985, 0.11589760831730235], 'false': [0.000245871601388524, 0.06121755691752884], 'false,false': [0.044112503568515815, 0.18171483450041057], 'false,false,false': [0.19793137326248023, 0.0784168040287207], 'true,true': [0.00045992283545883696, 0.0], 'false,true': [0.0, 0.0], 'false,true,true': [0.0, nan]}, {'': [0.0004362850821943755, 0.06946608810654507], 'false': [0.021600854485680856, 0.0703652105081775], 'false,true': [0.026020799630952683, 0.0], 'false,true,true': [nan, 0.026020799630952683], 'true': [0.0004136542564079961, 0.0003701933178984068], 'true,false': [0.00013544692561785477, 0.0], 'true,false,true': [0.0, 0.00016929766106808103], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(F, H), interaction(H, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), interaction(H, E).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.7361977155873163;  // std dev = 0.327, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | else return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7286385086317161;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7561337978940017;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7434164960276403;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6222043748155196;  // std dev = 1.875, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7670719622367217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.21072710100074263;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.33429798398884386;  // std dev = 1.631, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.0668823841557981;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.557004193778577;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.6076363559336959;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.13305094866569359;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6216347941838342;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48850971123126286;  // std dev = 1.902, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.09884659014327458;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.5002972823175982;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.42947086470547846;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.3992904991719751;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.491021583416138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.45858549030317797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.6241629495987995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), complex(J, K) )
%   | | | then return -0.06627729375256652;  // std dev = 0.758, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.10910976719067884;  // std dev = 0.763, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.14829082674588276;  // std dev = 2.355, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.03173887972587007;  // std dev = 2.296, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31302859084715096;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3561460173852037;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.2476202331692514;  // std dev = 1.310, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.4652707114415097;  // std dev = 0.072, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.10913829752278496;  // std dev = 0.082, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4708064543789995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17449986653412564;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.09484119286522144;  // std dev = 1.164, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2608881300898208;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.07190450859505648;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.015068154768787173;  // std dev = 0.214, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.013498955859562047;  // std dev = 0.556, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22385125525361932;  // std dev = 0.534, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.38545282424718064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11899105249015343;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.1351028267514985;  // std dev = 1.263, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.06841714494119262;  // std dev = 1.510, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.23500441973409725;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( location(A, H), location(F, H) )
%   | | | then return 0.014590790977612343;  // std dev = 1.944, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.12143788754787405;  // std dev = 0.870, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return -0.016092432563687628;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.18592513402266447;  // std dev = 0.233, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.2552081330919038;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.16203167623319045;  // std dev = 1.430, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | | else return -0.10532732588521165;  // std dev = 0.060, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.44507298948012464;  // std dev = 0.259, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.168482659759974;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return -0.14196011659707264;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21007526059408374;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.0842073272906286;  // std dev = 0.224, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return 0.03895093872016477;  // std dev = 0.200, 96.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=32 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.03976211886799969;  // std dev = 1.403, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.11425744009294217;  // std dev = 1.229, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( complex(A, M) )
%   | | | then return -0.0839092281969394;  // std dev = 0.406, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5482747198606862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16676557241721696;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.187289590404784;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16587937644161038;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return -0.23868633065153538;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.31129693120929125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return -0.0968591374406237;  // std dev = 0.882, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.019142282027861467;  // std dev = 0.706, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.03899835793066112;  // std dev = 2.026, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.028012718704391322;  // std dev = 2.294, 105.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1476232440515579;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.13491768503186088;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19118272355466404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return -0.18938081881380964;  // std dev = 0.706, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.24873695264265228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.17834341922663524;  // std dev = 2.135, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | | | else return -0.10664480588313248;  // std dev = 0.502, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.08636951667505723;  // std dev = 0.344, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04926918766821589;  // std dev = 0.639, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */


Results
   AUC ROC   = 0.979691
   AUC PR    = 0.21663
   CLL	      = -0.170344
   Precision = 0.118207 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.211422


Total learning time: 7.803 seconds
Total inference time: 17.063 seconds
AUC ROC: 0.979691


Results scoring model
   AUC ROC   = 0.986466
   AUC PR    = 0.361013
   CLL	      = -0.161967
   Precision = 0.162939 at threshold = 0.5
   Recall    = 0.910714
   F1        = 0.276423


Total scoring time: 11.444 seconds
Refined model CLL: -0.161967


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.979691
   AUC PR    = 0.21663
   CLL	      = -0.170344
   Precision = 0.118207 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.211422


Total learning time: 27.855000000000004 seconds
Total inference time: 17.063 seconds
AUC ROC: 0.979691
Total revision time: 27.855000000000004
Best scored revision CLL: -0.161967


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 02:43:39
{'AUC ROC': 0.979691, 'AUC PR': 0.21663, 'CLL': -0.170344, 'Precision': [0.118207, 0.5], 'Recall': 1.0, 'F1': 0.211422, 'Learning time': 27.855000000000004, 'Inference time': 17.063, 'parameter_0.2': {'AUC ROC': 0.976675, 'AUC PR': 0.210727, 'CLL': -0.179605, 'Precision': [0.096882, 0.5], 'Recall': 1.0, 'F1': 0.17665, 'Learning time': 2.933, 'Inference time': 11.468}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7369368138873904;  // std dev = 1.875, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.7969244453035937;  // std dev = 1.678, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7230108009731674;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.624870115323505;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6654591311989227;  // std dev = 0.960, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6224215104320033;  // std dev = 2.662, 71.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=63 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4068078163382078;  // std dev = 2.499, 26.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=15 */
%   | | | else return -0.1672211933200114;  // std dev = 0.059, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5112074864300236;  // std dev = 1.343, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5940308407676165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28928175627000524;  // std dev = 3.295, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | else return -0.12067929316746355;  // std dev = 0.119, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5892474143920768;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46629682652542936;  // std dev = 2.478, 53.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | | else return -0.11231637819360621;  // std dev = 7.15e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.40631109611149;  // std dev = 0.989, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4468572788602261;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.541980089313332;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.428761520570832;  // std dev = 0.625, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.045725592374792304;  // std dev = 4.125, 219.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=59 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.08886382847973213;  // std dev = 2.794, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3582926119855501;  // std dev = 0.144, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.34348875515709254;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.2703989770347059;  // std dev = 2.060, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.4133432509636898;  // std dev = 1.740, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return -0.11099594268874755;  // std dev = 0.284, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4264821377622242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.05083697464377978;  // std dev = 2.839, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2079668927578363;  // std dev = 0.970, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28236741200825544;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.03197506455057184;  // std dev = 3.608, 255.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=75 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3839872168246919;  // std dev = 2.038, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return -0.145458343109339;  // std dev = 0.043, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.19346335763092942;  // std dev = 1.161, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( function(A, F) )
%   | | | then return 0.4262340896098485;  // std dev = 0.251, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.027313825423604016;  // std dev = 3.232, 135.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=26 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.12736730713315111;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.01864208495399948;  // std dev = 3.163, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return -0.01310053883904957;  // std dev = 1.028, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18871198222048413;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1797565363749808;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.22892804401230488;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then return 0.002696116396249269;  // std dev = 4.050, 264.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=75 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3382632028321695;  // std dev = 0.227, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.024857072439079298;  // std dev = 2.470, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else if ( function(A, J) )
%   | | | then return 0.20515068477398563;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16220209781168896;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.18260126092280973;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.020429463408758508;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.2388912924176697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.224474987590227;  // std dev = 0.129, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.007147797160455907;  // std dev = 3.708, 276.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=73 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.057617532687698404;  // std dev = 2.342, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.007505267839970284;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.07071033740038613;  // std dev = 0.932, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.21680352229453292;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16021100855322115;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04298466631495688;  // std dev = 0.470, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10951933981005169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.009491557593838545;  // std dev = 4.505, 325.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=87 */


Results
   AUC ROC   = 0.97433
   AUC PR    = 0.214214
   CLL	      = -0.18109
   Precision = 0.109788 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.196916


Total learning time: 20.851 seconds
Total inference time: 32.217 seconds
AUC ROC: 0.97433


Results scoring model
   AUC ROC   = 0.978915
   AUC PR    = 0.191364
   CLL	      = -0.172472
   Precision = 0.140825 at threshold = 0.5
   Recall    = 0.883929
   F1        = 0.242945


Total scoring time: 74.916 seconds
Parameter learned model CLL: -0.172472


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 2], 'true,false': [0.957, 1, 11], 'false,true,true,true': [1.875, 4, 29], 'false,true,true,false': [1.678, 3, 46], 'false,true,false': [0.0, 162, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [2.898, 28, 12], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.025, 0, 14], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.96, 1, 12], 'false,true,true,false': [2.662, 8, 63], 'false,true,false': [0.0, 164, 0], 'false,false,true,true': [2.499, 11, 15], 'false,false,true,false': [0.059, 29, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.343, 2, 27], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [3.295, 28, 33], 'true,false': [0.119, 85, 0], 'false,true': [0.026, 0, 5], 'false,false,true,true': [2.478, 7, 46], 'false,false,true,false': [7.15e-08, 92, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.989, 1, 22], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.027, 0, 2], 'false,false,true,true': [0.625, 1, 14], 'false,false,true,false': [4.125, 160, 59], 'false,false,false,true': [2.794, 35, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.144, 0, 14], 'true,false': [0.031, 0, 8], 'false,true,true,true': [2.06, 5, 26], 'false,true,true,false': [1.74, 3, 49], 'false,true,false': [0.284, 189, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.839, 40, 14], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.97, 1, 14], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.071, 0, 8], 'true,false': [0.0, 0, 0], 'false,true': [3.608, 180, 75], 'false,false,true,true': [2.038, 6, 15], 'false,false,true,false': [0.043, 33, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.161, 3, 25], 'true,true,false,true': [0.251, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.232, 109, 26], 'false,true,true': [0.943, 1, 8], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.163, 116, 49], 'false,false,false,true': [1.028, 4, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.108, 0, 11], 'false,true': [4.05, 189, 75], 'false,false,true,true': [0.227, 0, 2], 'false,false,true,false': [2.47, 44, 11], 'false,false,false,true': [0.707, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.03, 0, 3], 'true,false': [1.286, 2, 10], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.129, 0, 2], 'false,false,true': [3.708, 203, 73], 'false,false,false,true': [2.342, 28, 12], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.932, 1, 12], 'true,false,true,true': [0.049, 0, 4], 'true,false,true,false': [0.018, 0, 6], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.47, 1, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [4.505, 238, 87]}]]
[{'': [0.04158790170132359, 0.214437087678548], 'false': [0.21289639881752237, 0.2222222222222217], 'false,false': [0.0, 0.21694214876033008], 'false,false,false': [0.20999999999999946, 0.25], 'false,true': [0.0780785246876849, -1.507710280355151e-16], 'false,true,true': [0.10651974288338066, 0.05747605164514856], 'true': [-1.6148698540002277e-16, 0.07638888888888877], 'true,true': [-2.9605947323337506e-16, 0.0]}, {'': [0.040969374544230774, 0.16649630823634096], 'false': [0.15988676648121788, 0.19574676700193486], 'false,false': [0.19574676700193486, nan], 'false,false,true': [0.24020416342372106, 0.00012037700458860255], 'false,true': [0.09556705952407007, 0.0], 'false,true,true': [0.07087806476222638, 0.0998009239962955], 'true': [4.58814372687704e-05, 0.09876543209876543]}, {'': [0.13630285048981636, 0.12372232045824426], 'true': [0.15031124159025266, 0.00016785203246397044], 'true,true': [0.06216114598720029, 0.17653491178015104], 'true,true,false': [0.0, 0.17793099117088113], 'false': [0.00013582433913668092, 0.11997828106053555], 'false,false': [0.11997828106053555, nan], 'false,false,true': [0.11582192814122827, 5.551115123125783e-17]}, {'': [0.042546666123342576, 0.09740930008898736], 'false': [0.002255299877847672, 0.09641688632255362], 'false,false': [0.08317953735163912, 0.1593463945359137], 'false,false,false': [0.1593463945359137, nan], 'false,false,true': [0.02601763321854283, 0.07768983098992871], 'true': [0.042546666123342576, nan], 'false,true': [0.0, 0.00036683346060567557]}, {'': [0.0010338104645867567, 0.08796576001531844], 'false': [0.07551518133918027, 0.14902157669197774], 'false,false': [0.0, 0.14921561209098358], 'false,false,false': [0.14921561209098358, nan], 'false,true': [0.09238713898449613, 0.00042594020189891645], 'false,true,true': [0.1368609874085062, 0.05824225633878234], 'true': [0.0014770387188901874, 0.00011869927055707663], 'false,false,true': [nan, 0.0]}, {'': [0.042374251125749704, 0.06732466632328164], 'false': [0.051035713997326856, 0.14357619773184582], 'false,false': [0.14357619773184582, nan], 'false,false,true': [0.1978038920693077, 5.720905291982087e-05], 'true': [0.042374251125749704, nan], 'true,true': [0.06270796494112935, 0.0006384699405660027], 'true,true,false': [nan, 0.0006384699405660027]}, {'': [0.08078866615765833, 0.06698667265279834], 'true': [0.050426735129768606, 0.07738386437862944], 'false': [0.09874681640010136, 0.06471185586072897], 'false,true': [0.09874681640010136, nan], 'false,false': [0.0606288760687806, 0.1760215601552795], 'false,false,false': [0.1760215601552795, nan], 'true,true': [0.048159828468876544, 0.031593362293988986], 'true,true,false': [0.031593362293988986, nan]}, {'': [0.0009759457027439724, 0.07224766524665299], 'false': [0.06212046929725018, 0.1160765817304139], 'false,false': [0.11236391148541229, 0.12487271381687189], 'false,false,false': [0.12487271381687189, nan], 'false,false,true': [0.02582341150595137, 0.11088430071132013], 'true': [1.193058004340058e-05, 0.0010644870717823253], 'true,true': [-6.1679056923619804e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07440631599349802, 0.06338867609861565], 'true': [0.00015745175821470225, 0.1378694255895496], 'false': [0.005575389946639382, 0.06349806236803097], 'false,false': [0.04980715662208382, 0.14755914200294165], 'false,false,false': [0.13708676174067508, 0.25], 'false,true': [0.0, 0.008293808304999817], 'true,true': [3.949198689574058e-06, 0.0003058650450645147], 'false,true,true': [0.0, nan]}, {'': [0.04128470515180344, 0.06240406148936174], 'false': [0.0560088532594921, 0.062452222276025385], 'false,true': [0.07357175531838141, 0.0], 'false,true,true': [nan, 0.07357175531838141], 'true': [0.06677391773710407, 0.0010412000597773362], 'true,false': [0.0010412000597773362, nan], 'true,false,true': [0.0006021427404785881, 5.2819894685617506e-05], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7727830814409761;  // std dev = 0.279, 82.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=75 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7347566416232062;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, E), phenotype(A, F) )
%   | | then return 0.46196146489135037;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7410595824184533;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.5624629383202844;  // std dev = 3.148, 69.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=57 */
%   | | | else return 0.7363759817985452;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.21731150443326905;  // std dev = 2.293, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.687412225506735;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.17185814592760834;  // std dev = 0.070, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5929713139081441;  // std dev = 0.111, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6141413446800541;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22270991538525334;  // std dev = 3.607, 71.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=33 */
%   | else return -0.12414335141995612;  // std dev = 0.317, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5669722515695877;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.1906970000229752;  // std dev = 1.589, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.31921532342959763;  // std dev = 2.875, 61.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=38 */
%   | | else return -0.11231637819360614;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then return 0.4249358075144159;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5180535278967587;  // std dev = 0.256, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28443533842068075;  // std dev = 0.779, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.46272245873529405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.569957688973531;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.42125552768928454;  // std dev = 0.630, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.035809592802869064;  // std dev = 2.379, 117.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=14 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.2720983693181352;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.07896893348487291;  // std dev = 4.241, 168.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.358510893483015;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.2795896031836899;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.34157008092118696;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.19854237197480623;  // std dev = 1.314, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.4827470575409922;  // std dev = 1.432, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.11958857276900647;  // std dev = 0.372, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4829745737119647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.12932779641096934;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.04050664568878777;  // std dev = 2.132, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2834182485818671;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.17655697162609782;  // std dev = 0.313, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.0015029078770111082;  // std dev = 2.195, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return -0.04960459334174136;  // std dev = 1.132, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.07263409979996853;  // std dev = 2.194, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.02295596759594176;  // std dev = 2.191, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.3036215004626939;  // std dev = 1.553, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.17980400975598568;  // std dev = 1.814, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else return -0.15204237598861434;  // std dev = 0.117, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), location(F, D) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.18025423548489225;  // std dev = 1.593, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | | else return 0.3753068289534893;  // std dev = 0.638, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return 0.4605075263599417;  // std dev = 0.183, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return -0.1267172673833263;  // std dev = 0.089, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( enzyme(A, I) )
%   | then return -0.03200574657860075;  // std dev = 0.214, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2209329438182698;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.02401724576653386;  // std dev = 1.592, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.2151285448120257;  // std dev = 0.537, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.049647826923752456;  // std dev = 1.870, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2166398053990851;  // std dev = 0.052, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, F), location(A, G) )
%   | | then if ( interaction(H, A), phenotype(D, I) )
%   | | | then return -0.02179462376850845;  // std dev = 1.347, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return -0.14598312393276608;  // std dev = 0.772, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.21913540826490743;  // std dev = 0.564, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4560773687465902;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(M, L) )
%   | | | then return 0.004819247926896361;  // std dev = 2.602, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   | | | else return 0.04604682757754649;  // std dev = 1.610, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.1383611890038344;  // std dev = 1.786, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.016645882369528308;  // std dev = 1.112, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1573863255647493;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.26299181984220804;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.19145562989764361;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return -0.23754157072048296;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.25539321319463804;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), enzyme(J, I) )
%   | | | then return -0.06557567551900599;  // std dev = 1.251, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.016708673393529126;  // std dev = 1.544, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.0038600784707153776;  // std dev = 1.625, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | | else return 0.043637239461988254;  // std dev = 3.010, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.13770408597175188;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.19573610155832652;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04195624378141262;  // std dev = 0.310, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.22091041393400063;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23607702150936438;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J), enzyme(A, K) )
%   | | | then return -0.19438062016087812;  // std dev = 1.169, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.0159388840457284;  // std dev = 1.906, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.07335320442694551;  // std dev = 1.663, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.018422767629751997;  // std dev = 3.100, 169.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=53 */


Results
   AUC ROC   = 0.984044
   AUC PR    = 0.271051
   CLL	      = -0.174797
   Precision = 0.114325 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.204182


Total learning time: 59.105 seconds
Total inference time: 44.487 seconds
AUC ROC: 0.984044


Results scoring model
   AUC ROC   = 0.987447
   AUC PR    = 0.315079
   CLL	      = -0.169388
   Precision = 0.15113 at threshold = 0.5
   Recall    = 0.955357
   F1        = 0.260976


Total scoring time: 150.496 seconds
Refined model CLL: -0.169388


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.984044
   AUC PR    = 0.271051
   CLL	      = -0.174797
   Precision = 0.114325 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.204182


Total learning time: 305.368 seconds
Total inference time: 44.487 seconds
AUC ROC: 0.984044
Total revision time: 305.368
Best scored revision CLL: -0.169388


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 02:50:02
{'AUC ROC': 0.984044, 'AUC PR': 0.271051, 'CLL': -0.174797, 'Precision': [0.114325, 0.5], 'Recall': 0.954023, 'F1': 0.204182, 'Learning time': 305.368, 'Inference time': 44.487, 'parameter_0.4': {'AUC ROC': 0.97433, 'AUC PR': 0.214214, 'CLL': -0.18109, 'Precision': [0.109788, 0.5], 'Recall': 0.954023, 'F1': 0.196916, 'Learning time': 20.851, 'Inference time': 32.217}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7840748610254382;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7248156017661787;  // std dev = 2.280, 45.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=39 */
%   | | | else return 0.796420540037784;  // std dev = 2.166, 81.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=76 */
%   | | else return -0.1418510649004879;  // std dev = 5.16e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7292765416194992;  // std dev = 0.029, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.5544262831222557;  // std dev = 1.500, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6381363573144272;  // std dev = 1.345, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.618255230808199;  // std dev = 3.382, 111.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=98 */
%   | | else return -0.12544463852839188;  // std dev = 0.000, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6003255458879331;  // std dev = 1.774, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return -0.1603902051664434;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06873625096197819;  // std dev = 2.453, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.48621340694265114;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5421048976464695;  // std dev = 0.981, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.595156597741233;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4761627303957929;  // std dev = 2.167, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | else return -0.12037930780279936;  // std dev = 0.180, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5880531485435683;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5063338587885814;  // std dev = 2.856, 96.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=87 */
%   | | | else return -0.11231637819360675;  // std dev = 0.000, 219.000 (wgt'ed) examples reached here.  /* #neg=219 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2584231994630749;  // std dev = 2.327, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.40142014486716665;  // std dev = 0.815, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4338520491886733;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4437239169136277;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.20713352469992524;  // std dev = 0.775, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.25308086170271255;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.39535751301404193;  // std dev = 1.131, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.02216968915620214;  // std dev = 5.166, 378.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=91 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.11736443468025894;  // std dev = 2.328, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.09457572125300044;  // std dev = 2.435, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3469857693287126;  // std dev = 0.128, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.3457469399086248;  // std dev = 0.094, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.347049496255199;  // std dev = 1.648, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return 0.3625010062134274;  // std dev = 2.871, 87.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=78 */
%   | | else return -0.10488294744349859;  // std dev = 0.153, 240.000 (wgt'ed) examples reached here.  /* #neg=240 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.6131955456443495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.589430295884385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.12463360032383959;  // std dev = 2.217, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.023734604879729834;  // std dev = 2.553, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2699176034420289;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3181145152004829;  // std dev = 0.000190, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23288575362722277;  // std dev = 0.798, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(G, A) )
%   | then return 0.007328600680839537;  // std dev = 5.030, 421.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=115 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44937673028552244;  // std dev = 1.313, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.1658149693029139;  // std dev = 0.247, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0380562956504558;  // std dev = 2.559, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.1792281600072092;  // std dev = 1.684, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5993360962018419;  // std dev = 0.234, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.012668921023232041;  // std dev = 3.467, 201.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=39 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.2485039651543669;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22444500692826092;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03397693382240453;  // std dev = 3.964, 256.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=79 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.10772526977576538;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1484599065075024;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.17842101761552642;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16784332825410148;  // std dev = 0.942, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   else if ( interaction(F, A) )
%   | then return 0.017408008019505594;  // std dev = 4.667, 395.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=115 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.46861083652871616;  // std dev = 0.244, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.042502090096187446;  // std dev = 2.774, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.17103983146037247;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.2805858316395445;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15592728309954534;  // std dev = 0.010, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.18137643034810372;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.06330135207417795;  // std dev = 1.325, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( phenotype(E, G), interaction(A, F) )
%   | | | then return 0.1406344782047958;  // std dev = 0.484, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2966702383101424;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.26143959577190656;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.01077310970780511;  // std dev = 4.589, 398.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=110 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.031195872222874493;  // std dev = 2.871, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return -0.12539059798229146;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14109241792540383;  // std dev = 0.053, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.21970538648220375;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2144308406215757;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.002760176916358483;  // std dev = 1.240, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1853886705963357;  // std dev = 0.363, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, J), interaction(G, K) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16864480632919432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.006860715658306916;  // std dev = 5.629, 474.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=132 */


Results
   AUC ROC   = 0.97554
   AUC PR    = 0.183913
   CLL	      = -0.179805
   Precision = 0.11039 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.198366


Total learning time: 7.968 seconds
Total inference time: 14.474 seconds
AUC ROC: 0.97554


Results scoring model
   AUC ROC   = 0.979491
   AUC PR    = 0.214427
   CLL	      = -0.168797
   Precision = 0.136715 at threshold = 0.5
   Recall    = 0.940828
   F1        = 0.238739


Total scoring time: 28.913 seconds
Parameter learned model CLL: -0.168797


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [1.361, 2, 25], 'false,true,true,true': [2.28, 6, 39], 'false,true,true,false': [2.166, 5, 76], 'false,true,false': [5.16e-08, 291, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.029, 0, 18], 'true,false': [1.5, 3, 13], 'false,true,true,true': [1.345, 2, 17], 'false,true,true,false': [3.382, 13, 98], 'false,true,false': [0.0, 257, 0], 'false,false,true,true': [1.774, 4, 13], 'false,false,true,false': [0.021, 22, 0], 'false,false,false,true': [2.453, 26, 8], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.981, 1, 20], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [2.167, 9, 30], 'true,false': [0.18, 109, 0], 'false,true': [0.092, 0, 20], 'false,false,true,true': [2.856, 9, 87], 'false,false,true,false': [0.0, 219, 0], 'false,false,false,true': [2.327, 12, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.815, 1, 14], 'true,false,true': [0.055, 0, 10], 'true,false,false': [0.057, 0, 7], 'false,true,true': [0.775, 3, 4], 'false,true,false': [0.761, 1, 2], 'false,false,true,true': [1.131, 2, 19], 'false,false,true,false': [5.166, 287, 91], 'false,false,false,true': [2.328, 26, 13], 'false,false,false,false': [2.435, 20, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.128, 0, 18], 'true,false': [0.094, 0, 13], 'false,true,true,true': [1.648, 3, 37], 'false,true,true,false': [2.871, 9, 78], 'false,true,false': [0.153, 240, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.217, 23, 13], 'false,false,false,false': [2.553, 25, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.078, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.00019, 0, 2], 'true,false': [0.798, 1, 21], 'false,true': [5.03, 306, 115], 'false,false,true,true': [1.313, 2, 13], 'false,false,true,false': [0.247, 29, 0], 'false,false,false,true': [2.559, 25, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [1.684, 4, 34], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.234, 0, 2], 'true,false': [3.467, 162, 39], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.045, 0, 9], 'false,false,true': [3.964, 177, 79], 'false,false,false,true': [0.713, 3, 1], 'false,false,false,false': [1.0, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [5.27e-09, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.942, 1, 25], 'false,true': [4.667, 280, 115], 'false,false,true,true': [0.244, 0, 2], 'false,false,true,false': [2.774, 42, 18], 'false,false,false,true': [0.82, 5, 1], 'false,false,false,false': [0.816, 1, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'phenotype(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.01, 0, 13], 'true,true,false': [0.044, 0, 4], 'true,false': [1.325, 2, 14], 'false,true,true,true': [0.484, 1, 3], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.075, 0, 2], 'false,false,true': [4.589, 288, 110], 'false,false,false,true': [2.871, 44, 19], 'false,false,false,false': [1.396, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(G, K)'}, {'true,true': [0.053, 0, 17], 'true,false,true,true': [0.007, 0, 3], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [1.24, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.363, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [5.629, 342, 132]}]]
[{'': [0.05693296602387652, 0.20156429361980682], 'false': [0.19972511199673545, 0.21104570637119213], 'false,false': [0.0, 0.2072888888888898], 'false,false,false': [0.20134083044982648, 0.24489795918367335], 'false,true': [0.07968002015621417, 9.156478553609538e-18], 'false,true,true': [0.11555555555555665, 0.057918000304831095], 'true': [-1.4802973661668753e-16, 0.06858710562414225], 'true,true': [-1.4802973661668753e-16, nan]}, {'': [0.0738320161460918, 0.16703028682014134], 'false': [0.15859173613942446, 0.2098708289067092], 'false,false': [0.22299017783530362, 0.1936261516516301], 'false,false,true': [0.18510125589640514, 1.9167912294297413e-05], 'false,false,false': [0.1769715763245727, 0.22222222222222232], 'false,true': [0.10194250670487161, -6.566299600895868e-17], 'false,true,true': [0.09520355423834068, 0.10303825244001927], 'true': [4.805067310057846e-05, 0.1406534763579721]}, {'': [0.12335824820623328, 0.12471971125750472], 'false': [0.0004272847166602478, 0.11809419824781198], 'true': [0.09252908529073496, 0.0002973303631012217], 'false,false': [0.10698932656062383, 0.2460665757368431], 'false,false,false': [0.2460665757368431, nan], 'false,false,true': [0.08497156161111441, -5.272291989087501e-17], 'true,true': [0.04586077482003935, 0.1152074127119467], 'true,true,false': [0.0, 0.12042477586769774]}, {'': [0.021292224714516722, 0.09185052079542753], 'false': [0.11845409184813113, 0.09067839499079974], 'false,true': [0.08586681881975651, 0.1930132518033184], 'false,false': [0.07703053155828048, 0.16705615336593319], 'false,false,false': [0.13901639512583694, 0.20446694533238818], 'false,false,true': [0.06094548430093679, 0.07059418993291813], 'true': [0.044276879092497, 0.00038726493673534116], 'true,false': [0.000298452177910713, 0.00045681455802656527]}, {'': [0.0008141038875276193, 0.09368210806883168], 'false': [0.07835291851072476, 0.1715468099256033], 'false,false': [0.36157722867817416, 0.16590465619914316], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.13656100051774406, 0.1917386683858705], 'false,true': [0.08634345163774554, 9.699152784204413e-05], 'false,true,true': [0.06788285932649193, 0.09475588370077404], 'true': [0.0009109932392764462, 0.0006790582853301628]}, {'': [0.020679223963734394, 0.07490629162749675], 'false': [0.060098511274469676, 0.15284599261933157], 'false,false': [0.12562867068157904, 0.18704297313552737], 'false,false,false': [0.18704297313552737, nan], 'false,false,true': [0.11498816652291452, 0.002111643169218069], 'true': [0.0009876766965178363, 0.028949238544533705], 'true,true': [0.0007700028967507905, 1.805314434055738e-08], 'true,true,false': [nan, 1.805314434055738e-08]}, {'': [0.06953835841883943, 0.06451269157443358], 'true': [0.08067528819178654, 0.0597988232693192], 'true,true': [0.07465668868311515, 0.02736253470551453], 'false': [0.00027402362642368433, 0.0657470775602234], 'false,false': [0.06139311339530624, 0.20489432198145205], 'false,false,false': [0.12697322168925954, 0.25], 'true,true,false': [nan, 0.02736253470551453], 'false,true': [-9.25185853854297e-18, 0.00022065646750021563]}, {'': [0.02774615214590251, 0.06810263603397494], 'false': [0.055152914771354776, 0.13942851647388346], 'false,false': [0.13073580988311487, 0.19416834105891972], 'false,false,false': [0.11215282062045522, 0.2222222222222222], 'false,false,true': [0.029707715208225738, 0.1282463593684187], 'true': [4.625929269271485e-18, 0.03412813142487595], 'true,true': [4.625929269271485e-18, nan]}, {'': [0.05576883945188399, 0.06699298587319952], 'false': [0.03868923956995984, 0.06690389270314992], 'false,false': [0.05292067506165781, 0.14419940141060164], 'false,false,false': [0.1308050360810759, 0.21650555139738256], 'true': [0.00023473379349910306, 0.10976412544619717], 'false,true': [0.05075141364174496, 0.002799664797647261], 'false,true,true': [0.05856983536585056, 0.0], 'true,true': [7.831869742398637e-06, 0.0004768963254834502]}, {'': [0.05268721611806178, 0.06660502058835707], 'false': [0.01889736737900688, 0.06685807299191181], 'true': [0.00016218179885625218, 0.10482322913081549], 'true,false': [1.6490769624927237e-05, 0.12813510382775906], 'false,true': [0.022006877610184713, 0.0], 'false,true,true': [nan, 0.022006877610184713], 'true,false,true': [1.5032484324264036e-05, 0.0], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), phenotype(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;phenotype(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.7002541982574071;  // std dev = 0.365, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7855682899382201;  // std dev = 0.259, 124.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=115 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.16584124279181983;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7417491125468022;  // std dev = 0.085, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7360252144264763;  // std dev = 0.055, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.38773269975281227;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.6497743963739472;  // std dev = 2.871, 107.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=98 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6492385506323294;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.1632614493676708;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.11513344557471121;  // std dev = 2.209, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.43113906766299037;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5293157060861264;  // std dev = 0.930, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.29967689301364586;  // std dev = 1.762, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.5901673690066025;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3848867123219277;  // std dev = 2.613, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | else return -0.12479259928730017;  // std dev = 0.040, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5736388259205834;  // std dev = 0.019, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(J, A) )
%   | | then return 0.09177444842960705;  // std dev = 0.333, 289.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=87 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.02575893822129902;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.10551612032608397;  // std dev = 2.311, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.39768297395159874;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.3782593038732537;  // std dev = 0.227, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), enzyme(F, H) )
%   | | then return -0.07230303118985744;  // std dev = 0.235, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( complex(F, I), phenotype(A, J) )
%   | | | then return 0.13179956331198694;  // std dev = 2.228, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.0040627585329127735;  // std dev = 2.612, 91.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=17 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.11329300311656511;  // std dev = 2.168, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.044329448849299825;  // std dev = 2.982, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.037668879275969645;  // std dev = 1.529, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.10296620342966244;  // std dev = 4.715, 162.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.36404213683763975;  // std dev = 0.044, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3515834278299851;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.03944455526121612;  // std dev = 0.454, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.5154018942362627;  // std dev = 0.993, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.45152631819680467;  // std dev = 2.666, 91.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=83 */
%   | | else return -0.12364065242505676;  // std dev = 0.012, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6498170877827951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.07543347357428011;  // std dev = 3.203, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.24394640513770285;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28812523056796324;  // std dev = 0.033, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.16340725539338113;  // std dev = 0.324, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.10075787100809595;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2479718380207069;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.032348390254912665;  // std dev = 5.126, 375.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=110 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41381603966690245;  // std dev = 1.557, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.1509510757433225;  // std dev = 0.037, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.2369922855568908;  // std dev = 1.620, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.041140014806691;  // std dev = 1.679, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.3445921408999055;  // std dev = 2.342, 76.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=72 */
%   | | | else return -0.14172090228454348;  // std dev = 0.445, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.14034443333042507;  // std dev = 0.093, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0.19610847092142644;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( phenotype(A, I) )
%   | | then return -0.01943987043176071;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.23246662573691537;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(M, L) )
%   | | | then return 0.02209818403876838;  // std dev = 3.712, 181.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=54 */
%   | | | else return 0.11406015184031566;  // std dev = 2.025, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | else return 0.2600497720972092;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15814635724051335;  // std dev = 0.175, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.2180575584976046;  // std dev = 0.928, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.42371993199991714;  // std dev = 0.272, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(D, H), interaction(A, E) )
%   | | | then return -0.09121834034063278;  // std dev = 1.537, 75.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=5 */
%   | | | else return -0.003102425761541211;  // std dev = 2.705, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.32081390718643454;  // std dev = 1.673, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return -0.13791752816336586;  // std dev = 0.660, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.036849332878765136;  // std dev = 2.518, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.1966907120000779;  // std dev = 1.264, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1563480190388935;  // std dev = 0.033, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.02410465256841181;  // std dev = 0.927, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.17058210789112152;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.2034314912860507;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06753759660244346;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.34892715420313064;  // std dev = 0.874, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.13115960361108844;  // std dev = 0.889, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( location(A, I) )
%   | | | then return -0.01379061758045557;  // std dev = 4.434, 316.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=81 */
%   | | | else return -0.10213638359492833;  // std dev = 1.258, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E), location(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.11525518260449852;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.276486389852309;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.14720681043234693;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1478487152842438;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.21721489748820283;  // std dev = 0.203, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2986175107183389;  // std dev = 0.811, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.04973912353449229;  // std dev = 0.194, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.027354794198808475;  // std dev = 1.808, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return 0.009397917199475804;  // std dev = 4.525, 343.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=105 */


Results
   AUC ROC   = 0.99095
   AUC PR    = 0.37474
   CLL	      = -0.170083
   Precision = 0.123741 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.219949


Total learning time: 58.935 seconds
Total inference time: 141.776 seconds
AUC ROC: 0.99095


Results scoring model
   AUC ROC   = 0.990386
   AUC PR    = 0.354461
   CLL	      = -0.160556
   Precision = 0.15089 at threshold = 0.5
   Recall    = 0.952663
   F1        = 0.260518


Total scoring time: 360.881 seconds
Refined model CLL: -0.160556


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.99095
   AUC PR    = 0.37474
   CLL	      = -0.170083
   Precision = 0.123741 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.219949


Total learning time: 456.697 seconds
Total inference time: 141.776 seconds
AUC ROC: 0.99095
Total revision time: 456.697
Best scored revision CLL: -0.160556


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:00:16
{'AUC ROC': 0.99095, 'AUC PR': 0.37474, 'CLL': -0.170083, 'Precision': [0.123741, 0.5], 'Recall': 0.988506, 'F1': 0.219949, 'Learning time': 456.697, 'Inference time': 141.776, 'parameter_0.6': {'AUC ROC': 0.97554, 'AUC PR': 0.183913, 'CLL': -0.179805, 'Precision': [0.11039, 0.5], 'Recall': 0.977011, 'F1': 0.198366, 'Learning time': 7.968, 'Inference time': 14.474}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8105298874804645;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7285193054698827;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=47 */
%   | | | else return 0.8055173561521424;  // std dev = 2.384, 114.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=108 */
%   | | else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13771882757262968;  // std dev = 4.328, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7222471140087358;  // std dev = 0.021, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.5956499136128722;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.698243073542116;  // std dev = 0.974, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.637655359623967;  // std dev = 3.560, 146.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=132 */
%   | | else return -0.12544463852839224;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5607824630039271;  // std dev = 2.936, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | | else return -0.16565692995159315;  // std dev = 0.129, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.4913989849052849;  // std dev = 1.875, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5902250653824027;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.28418709112884094;  // std dev = 4.680, 124.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=68 */
%   | else return -0.12157645882120806;  // std dev = 0.331, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.35222154902764224;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5332711237225898;  // std dev = 2.381, 100.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=94 */
%   | | | else return -0.11231637819360656;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4676121632197343;  // std dev = 0.231, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.39422003931483496;  // std dev = 0.610, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5211767591210937;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.29913472354517956;  // std dev = 1.815, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.02829263791070011;  // std dev = 5.760, 508.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=122 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.07797422542009586;  // std dev = 3.969, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.34619917414554624;  // std dev = 0.173, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.3709314122531061;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.31298762390002866;  // std dev = 2.632, 61.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | | | else return 0.3818963576260796;  // std dev = 2.758, 110.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=102 */
%   | | else return -0.10854753737493361;  // std dev = 0.318, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3535715836097766;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16278709581928835;  // std dev = 0.570, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.052621036107898;  // std dev = 3.952, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.27045837563785086;  // std dev = 0.135, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22143970565318627;  // std dev = 0.938, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.2842367117967741;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.007435068355435011;  // std dev = 5.687, 583.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=155 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2803528586180475;  // std dev = 3.349, 51.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=33 */
%   | | | else return -0.14127919391468666;  // std dev = 0.036, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.16845814116503333;  // std dev = 2.043, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | else if ( function(A, F) )
%   | | | then return 0.07453891127233327;  // std dev = 1.140, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014798589189674796;  // std dev = 4.279, 248.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=60 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.11398709636285081;  // std dev = 1.316, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03295949127249164;  // std dev = 4.259, 323.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=100 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.061498127736982856;  // std dev = 1.100, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.17879646643589858;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18239025983568025;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18825792684034623;  // std dev = 0.986, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(G, A) )
%   | then return 0.010300707587951612;  // std dev = 5.459, 554.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=155 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.41427185172774794;  // std dev = 0.339, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06785918593019259;  // std dev = 3.318, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | else if ( function(A, J) )
%   | | | then return 0.15058418582081495;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16028501758588376;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.19390245556443148;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14140502365612698;  // std dev = 0.939, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.23725419862868363;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.27046460280447576;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0831887949560646;  // std dev = 0.584, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.011020933350178197;  // std dev = 5.341, 510.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=145 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05434768886802685;  // std dev = 3.393, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | | else return 0.04660629325218567;  // std dev = 1.058, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14433356008175943;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.19910579438104023;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.06289009569529114;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22923740884262397;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.1485750897759877;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2270406266340933;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.013230634200063703;  // std dev = 6.310, 608.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=174 */


Results
   AUC ROC   = 0.974343
   AUC PR    = 0.201523
   CLL	      = -0.182217
   Precision = 0.101432 at threshold = 0.5
   Recall    = 0.977011
   F1        = 0.183784


Total learning time: 42.506 seconds
Total inference time: 28.47 seconds
AUC ROC: 0.974343


Results scoring model
   AUC ROC   = 0.979182
   AUC PR    = 0.187657
   CLL	      = -0.174478
   Precision = 0.136735 at threshold = 0.5
   Recall    = 0.893333
   F1        = 0.237168


Total scoring time: 174.713 seconds
Parameter learned model CLL: -0.174478


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 2], 'true,false': [0.976, 1, 20], 'false,true,true,true': [2.468, 7, 47], 'false,true,true,false': [2.384, 6, 108], 'false,true,false': [2.33e-07, 354, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [4.328, 67, 26], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.021, 0, 24], 'true,false': [1.317, 2, 13], 'false,true,true,true': [0.974, 1, 23], 'false,true,true,false': [3.56, 14, 132], 'false,true,false': [0.0, 386, 0], 'false,false,true,true': [2.936, 12, 33], 'false,false,true,false': [0.129, 50, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.875, 5, 47], 'true,true,false,true': [0.007, 0, 6], 'true,true,false,false': [4.68, 56, 68], 'true,false': [0.331, 170, 0], 'false,true': [1.512, 3, 10], 'false,false,true,true': [2.381, 6, 94], 'false,false,true,false': [0.0, 188, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.231, 0, 37], 'true,false': [0.0, 0, 0], 'false,true,true': [0.61, 1, 10], 'false,true,false': [0.006, 0, 4], 'false,false,true,true': [1.815, 6, 23], 'false,false,true,false': [5.76, 386, 122], 'false,false,false,true': [3.969, 71, 29], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.173, 0, 23], 'true,false': [0.103, 0, 14], 'false,true,true,true': [2.632, 8, 53], 'false,true,true,false': [2.758, 8, 102], 'false,true,false': [0.318, 376, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.57, 1, 2], 'false,false,false,true': [3.952, 81, 29], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.135, 0, 24], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.938, 1, 12], 'true,false': [0.0, 0, 1], 'false,true': [5.687, 428, 155], 'false,false,true,true': [3.349, 18, 33], 'false,false,true,false': [0.036, 44, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [2.043, 6, 45], 'true,true,false,true': [1.14, 3, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.279, 188, 60], 'false,true,true': [1.316, 2, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.259, 223, 100], 'false,false,false,true': [1.1, 6, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [7.45e-09, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.986, 1, 20], 'false,true': [5.459, 399, 155], 'false,false,true,true': [0.339, 0, 4], 'false,false,true,false': [3.318, 49, 26], 'false,false,false,true': [0.912, 4, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.05, 0, 19], 'true,true,false': [0.046, 0, 4], 'true,false': [0.939, 1, 14], 'false,true,true,true': [0.119, 0, 8], 'false,true,true,false': [0.005, 0, 2], 'false,true,false': [0.584, 3, 4], 'false,false,true': [5.341, 365, 145], 'false,false,false,true': [3.393, 50, 26], 'false,false,false,false': [1.058, 5, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.076, 0, 23], 'true,false,true,true': [0.044, 0, 6], 'true,false,true,false': [0.931, 1, 8], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.104, 0, 10], 'false,true,false,true': [0.036, 0, 2], 'false,true,false,false': [0.05, 0, 2], 'false,false': [6.31, 434, 174]}]]
[{'': [0.025623268698062793, 0.2101276934540543], 'false': [0.2087645513131073, 0.21662352071006058], 'false,false': [0.0, 0.20590000000000125], 'false,true': [0.07139314058957501, 1.5304769379013457e-16], 'false,false,false': [0.20141056769568846, 0.24489795918367335], 'false,true,true': [0.11282578875171512, 0.04986149584487813], 'true': [-2.0898315757650005e-16, 0.04535147392290242], 'true,true': [-2.3684757858670006e-16, 0.0]}, {'': [0.048249279855230025, 0.16203972201423553], 'false': [0.15103447351420182, 0.2225055820488607], 'false,false': [0.2225055820488607, nan], 'false,false,true': [0.19161850682922238, 0.00033406949715243607], 'false,true': [0.08058416878358204, -1.2425293954354083e-16], 'false,true,true': [0.039565875670610394, 0.08680866127529127], 'true': [1.868402403903957e-05, 0.11555555555555568]}, {'': [0.13432443652984843, 0.11920987068254257], 'true': [0.15019956196689743, 0.0006427697837906427], 'true,true': [0.0676128330483723, 0.17258207800297978], 'true,true,false': [7.627423797673671e-06, 0.17660972041228104], 'false': [0.17592846062773126, 0.11415415629053584], 'false,false': [0.11415415629053584, nan], 'false,false,true': [0.05669714423301002, -1.1810883240693155e-17]}, {'': [0.001444137461602948, 0.08722639387959173], 'false': [0.02795892368396169, 0.08530599765460352], 'false,false': [0.07166310394515099, 0.15753239013756729], 'false,false,false': [0.15753239013756729, nan], 'false,false,true': [0.11354890428383194, 0.06531051870833272], 'false,true': [0.03382434254696055, 9.148761140831407e-06], 'true': [0.001444137461602948, nan]}, {'': [0.0012418562072221244, 0.08539829978509263], 'false': [0.07373080900746493, 0.14043315956505337], 'false,false': [0.07371612400995761, 0.14195380703565397], 'false,false,false': [0.14195380703565397, nan], 'false,true': [0.08608040977602523, 0.00026838589019566875], 'false,true,true': [0.11358569566562583, 0.06913359998010629], 'false,false,true': [0.0, 0.10830071837067112], 'true': [0.001302050483206399, 0.0007627298584861648]}, {'': [0.02420651628222851, 0.07116364297711021], 'false': [0.055473295565125154, 0.16227007565550242], 'false,false': [0.16227007565550242, nan], 'false,false,true': [0.21990515447277226, 2.943266028550904e-05], 'true': [0.024835455163823617, 0.0], 'true,true': [0.0007646747295119901, 0.06771522660553735], 'true,true,false': [nan, 0.06771522660553735]}, {'': [0.08100119795309574, 0.06103074332944998], 'true': [0.09529527403662044, 0.07381880757427153], 'true,true': [0.08183629132584049, 0.18559733683467033], 'true,true,false': [0.18559733683467033, nan], 'false': [0.11543613171587977, 0.058294252157730084], 'false,true': [0.11543613171587977, nan], 'false,false': [0.05615341572103848, 0.13433411795827588], 'false,false,false': [0.13433411795827588, nan]}, {'': [0.02562965765951092, 0.06675405256995179], 'false': [0.05378863051157233, 0.14467937957688237], 'false,false': [0.14661441675736908, 0.1189378601525418], 'false,false,true': [0.02878445564862206, 0.14682264413338147], 'false,false,false': [0.1189378601525418, nan], 'true': [1.3406938754734199e-06, 0.04633984160618831], 'true,true': [3.7007434154171884e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.023587550864599526, 0.06902149838501895], 'false': [0.027267856318342512, 0.06949813542223993], 'false,false': [0.055924176873735874, 0.15035409738585936], 'false,false,false': [0.15145396769688288, 0.13985110776849158], 'false,true': [0.0015862516624200683, 0.04876357145388527], 'true': [0.0003656059929149177, 0.05882447507999174], 'false,true,true': [0.0017586363948880884, 1.4367976132384497e-05], 'true,true': [0.00013269975104625956, 0.0005383232248959008]}, {'': [0.02492766394747456, 0.06497798762317947], 'false': [0.0018405621188718152, 0.06549355578339247], 'true': [0.0002543368476241544, 0.06232026025962386], 'true,false': [0.06232026025962386, nan], 'true,false,true': [0.0003218122725526286, 0.09623067229029264], 'false,true': [0.0010901962085204664, 0.002490471419012992], 'false,true,false': [0.0006488150959352325, 0.0012537075048753912], 'false,true,true': [nan, 0.0010901962085204664]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;function(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.7213967983473739;  // std dev = 3.716, 117.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=101 */
%   | | | else return 0.8224346493852267;  // std dev = 1.389, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | else return -0.1418510649004874;  // std dev = 2.81e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.058148935099512376;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.2732432747221531;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7254232309641752;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7254232309641753;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.4473587122183166;  // std dev = 0.461, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.4862678161015982;  // std dev = 2.430, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return 0.6952219592166698;  // std dev = 2.396, 138.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=132 */
%   | | else return -0.12544463852839222;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3311592910100626;  // std dev = 3.790, 58.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | else return -0.17112102531726367;  // std dev = 0.076, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5314571195868241;  // std dev = 0.920, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.6293633397434909;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.5692971937484547;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2643479967518466;  // std dev = 4.856, 132.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=68 */
%   | else return -0.1259150706743788;  // std dev = 0.412, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6110213358920913;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.2678269248116104;  // std dev = 4.308, 131.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=75 */
%   | | | else return 0.35339814175105283;  // std dev = 1.697, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | else return -0.11231637819360617;  // std dev = 9.66e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.4343982062846922;  // std dev = 0.164, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.44976457222085536;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.06242775965161056;  // std dev = 1.272, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.2461510773222021;  // std dev = 0.769, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then if ( interaction(I, J) )
%   | | then return 0.4576856171395547;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.22937432757432286;  // std dev = 0.982, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10645527434403335;  // std dev = 0.076, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.05596469448410475;  // std dev = 6.673, 502.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=145 */
%   | | | else return 0.15341155111070945;  // std dev = 3.894, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(A, A), recursion_proteinclass(E, B) )
%   | | | then return 0.32046896220023396;  // std dev = 0.004, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.6638642483605969;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3559596421371658;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.38991903296135544;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3829299526736109;  // std dev = 0.307, 174.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=155 */
%   | | else return -0.1190974178503177;  // std dev = 0.406, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3708091518091792;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.02988660015068807;  // std dev = 3.050, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.19991888327017482;  // std dev = 2.444, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.10548930123774734;  // std dev = 1.333, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.26806475195019464;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.03812249628069105;  // std dev = 1.081, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.34661281578986997;  // std dev = 0.188, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.26295546932088854;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(J, A) )
%   | then return 0.019024204104682734;  // std dev = 0.258, 536.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=155 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.08118824396288725;  // std dev = 2.098, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.32682062835249115;  // std dev = 2.754, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | else return -0.15546668202772476;  // std dev = 0.129, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.24711710996464678;  // std dev = 0.253, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(D, A), enzyme(D, E) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.09632470091793835;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.19703647288141143;  // std dev = 0.432, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08928283962858158;  // std dev = 0.064, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2567731447720279;  // std dev = 1.345, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return -0.0203050268746269;  // std dev = 2.719, 198.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=36 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.1686414776496001;  // std dev = 1.022, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.04560395788040588;  // std dev = 5.713, 387.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=123 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.13525247869045856;  // std dev = 0.181, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.3730889446612349;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.13228637646291108;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.25613276871029694;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.20380915876215902;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1340739553594765;  // std dev = 5.801, 305.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=166 */
%   | | | else return -0.11952816846036396;  // std dev = 1.276, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return -0.027971581124388804;  // std dev = 0.480, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.14204306996335056;  // std dev = 1.164, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17043293105964408;  // std dev = 0.023, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.20997251393117275;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.18259505219332345;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19554136354353147;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.04839529161064957;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, H), interaction(H, I) )
%   | | | then return -0.0696861086167211;  // std dev = 1.286, 69.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=7 */
%   | | | else return -0.0038374053876363006;  // std dev = 3.097, 167.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=44 */
%   | | else if ( location(A, J) )
%   | | | then return 0.039009789605391976;  // std dev = 5.281, 336.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=116 */
%   | | | else return -0.07328611397192207;  // std dev = 1.681, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14774934644823254;  // std dev = 0.021, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1775734637578968;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.16918797295416038;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21891256372495882;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1592160479241877;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return -0.13101445488572822;  // std dev = 1.219, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.06124740716312893;  // std dev = 2.050, 102.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=17 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.0411967319076724;  // std dev = 2.807, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | | else return 0.01676931774565123;  // std dev = 5.648, 437.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=135 */


Results
   AUC ROC   = 0.981577
   AUC PR    = 0.192291
   CLL	      = -0.173725
   Precision = 0.114168 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.203931


Total learning time: 127.261 seconds
Total inference time: 52.001 seconds
AUC ROC: 0.981577


Results scoring model
   AUC ROC   = 0.984055
   AUC PR    = 0.224128
   CLL	      = -0.17317
   Precision = 0.148823 at threshold = 0.5
   Recall    = 0.871111
   F1        = 0.254215


Total scoring time: 298.18 seconds
Refined model CLL: -0.17317


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981577
   AUC PR    = 0.192291
   CLL	      = -0.173725
   Precision = 0.114168 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.203931


Total learning time: 642.6600000000001 seconds
Total inference time: 52.001 seconds
AUC ROC: 0.981577
Total revision time: 642.6600000000001
Best scored revision CLL: -0.17317


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:12:20
{'AUC ROC': 0.981577, 'AUC PR': 0.192291, 'CLL': -0.173725, 'Precision': [0.114168, 0.5], 'Recall': 0.954023, 'F1': 0.203931, 'Learning time': 642.6600000000001, 'Inference time': 52.001, 'parameter_0.8': {'AUC ROC': 0.974343, 'AUC PR': 0.201523, 'CLL': -0.182217, 'Precision': [0.101432, 0.5], 'Recall': 0.977011, 'F1': 0.183784, 'Learning time': 42.506, 'Inference time': 28.47}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.833148935099512;  // std dev = 0.987, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8196873966379739;  // std dev = 1.387, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else return 0.8581489350995125;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.14185106490048782;  // std dev = 1.03e-07, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.724815601766179;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16399085949813677;  // std dev = 7.860, 291.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=89 */
%   | | | else return 0.2152917922423684;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6607975740246634;  // std dev = 1.373, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else return 0.6718598245541327;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6889819734345127;  // std dev = 0.980, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.6873485762970759;  // std dev = 1.694, 85.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7872595939021712;  // std dev = 1.383, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.1653952146823149;  // std dev = 0.094, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1378639586659333;  // std dev = 6.645, 213.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=65 */
%   | | | else return 0.1423702818679506;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5793986692849384;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.570193215861144;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6321467653660361;  // std dev = 1.175, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | else return -0.13609994573439585;  // std dev = 0.505, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5470172098786441;  // std dev = 0.988, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4992966668641887;  // std dev = 2.360, 88.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=82 */
%   | | | else return -0.11231637819360683;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1360756858820385;  // std dev = 7.277, 247.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=80 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2778514117303315;  // std dev = 1.261, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.39804170821721213;  // std dev = 0.981, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.43732490193939844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.46535157330043186;  // std dev = 1.264, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else return 0.5039067184948879;  // std dev = 0.228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3221920106301434;  // std dev = 1.497, 36.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return -4.874062849062349E-5;  // std dev = 4.132, 387.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=73 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.12399780045431168;  // std dev = 3.553, 115.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=43 */
%   | | | else return 0.10158149092975782;  // std dev = 7.012, 231.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3467179839946909;  // std dev = 0.039, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.30113893081355236;  // std dev = 1.003, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.35306253012270966;  // std dev = 1.559, 69.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=66 */
%   | | | else return 0.36845343865507535;  // std dev = 1.709, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | | else return -0.10143722525863307;  // std dev = 0.050, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3728838389615758;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.48113347138099377;  // std dev = 0.366, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.06482237203864803;  // std dev = 3.599, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   | | | else return 0.08585501831298853;  // std dev = 7.005, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.28754203830816594;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3212462406617698;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19792972941080272;  // std dev = 1.569, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   else if ( interaction(A, G) )
%   | then return 0.010784305549186333;  // std dev = 3.948, 424.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=109 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44065893309283716;  // std dev = 1.449, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | | else return -0.1496262660074921;  // std dev = 0.027, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0916932920519011;  // std dev = 7.100, 233.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=80 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18516148658448933;  // std dev = 1.924, 68.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=60 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1490914706762085;  // std dev = 0.375, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4678733337312496;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.005114292829117572;  // std dev = 7.452, 564.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=138 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.24627879265731323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.12648487302655478;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, I) )
%   | | then return 0.0334081488963548;  // std dev = 2.414, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.07266349078546604;  // std dev = 1.279, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.036359581703082317;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19851237378283704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.25914639368155334;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.11853312900896905;  // std dev = 1.895, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   else if ( interaction(A, G) )
%   | then return -8.740975571314126E-4;  // std dev = 4.098, 421.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=109 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.205936753269233;  // std dev = 0.661, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.030143664449148032;  // std dev = 6.943, 313.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=94 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0061518638730826474;  // std dev = 1.365, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.10424054904911932;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1886269066700205;  // std dev = 0.067, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.02925379485584854;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.02081841528427271;  // std dev = 1.628, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( enzyme(E, G), interaction(F, A) )
%   | | | then return 0.17345821431746528;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.23912595878045895;  // std dev = 0.985, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return 0.250796907256968;  // std dev = 0.226, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return -0.002443492860822726;  // std dev = 3.953, 419.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.030701823550562137;  // std dev = 6.732, 309.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=89 */
%   | | | else return 0.031823392129737234;  // std dev = 3.422, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16610677032666593;  // std dev = 0.093, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18840518230154793;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.18891782049467115;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19933055361818233;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, J), interaction(K, G) )
%   | | | then return 0.10984132495555554;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2991120379354687;  // std dev = 0.281, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.013672945858649673;  // std dev = 8.517, 786.000 (wgt'ed) examples reached here.  /* #neg=570 #pos=216 */


Results
   AUC ROC   = 0.948225
   AUC PR    = 0.288841
   CLL	      = -0.19683
   Precision = 0.29108 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.413333


Total learning time: 6.034 seconds
Total inference time: 8.441 seconds
AUC ROC: 0.948225


Results scoring model
   AUC ROC   = 0.95457
   AUC PR    = 0.252251
   CLL	      = -0.196051
   Precision = 0.245349 at threshold = 0.5
   Recall    = 0.748227
   F1        = 0.369527


Total scoring time: 17.105 seconds
Parameter learned model CLL: -0.196051


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.816, 1, 2], 'true,false': [0.987, 1, 39], 'false,true,true,true': [1.387, 2, 50], 'false,true,true,false': [0.0, 0, 59], 'false,true,false': [1.03e-07, 302, 0], 'false,false,true': [1.317, 2, 13], 'false,false,false,true': [7.86, 202, 89], 'false,false,false,false': [4.009, 45, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [1.373, 2, 28], 'true,false': [0.973, 1, 18], 'false,true,true,true': [0.98, 1, 27], 'false,true,true,false': [1.694, 3, 82], 'false,true,false': [0.0, 293, 0], 'false,false,true,true': [1.383, 2, 47], 'false,false,true,false': [0.094, 95, 0], 'false,false,false,true': [6.645, 148, 65], 'false,false,false,false': [3.211, 33, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.106, 0, 16], 'true,true,false,true': [0.008, 0, 5], 'true,true,false,false': [1.175, 2, 64], 'true,false': [0.505, 152, 0], 'false,true': [0.988, 1, 35], 'false,false,true,true': [2.36, 6, 82], 'false,false,true,false': [0.0, 237, 0], 'false,false,false,true': [7.277, 167, 80], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true': [1.261, 3, 12], 'true,false,true': [0.981, 1, 23], 'true,false,false': [0.0, 0, 11], 'false,true,true': [1.264, 2, 17], 'false,true,false': [0.228, 0, 3], 'false,false,true,true': [1.497, 7, 29], 'false,false,true,false': [4.132, 314, 73], 'false,false,false,true': [3.553, 72, 43], 'false,false,false,false': [7.012, 160, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), enzyme(A, L)'}, {'true,true': [0.039, 0, 28], 'true,false': [1.003, 1, 18], 'false,true,true,true': [1.559, 3, 66], 'false,true,true,false': [1.709, 3, 43], 'false,true,false': [0.05, 277, 0], 'false,false,true,true': [0.896, 1, 5], 'false,false,true,false': [0.366, 0, 8], 'false,false,false,true': [3.599, 95, 43], 'false,false,false,false': [7.005, 159, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.017, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.086, 0, 5], 'true,false': [1.569, 3, 35], 'false,true': [3.948, 315, 109], 'false,false,true,true': [1.449, 2, 47], 'false,false,true,false': [0.027, 98, 0], 'false,false,false,true': [7.1, 153, 80], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true,true': [1.924, 8, 60], 'true,true,false,true': [0.375, 1, 4], 'true,true,false,false': [0.0, 0, 4], 'true,false': [7.452, 426, 138], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.945, 1, 8], 'false,false,true': [2.414, 104, 42], 'false,false,false,true': [1.279, 15, 10], 'false,false,false,false': [3.24, 35, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.895, 4, 39], 'false,true': [4.098, 312, 109], 'false,false,true,true': [0.661, 1, 8], 'false,false,true,false': [6.943, 219, 94], 'false,false,false,true': [1.365, 24, 10], 'false,false,false,false': [3.062, 25, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'enzyme(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.067, 0, 24], 'true,true,false': [0.897, 1, 5], 'true,false': [1.628, 4, 17], 'false,true,true,true': [0.064, 0, 2], 'false,true,true,false': [0.985, 1, 15], 'false,true,false': [0.226, 0, 3], 'false,false,true': [3.953, 317, 102], 'false,false,false,true': [6.732, 220, 89], 'false,false,false,false': [3.422, 53, 25]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(K, G)'}, {'true,true': [0.093, 0, 29], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.038, 0, 6], 'true,false,false': [0.041, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.036, 0, 7], 'false,true,false,true': [0.022, 0, 3], 'false,true,false,false': [0.281, 0, 10], 'false,false': [8.517, 570, 216]}]]
[{'': [0.03993055555555639, 0.20964433328353788], 'false': [0.19426742256799462, 0.22368011543685198], 'false,false': [0.11555555555555533, 0.21606648199446216], 'false,false,false': [0.21230264167877186, 0.22959183673469508], 'false,true': [0.0176933690447232, 3.529185773642882e-17], 'true': [0.10937499999999978, 0.02437500000000039], 'true,true': [0.0, 0.22222222222222224], 'false,true,true': [0.03698224852071041, -4.817238886509154e-16]}, {'': [0.05783143118453588, 0.17747448655091455], 'false': [0.14225544969486104, 0.21176929095189598], 'false,false': [0.21707897444899793, 0.20869645756723412], 'false,false,true': [0.03903554417030328, 9.240142567036022e-05], 'false,false,false': [0.20730741761899918, 0.21484374999999975], 'false,true': [0.033875467140628404, -8.184579294164976e-17], 'true': [0.06283160599457933, 0.04986149584487545], 'false,true,true': [0.034274983863424424, 0.033743200538016875]}, {'': [0.1390479811919813, 0.15061576596637247], 'false': [0.027095581019912815, 0.14597066225694183], 'false,false': [0.09099761255731817, 0.21440956929607718], 'false,false,false': [0.21440956929607718, nan], 'true': [0.016544367042368828, 0.001674586601803804], 'false,false,true': [0.06328699742014043, -6.933038297237265e-17], 'true,true': [0.0007024642448885121, 0.019683821640990397], 'true,true,false': [1.2381652804549504e-05, 0.020903783492898703]}, {'': [0.05499165829310925, 0.11507892603704332], 'false': [0.07517285113539073, 0.11162487065834839], 'false,false': [0.05375334286200207, 0.17870765296977073], 'false,false,false': [0.10977225611568492, 0.2128591276988582], 'false,true': [0.08409674234140099, 0.01737107871558215], 'true': [0.10602541402922529, 0.02785027606820693], 'false,false,true': [0.06228776728254247, 0.04412207255235353], 'true,false': [0.04012998986425418, 0.0]}, {'': [0.021923084115012925, 0.11368816822458866], 'false': [0.057661926737340434, 0.16951594672447268], 'false,false': [0.06982530204559415, 0.16864355809138412], 'false,false,false': [0.09385631182964595, 0.2133500162699403], 'false,false,true': [0.13386468442481006, 0.016773772581636842], 'false,true': [0.04658023314409558, 8.887825604382033e-06], 'false,true,true': [0.03523019792107105, 0.06346315793936054], 'true': [5.571377113320976e-05, 0.05291105267633051]}, {'': [0.05235191580138823, 0.10007646469565658], 'false': [0.03675313739468972, 0.1685939615668554], 'false,false': [0.09172432586514638, 0.21632307747762466], 'false,false,false': [0.21632307747762466, nan], 'false,false,true': [0.04286725813136968, 7.320973062436751e-06], 'true': [0.0009777446129317232, 0.06475157219856789], 'true,true': [5.048685857299747e-05, 0.0014708321420025872], 'true,true,false': [nan, 0.001470832142002565]}, {'': [0.097026364065486, 0.08224754799438437], 'true': [0.05397637151563153, 0.09845740692680735], 'false': [0.09060976852963717, 0.08143671905049416], 'false,true': [0.0, 0.0992424622704357], 'false,false': [0.03991809081096265, 0.1621099591471756], 'false,false,false': [0.06545122823175194, 0.21000000000000021], 'true,true': [0.05442474640656714, 0.04073867911437232], 'true,true,false': [0.028164344089051142, 0.0]}, {'': [0.07304726248727775, 0.09484108665820219], 'false': [0.039891719341868234, 0.15241685778887681], 'false,false': [0.15188162733068677, 0.1542729456351266], 'false,false,false': [0.054834483180026906, 0.23437500000000014], 'false,false,true': [0.048563582209850124, 0.1539886794209924], 'true': [0.0007503029324648477, 0.08349102581595493], 'true,true': [-5.551115123125783e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.07471106042170667, 0.09058718047474114], 'false': [0.049225923095767635, 0.09042506750192908], 'false,false': [0.03729222062058864, 0.1473723967829853], 'false,false,false': [0.14667678203925297, 0.15012709696208884], 'true': [0.03106069769425375, 0.12619929984472597], 'false,true': [0.05453541544579605, 0.01706060249519493], 'false,true,true': [0.0020404454830655304, 0.06061814750637548], 'true,true': [0.00018860513518798028, 0.1342292369150508]}, {'': [0.0003742098259804794, 0.09141673024278975], 'false': [0.008875133969664651, 0.09229272009372166], 'false,true': [0.000181628336974731, 0.01245458643168802], 'false,true,false': [0.0001606749158362189, 0.007875820780614806], 'true': [0.0002961538975110273, 0.000184504353713918], 'true,false': [0.00024172332225223803, 0.00015320125503248179], 'true,false,true': [nan, 0.00024172332225223803], 'false,true,true': [nan, 0.00018162833697473894]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;enzyme(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;enzyme(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), enzyme(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;enzyme(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;enzyme(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G), phenotype(E, H) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8278459047964816;  // std dev = 0.171, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(A, I) )
%   | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8059750220560326;  // std dev = 0.222, 115.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=109 */
%   | | else return -0.14185106490048788;  // std dev = 5.96e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.7867203636709409;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.23103029103171507;  // std dev = 3.714, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.15978827936180845;  // std dev = 8.016, 305.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7246807557873964;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.542187144263903;  // std dev = 0.389, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.7289561508053786;  // std dev = 0.118, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6944839673152157;  // std dev = 0.185, 113.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=109 */
%   | | else return -0.12544463852839202;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8240742893382668;  // std dev = 0.192, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | | else return -0.16729417958508838;  // std dev = 0.048, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14173796549226872;  // std dev = 5.409, 140.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=43 */
%   | | | else return 0.22982706381574372;  // std dev = 4.659, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5992771661499564;  // std dev = 0.170, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | else return -0.13478663952555953;  // std dev = 0.376, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.5662439973787262;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3379194567349771;  // std dev = 1.240, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.5727019883853464;  // std dev = 0.154, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5505207854033801;  // std dev = 1.397, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | | else return -0.11231637819360674;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.07849420938323036;  // std dev = 5.634, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | | else return 0.1454006593556079;  // std dev = 4.781, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.428861200207868;  // std dev = 0.168, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3619553842366241;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11447226989785861;  // std dev = 0.077, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( enzyme(E, G), complex(A, H) )
%   | | | then return -0.021027634225752177;  // std dev = 1.781, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return 0.04455180807942279;  // std dev = 3.739, 214.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=62 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4180638665252049;  // std dev = 5.509, 212.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=154 */
%   | | | else return -0.16442223919089097;  // std dev = 0.659, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0035638408794794463;  // std dev = 0.690, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.043422372524787686;  // std dev = 1.908, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.15310493063346467;  // std dev = 0.385, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else return 0.3477942166848169;  // std dev = 0.137, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.3489299076124969;  // std dev = 0.157, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.35842974544160716;  // std dev = 0.194, 114.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=109 */
%   | | else return -0.10185570318206456;  // std dev = 0.255, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4146664917470553;  // std dev = 0.932, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.12674542351608245;  // std dev = 0.254, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09027383351765299;  // std dev = 6.040, 198.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=65 */
%   | | | else return 0.1557071015509078;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.26350979701594496;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, H) )
%   | | | then return 0.21370187866611842;  // std dev = 0.802, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.09581949298781824;  // std dev = 1.616, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.28450245834148885;  // std dev = 0.164, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, I) )
%   | then return 0.008233043379465952;  // std dev = 0.190, 424.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=109 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31565894615621537;  // std dev = 1.012, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.12035721033715589;  // std dev = 0.328, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5577393128126816;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05165992014876699;  // std dev = 6.550, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.24299138528937209;  // std dev = 0.202, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | else return 0.12091907408894836;  // std dev = 0.335, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.09540392924551894;  // std dev = 0.053, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2987322757995958;  // std dev = 0.623, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.02434207851005418;  // std dev = 6.602, 426.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=125 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2472192755165996;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then return 0.0031873709748909845;  // std dev = 0.207, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13877237903561634;  // std dev = 1.857, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.043347745911265834;  // std dev = 2.383, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19479163671388114;  // std dev = 0.105, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2948018473844029;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.05253652764578428;  // std dev = 1.232, 123.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=11 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07625926093325207;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.016326258770450765;  // std dev = 3.269, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2567082367845843;  // std dev = 0.234, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1105130656431769;  // std dev = 0.253, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07536054199981906;  // std dev = 5.823, 196.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=70 */
%   | | | else return 0.12337996300766;  // std dev = 2.754, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13600283765888802;  // std dev = 0.176, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return -0.5240478043161377;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.23329509603301019;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.1834324326062403;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.16178139123085342;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.24666707184692224;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2262999856417396;  // std dev = 0.241, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then return -0.017963481249792742;  // std dev = 0.234, 310.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=70 */
%   | | else return 0.010366403905461;  // std dev = 0.288, 509.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=146 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16197943069141546;  // std dev = 0.255, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0.11701220156162068;  // std dev = 0.212, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.3674154091786817;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2318062594033317;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.23902918871438927;  // std dev = 0.097, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), location(A, J) )
%   | | | then return -0.07251073595220946;  // std dev = 1.975, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | | | else return 0.0011353391346423595;  // std dev = 3.425, 195.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=49 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.01760617890943029;  // std dev = 1.863, 98.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=23 */
%   | | | else return 0.02691231491621728;  // std dev = 6.297, 404.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=133 */


Results
   AUC ROC   = 0.983387
   AUC PR    = 0.369098
   CLL	      = -0.177382
   Precision = 0.293839 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.416107


Total learning time: 20.135 seconds
Total inference time: 11.973 seconds
AUC ROC: 0.983387


Results scoring model
   AUC ROC   = 0.984381
   AUC PR    = 0.341589
   CLL	      = -0.177546
   Precision = 0.256691 at threshold = 0.5
   Recall    = 0.748227
   F1        = 0.382246


Total scoring time: 27.602 seconds
Refined model CLL: -0.177546


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983387
   AUC PR    = 0.369098
   CLL	      = -0.177382
   Precision = 0.293839 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.416107


Total learning time: 70.876 seconds
Total inference time: 11.973 seconds
AUC ROC: 0.983387
Total revision time: 70.876
Best scored revision CLL: -0.177546


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 03:13:52
{'AUC ROC': 0.983387, 'AUC PR': 0.369098, 'CLL': -0.177382, 'Precision': [0.293839, 0.5], 'Recall': 0.712644, 'F1': 0.416107, 'Learning time': 70.876, 'Inference time': 11.973, 'parameter_1.0': {'AUC ROC': 0.948225, 'AUC PR': 0.288841, 'CLL': -0.19683, 'Precision': [0.29108, 0.5], 'Recall': 0.712644, 'F1': 0.413333, 'Learning time': 6.034, 'Inference time': 8.441}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.5854216623722396;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7711080304712916;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7335753567904442;  // std dev = 0.091, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8151007658866233;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15302344955482047;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.034476550445179534;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5630406063682523;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6198248228391383;  // std dev = 0.208, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.13855136624486034;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462844;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5726722438685758;  // std dev = 0.128, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.03425575267374493;  // std dev = 1.569, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3397838705657017;  // std dev = 0.787, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4685439123244339;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04274044785900406;  // std dev = 2.647, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.18782815439009115;  // std dev = 0.962, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17118771834307453;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2202225699838333;  // std dev = 0.954, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.33787627532387604;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3824138351218481;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.38375777118034415;  // std dev = 1.000, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.10551534579515894;  // std dev = 0.049, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.024110108117844895;  // std dev = 1.067, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11323391160880239;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2889129560824757;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27500175418307254;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.27079445178240324;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A) )
%   | then return 0.022772125801532886;  // std dev = 2.260, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4697121772820466;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16733528210340795;  // std dev = 0.189, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.00970843523905339;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.24420347976381082;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.021701414313080786;  // std dev = 2.039, 70.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=13 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.21682813435267456;  // std dev = 0.000584, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then return 0.0490489785809601;  // std dev = 1.876, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.0012662309182630005;  // std dev = 0.332, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19250949332930023;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19902887974642666;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then return 1.0104662358602229E-4;  // std dev = 2.423, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.12367783957695391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.09544962242738168;  // std dev = 1.618, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.07720622033700464;  // std dev = 0.383, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16287773512228088;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.20538056750011957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.037221629865940506;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0924604912536988;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(G, A) )
%   | | then return 0.015402275256680835;  // std dev = 2.158, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.010456063796940288;  // std dev = 1.735, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.2499676228612704;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.019541622368438358;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.20220636112431012;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15918748194988752;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15975142383385554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006547532394452407;  // std dev = 2.929, 139.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=42 */


Results
   AUC ROC   = 0.972535
   AUC PR    = 0.133921
   CLL	      = -0.189314
   Precision = 0.079365 at threshold = 0.5
   Recall    = 0.961538
   F1        = 0.146628


Total learning time: 3.116 seconds
Total inference time: 11.956 seconds
AUC ROC: 0.972535


Results scoring model
   AUC ROC   = 0.98531
   AUC PR    = 0.287569
   CLL	      = -0.16074
   Precision = 0.202429 at threshold = 0.5
   Recall    = 0.943396
   F1        = 0.333333


Total scoring time: 5.124 seconds
Parameter learned model CLL: -0.16074


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 7], 'false,true,true,true': [1.477, 3, 8], 'false,true,true,false': [0.982, 1, 27], 'false,true,false': [7.3e-08, 76, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.148, 20, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.0, 0, 3], 'false,true,true,false': [0.091, 0, 32], 'false,true,false': [0.0, 81, 0], 'false,false,true,true': [0.11, 0, 4], 'false,false,true,false': [0.0, 4, 0], 'false,false,false,true': [1.561, 13, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.05, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.208, 0, 7], 'true,false': [0.215, 20, 0], 'false,true': [1.49e-08, 0, 4], 'false,false,true,true': [0.128, 0, 32], 'false,false,true,false': [5.58e-08, 70, 0], 'false,false,false,true': [1.569, 12, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(A, J)'}, {'true,true': [0.787, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.002, 0, 3], 'false,false,true,false': [2.647, 79, 32], 'false,false,false,true': [0.962, 4, 4], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), complex(A, K)'}, {'true,true': [0.954, 1, 8], 'true,false': [7.45e-09, 0, 3], 'false,true,true,true': [0.063, 0, 7], 'false,true,true,false': [1.0, 1, 28], 'false,true,false': [0.049, 82, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.067, 11, 4], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.018, 0, 4], 'true,false': [0.006, 0, 2], 'false,true': [2.26, 80, 35], 'false,false,true,true': [0.161, 0, 4], 'false,false,true,false': [0.189, 15, 0], 'false,false,false,true': [1.535, 11, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'complex(A, G)', 'false,false': 'interaction(H, A)', 'false,false,false': 'complex(A, I), interaction(A, J)'}, {'true,true,true': [0.053, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [2.039, 57, 13], 'false,true,true': [0.000584, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.876, 47, 27], 'false,false,false,true': [0.332, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.061, 0, 7], 'false,true': [2.423, 85, 35], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.618, 11, 6], 'false,false,false,true': [0.383, 2, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.007, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false': [0.905, 1, 4], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 1, 0], 'false,false,true': [2.158, 83, 35], 'false,false,false,true': [1.735, 20, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)'}, {'true,true': [0.95, 1, 7], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.0, 0, 1], 'false,true': [0.0, 0, 0], 'false,false': [2.929, 97, 42]}]]
[{'': [-1.6148698540002277e-16, 0.20829200555445462], 'false': [0.21172022684310157, 0.19204389574759959], 'false,true': [0.09204470742932458, 7.011934892369409e-17], 'false,false': [nan, 0.19204389574759959], 'false,false,false': [0.17751479289940844, 0.0], 'false,true,true': [0.19834710743801634, 0.03443877551020513], 'true': [0.0, -2.5376526277146434e-16], 'true,true': [0.0, nan]}, {'': [1.6148698540002277e-16, 0.16410902141967268], 'false': [0.15674087439273912, 0.1997201483611228], 'false,false': [0.23584022259286297, 0.15234374999999994], 'false,false,true': [0.003048196923670421, 0.0], 'false,true': [0.00034890652925239707, -2.1930331350620375e-17], 'false,false,false': [0.15234374999999994, nan], 'false,true,true': [0.0, 0.0002608706654871895], 'true': [-1.2688263138573217e-16, 0.0]}, {'': [0.13210663979077775, 0.11296687340261648], 'true': [0.0040816499971193364, 0.0023042909965639543], 'false': [5.551115123125783e-17, 0.10978690446231783], 'false,false': [0.10118343145655849, 0.16422056584765957], 'false,false,false': [0.16422056584765957, nan], 'false,false,true': [0.0005157283087074971, 4.4408920985006264e-17], 'true,true': [0.0003533572763203858, 0.00619771909781232], 'true,true,false': [nan, 0.00619771909781232]}, {'': [0.052111373874291954, 0.08163080574829082], 'false': [nan, 0.0816308057482908], 'false,false': [0.06610752961008177, 0.17211491791986755], 'false,false,false': [0.11559760428521781, 0.2222222222222222], 'false,false,true': [1.2785231145266234e-06, 0.0631229063514235], 'true': [0.05634527913462845, 0.0], 'true,false': [0.0, nan]}, {'': [0.07847525824288491, 0.07188080361401337], 'true': [0.10117307906211948, 1.850371707708594e-17], 'false': [0.059222943420047074, 0.1314124102403541], 'false,false': [nan, 0.1314124102403541], 'false,false,false': [0.07584346279444559, 0.20999999999999988], 'false,true': [0.027876729508687123, 2.9006706001761914e-05], 'false,true,true': [0.0005582468742990621, 0.03447049480806207]}, {'': [9.329685749145692e-05, 0.059870486526337], 'false': [0.04442892191679374, 0.11257292222518503], 'false,false': [0.07067942447003212, 0.16836734693877556], 'false,false,false': [0.16836734693877556, nan], 'false,false,true': [0.006441298045064547, 0.0023718093041716903], 'true': [8.467484301409744e-05, 1.5536040688365893e-05], 'true,true': [-1.1102230246251566e-17, 8.300643106724792e-05], 'true,true,false': [nan, 8.300643106724792e-05]}, {'': [0.05980830801976012, 0.047036763121273195], 'true': [0.00031540193680158605, 0.05940234892893483], 'false': [1.1352321290421703e-07, 0.04780840825397268], 'false,false': [0.047551230579533296, 0.05510087520703815], 'false,false,false': [0.05510087520703815, nan], 'true,true': [0.00031540193680158605, nan], 'false,true': [1.1352321290421703e-07, nan]}, {'': [0.00034502343159100015, 0.06250295814484695], 'false': [0.04893153033016995, 0.13696468092495961], 'false,false': [0.14794987428820433, 0.04897823265216192], 'false,false,true': [0.0, 0.1539852055918378], 'false,false,false': [0.04897823265216192, nan], 'true': [0.0, 0.0005267242603032494], 'true,true': [0.0, nan]}, {'': [0.0786664897554556, 0.05307909243471408], 'true': [0.0002283388268202299, 0.16368440599492595], 'false': [0.0, 0.05336986595976254], 'false,false': [0.0394659759876716, 0.11392109950023575], 'false,false,false': [0.11579081000681322, 0.0], 'true,true': [8.325189365688638e-06, 0.0], 'false,true': [nan, 0.0]}, {'': [0.08037958914420018, 0.0617044652009222], 'true': [0.11284311991465723, 0.00034401910575503764], 'false': [nan, 0.06170446520092211], 'true,false': [0.0004112497700941298, 0.0], 'true,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(F, E).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;false;interaction(G, A).;true;true
3;false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(A, G), interaction(H, E).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
7;false;interaction(F, A).;true;true
7;false,false;interaction(A, G), interaction(G, H).;true;true
7;false,false,true;recursion_proteinclass(H, B).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,false;interaction(G, A).;true;true
8;false,false,false;interaction(A, H), interaction(H, I).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.7781489350995119;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7459126591504658;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6104915874871377;  // std dev = 2.091, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8326524777140508;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14744972112675697;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.14197357824080592;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.40874113578563503;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.563124534455239;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.6127089202767353;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6848791035307862;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.11820326970145364;  // std dev = 0.015, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462844;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5800189601374294;  // std dev = 1.001, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.11231637819360632;  // std dev = 3.16e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.1000616212192558;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.4498317157254872;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41499466816145736;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.43995249079984866;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06626554836516428;  // std dev = 2.372, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.022779057806112814;  // std dev = 1.604, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5240354267871441;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.130761623822146;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.14943173356531533;  // std dev = 0.902, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.017940903420082765;  // std dev = 1.150, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31837855760912065;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3212608551628202;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.21647602062790583;  // std dev = 1.097, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.3918277796358179;  // std dev = 1.365, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else return -0.10629266706148424;  // std dev = 0.002, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J), interaction(I, I) )
%   | | | then return 0.007799620438627405;  // std dev = 0.483, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.10025292675470579;  // std dev = 0.000565, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.002531003776280611;  // std dev = 0.679, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1730571379494575;  // std dev = 1.274, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2537933879289801;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.07792310185376213;  // std dev = 0.817, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then return -0.02740914701173059;  // std dev = 0.188, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.11457894701347314;  // std dev = 1.467, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.011798534003412887;  // std dev = 1.094, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.38575410953317996;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10480614314299265;  // std dev = 0.066, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.04052207288071398;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.35664775338443105;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.24494306616303607;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.010564579925223156;  // std dev = 0.676, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.091756489245498;  // std dev = 1.252, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( location(A, H) )
%   | | | then return 0.06419767532348859;  // std dev = 1.071, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.15012688319227968;  // std dev = 0.194, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.23042596067218737;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( location(A, K) )
%   | | | then return 0.0035389734679521726;  // std dev = 1.844, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.08136913131140766;  // std dev = 0.949, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.23345960614223588;  // std dev = 0.378, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.17180954750811828;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19656411762389872;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, F), complex(A, G) )
%   | | | then return 0.07937825657837173;  // std dev = 0.653, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03012436468029403;  // std dev = 0.966, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.02567227040146319;  // std dev = 0.884, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.07642946981036997;  // std dev = 1.531, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return -0.11865294867478214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.09317097926962507;  // std dev = 1.701, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | else return -0.015122606029601561;  // std dev = 0.356, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15553569517774177;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16957035620778493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1660398025926986;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09876458106586444;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01189673860887946;  // std dev = 2.528, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.001726849695818707;  // std dev = 1.458, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.10223887806486005;  // std dev = 0.486, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.12916038549820583;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.14421170954650778;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, G), complex(C, G) )
%   | | then return 0.13574941107767788;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.17018014446178553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J), enzyme(A, J) )
%   | | | then return 0.33391205151125236;  // std dev = 0.183, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.05105706186978447;  // std dev = 2.340, 56.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=25 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.09105670444239074;  // std dev = 0.046, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.16653233013161206;  // std dev = 1.026, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.17597844827134368;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */


Results
   AUC ROC   = 0.977529
   AUC PR    = 0.18364
   CLL	      = -0.178979
   Precision = 0.090502 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.165574


Total learning time: 11.732 seconds
Total inference time: 18.502 seconds
AUC ROC: 0.977529


Results scoring model
   AUC ROC   = 0.990986
   AUC PR    = 0.384189
   CLL	      = -0.151283
   Precision = 0.224215 at threshold = 0.5
   Recall    = 0.943396
   F1        = 0.362319


Total scoring time: 12.59 seconds
Refined model CLL: -0.151283


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977529
   AUC PR    = 0.18364
   CLL	      = -0.178979
   Precision = 0.090502 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.165574


Total learning time: 32.562 seconds
Total inference time: 18.502 seconds
AUC ROC: 0.977529
Total revision time: 32.562
Best scored revision CLL: -0.151283


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:14:56
{'AUC ROC': 0.977529, 'AUC PR': 0.18364, 'CLL': -0.178979, 'Precision': [0.090502, 0.5], 'Recall': 0.971154, 'F1': 0.165574, 'Learning time': 32.562, 'Inference time': 18.502, 'parameter_0.2': {'AUC ROC': 0.972535, 'AUC PR': 0.133921, 'CLL': -0.189314, 'Precision': [0.079365, 0.5], 'Recall': 0.961538, 'F1': 0.146628, 'Learning time': 3.116, 'Inference time': 11.956}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.6981489350995119;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.744941387929701;  // std dev = 2.307, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14661047356105084;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7419261005181365;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6077299667445832;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6580864749025559;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6228155381689572;  // std dev = 2.642, 66.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=58 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8224123547515712;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1699136013664375;  // std dev = 0.116, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.26891927132065896;  // std dev = 2.352, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.13969028077191395;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5995517221646057;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5321680057977863;  // std dev = 1.220, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else return -0.1376106769657052;  // std dev = 0.521, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5825664395656277;  // std dev = 0.057, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5393985815481277;  // std dev = 1.918, 57.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=53 */
%   | | | else return -0.11231637819360611;  // std dev = 8.43e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.15195304092198011;  // std dev = 2.733, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4508324091394771;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4271608676654648;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4216570298547081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return -0.47017576909515924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.560897248898285;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3511992313608326;  // std dev = 0.919, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.03286665039849475;  // std dev = 3.918, 242.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=58 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.07771448025970831;  // std dev = 1.649, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.13195115952718697;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3350043180821507;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.34006209189189096;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.29815978106141355;  // std dev = 1.875, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.44357650966486356;  // std dev = 0.982, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | else return -0.10570964703100409;  // std dev = 0.138, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42883091354383246;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.09075664778383688;  // std dev = 1.540, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.20566138745546533;  // std dev = 2.334, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2718090549584159;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07008524088195296;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18887204924964454;  // std dev = 0.945, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(G, A) )
%   | then return 0.023537292581694576;  // std dev = 3.574, 232.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=68 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38109948970157437;  // std dev = 0.952, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14908562423131372;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0666190629177957;  // std dev = 2.625, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.17523556203779175;  // std dev = 1.243, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5326289788334762;  // std dev = 0.231, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.008932438632346386;  // std dev = 3.037, 125.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=27 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.23838662310845757;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21937440292775523;  // std dev = 0.000666, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then return 0.029675579174698697;  // std dev = 3.075, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return -0.07727921474776936;  // std dev = 0.517, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.08776316138995469;  // std dev = 1.062, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.03070141315764201;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2069007185020915;  // std dev = 0.116, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then return 0.012262668598017492;  // std dev = 3.530, 240.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=68 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.41458225053873066;  // std dev = 0.225, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.05879545759143077;  // std dev = 2.618, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.10588345555835144;  // std dev = 0.710, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.14364284382038478;  // std dev = 0.877, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17444522346661198;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.1880292576052196;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.014800235199167927;  // std dev = 0.998, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23645879323148158;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then return 0.025533534369242914;  // std dev = 3.365, 221.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=68 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06976438589973377;  // std dev = 2.481, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.031890518081246544;  // std dev = 1.038, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15247725118414815;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.263025991242121;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07102264380744362;  // std dev = 0.524, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, I), interaction(G, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19873464170259672;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.00611136833780489;  // std dev = 4.576, 292.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=85 */


Results
   AUC ROC   = 0.970543
   AUC PR    = 0.123055
   CLL	      = -0.191229
   Precision = 0.082458 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.152125


Total learning time: 5.632 seconds
Total inference time: 18.591 seconds
AUC ROC: 0.970543


Results scoring model
   AUC ROC   = 0.982306
   AUC PR    = 0.263428
   CLL	      = -0.171972
   Precision = 0.171378 at threshold = 0.5
   Recall    = 0.915094
   F1        = 0.28869


Total scoring time: 11.972 seconds
Parameter learned model CLL: -0.171972


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.966, 1, 14], 'false,true,true,true': [1.833, 4, 21], 'false,true,true,false': [2.307, 6, 47], 'false,true,false': [0.0, 187, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [3.267, 37, 15], 'false,false,false,false': [1.095, 3, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.04, 0, 11], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.961, 1, 10], 'false,true,true,false': [2.642, 8, 58], 'false,true,false': [0.0, 185, 0], 'false,false,true,true': [0.111, 0, 8], 'false,false,true,false': [0.116, 18, 0], 'false,false,false,true': [2.352, 13, 10], 'false,false,false,false': [1.097, 4, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.039, 0, 10], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.22, 3, 19], 'true,false': [0.521, 69, 0], 'false,true': [0.057, 0, 12], 'false,false,true,true': [1.918, 4, 53], 'false,false,true,false': [8.43e-08, 135, 0], 'false,false,false,true': [2.733, 21, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true': [0.038, 0, 11], 'true,false,true': [0.03, 0, 6], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 1, 0], 'false,true,false': [0.2, 0, 3], 'false,false,true,true': [0.919, 2, 10], 'false,false,true,false': [3.918, 184, 58], 'false,false,false,true': [1.649, 14, 7], 'false,false,false,false': [2.535, 18, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), phenotype(A, L)'}, {'true,true': [0.047, 0, 11], 'true,false': [0.029, 0, 7], 'false,true,true,true': [1.875, 4, 25], 'false,true,true,false': [0.982, 1, 43], 'false,true,false': [0.138, 167, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.191, 0, 3], 'false,false,false,true': [1.54, 13, 7], 'false,false,false,false': [2.334, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.823, 1, 2], 'true,false': [0.945, 1, 12], 'false,true': [3.574, 164, 68], 'false,false,true,true': [0.952, 1, 8], 'false,false,true,false': [0.021, 9, 0], 'false,false,false,true': [2.625, 20, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'phenotype(A, J), interaction(A, K)'}, {'true,true,true': [1.243, 2, 18], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.231, 0, 2], 'true,false': [3.037, 98, 27], 'false,true,true': [0.0, 0, 5], 'false,true,false': [0.000666, 0, 2], 'false,false,true': [3.075, 103, 49], 'false,false,false,true': [0.517, 8, 1], 'false,false,false,false': [1.062, 6, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), phenotype(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.725, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.116, 0, 14], 'false,true': [3.53, 172, 68], 'false,false,true,true': [0.225, 0, 2], 'false,false,true,false': [2.618, 23, 15], 'false,false,false,true': [0.71, 4, 1], 'false,false,false,false': [0.877, 2, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.047, 0, 10], 'true,true,false': [0.03, 0, 2], 'true,false': [0.998, 2, 6], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.187, 0, 3], 'false,false,true': [3.365, 153, 68], 'false,false,false,true': [2.481, 28, 15], 'false,false,false,false': [1.038, 5, 2]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,false': 'phenotype(A, I), interaction(G, J)'}, {'true,true': [0.051, 0, 12], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.524, 1, 5], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.166, 0, 3], 'false,false': [4.576, 207, 85]}]]
[{'': [0.08999999999999968, 0.1974532544378701], 'false': [0.19075827696689263, 0.2222222222222218], 'false,false': [1.4802973661668753e-16, 0.20929516774392068], 'false,false,false': [0.2052514792899403, 0.24000000000000005], 'false,true': [0.11176857330703371, -2.1610758340297165e-16], 'false,true,true': [0.13440000000000019, 0.10039159843360679], 'true': [0.15999999999999986, 0.06222222222222188], 'true,true': [0.15999999999999986, nan]}, {'': [0.050528221802426346, 0.16288208164076162], 'false': [0.14796769112991728, 0.226348752008444], 'false,false': [0.21075613289921924, 0.23493985689365476], 'false,false,false': [0.2404525252551146, 0.2005630292335853], 'false,false,true': [0.0015398994932509513, 0.0007531860823955208], 'false,true': [0.1027876379007852, -1.9203857723245952e-17], 'false,true,true': [0.08397457522771745, 0.10574542849228698], 'true': [0.0001479955336670164, 0.10937500000000006]}, {'': [0.12104222641445318, 0.1310551729747267], 'false': [0.0002660315877983284, 0.1258228580980019], 'false,false': [0.10782160316564206, 0.2262810015741264], 'false,false,false': [0.2262810015741264, nan], 'true': [0.04750602411258903, 0.003936623039160107], 'false,false,true': [0.06454859719097253, 5.2632795241488905e-17], 'true,true': [0.00014831983245935376, 0.06761332669601544], 'true,true,false': [nan, 0.0676133266960156]}, {'': [0.00027481203564399474, 0.09042711391147505], 'false': [0.20936287493432953, 0.08807242493382887], 'false,true': [0.0, 0.013372607803912065], 'false,false': [0.06832918373823647, 0.18731601692928496], 'false,false,false': [0.12949573137044426, 0.22942053793643127], 'false,false,true': [0.07040700430999851, 0.06343864113513639], 'true': [0.00013208963381269615, 0.0001335330983626624], 'true,false': [0.00015146115323549925, 0.0]}, {'': [0.0001741671011974175, 0.0910411173096614], 'false': [0.0714098513857251, 0.18244042095862925], 'false,false': [0.01213560292009519, 0.1894570063367191], 'false,false,false': [0.11863430617275258, 0.24755408911828855], 'false,true': [0.06640354326211899, 0.000114669199223981], 'false,true,true': [0.12118384358161277, 0.02189786965613213], 'false,false,true': [nan, 0.01213560292009519], 'true': [0.0002001927614223979, 0.00011763675540643614]}, {'': [0.08953562520357403, 0.07806537508991436], 'true': [0.12548473937728877, 0.06876315816736349], 'true,true': [0.0, 0.2260024626261414], 'true,true,false': [nan, 0.2260024626261414], 'false': [0.05505189260892786, 0.18180058053817366], 'false,false': [0.12066958811866983, 0.21530866556751077], 'false,false,false': [0.21530866556751077, nan], 'false,false,true': [0.1007412451611042, 4.980355822068214e-05]}, {'': [0.08115943632400523, 0.06449873157417839], 'true': [0.08321454917387047, 0.07377257915152413], 'true,true': [0.07725542323887866, 0.026687577279339625], 'false': [7.38317227039447e-05, 0.06533668476323959], 'false,false': [0.06219469172978367, 0.08217009080179649], 'false,false,false': [0.029729235019582523, 0.14110786424885985], 'true,true,false': [nan, 0.026687577279339625], 'false,true': [0.0, 2.2208932123901626e-07]}, {'': [0.03435033171188142, 0.07322321502902719], 'false': [0.05191522329340732, 0.17541386601683498], 'false,false': [0.17864721735219632, 0.15686224653769582], 'false,false,true': [0.02521685260870657, 0.1803932876053306], 'false,false,false': [0.1008216569920694, 0.19232222009103628], 'true': [0.10498478773133724, 0.00095368890692291], 'true,true': [0.10498478773133724, nan]}, {'': [0.05878364957381369, 0.0686513383961827], 'false': [0.011628634356417164, 0.06882070430166676], 'false,false': [0.05122179261216131, 0.14587398648700117], 'false,false,false': [0.14312813656701626, 0.15385435150828533], 'true': [0.0002795704409463741, 0.12453424331046534], 'false,true': [nan, 0.011628634356417164], 'true,true': [0.00021652664501811136, 0.0004410177676886437]}, {'': [0.01695262782245972, 0.07144885609495709], 'false': [0.009165611667633064, 0.07171142642037141], 'true': [0.00021480484713180814, 0.043802610707121305], 'true,false': [0.0, 0.04583657647838608], 'false,true': [nan, 0.009165611667633064], 'false,true,false': [nan, 0.009165611667633064], 'true,false,true': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.6359267128772896;  // std dev = 2.160, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | | else return 0.8373156017661785;  // std dev = 0.990, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | else return -0.14185106490048813;  // std dev = 0.000, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.1718744252955908;  // std dev = 3.314, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.49725118998873225;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.6037702029863318;  // std dev = 2.634, 60.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=52 */
%   | | | else return 0.7308614043254832;  // std dev = 0.060, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7151925133757293;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.14554211191692965;  // std dev = 0.067, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.4126248420226576;  // std dev = 1.057, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11352397174856386;  // std dev = 2.513, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5959445509740541;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2589610398279984;  // std dev = 1.380, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.6538083850949938;  // std dev = 0.225, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12133250769882258;  // std dev = 0.259, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5823604890666685;  // std dev = 0.094, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5710873177803951;  // std dev = 1.037, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.11231637819360615;  // std dev = 1.01e-07, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.396701535469673;  // std dev = 1.345, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.1187099424486424;  // std dev = 2.171, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.44661318309843023;  // std dev = 0.139, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.42007213570679486;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06171103443318482;  // std dev = 0.668, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.5327354852547351;  // std dev = 0.195, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.10110433438578699;  // std dev = 0.002, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.025137211277821755;  // std dev = 2.225, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.12281698557726008;  // std dev = 2.824, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.0415345828201404;  // std dev = 3.603, 179.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3259120548371887;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.36141743914424473;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4153057534398365;  // std dev = 1.007, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.2217536899055377;  // std dev = 2.990, 54.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=42 */
%   | | else return -0.10722924063202768;  // std dev = 0.122, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.16231191763417643;  // std dev = 0.663, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1513724467493505;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.10734326410290604;  // std dev = 1.505, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.22579974598189928;  // std dev = 2.279, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22232254614713456;  // std dev = 0.198, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(A, G), interaction(H, E) )
%   | | | then return 0.10899020623831812;  // std dev = 1.534, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.027688931812592923;  // std dev = 2.536, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.10079690544069853;  // std dev = 0.744, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.002616525641666684;  // std dev = 1.630, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.40976094131809143;  // std dev = 0.797, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1349655455294049;  // std dev = 0.126, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.16810368453429836;  // std dev = 2.295, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.0907334893825417;  // std dev = 0.982, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.3022363840982969;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( phenotype(A, F), complex(A, H) )
%   | | | then return 0.11735214249856689;  // std dev = 0.913, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.03838755529485155;  // std dev = 2.119, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | else if ( interaction(I, A) )
%   | | then return 0.007866722493835658;  // std dev = 0.164, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.14964823709826403;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3030514690662326;  // std dev = 1.515, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.24033796513934247;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(L, A), location(A, M) )
%   | | then return 0.04205530063399425;  // std dev = 0.228, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | else return -0.08975122975573659;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14584366688933204;  // std dev = 0.226, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(D, G), enzyme(D, H) )
%   | | | then return -0.20124733574565484;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.047171027190276826;  // std dev = 0.964, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.21275189082319185;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08347626196560155;  // std dev = 1.457, 45.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=6 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.1908342380433828;  // std dev = 2.848, 114.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=73 */
%   | | | else return -0.11694013323135538;  // std dev = 0.726, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.026015128212528736;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.11533058773048462;  // std dev = 0.108, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1317223082044048;  // std dev = 0.193, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, F), enzyme(F, G) )
%   | | | then return -0.051276228004956764;  // std dev = 0.722, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.2723463779998023;  // std dev = 0.586, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.12027670317465855;  // std dev = 1.038, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.02111520707562728;  // std dev = 1.308, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.15830114678114704;  // std dev = 2.935, 108.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=73 */
%   | | | else return -0.10750892827139276;  // std dev = 0.596, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.11747171620505274;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.029964942784364262;  // std dev = 1.097, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.14703647976852202;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3361792851359803;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.35650672404221706;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, F), phenotype(C, F) )
%   | | then return 0.2307418480724588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.009749619019438197;  // std dev = 0.849, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.04678546669587422;  // std dev = 0.212, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( location(A, J) )
%   | | | then return -0.032736317737518554;  // std dev = 2.881, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.09262386155823846;  // std dev = 1.582, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return 0.024112363174458692;  // std dev = 0.171, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */


Results
   AUC ROC   = 0.976224
   AUC PR    = 0.175974
   CLL	      = -0.181756
   Precision = 0.084027 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.154671


Total learning time: 21.148 seconds
Total inference time: 142.755 seconds
AUC ROC: 0.976224


Results scoring model
   AUC ROC   = 0.98749
   AUC PR    = 0.337065
   CLL	      = -0.161173
   Precision = 0.182342 at threshold = 0.5
   Recall    = 0.896226
   F1        = 0.30303


Total scoring time: 81.746 seconds
Refined model CLL: -0.161173


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.976224
   AUC PR    = 0.175974
   CLL	      = -0.181756
   Precision = 0.084027 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.154671


Total learning time: 120.49799999999999 seconds
Total inference time: 142.755 seconds
AUC ROC: 0.976224
Total revision time: 120.49799999999999
Best scored revision CLL: -0.161173


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:19:39
{'AUC ROC': 0.976224, 'AUC PR': 0.175974, 'CLL': -0.181756, 'Precision': [0.084027, 0.5], 'Recall': 0.971154, 'F1': 0.154671, 'Learning time': 120.49799999999999, 'Inference time': 142.755, 'parameter_0.4': {'AUC ROC': 0.970543, 'AUC PR': 0.123055, 'CLL': -0.191229, 'Precision': [0.082458, 0.5], 'Recall': 0.980769, 'F1': 0.152125, 'Learning time': 5.632, 'Inference time': 18.591}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.8581489350995115;  // std dev = 2.60e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16827551737799368;  // std dev = 5.814, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | | | else return 0.10814893509951236;  // std dev = 2.872, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.6194734122109544;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6994734122109547;  // std dev = 0.990, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7609748075788444;  // std dev = 1.366, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.16210594763289038;  // std dev = 0.025, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14054454017987944;  // std dev = 4.535, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | | | else return 0.13920441656204335;  // std dev = 2.067, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5568097989840938;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.569761036991239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5497741977161403;  // std dev = 1.957, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | else return -0.1295017088781017;  // std dev = 0.483, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.46043471381691886;  // std dev = 1.336, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.559682867917372;  // std dev = 0.010, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.11231637819360614;  // std dev = 3.33e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13990873736803783;  // std dev = 4.908, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.35807676182205794;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4430175071545983;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.46554044987987087;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.49908350324876255;  // std dev = 0.306, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4308208366705903;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.36599676159550243;  // std dev = 0.805, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.0022188769861600263;  // std dev = 3.143, 228.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=45 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.06352412437562822;  // std dev = 3.138, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.09448580727761624;  // std dev = 4.884, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.33594472303198;  // std dev = 0.019, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.35412724456345673;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3445630422906236;  // std dev = 0.899, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.38827104947188196;  // std dev = 0.986, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.10415356720240197;  // std dev = 0.193, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4389050968111004;  // std dev = 0.179, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2579811520860075;  // std dev = 0.774, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.09887800801108855;  // std dev = 2.947, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.07872844111550197;  // std dev = 4.884, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.26699308213375317;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2795618217589928;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21971380875680802;  // std dev = 0.961, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, G) )
%   | then return 0.013016011814763364;  // std dev = 2.768, 236.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=62 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4291696675016725;  // std dev = 1.454, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.14460199937774304;  // std dev = 0.026, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1103541969009978;  // std dev = 4.779, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.22820989427151436;  // std dev = 0.425, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.2643208563118706;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21547709187396472;  // std dev = 0.578, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.022859615760753335;  // std dev = 5.269, 288.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=76 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.23815022377429168;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23086385124328176;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then return 0.03357183573938852;  // std dev = 1.750, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.012738169708750184;  // std dev = 1.243, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.3556855943615145;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.17892369633323324;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14965923063283004;  // std dev = 0.941, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, F) )
%   | then return -3.385697254270781E-4;  // std dev = 2.876, 239.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=62 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return -0.11392817924190604;  // std dev = 1.428, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.0342467014384137;  // std dev = 4.943, 174.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=53 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.012263350168028065;  // std dev = 1.362, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 6.351644996440815E-5;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16224287977403773;  // std dev = 0.042, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.17719933167193092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1765684016856493;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.27257468173812327;  // std dev = 0.186, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.23522433862019723;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20127948496058679;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.001810442331664371;  // std dev = 2.830, 227.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=60 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05460495580971495;  // std dev = 4.896, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
%   | | | else return 0.0842138004889053;  // std dev = 2.141, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14196396862294766;  // std dev = 0.039, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15055208283439553;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.15294704579615429;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return 0.16054341346690015;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.05015969837348949;  // std dev = 0.369, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.13718324725088837;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24091513096013503;  // std dev = 0.231, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.006853289562364814;  // std dev = 6.465, 435.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=120 */


Results
   AUC ROC   = 0.960626
   AUC PR    = 0.142224
   CLL	      = -0.216049
   Precision = 0.114058 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.200466


Total learning time: 6.124 seconds
Total inference time: 16.26 seconds
AUC ROC: 0.960626


Results scoring model
   AUC ROC   = 0.965234
   AUC PR    = 0.359046
   CLL	      = -0.191386
   Precision = 0.22482 at threshold = 0.5
   Recall    = 0.786164
   F1        = 0.34965


Total scoring time: 14.477 seconds
Parameter learned model CLL: -0.191386


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 21], 'false,true,true,true': [1.33e-07, 0, 25], 'false,true,true,false': [2.6e-07, 0, 37], 'false,true,false': [0.0, 190, 0], 'false,false,true': [0.949, 1, 9], 'false,false,false,true': [5.814, 109, 49], 'false,false,false,false': [2.872, 33, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [7.3e-08, 0, 19], 'true,false': [0.949, 1, 9], 'false,true,true,true': [4.21e-08, 0, 13], 'false,true,true,false': [0.99, 1, 49], 'false,true,false': [0.0, 183, 0], 'false,false,true,true': [1.366, 2, 33], 'false,false,true,false': [0.025, 65, 0], 'false,false,false,true': [4.535, 68, 30], 'false,false,false,false': [2.067, 14, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.024, 0, 17], 'true,true,false,true': [0.0, 0, 4], 'true,true,false,false': [1.957, 6, 45], 'true,false': [0.483, 154, 0], 'false,true': [1.336, 2, 17], 'false,false,true,true': [0.01, 0, 40], 'false,false,true,false': [3.33e-08, 81, 0], 'false,false,false,true': [4.908, 75, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.954, 1, 13], 'true,false,true': [0.024, 0, 11], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.306, 0, 7], 'false,true,false': [0.008, 0, 4], 'false,false,true,true': [0.805, 1, 15], 'false,false,true,false': [3.143, 183, 45], 'false,false,false,true': [3.138, 68, 26], 'false,false,false,false': [4.884, 80, 34]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.019, 0, 17], 'true,false': [0.048, 0, 11], 'false,true,true,true': [0.899, 1, 30], 'false,true,true,false': [0.986, 1, 32], 'false,true,false': [0.193, 176, 0], 'false,false,true,true': [0.179, 0, 2], 'false,false,true,false': [0.774, 1, 7], 'false,false,false,true': [2.947, 51, 26], 'false,false,false,false': [4.884, 80, 34]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.035, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.961, 1, 18], 'false,true': [2.768, 174, 62], 'false,false,true,true': [1.454, 2, 33], 'false,false,true,false': [0.026, 64, 0], 'false,false,false,true': [4.779, 67, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [0.425, 1, 33], 'true,true,false,true': [0.208, 0, 3], 'true,true,false,false': [0.578, 1, 2], 'true,false': [5.269, 212, 76], 'false,true,true': [0.033, 0, 4], 'false,true,false': [0.017, 0, 5], 'false,false,true': [1.75, 57, 25], 'false,false,false,true': [1.243, 17, 5], 'false,false,false,false': [1.549, 4, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.941, 1, 21], 'false,true': [2.876, 177, 62], 'false,false,true,true': [1.428, 5, 5], 'false,false,true,false': [4.943, 121, 53], 'false,false,false,true': [1.362, 15, 5], 'false,false,false,false': [2.026, 13, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.042, 0, 19], 'true,true,false': [0.0, 0, 1], 'true,false': [0.017, 0, 8], 'false,true,true,true': [0.186, 0, 2], 'false,true,true,false': [0.239, 0, 5], 'false,true,false': [0.053, 0, 4], 'false,false,true': [2.83, 167, 60], 'false,false,false,true': [4.896, 96, 49], 'false,false,false,false': [2.141, 19, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.039, 0, 20], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.009, 0, 2], 'true,false,false': [0.012, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.369, 1, 1], 'false,true,false,true': [0.03, 0, 4], 'false,true,false,false': [0.231, 0, 5], 'false,false': [6.465, 315, 120]}]]
[{'': [1.0150610510858574e-15, 0.20261872027348435], 'false': [0.1855001259763171, 0.21953987184051277], 'false,false': [0.08999999999999977, 0.20880305852367453], 'false,false,false': [0.21394808524275033, 0.18749999999999947], 'false,true': [-6.87622002348484e-16, -2.220446049250313e-16], 'true': [-2.5376526277146434e-16, -3.383536836952858e-16], 'true,true': [-2.5376526277146434e-16, nan], 'false,true,true': [7.105427357601002e-16, 1.8243664837083652e-15]}, {'': [0.03329369797859664, 0.17191362480669134], 'false': [0.13494212432481437, 0.2115348208007692], 'false,false': [0.21252726460414886, 0.21049806693221207], 'false,false,true': [0.05335183468371442, 9.783259589304714e-06], 'false,false,false': [0.20984755145592368, 0.21368410122985054], 'false,true': [0.01562106324011103, -1.9413735949729513e-17], 'true': [2.8047739569477637e-16, 0.08999999999999994], 'false,true,true': [1.3664283380001927e-16, 0.01959999999999944]}, {'': [0.11897701489307361, 0.15935589245504522], 'false': [0.09392177118760979, 0.15615799697037272], 'false,false': [0.09993455088807238, 0.21697482157209053], 'false,false,false': [0.21697482157209053, nan], 'true': [0.053233573004179253, 0.0015124823338223611], 'false,false,true': [2.6616540077739615e-06, 1.3706457094137734e-17], 'true,true': [3.333271279239077e-05, 0.06966992668459991], 'true,true,false': [0.0, 0.07510518202392046]}, {'': [0.03353068245525763, 0.10498799987411027], 'false': [0.009578139031435805, 0.10305600223150402], 'false,false': [0.051247954865794115, 0.16223210133745264], 'false,false,false': [0.10472962905441872, 0.2092131954635531], 'false,false,true': [0.04045261652442697, 0.043327860217493915], 'true': [0.06503199270312612, 0.00013640274851048535], 'false,true': [0.013347369372541282, 1.6663976452058193e-05], 'true,false': [5.072829490055336e-05, 0.0]}, {'': [0.00017371217916833142, 0.10554392159986942], 'false': [0.05112841735635805, 0.16740300512676992], 'false,false': [0.0683934188678906, 0.170448481927645], 'false,false,false': [0.11281977306465814, 0.2092094587327087], 'false,false,true': [0.01595169301710006, 0.07495715557561058], 'false,true': [0.028289744412546558, 0.00021208025767066848], 'false,true,true': [0.026051878061014288, 0.029466637396529764], 'true': [2.0734266466335303e-05, 0.00020940867838200897]}, {'': [0.032398172892422104, 0.09306887668440196], 'false': [0.03247277449530649, 0.16108659125275807], 'false,false': [0.09659371558867387, 0.22174417003193017], 'false,false,false': [0.22174417003193017, nan], 'false,false,true': [0.06037699977858707, 1.0970431401760572e-05], 'true': [0.0001332858672845605, 0.04856736217293706], 'true,true': [0.0001322980865172315, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09094034995683753, 0.06768926351632024], 'true': [0.014068800035974105, 0.09638623241718207], 'false': [0.00016203396875589618, 0.07061760007512743], 'false,false': [0.03735947097613484, 0.15243458133111898], 'false,false,false': [0.07021459644615244, 0.24000000000000005], 'true,true': [0.0053212331924985465, 0.06352220608332486], 'true,true,false': [0.014447537289656706, 0.11140401821476013], 'false,true': [0.0002646056433092195, 5.638052926405512e-05]}, {'': [0.03068994840564371, 0.08874402925982128], 'false': [0.03460834775186599, 0.1465388477882744], 'false,false': [0.14500677395387837, 0.15289815889982925], 'false,false,false': [0.09281422423757821, 0.21606648199445985], 'false,false,true': [0.20394545045687465, 0.14042624395244271], 'true': [-3.96508223080413e-18, 0.04024821258687452], 'true,true': [-3.96508223080413e-18, nan]}, {'': [0.00011778976058562532, 0.09069809978170877], 'false': [0.00922287877250405, 0.09183352153314589], 'false,false': [0.03528703643656019, 0.16329130379902038], 'false,false,false': [0.1653222784768154, 0.15274853113785208], 'false,true': [0.01336410544705509, 0.0007089730269951855], 'false,true,true': [0.01729362526433252, 0.011393712339850749], 'true': [9.824433259695287e-05, 3.497196003222208e-05], 'true,true': [9.223031427545085e-05, 0.0]}, {'': [8.454809460405253e-05, 0.09484835843409954], 'false': [0.026063088883286442, 0.0960758696906185], 'false,true': [0.05529541373731259, 0.008685690920618272], 'false,true,true': [0.0, 0.06814452015956098], 'false,true,false': [0.0002258457845245379, 0.01067120983044052], 'true': [7.650697258979322e-05, 2.762629739050046e-05], 'true,false': [4.0036022506739766e-05, 2.205576045472002e-05], 'true,false,true': [nan, 4.0036022506739766e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), phenotype(A, I).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8268989350995126;  // std dev = 0.174, 64.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=62 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.16403128804068942;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7224113618176513;  // std dev = 0.037, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.6334286728427659;  // std dev = 0.296, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7257371741022817;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6680448664099744;  // std dev = 1.681, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7188635590794707;  // std dev = 1.875, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return -0.16348927228801932;  // std dev = 0.007, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1325392982608103;  // std dev = 3.116, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.1789950155771236;  // std dev = 3.785, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.559167488854951;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.3904545187616852;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.507249708722937;  // std dev = 2.525, 55.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | else return -0.12535858925810647;  // std dev = 0.166, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.5669802414316228;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.30554725548446254;  // std dev = 0.461, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then return 0.07698724719197607;  // std dev = 0.307, 145.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=40 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.34851176463536615;  // std dev = 1.776, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.12301252541722382;  // std dev = 4.454, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.4158756026701468;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2136007443790025;  // std dev = 0.701, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4566646445384512;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4479826050408996;  // std dev = 0.045, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5439639227481881;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.06340788807665405;  // std dev = 1.306, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return 0.06171612195043853;  // std dev = 2.992, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11527119439401189;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08045475865645854;  // std dev = 6.418, 282.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.27581285320084753;  // std dev = 0.216, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.36563471757094007;  // std dev = 0.135, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.3370861361387039;  // std dev = 1.330, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.514926523770461;  // std dev = 0.987, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else return -0.1188689685652667;  // std dev = 0.210, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47862905727389116;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25304125495710184;  // std dev = 0.806, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.024896189596633693;  // std dev = 2.569, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | | else return 0.10194201950554699;  // std dev = 5.211, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27656133308278313;  // std dev = 0.030, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return -0.15929809208741122;  // std dev = 0.484, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.09388169306891783;  // std dev = 0.038, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.007129507630014622;  // std dev = 1.804, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | | else return 0.0743483280869318;  // std dev = 2.636, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4840669545291169;  // std dev = 1.082, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.14156571919103544;  // std dev = 0.109, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15290233323601118;  // std dev = 2.820, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.060945583623200426;  // std dev = 3.880, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.23940451186422856;  // std dev = 0.054, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, F), location(F, G) )
%   | | then return -0.011485691351200034;  // std dev = 0.218, 152.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=36 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.02130420686987484;  // std dev = 2.504, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.09934087375627552;  // std dev = 4.244, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.23440162407109627;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(J, L), interaction(L, L) )
%   | | | then return -0.002779967046581505;  // std dev = 1.416, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.18588748442705008;  // std dev = 0.541, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.018298523610926924;  // std dev = 1.126, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.041488646220357334;  // std dev = 2.593, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.012545372320327531;  // std dev = 0.729, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.20667143130940646;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1459089477887243;  // std dev = 0.210, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.09497383397383827;  // std dev = 0.326, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.010250291584540768;  // std dev = 0.213, 145.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=31 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.32730874207210414;  // std dev = 0.247, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.0036821557858950885;  // std dev = 4.406, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08868353248960578;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.08750411811035941;  // std dev = 3.686, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1639250797347292;  // std dev = 0.017, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.18855019636943549;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.15100135717347843;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2534454641099598;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.22092838267908438;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return 0.09667820526078885;  // std dev = 0.885, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.036086423143356486;  // std dev = 1.607, 81.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=12 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return -0.01619543841670672;  // std dev = 2.279, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.0418891974422214;  // std dev = 5.729, 241.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=83 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10165749123767906;  // std dev = 0.184, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0.16862469507228722;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.15757159245890665;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16507351241370824;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1727150608835445;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return -0.00488212089550837;  // std dev = 1.984, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return -0.07272247051241566;  // std dev = 1.689, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.04993404156479957;  // std dev = 3.580, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.0045458780979996645;  // std dev = 4.490, 232.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=64 */


Results
   AUC ROC   = 0.960479
   AUC PR    = 0.124563
   CLL	      = -0.218896
   Precision = 0.119777 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.209246


Total learning time: 11.927 seconds
Total inference time: 18.189 seconds
AUC ROC: 0.960479


Results scoring model
   AUC ROC   = 0.966295
   AUC PR    = 0.337873
   CLL	      = -0.200645
   Precision = 0.233645 at threshold = 0.5
   Recall    = 0.786164
   F1        = 0.360231


Total scoring time: 17.333 seconds
Refined model CLL: -0.200645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960626
   AUC PR    = 0.142224
   CLL	      = -0.216049
   Precision = 0.114058 at threshold = 0.5
   Recall    = 0.826923
   F1        = 0.200466


Total learning time: 49.861 seconds
Total inference time: 16.26 seconds
AUC ROC: 0.960626
Total revision time: 49.861
Best scored revision CLL: -0.191386


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:21:04
{'AUC ROC': 0.960626, 'AUC PR': 0.142224, 'CLL': -0.216049, 'Precision': [0.114058, 0.5], 'Recall': 0.826923, 'F1': 0.200466, 'Learning time': 49.861, 'Inference time': 16.26, 'parameter_0.6': {'AUC ROC': 0.960626, 'AUC PR': 0.142224, 'CLL': -0.216049, 'Precision': [0.114058, 0.5], 'Recall': 0.826923, 'F1': 0.200466, 'Learning time': 6.124, 'Inference time': 16.26}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7993254056877469;  // std dev = 1.372, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.8025933795439568;  // std dev = 1.683, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | else return -0.14185106490048807;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1651256792855602;  // std dev = 6.763, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
%   | | | else return 0.1739384087837229;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7216039174901309;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.5311911912464266;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6754213665520409;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.7013445862293883;  // std dev = 1.393, 68.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=66 */
%   | | else return -0.12544463852839186;  // std dev = 0.000, 251.000 (wgt'ed) examples reached here.  /* #neg=251 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4462803569802862;  // std dev = 5.971, 154.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=95 */
%   | | | else return -0.16330782648319167;  // std dev = 0.005, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5537242647438599;  // std dev = 0.682, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.4644626687010138;  // std dev = 1.327, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.33018958003703547;  // std dev = 6.555, 217.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=125 */
%   | else return -0.12758326426599143;  // std dev = 0.267, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4592777334625878;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5737992298028012;  // std dev = 0.002, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.11231637819360614;  // std dev = 2.98e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3980772855115326;  // std dev = 1.380, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.4199535562061428;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4054736479851441;  // std dev = 0.624, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.41440650068695284;  // std dev = 0.530, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.006391322552555054;  // std dev = 4.076, 301.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=62 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.11247540346305336;  // std dev = 6.660, 257.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=84 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3333181122232748;  // std dev = 0.105, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.3242467799164418;  // std dev = 1.008, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3977549660107898;  // std dev = 1.029, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return 0.4446516316515103;  // std dev = 0.208, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else return -0.11162258694149221;  // std dev = 0.324, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4242105401948224;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.43643711311024386;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.09333398777119321;  // std dev = 6.572, 263.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=84 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.263724183496617;  // std dev = 0.080, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.3259907861995981;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3292440634563171;  // std dev = 0.096, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.006165674425934612;  // std dev = 3.533, 332.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=83 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2920707099367396;  // std dev = 5.565, 144.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=95 */
%   | | | else return -0.15208143084516731;  // std dev = 0.005, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19903052970297996;  // std dev = 1.095, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( function(A, F) )
%   | | | then return 0.3770140169012562;  // std dev = 0.368, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007618975530210359;  // std dev = 6.234, 414.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=105 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.15990840285621627;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.0330814664791332;  // std dev = 2.079, 112.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=34 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.044928455974935104;  // std dev = 2.839, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.178341115896472;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17021902702727387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.07871430443560722;  // std dev = 1.567, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(A, G) )
%   | then return 0.005116953870688583;  // std dev = 3.631, 302.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=83 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3007364415114852;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08074378923418207;  // std dev = 5.257, 193.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=71 */
%   | | else if ( function(A, J) )
%   | | | then return 0.05345141593146961;  // std dev = 2.844, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1616272290345775;  // std dev = 0.077, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.44350302551983695;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.08602014104963208;  // std dev = 1.258, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.17668826007265062;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23013034608469676;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03857303528222851;  // std dev = 0.972, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.012630680607559766;  // std dev = 3.630, 359.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=81 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.003785022264924452;  // std dev = 5.606, 234.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=66 */
%   | | | else return 0.027747187141971684;  // std dev = 2.884, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.040435595097282756;  // std dev = 1.473, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.21090273604838783;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.20778161944564616;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0.19209585122731676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29011392702529193;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return -0.01706976261038451;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.08019933027718054;  // std dev = 0.538, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.012910384974659465;  // std dev = 7.067, 592.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=165 */


Results
   AUC ROC   = 0.958472
   AUC PR    = 0.144939
   CLL	      = -0.21588
   Precision = 0.102837 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.173653


Total learning time: 34.839 seconds
Total inference time: 48.048 seconds
AUC ROC: 0.958472


Results scoring model
   AUC ROC   = 0.972847
   AUC PR    = 0.32832
   CLL	      = -0.19188
   Precision = 0.286976 at threshold = 0.5
   Recall    = 0.613208
   F1        = 0.390977


Total scoring time: 119.157 seconds
Parameter learned model CLL: -0.19188


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 17], 'true,true,false': [0.0, 0, 1], 'true,false': [0.97, 1, 16], 'false,true,true,true': [1.372, 2, 32], 'false,true,true,false': [1.683, 3, 51], 'false,true,false': [0.0, 267, 0], 'false,false,true': [0.957, 1, 11], 'false,false,false,true': [6.763, 149, 66], 'false,false,false,false': [3.509, 39, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.021, 0, 22], 'true,false': [1.549, 3, 12], 'false,true,true,true': [0.972, 1, 17], 'false,true,true,false': [1.393, 2, 66], 'false,true,false': [0.0, 251, 0], 'false,false,true,true': [5.971, 59, 95], 'false,false,true,false': [0.005, 134, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [0.682, 1, 41], 'true,true,false,true': [1.327, 2, 10], 'true,true,false,false': [6.555, 92, 125], 'true,false': [0.267, 269, 0], 'false,true': [0.913, 1, 6], 'false,false,true,true': [0.002, 0, 30], 'false,false,true,false': [2.98e-08, 74, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.38, 2, 34], 'true,false': [0.0, 0, 0], 'false,true,true': [0.943, 1, 9], 'false,true,false': [0.624, 1, 4], 'false,false,true,true': [0.53, 1, 19], 'false,false,true,false': [4.076, 239, 62], 'false,false,false,true': [6.66, 173, 84], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.105, 0, 20], 'true,false': [1.008, 1, 14], 'false,true,true,true': [1.029, 1, 41], 'false,true,true,false': [0.208, 0, 42], 'false,true,false': [0.324, 224, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.052, 0, 9], 'false,false,false,true': [6.572, 179, 84], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.08, 0, 22], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.096, 0, 11], 'true,false': [0.0, 0, 0], 'false,true': [3.533, 249, 83], 'false,false,true,true': [5.565, 49, 95], 'false,false,true,false': [0.005, 128, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.095, 3, 40], 'true,true,false,true': [0.368, 0, 6], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.234, 309, 105], 'false,true,true': [0.936, 1, 9], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.079, 78, 34], 'false,false,false,true': [2.839, 42, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 17], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [1.567, 3, 16], 'false,true': [3.631, 219, 83], 'false,false,true,true': [0.339, 0, 6], 'false,false,true,false': [5.257, 122, 71], 'false,false,false,true': [2.844, 34, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.077, 0, 21], 'true,true,false': [0.81, 2, 1], 'true,false': [1.258, 2, 12], 'false,true,true,true': [0.054, 0, 3], 'false,true,true,false': [0.085, 0, 6], 'false,true,false': [0.972, 1, 4], 'false,false,true': [3.63, 278, 81], 'false,false,false,true': [5.606, 168, 66], 'false,false,false,false': [2.884, 37, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [1.473, 3, 22], 'true,false,true,true': [0.022, 0, 2], 'true,false,true,false': [0.105, 0, 10], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [1.234, 2, 8], 'false,true,false,false': [0.538, 1, 3], 'false,false': [7.067, 427, 165]}]]
[{'': [0.027755102040817953, 0.20096443729320895], 'false': [0.17913905971037558, 0.22261208093632365], 'false,false': [0.07638888888888877, 0.21345155709342625], 'false,false,false': [0.21274202271498133, 0.2160664819944593], 'false,true': [0.0535898760330578, -6.653021870412923e-17], 'false,true,true': [0.05536332179930943, 0.05246913580246931], 'true': [-2.9605947323337506e-16, 0.055363321799307655], 'true,true': [-2.0898315757650005e-16, 0.0]}, {'': [0.07361682880521381, 0.17494494442859881], 'false': [0.13681652830995125, 0.2162385583739113], 'false,false': [0.2162385583739113, nan], 'false,false,true': [0.23149787689048107, 1.5315036423789348e-07], 'false,true': [0.03365477792073253, -6.36940699386544e-17], 'true': [2.0425737351039494e-05, 0.1599999999999999], 'false,true,true': [0.052445419942904775, 0.028540130493902516]}, {'': [0.14938135169475308, 0.10629285775097568], 'true': [0.17367405108460776, 0.0002656272640096576], 'true,true': [0.011059594757554818, 0.19623430053041457], 'true,true,false': [0.14671398054378296, 0.19802798656650744], 'false': [0.11912929124951381, 0.09662312789868745], 'false,false': [0.09662312789868745, nan], 'false,false,true': [1.5327617249501677e-07, 1.200241107702872e-17]}, {'': [0.05288827475399235, 0.11525360504912201], 'false': [0.08527371027497983, 0.11297799181434832], 'false,false': [0.062367977171999156, 0.17257783438808977], 'false,false,false': [0.17257783438808977, nan], 'false,true': [0.08894448867182525, 0.07779237498656306], 'false,false,true': [0.014023040707272338, 0.055207904836414814], 'true': [0.05288827475399235, nan]}, {'': [0.02934895096510312, 0.10962319478936884], 'false': [0.06037726582461557, 0.1621345770612626], 'false,false': [0.0002668565488868876, 0.1642397764315657], 'false,false,false': [0.1642397764315657, nan], 'false,true': [0.01366065916612739, 0.00046778662625774785], 'true': [0.0005472439532491658, 0.0677042046552965], 'false,true,true': [0.025193879134233654, 0.001027790573912372], 'false,false,true': [0.0, 0.00029897817051220227]}, {'': [0.0014360539081960176, 0.09553638478407053], 'false': [0.037603296525478655, 0.16299895740970835], 'false,false': [0.16299895740970835, nan], 'false,false,true': [0.21505327948311298, 1.9110946088488068e-07], 'true': [0.0014360539081960176, nan], 'true,true': [0.0002943569415941568, 0.0007743751955821924], 'true,true,false': [0.0, 0.0008438909562260566]}, {'': [0.09148683651147992, 0.07366372645395668], 'true': [0.03063906341093105, 0.09387788819070832], 'false': [0.0876710683874279, 0.07202220969048734], 'false,true': [0.0876710683874279, nan], 'false,false': [0.03859545150777046, 0.1343274335117949], 'false,false,false': [0.1343274335117949, nan], 'true,true': [0.027881204799785134, 0.022604548754970994], 'true,true,false': [0.022604548754970994, nan]}, {'': [0.06885575986365063, 0.09065400358604739], 'false': [0.04366109935287029, 0.14410439918309553], 'false,false': [0.14086631189969578, 0.15558382205503907], 'false,false,false': [0.15558382205503907, nan], 'false,false,true': [0.01910786434204605, 0.14319234960461893], 'true': [3.461301139435275e-06, 0.1292992711471027], 'true,true': [-1.959217102279688e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.08437251786196746, 0.0821783303167316], 'true': [0.067608700727182, 0.11311048935457453], 'false': [0.07558423819637435, 0.08182223503028584], 'false,false': [0.03669635275615975, 0.13763450102776414], 'false,false,false': [0.134322499433427, 0.15126065103851308], 'false,true': [0.001756722818983092, 0.18906801210615498], 'true,true': [0.00028034867672764916, 0.2184973682254083], 'false,true,true': [0.0009824339555327781, 0.0011918483982685986]}, {'': [0.06514439544374102, 0.08535166482584917], 'false': [0.12096496508374642, 0.08437051065520114], 'false,true': [0.002401885795784396, 0.13126797922226752], 'false,true,false': [0.15217616165507855, 0.07223946854654727], 'true': [0.08681506488728713, 0.0009572589157805326], 'false,true,true': [0.0, 0.0], 'true,false': [0.0009572589157805326, nan], 'true,false,true': [0.00024441596198560706, 0.0010982039450648851]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8055173561521439;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8232652141692794;  // std dev = 0.183, 86.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | | else return -0.1418510649004881;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.21949347291463814;  // std dev = 5.240, 119.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=43 */
%   | | | else return 0.12967211390745847;  // std dev = 5.465, 151.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7280635083915293;  // std dev = 0.019, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7308466201130137;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.6709042906958075;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.7264598462513632;  // std dev = 2.06e-07, 66.000 (wgt'ed) examples reached here.  /* #pos=66 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.42217756998338285;  // std dev = 5.502, 129.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=77 */
%   | | | else return 0.31302997867915855;  // std dev = 3.075, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | else return -0.1638344796014393;  // std dev = 0.070, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then if ( phenotype(F, G), interaction(F, A) )
%   | | | then return 0.35549055526966333;  // std dev = 1.879, 35.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=24 */
%   | | | else return 0.23509289521386248;  // std dev = 3.699, 107.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=57 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.2207897601364332;  // std dev = 3.202, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.47220113483835385;  // std dev = 4.646, 106.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=75 */
%   | else return -0.13632284205597983;  // std dev = 0.560, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5666028069358917;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.1731925177888649;  // std dev = 1.531, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.32536601019868855;  // std dev = 1.885, 34.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=22 */
%   | | else return -0.11231637819360615;  // std dev = 3.33e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4629178800942858;  // std dev = 0.119, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( interaction(C, A) )
%   | | then return -0.11182505881388705;  // std dev = 0.119, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.06692949581321622;  // std dev = 0.287, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4550085927368304;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return 0.12931504664141244;  // std dev = 4.643, 137.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=51 */
%   | | | else return 0.05396788578324333;  // std dev = 3.375, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5279376728671995;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.2835322731547354;  // std dev = 1.281, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.12848515345696737;  // std dev = 4.089, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4043010931136915;  // std dev = 0.203, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.46189468976838866;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.12827404243933158;  // std dev = 1.050, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.37568304036166433;  // std dev = 0.223, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4296881625819928;  // std dev = 0.164, 86.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=83 */
%   | | else return -0.11968345733099045;  // std dev = 0.345, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4627642178403278;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.040469861588048044;  // std dev = 6.002, 235.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=66 */
%   | | | else return 0.14248405776486225;  // std dev = 2.905, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.2982599124857286;  // std dev = 0.182, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.07141157900902309;  // std dev = 0.919, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3672159461083671;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10088780038928848;  // std dev = 0.103, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.04271628089748421;  // std dev = 1.841, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.010538187406868519;  // std dev = 3.253, 233.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=62 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.16422198562229925;  // std dev = 3.869, 68.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=35 */
%   | | | else return 0.2620691673990952;  // std dev = 4.531, 97.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=60 */
%   | | else return -0.14753771587233044;  // std dev = 0.111, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.09585352483537804;  // std dev = 0.318, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.28695836472948505;  // std dev = 0.060, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09593810737495287;  // std dev = 0.103, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( location(F, G), location(A, G) )
%   | | | then return 0.027834323338138893;  // std dev = 2.424, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return -0.0738589246095161;  // std dev = 1.092, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.3027557709182042;  // std dev = 0.193, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.006902404253027766;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -6.427710479770029E-4;  // std dev = 2.220, 111.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=26 */
%   | | | else return 0.04819267355382786;  // std dev = 6.373, 358.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=118 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22507412668534976;  // std dev = 0.042, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( phenotype(A, E), location(D, F) )
%   | | | then return -0.03449467791750816;  // std dev = 0.614, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return -0.07463276235156054;  // std dev = 0.455, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.06909204393368193;  // std dev = 0.788, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06395067864241478;  // std dev = 1.050, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.26732338053590105;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07707578642120383;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.051872169166129155;  // std dev = 3.152, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return 0.019045477622523545;  // std dev = 6.410, 405.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=117 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13445241083349546;  // std dev = 0.198, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.21131215678129497;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return -0.03811927116795752;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.14065525207165236;  // std dev = 0.405, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.060287979305591245;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.08461503646540684;  // std dev = 1.290, 50.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=4 */
%   | | | else return -0.011892897361947078;  // std dev = 2.531, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.010022159733392554;  // std dev = 3.349, 233.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=67 */
%   | | | else return 0.06835624445152785;  // std dev = 5.608, 217.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=77 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15764370102462538;  // std dev = 0.144, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.16996439357021953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.18010823636195353;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.2554168988331411;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.22436448182696792;  // std dev = 0.136, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0971815625783587;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07334031052871534;  // std dev = 0.091, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.036915232202900224;  // std dev = 5.967, 348.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=113 */
%   | | | else return 0.0053009072079907744;  // std dev = 3.754, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */


Results
   AUC ROC   = 0.958106
   AUC PR    = 0.119668
   CLL	      = -0.232932
   Precision = 0.109615 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.182692


Total learning time: 131.24099999999999 seconds
Total inference time: 80.774 seconds
AUC ROC: 0.958106


Results scoring model
   AUC ROC   = 0.972505
   AUC PR    = 0.259498
   CLL	      = -0.208085
   Precision = 0.265849 at threshold = 0.5
   Recall    = 0.613208
   F1        = 0.370899


Total scoring time: 242.197 seconds
Refined model CLL: -0.208085


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.958472
   AUC PR    = 0.144939
   CLL	      = -0.21588
   Precision = 0.102837 at threshold = 0.5
   Recall    = 0.557692
   F1        = 0.173653


Total learning time: 527.434 seconds
Total inference time: 48.048 seconds
AUC ROC: 0.958472
Total revision time: 527.434
Best scored revision CLL: -0.19188


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:32:01
{'AUC ROC': 0.958472, 'AUC PR': 0.144939, 'CLL': -0.21588, 'Precision': [0.102837, 0.5], 'Recall': 0.557692, 'F1': 0.173653, 'Learning time': 527.434, 'Inference time': 48.048, 'parameter_0.8': {'AUC ROC': 0.958472, 'AUC PR': 0.144939, 'CLL': -0.21588, 'Precision': [0.102837, 0.5], 'Recall': 0.557692, 'F1': 0.173653, 'Learning time': 34.839, 'Inference time': 48.048}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7956489350995122;  // std dev = 1.369, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8164822684328454;  // std dev = 1.384, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | | else return 0.8258908705833835;  // std dev = 1.391, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | else return -0.1418510649004879;  // std dev = 4.21e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1549687230853779;  // std dev = 7.686, 283.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=84 */
%   | | | else return 0.19638422921715865;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7268451320147227;  // std dev = 0.032, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.606913189379813;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6363871413817476;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.6929434821383135;  // std dev = 1.702, 89.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=86 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8034740493144593;  // std dev = 0.992, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1621247053067097;  // std dev = 0.012, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13985219502405713;  // std dev = 6.315, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   | | | else return 0.15395170389757795;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5435486969133256;  // std dev = 0.674, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.591316431747981;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6512203441572952;  // std dev = 0.459, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.12613006154306677;  // std dev = 0.196, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.580854453572204;  // std dev = 0.067, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5352938019587271;  // std dev = 1.704, 80.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=77 */
%   | | | else return -0.11231637819360658;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.15682659008135458;  // std dev = 7.033, 222.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.43244910543805287;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4272003526506654;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.45427397521133184;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.44482799027924386;  // std dev = 0.866, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.5598831829456143;  // std dev = 0.286, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42579373414806804;  // std dev = 0.539, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.020857795012301995;  // std dev = 4.280, 336.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=80 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0873356702125632;  // std dev = 3.334, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.11164203889792601;  // std dev = 6.946, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2469746754953104;  // std dev = 1.320, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.17618948481369157;  // std dev = 1.654, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3539080312578267;  // std dev = 1.248, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return 0.42734767346524233;  // std dev = 0.112, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else return -0.1030754956247572;  // std dev = 0.011, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return -0.031158892964273904;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.32374998280201034;  // std dev = 1.130, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.05485105656077582;  // std dev = 3.344, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return 0.07216374183257344;  // std dev = 7.051, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27731173137620496;  // std dev = 0.053, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.29456761924745223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29975165223803696;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23844195805976062;  // std dev = 0.980, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, G) )
%   | then return 0.005361425297405868;  // std dev = 3.852, 416.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=106 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47865873599634445;  // std dev = 0.517, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14569512063709958;  // std dev = 0.193, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10468153473800514;  // std dev = 6.940, 216.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.23612561745776892;  // std dev = 0.514, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2224181191583252;  // std dev = 0.427, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.10524755140711392;  // std dev = 0.513, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.012969858622958038;  // std dev = 7.224, 514.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=136 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.24273912871613296;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2600861830095703;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then return 0.02122409329037621;  // std dev = 2.464, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04096539141869315;  // std dev = 0.940, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.026994979298717612;  // std dev = 3.562, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.17925488193200756;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18647816327866495;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1194539189128262;  // std dev = 1.623, 33.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=30 */
%   else if ( interaction(A, G) )
%   | then return 0.012282143325424698;  // std dev = 3.536, 390.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=106 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2817356483755207;  // std dev = 0.247, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.055739602404510875;  // std dev = 6.479, 277.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=89 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.023979451631401243;  // std dev = 0.945, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.016905692188456986;  // std dev = 3.574, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1693301378235237;  // std dev = 0.076, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.1970573520725991;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.13493835450897146;  // std dev = 0.977, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.19219463364365091;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.22398663220292905;  // std dev = 0.730, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.29674489945735866;  // std dev = 0.241, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.0071636517290427455;  // std dev = 3.749, 433.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=102 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04252806523436781;  // std dev = 6.405, 268.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=84 */
%   | | | else return 0.01648957934543302;  // std dev = 3.682, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11233373735028485;  // std dev = 0.939, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1757297230148912;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.16201640040346815;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06352154103987949;  // std dev = 0.954, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.18992054266485014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10587276264483464;  // std dev = 0.321, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.13216303716092231;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3457661328090152;  // std dev = 0.271, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.028366957315722818;  // std dev = 8.128, 696.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=209 */


Results
   AUC ROC   = 0.916981
   AUC PR    = 0.219745
   CLL	      = -0.230756
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.233216


Total learning time: 5.651 seconds
Total inference time: 9.851 seconds
AUC ROC: 0.916981


Results scoring model
   AUC ROC   = 0.956044
   AUC PR    = 0.352335
   CLL	      = -0.193684
   Precision = 0.354015 at threshold = 0.5
   Recall    = 0.732075
   F1        = 0.477245


Total scoring time: 15.328 seconds
Parameter learned model CLL: -0.193684


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 2], 'true,false': [1.369, 2, 30], 'false,true,true,true': [1.384, 2, 46], 'false,true,true,false': [1.391, 2, 60], 'false,true,false': [4.21e-08, 290, 0], 'false,false,true': [1.535, 3, 11], 'false,false,false,true': [7.686, 199, 84], 'false,false,false,false': [3.901, 45, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.032, 0, 27], 'true,false': [1.323, 2, 14], 'false,true,true,true': [1.348, 2, 20], 'false,true,true,false': [1.702, 3, 86], 'false,true,false': [0.0, 295, 0], 'false,false,true,true': [0.992, 1, 42], 'false,false,true,false': [0.012, 83, 0], 'false,false,false,true': [6.315, 133, 58], 'false,false,false,false': [3.495, 38, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.674, 1, 25], 'true,true,false,true': [0.015, 0, 8], 'true,true,false,false': [0.459, 0, 57], 'true,false': [0.196, 178, 0], 'false,true': [0.067, 0, 22], 'false,false,true,true': [1.704, 3, 77], 'false,false,true,false': [0.0, 197, 0], 'false,false,false,true': [7.033, 146, 76], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.079, 0, 23], 'true,false,true': [0.028, 0, 12], 'true,false,false': [0.0, 0, 6], 'false,true,true': [0.866, 1, 11], 'false,true,false': [0.286, 0, 4], 'false,false,true,true': [0.539, 1, 22], 'false,false,true,false': [4.28, 256, 80], 'false,false,false,true': [3.334, 77, 36], 'false,false,false,false': [6.946, 151, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [1.32, 2, 23], 'true,false': [1.654, 4, 18], 'false,true,true,true': [1.248, 2, 54], 'false,true,true,false': [0.112, 0, 52], 'false,true,false': [0.011, 301, 0], 'false,false,true,true': [0.733, 2, 2], 'false,false,true,false': [1.13, 2, 9], 'false,false,false,true': [3.344, 88, 36], 'false,false,false,false': [7.051, 166, 71]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.053, 0, 15], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.037, 0, 6], 'true,false': [0.98, 1, 19], 'false,true': [3.852, 310, 106], 'false,false,true,true': [0.517, 0, 42], 'false,false,true,false': [0.193, 91, 0], 'false,false,false,true': [6.94, 140, 76], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.514, 2, 48], 'true,true,false,true': [0.427, 1, 5], 'true,true,false,false': [0.513, 1, 1], 'true,false': [7.224, 378, 136], 'false,true,true': [0.02, 0, 5], 'false,true,false': [0.005, 0, 4], 'false,false,true': [2.464, 109, 43], 'false,false,false,true': [0.94, 10, 5], 'false,false,false,false': [3.562, 43, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.623, 3, 30], 'false,true': [3.536, 284, 106], 'false,false,true,true': [0.247, 0, 6], 'false,false,true,false': [6.479, 188, 89], 'false,false,false,true': [0.945, 11, 5], 'false,false,false,false': [3.574, 44, 18]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.076, 0, 25], 'true,true,false': [0.0, 0, 1], 'true,false': [0.977, 1, 15], 'false,true,true,true': [0.041, 0, 2], 'false,true,true,false': [0.73, 1, 9], 'false,true,false': [0.241, 0, 4], 'false,false,true': [3.749, 331, 102], 'false,false,false,true': [6.405, 184, 84], 'false,false,false,false': [3.682, 56, 23]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.939, 1, 26], 'true,false,true,true': [0.022, 0, 2], 'true,false,true,false': [0.034, 0, 6], 'true,false,false': [0.954, 1, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.321, 1, 3], 'false,true,false,true': [0.039, 0, 5], 'false,true,false,false': [0.271, 0, 6], 'false,false': [8.128, 487, 209]}]]
[{'': [0.044348296376420925, 0.20707249348541354], 'false': [0.19477500000000153, 0.21877275286170264], 'false,false': [0.16836734693877523, 0.21191386433551868], 'false,false,false': [0.20871780144589208, 0.22383217993079688], 'false,true': [0.03504132231405208, 6.1253684117250015e-18], 'true': [-1.6148698540002277e-16, 0.05859374999999989], 'false,true,true': [0.03993055555555639, 0.031217481789801747], 'true,true': [-2.9605947323337506e-16, 0.0]}, {'': [0.04408173127111103, 0.17647054158264294], 'false': [0.1411739153933288, 0.2132532150304419], 'false,false': [0.21741735383553032, 0.2109286065607294], 'false,false,true': [0.022892410071146653, 1.8362590047326941e-06], 'false,false,false': [0.20877733774104906, 0.2181122448979587], 'false,true': [0.04295803141753134, -8.129090620984197e-17], 'true': [3.736029884459379e-05, 0.10937500000000022], 'false,true,true': [0.08255269812904263, 0.032536625056310636]}, {'': [0.12641898902618426, 0.1568294891535925], 'false': [0.000205228651251943, 0.15442254486529347], 'false,false': [0.0966236349736489, 0.22279864698484309], 'false,false,false': [0.22279864698484309, nan], 'true': [0.00963282648814497, 0.00021481681670308065], 'false,false,true': [0.036286439882989185, -3.8322419124117076e-17], 'true,true': [0.017454419419163633, 0.003629943338310463], 'true,true,false': [2.7382028224998134e-05, 0.003693907058698698]}, {'': [0.00024651206879851387, 0.12038361619163068], 'false': [0.054482218634050006, 0.1183072455782441], 'false,false': [0.061661243739196125, 0.17735181123456478], 'false,false,false': [0.0983678943161727, 0.21735605188559343], 'false,false,true': [0.012609195859948593, 0.05451373186871855], 'false,true': [0.06253658472649985, 0.020390847337079132], 'true': [0.00027093471075923935, 0.00020730776848081826], 'true,false': [6.663463986870492e-05, 0.0]}, {'': [0.09652522676315639, 0.10813473695908422], 'false': [0.05130136501959619, 0.16886403257541321], 'false,false': [0.145644096309502, 0.1687703384883513], 'false,false,false': [0.09015949845547722, 0.20979710666960494], 'false,false,true': [0.13442750117388388, 0.11613344215094941], 'true': [0.06972423472452301, 0.12431571697058974], 'false,true': [0.01588551263542852, 3.6755950678661096e-07], 'false,true,true': [0.027814896610111384, 0.00024191578903315787]}, {'': [0.023529448795753267, 0.09924713347746833], 'false': [0.03566936601520398, 0.171633009284941], 'false,false': [0.08651895078566003, 0.2229621319073651], 'false,false,false': [0.2229621319073651, nan], 'false,false,true': [0.006370320975336434, 0.0004102876743999053], 'true': [0.0002923741547098705, 0.04799270895404199], 'true,true': [0.00018846405832893728, 0.0001939966733468682], 'true,true,false': [0.0, 0.00022249028108839441]}, {'': [0.09683564802795225, 0.08477877874769636], 'true': [0.012812140861026399, 0.10153224735656376], 'false': [0.00012304596059225451, 0.08617429330733006], 'false,false': [0.03993293176549023, 0.1786085295465398], 'false,false,false': [0.05889159214807741, 0.20800859983875356], 'true,true': [0.005283644963691394, 0.05827126430521261], 'true,true,false': [0.030440694754821696, 0.13146626649602944], 'false,true': [8.364233661350973e-05, 5.122550199326836e-06]}, {'': [0.06059740380968381, 0.09175490230702035], 'false': [0.032060505790323914, 0.15544929048545822], 'false,false': [0.14961116236518748, 0.17523685539486822], 'false,false,false': [0.05585279942316244, 0.20603537981269568], 'false,false,true': [0.010183213525419593, 0.15154841683911202], 'true': [7.761688276309751e-06, 0.07986021216765044], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.023179727661389808, 0.0885112947787059], 'false': [0.038283728254129935, 0.08851588943453233], 'false,false': [0.032460437536921224, 0.15740083393583224], 'false,false,false': [0.15305239331869958, 0.17162886112961379], 'false,true': [0.04466877288530562, 0.014558930688845576], 'false,true,true': [0.0008448639515850689, 0.05326509947665088], 'true': [0.0002514814020106491, 0.05965980855652879], 'true,true': [0.00023197148847516223, 0.0]}, {'': [0.042650437516635886, 0.09400440834815607], 'false': [0.02267795373586083, 0.09490842731623234], 'true': [0.03263731394850677, 0.059544682661142656], 'true,false': [0.0002434931180610271, 0.11365170387266019], 'false,true': [0.021772651871373776, 0.018128874096691627], 'false,true,true': [0.0, 0.025803008973958638], 'false,true,false': [0.0002969057692437854, 0.012249628398148934], 'true,false,true': [0.00024810014482246415, 0.00019494363821263386]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;complex(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.7984474425621992;  // std dev = 1.939, 67.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | | | else return 0.8581489350995117;  // std dev = 2.46e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.805517356152144;  // std dev = 1.686, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.16742728561497486;  // std dev = 4.552, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.21231560176617761;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.7264094253352225;  // std dev = 0.054, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | | else return 0.6435715215107664;  // std dev = 1.356, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7719125455870778;  // std dev = 0.330, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14544866618134325;  // std dev = 0.288, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1904827100865578;  // std dev = 5.824, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   | | | else return 0.11544379221499915;  // std dev = 3.365, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.580062214251925;  // std dev = 0.091, 91.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=90 */
%   | else return -0.12395535599417527;  // std dev = 0.040, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25536643674628456;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5391441425096424;  // std dev = 1.405, 79.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=77 */
%   | | | else return -0.11231637819360649;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.10449237141830073;  // std dev = 2.337, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.16990304693118852;  // std dev = 6.177, 176.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41256251415255535;  // std dev = 0.002, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.35092156961003146;  // std dev = 0.288, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, F), interaction(G, H) )
%   | | | then return 0.42939326081009094;  // std dev = 0.022, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.14361399863504645;  // std dev = 1.049, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1050246426786366;  // std dev = 0.298, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return 0.04671742792258713;  // std dev = 4.081, 294.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=82 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5614812344226525;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08714532365217982;  // std dev = 6.387, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   | | | else return 0.15628249667318345;  // std dev = 3.232, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.15786873178172103;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.33887225877685917;  // std dev = 0.033, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(F, I) )
%   | | | then return 0.3537334773542306;  // std dev = 1.392, 56.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=54 */
%   | | | else return 0.39863413566913697;  // std dev = 1.009, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return -0.1017604989566318;  // std dev = 0.007, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J) )
%   | | | then return 0.051404309836679325;  // std dev = 4.602, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | | | else return 0.004219865516701588;  // std dev = 1.966, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.15229949634700612;  // std dev = 4.202, 103.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=43 */
%   | | | else return 0.0637760143555859;  // std dev = 3.136, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.25210279996181173;  // std dev = 0.011, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.27115382396640464;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.4055128289112151;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2017805272579315;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, G) )
%   | then return 0.01530333564602239;  // std dev = 0.187, 392.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=106 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41615920852068833;  // std dev = 0.539, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13385561465566892;  // std dev = 0.214, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5124662559172358;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.045102333018576246;  // std dev = 6.650, 236.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=71 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return 0.025266726174929775;  // std dev = 0.179, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then return 0.020767074922114385;  // std dev = 0.181, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.06207614246087113;  // std dev = 4.567, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   | | | else return 0.04219178467339233;  // std dev = 4.501, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.24487614297404203;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4574683543491412;  // std dev = 0.514, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16113928916254103;  // std dev = 0.181, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return -0.011190679845750789;  // std dev = 1.246, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | | else return 0.03763959502167501;  // std dev = 3.632, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.2027445147936836;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.26235343243571696;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.18692499588837888;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.22906650327585062;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.08929279171476777;  // std dev = 0.005, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.1666389429639381;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3016874881163714;  // std dev = 0.307, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.00201013547744475;  // std dev = 2.229, 165.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=40 */
%   | | | else return 0.033390026847718864;  // std dev = 7.377, 532.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=169 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17219508480408066;  // std dev = 0.013, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.2702712827514334;  // std dev = 0.662, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(E, A) )
%   | | then return 0.20081294749848425;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.07468750872661412;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24599590222292259;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3648671188456029;  // std dev = 0.853, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.12745654800502307;  // std dev = 0.550, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.019810094423801144;  // std dev = 3.471, 194.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=47 */
%   | | | else return 0.01914052552692291;  // std dev = 6.449, 397.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=118 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11808836878114874;  // std dev = 0.178, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.14783847097717906;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.0712447486877502;  // std dev = 0.343, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.22032913975706406;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H), interaction(I, F) )
%   | | | then return 0.15016410721456952;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1015437835194669;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0919021908990991;  // std dev = 0.074, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.03497971403584835;  // std dev = 3.123, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return -8.231573137966676E-4;  // std dev = 7.155, 616.000 (wgt'ed) examples reached here.  /* #neg=440 #pos=176 */


Results
   AUC ROC   = 0.971774
   AUC PR    = 0.234636
   CLL	      = -0.200965
   Precision = 0.161765 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.257813


Total learning time: 15.533 seconds
Total inference time: 10.737 seconds
AUC ROC: 0.971774


Results scoring model
   AUC ROC   = 0.979869
   AUC PR    = 0.455775
   CLL	      = -0.176335
   Precision = 0.370787 at threshold = 0.5
   Recall    = 0.74717
   F1        = 0.49562


Total scoring time: 17.232 seconds
Refined model CLL: -0.176335


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.971774
   AUC PR    = 0.234636
   CLL	      = -0.200965
   Precision = 0.161765 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.257813


Total learning time: 53.744 seconds
Total inference time: 10.737 seconds
AUC ROC: 0.971774
Total revision time: 53.744
Best scored revision CLL: -0.176335


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 03:33:16
{'AUC ROC': 0.971774, 'AUC PR': 0.234636, 'CLL': -0.200965, 'Precision': [0.161765, 0.5], 'Recall': 0.634615, 'F1': 0.257813, 'Learning time': 53.744, 'Inference time': 10.737, 'parameter_1.0': {'AUC ROC': 0.916981, 'AUC PR': 0.219745, 'CLL': -0.230756, 'Precision': [0.142857, 0.5], 'Recall': 0.634615, 'F1': 0.233216, 'Learning time': 5.651, 'Inference time': 9.851}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7331489350995122;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1795775065280838;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6504458634557096;  // std dev = 0.948, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.7439976143448208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7727932835751358;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6818000452890681;  // std dev = 0.937, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6774030539822089;  // std dev = 1.296, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.16408840068472902;  // std dev = 0.018, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.33639259236177715;  // std dev = 2.464, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.4875411485387405;  // std dev = 0.959, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5728744487058373;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.48873281890418374;  // std dev = 1.713, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | else return -0.12632104216771828;  // std dev = 0.114, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6026227269545082;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6083864592557754;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14552191253570965;  // std dev = 2.746, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3228357062380775;  // std dev = 0.979, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.45357968413802113;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.38700767852321316;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4441626705695898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4856027849568437;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 6.7327458064458E-4;  // std dev = 1.881, 71.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=13 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.07239720303155063;  // std dev = 2.040, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.08685360154885448;  // std dev = 2.579, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3645169122846207;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.34529238186840017;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4374418988350702;  // std dev = 0.226, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4506373013377605;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.10450509346709966;  // std dev = 0.109, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.47187443766708925;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.338844563438614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.03942192361448471;  // std dev = 2.028, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.058253284954052575;  // std dev = 2.606, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2924553843501906;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05478535591328875;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 0.00132415798794243;  // std dev = 1.650, 79.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=18 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.39956667139267543;  // std dev = 1.302, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.14146427245480347;  // std dev = 0.011, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.09619572142865063;  // std dev = 2.632, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.15260294941216795;  // std dev = 1.105, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.09477747073137244;  // std dev = 0.615, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3786831641273925;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -9.475061134520934E-4;  // std dev = 3.482, 132.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.04191340336263758;  // std dev = 0.588, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.023928630959555983;  // std dev = 0.780, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.20869587576901577;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.20939982667528803;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2509672904869328;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return 2.7653567988772284E-4;  // std dev = 1.615, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.08484673414429074;  // std dev = 0.937, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.01553087941340134;  // std dev = 3.057, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06018509746900656;  // std dev = 0.744, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.17631729595887213;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19170281845206355;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22405696925318963;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.2128167964210791;  // std dev = 0.091, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27714432646731646;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.19443560943593108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0032441027297166565;  // std dev = 1.728, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.027035811738963567;  // std dev = 3.047, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return -0.04555418197961588;  // std dev = 0.918, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1638231390412612;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18751543939770887;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H), interaction(I, F) )
%   | | | then return 0.12354106657695263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21317267464526488;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.01564979157470244;  // std dev = 3.731, 156.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=38 */


Results
   AUC ROC   = 0.958613
   AUC PR    = 0.422049
   CLL	      = -0.172428
   Precision = 0.37931 at threshold = 0.5
   Recall    = 0.717391
   F1        = 0.496241


Total learning time: 4.004 seconds
Total inference time: 4.453 seconds
AUC ROC: 0.958613


Results scoring model
   AUC ROC   = 0.968552
   AUC PR    = 0.291257
   CLL	      = -0.189525
   Precision = 0.145763 at threshold = 0.5
   Recall    = 0.781818
   F1        = 0.245714


Total scoring time: 9.695 seconds
Parameter learned model CLL: -0.189525


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.935, 1, 7], 'false,true,true,true': [1.633, 4, 8], 'false,true,true,false': [0.953, 1, 10], 'false,true,false': [5.77e-08, 55, 0], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.495, 38, 18], 'false,false,false,false': [1.247, 7, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.948, 1, 11], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.04, 0, 5], 'false,true,true,false': [0.937, 1, 13], 'false,true,false': [0.0, 60, 0], 'false,false,true,true': [1.296, 2, 12], 'false,false,true,false': [0.018, 25, 0], 'false,false,false,true': [2.464, 12, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.959, 1, 9], 'true,true,false,true': [0.01, 0, 2], 'true,true,false,false': [1.713, 5, 19], 'true,false': [0.114, 62, 0], 'false,true': [0.0, 0, 5], 'false,false,true,true': [0.068, 0, 7], 'false,false,true,false': [0.0, 25, 0], 'false,false,false,true': [2.746, 23, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.979, 1, 7], 'true,false,true': [0.0, 0, 5], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.815, 1, 4], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.054, 0, 5], 'false,false,true,false': [1.881, 58, 13], 'false,false,false,true': [2.04, 26, 10], 'false,false,false,false': [2.579, 21, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.226, 0, 12], 'false,true,true,false': [0.036, 0, 6], 'false,true,false': [0.109, 54, 0], 'false,false,true,true': [0.161, 0, 4], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.028, 32, 10], 'false,false,false,false': [2.606, 22, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.253, 2, 7], 'false,true': [1.65, 61, 18], 'false,false,true,true': [1.302, 2, 12], 'false,false,true,false': [0.011, 23, 0], 'false,false,false,true': [2.632, 20, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'phenotype(A, I), interaction(J, A)'}, {'true,true,true': [1.105, 2, 14], 'true,true,false,true': [0.615, 1, 2], 'true,true,false,false': [7.45e-09, 0, 3], 'true,false': [3.482, 100, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.588, 14, 2], 'false,false,false,true': [0.78, 7, 2], 'false,false,false,false': [0.0, 5, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.074, 0, 7], 'false,true': [1.615, 63, 18], 'false,false,true,true': [0.937, 2, 5], 'false,false,true,false': [3.057, 44, 18], 'false,false,false,true': [0.744, 5, 2], 'false,false,false,false': [0.0, 4, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.077, 0, 11], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.091, 0, 2], 'false,true,true,false': [0.0, 0, 2], 'false,true,false': [0.0, 0, 1], 'false,false,true': [1.728, 54, 18], 'false,false,false,true': [3.047, 42, 18], 'false,false,false,false': [0.918, 8, 2]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G)', 'false,true,false': 'phenotype(A, H), interaction(I, F)'}, {'true,true': [0.069, 0, 11], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.056, 0, 4], 'false,false': [3.731, 118, 38]}]]
[{'': [0.07100591715976314, 0.20612673484295127], 'false': [0.17751479289940775, 0.22959183673469508], 'false,false': [0.0, 0.21301775147928947], 'false,false,false': [0.21811224489795866, 0.17283950617283952], 'false,true': [0.17013232514177654, 6.055761952500853e-17], 'false,true,true': [0.2222222222222221, 0.0826446280991734], 'true': [0.0, 0.109375], 'true,true': [0.0, nan]}, {'': [0.0696971327708489, 0.18384685576373042], 'false': [0.13771811796974726, 0.22979969965159686], 'false,false': [0.20602673477552996, 0.24289723897366267], 'false,false,false': [0.24289723897366267, nan], 'false,false,true': [0.11999332202803613, 1.28778145188857e-05], 'false,true': [0.0479005242053428, -4.070817756958907e-17], 'true': [0.07483200177654137, 0.0], 'false,true,true': [0.00031227526781263393, 0.06271744070947952]}, {'': [0.12876894820064314, 0.1608162993796796], 'false': [0.0, 0.15522564951588033], 'false,false': [0.08891136704991769, 0.20944841105012624], 'false,false,false': [0.20944841105012624, nan], 'true': [0.10745595814515517, 0.00021043722645356437], 'true,true': [0.09205567089869407, 0.11336282930282329], 'true,true,false': [5.105178765058005e-05, 0.12226087636249679], 'false,false,true': [0.0006608856039616663, 0.0]}, {'': [0.07781299971582095, 0.11326988057313521], 'false': [0.11128854351441787, 0.1086384850175678], 'false,true': [0.13300180336466455, 0.0], 'false,false': [0.06106354254069292, 0.16145445632031755], 'false,false,false': [0.11565211115244955, 0.2145319847467335], 'true': [0.11987151386240105, -4.4408920985006264e-17], 'false,false,true': [0.0005829929902912312, 0.04985190524773299], 'true,false': [-4.4408920985006264e-17, nan]}, {'': [0.00030343050469511246, 0.10495592068582191], 'false': [0.05686841519885951, 0.14799440269615166], 'false,false': [0.007987420212517837, 0.14744370905111853], 'false,false,false': [0.09790912180546675, 0.21225658390379573], 'false,true': [0.002940776492548252, 0.0002209544057737783], 'false,false,true': [0.0064448857781985724, 0.0], 'false,true,true': [0.004243510727480267, 0.0002192289245457705], 'true': [0.00030021654855404525, 0.0]}, {'': [0.1250796586361734, 0.09487407469007109], 'true': [0.0, 0.17439441415806423], 'false': [0.03447142712459617, 0.15986174936046801], 'false,false': [0.11466460113667983, 0.20996362232871116], 'false,false,false': [0.20996362232871116, nan], 'false,false,true': [0.12107521838208712, 5.6551887596268316e-06], 'true,true': [0.0, nan]}, {'': [0.09391941718783776, 0.037691637209046905], 'true': [0.079643180230306, 0.09184875687259024], 'true,true': [0.07635288819448159, 0.08327008210801687], 'true,true,false': [0.12623894284469625, 1.850371707708594e-17], 'false': [nan, 0.03769163720904691], 'false,false': [0.021608672443595905, 0.05591368639622578], 'false,false,false': [0.06765035938712893, -1.1102230246251566e-17]}, {'': [0.0008793291194418296, 0.08440375763909554], 'false': [0.0322195423069003, 0.13711730063421623], 'false,false': [0.14857866503498732, 0.06320460789478287], 'false,false,true': [0.12533253943789277, 0.15071579551516193], 'false,false,false': [0.07898211502012345, 0.0], 'true': [-1.1102230246251566e-17, 0.0007874821610594496], 'true,true': [-1.1102230246251566e-17, nan]}, {'': [0.0005745643085180163, 0.09131805628290116], 'false': [0.0028915854208726222, 0.09270955523757873], 'false,false': [0.041478362262062904, 0.1453131568276912], 'false,false,false': [0.15474268702186403, 0.08421942664431431], 'false,true': [0.0031035233413871793, 0.0], 'false,true,true': [0.0041380311218495724, 0.0], 'true': [0.00053956483796904, 0.0], 'true,true': [0.00053956483796904, nan]}, {'': [0.00043552514176052604, 0.08786469097969414], 'false': [0.0019019018915754026, 0.0892386295783681], 'false,true': [nan, 0.0019019018915754026], 'false,true,false': [0.0, 0.000770612331486939], 'true': [0.00042834124511767745, 0.0], 'true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;phenotype(A, G).;true;true
5;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, H).;true;true
6;false,false;phenotype(A, I), interaction(J, A).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
7;false;interaction(A, F).;true;true
7;false,false;interaction(G, A), interaction(H, G).;true;true
7;false,false,false;phenotype(A, I).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;phenotype(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;phenotype(A, H), interaction(I, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 1.05e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5861400788776209;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6851727808103535;  // std dev = 1.290, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.15227721116568113;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05090235147363845;  // std dev = 1.467, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.317616627992071;  // std dev = 2.192, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6184749716104345;  // std dev = 0.077, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5077681897294938;  // std dev = 1.652, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | else return -0.12459198676333559;  // std dev = 0.011, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5833395963854817;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1123163781936064;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.5477298665145981;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10820223759723233;  // std dev = 2.414, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1695108085324796;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.26299993200989213;  // std dev = 0.967, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4375552543939524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.15129667392300544;  // std dev = 1.036, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.009850222843442072;  // std dev = 1.800, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1593884896420087;  // std dev = 1.315, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.033970727694396304;  // std dev = 3.115, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.3667870903370125;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4312418205372892;  // std dev = 0.033, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.10760732085327689;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4712922081488031;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3343345318842835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return -0.05587206632607482;  // std dev = 1.817, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.07075744279810502;  // std dev = 2.867, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.24997754136189107;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.28211730045770084;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return -0.042655071827098275;  // std dev = 1.286, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | | else return 0.14230978295657273;  // std dev = 0.928, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else return -0.09301465932830458;  // std dev = 1.32e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4106569458952284;  // std dev = 1.291, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.13054560881780536;  // std dev = 0.046, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.10222933625848926;  // std dev = 2.606, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return -0.24928702270612035;  // std dev = 0.132, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.1509940687454922;  // std dev = 0.879, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.17874960691297082;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.04490756586527023;  // std dev = 0.974, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37277165646153637;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return -0.09496878354975946;  // std dev = 1.349, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.06012341741114007;  // std dev = 2.405, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10573564215020287;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12681914165490932;  // std dev = 1.784, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else return 0.0012387140307302553;  // std dev = 0.237, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.07923041382123887;  // std dev = 0.566, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2141102938013473;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then return -0.0334807887121713;  // std dev = 0.175, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.25877910678373445;  // std dev = 0.407, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.002719890300000763;  // std dev = 0.606, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.006193930212662891;  // std dev = 1.649, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.07158490116963252;  // std dev = 2.625, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.0890771900949819;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16527540366639046;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.30287299987357164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return -0.09401198232278311;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06871138168101572;  // std dev = 0.507, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1824323868155152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4167371243488093;  // std dev = 0.445, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13838189010104;  // std dev = 0.643, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return -0.028846058547107787;  // std dev = 1.211, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.07233015383601797;  // std dev = 2.687, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.15175252755806104;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.13411549682778573;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.23501052860019933;  // std dev = 0.676, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(H, F) )
%   | | then return 0.05549076903247439;  // std dev = 0.207, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.24479250135261651;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), interaction(K, K) )
%   | | | then return -0.1766920110808481;  // std dev = 0.783, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.014511889604577992;  // std dev = 0.866, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.020750763245873802;  // std dev = 2.390, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.05551598016269772;  // std dev = 2.190, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */


Results
   AUC ROC   = 0.965864
   AUC PR    = 0.456045
   CLL	      = -0.178357
   Precision = 0.445161 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.558704


Total learning time: 7.474 seconds
Total inference time: 4.979 seconds
AUC ROC: 0.965864


Results scoring model
   AUC ROC   = 0.977874
   AUC PR    = 0.463378
   CLL	      = -0.187584
   Precision = 0.204651 at threshold = 0.5
   Recall    = 0.8
   F1        = 0.325926


Total scoring time: 11.364 seconds
Refined model CLL: -0.187584


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965864
   AUC PR    = 0.456045
   CLL	      = -0.178357
   Precision = 0.445161 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.558704


Total learning time: 32.537000000000006 seconds
Total inference time: 4.979 seconds
AUC ROC: 0.965864
Total revision time: 32.537000000000006
Best scored revision CLL: -0.187584


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:33:59
{'AUC ROC': 0.965864, 'AUC PR': 0.456045, 'CLL': -0.178357, 'Precision': [0.445161, 0.5], 'Recall': 0.75, 'F1': 0.558704, 'Learning time': 32.537000000000006, 'Inference time': 4.979, 'parameter_0.2': {'AUC ROC': 0.958613, 'AUC PR': 0.422049, 'CLL': -0.172428, 'Precision': [0.37931, 0.5], 'Recall': 0.717391, 'F1': 0.496241, 'Learning time': 4.004, 'Inference time': 4.453}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1354598594692588;  // std dev = 4.884, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6668418332635857;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.684990653590265;  // std dev = 0.983, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6449595451522856;  // std dev = 2.189, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return -0.16078102308543468;  // std dev = 0.093, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.16237752637545683;  // std dev = 3.330, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.09324742396579815;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5710449653519505;  // std dev = 0.030, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5839072682466812;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5169764802873575;  // std dev = 2.338, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | else return -0.12785504578437615;  // std dev = 0.334, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4922666013141329;  // std dev = 0.973, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5074801716775791;  // std dev = 0.959, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1123163781936063;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14800518839919916;  // std dev = 3.599, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.358447216205435;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.44589829385220103;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4329343581884082;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.566728688420269;  // std dev = 0.291, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4807026356347741;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.21769315968132066;  // std dev = 1.481, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.0031769256010158635;  // std dev = 2.523, 125.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.06655990532555593;  // std dev = 3.167, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.01297948352557088;  // std dev = 3.650, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.28938864381757373;  // std dev = 0.986, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return 0.33750571074974417;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3334998374865411;  // std dev = 1.253, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.43411160560990825;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.10293953020120193;  // std dev = 0.130, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.49613591136189494;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.346714629135465;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.06580021710333366;  // std dev = 3.171, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.07320319657547872;  // std dev = 3.505, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.17706111854943601;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26025949984845465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.27457866513720297;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, G) )
%   | then return -0.0016321893463227778;  // std dev = 2.548, 151.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=38 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3985810599538108;  // std dev = 2.045, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return -0.13913114721605632;  // std dev = 0.004, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08379202309890277;  // std dev = 3.568, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.24591377655858374;  // std dev = 0.547, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.18121733927005962;  // std dev = 0.617, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2474081527413326;  // std dev = 0.556, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.009484378022973462;  // std dev = 4.519, 210.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=55 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.10165193716506982;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21389836782419833;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.005537506523772016;  // std dev = 1.225, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.03960652430470693;  // std dev = 1.158, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.08097623663314381;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.20312982142795694;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10827452844945389;  // std dev = 1.295, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( interaction(A, F) )
%   | then return -0.008526930146034978;  // std dev = 2.614, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.23646972935814572;  // std dev = 0.765, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.010300867432506697;  // std dev = 4.242, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10381663512892099;  // std dev = 1.086, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.01681049585662242;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17928692789357617;  // std dev = 0.077, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.19029542105899555;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1785376578893675;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.21389601167839142;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.020366102353091997;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2137597556291586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.00906775274419794;  // std dev = 2.275, 141.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03128103392270669;  // std dev = 4.004, 121.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=33 */
%   | | | else return 0.01685062339977561;  // std dev = 1.833, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10682082609052035;  // std dev = 0.948, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.15364550619395856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13733470808759918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.15727609218128688;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.191468450773424;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.14439058176393138;  // std dev = 0.068, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2600578680525153;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.01887849523837589;  // std dev = 4.912, 287.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=77 */


Results
   AUC ROC   = 0.958696
   AUC PR    = 0.375814
   CLL	      = -0.169427
   Precision = 0.383333 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.507353


Total learning time: 6.554 seconds
Total inference time: 4.811 seconds
AUC ROC: 0.958696


Results scoring model
   AUC ROC   = 0.966716
   AUC PR    = 0.203421
   CLL	      = -0.188599
   Precision = 0.140696 at threshold = 0.5
   Recall    = 0.845455
   F1        = 0.241245


Total scoring time: 18.426 seconds
Parameter learned model CLL: -0.188599


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 19], 'false,true,true,true': [0.0, 0, 14], 'false,true,true,false': [1.03e-07, 0, 24], 'false,true,false': [5.58e-08, 117, 0], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [4.884, 86, 33], 'false,false,false,false': [2.277, 20, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.973, 1, 18], 'true,false': [0.0, 0, 8], 'false,true,true,true': [0.953, 1, 10], 'false,true,true,false': [0.983, 1, 28], 'false,true,false': [7.74e-08, 102, 0], 'false,false,true,true': [2.189, 6, 26], 'false,false,true,false': [0.093, 53, 0], 'false,false,false,true': [3.33, 35, 17], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.03, 0, 18], 'true,true,false,true': [0.049, 0, 4], 'true,true,false,false': [2.338, 8, 39], 'true,false': [0.334, 92, 0], 'false,true': [0.973, 1, 13], 'false,false,true,true': [0.959, 1, 16], 'false,false,true,false': [4.47e-08, 64, 0], 'false,false,false,true': [3.599, 40, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.965, 1, 14], 'true,false,true': [1.49e-08, 0, 9], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.291, 0, 6], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.481, 5, 12], 'false,false,true,false': [2.523, 100, 25], 'false,false,false,true': [3.167, 62, 23], 'false,false,false,false': [3.65, 62, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.986, 1, 19], 'true,false': [0.017, 0, 7], 'false,true,true,true': [1.253, 2, 23], 'false,true,true,false': [0.051, 0, 15], 'false,true,false': [0.13, 114, 0], 'false,false,true,true': [0.193, 0, 4], 'false,false,true,false': [0.024, 0, 2], 'false,false,false,true': [3.171, 54, 23], 'false,false,false,false': [3.505, 44, 17]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'phenotype(A, H)', 'false,false,true': 'phenotype(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.957, 1, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.03, 0, 16], 'false,true': [2.548, 113, 38], 'false,false,true,true': [2.045, 5, 26], 'false,false,true,false': [0.004, 42, 0], 'false,false,false,true': [3.568, 42, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [0.547, 2, 29], 'true,true,false,true': [0.617, 2, 3], 'true,true,false,false': [0.556, 1, 3], 'true,false': [4.519, 155, 55], 'false,true,true': [0.814, 1, 2], 'false,true,false': [0.005, 0, 3], 'false,false,true': [1.225, 21, 8], 'false,false,false,true': [1.158, 9, 4], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [7.45e-09, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.295, 2, 19], 'false,true': [2.614, 110, 38], 'false,false,true,true': [0.765, 1, 6], 'false,false,true,false': [4.242, 94, 33], 'false,false,false,true': [1.086, 5, 4], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.077, 0, 17], 'true,true,false': [0.026, 0, 2], 'true,false': [0.058, 0, 7], 'false,true,true,true': [0.129, 0, 3], 'false,true,true,false': [0.982, 1, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.275, 104, 37], 'false,false,false,true': [4.004, 88, 33], 'false,false,false,false': [1.833, 19, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.948, 1, 19], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.048, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.068, 0, 2], 'false,true,false,false': [0.1, 0, 4], 'false,false': [4.912, 210, 77]}]]
[{'': [8.198570028001156e-16, 0.1983471074380177], 'false': [0.18505723204994926, 0.21026101072237272], 'false,false': [0.12244897959183662, 0.19891161568774754], 'false,false,false': [0.20040957559494518, 0.19204389574759959], 'false,true': [1.7763568394002505e-15, 2.6569439905559303e-17], 'false,true,true': [-2.5376526277146434e-16, 4.440892098500626e-16], 'true': [-2.5376526277146434e-16, -2.8047739569477637e-16], 'true,true': [-2.5376526277146434e-16, nan]}, {'': [0.03566529492455408, 0.17649645482394125], 'false': [0.14123836570900025, 0.2090189616297494], 'false,false': [0.20889360156401346, 0.20915861698139437], 'false,false,false': [0.21326070228812163, 0.18749999999999986], 'false,false,true': [0.14979806684800717, 0.00016249352047830346], 'false,true': [0.04749999999999917, 5.877651306839064e-17], 'false,true,true': [0.08264462809917349, 0.033293697978596576], 'true': [0.04986149584487564, 0.0]}, {'': [0.14255941156487015, 0.14710977323697974], 'false': [0.06755488773102584, 0.13914561598576894], 'true': [0.07997559976286259, 0.0012148823832284748], 'false,false': [0.07504681488367837, 0.21593448584856248], 'false,false,false': [0.21593448584856248, nan], 'true,true': [5.0216913761700096e-05, 0.10756282905450695], 'true,true,false': [0.0005991218825769362, 0.1163147718797992], 'false,false,true': [0.054051841724876655, 3.122502256758253e-17]}, {'': [0.03623068308498344, 0.11099071879887643], 'false': [0.012979309300618589, 0.10714351310610716], 'false,false': [0.06542123233620416, 0.1431270372620347], 'false,false,false': [0.11799048374358365, 0.16868474954988794], 'false,false,true': [0.12904407450375607, 0.05092823631032798], 'true': [0.06203831339271777, 3.151193023032128e-05], 'false,true': [0.014085315837695123, 0.0], 'true,false': [2.4671622769447922e-17, 0.0]}, {'': [0.036485533497031666, 0.10698550466756054], 'false': [0.05416031546345378, 0.16132448835235888], 'false,false': [0.011239154485028546, 0.16191984214025906], 'false,false,false': [0.1306221763423648, 0.20139615265189387], 'false,true': [0.04166005383070992, 0.0001474026642883263], 'false,true,true': [0.06275605764750006, 0.00017334254132439497], 'true': [0.04864155637924435, 3.9037969960107966e-05], 'false,false,true': [0.009266642330953506, 0.0002996990717184095]}, {'': [0.03611239861971138, 0.10180438246595537], 'false': [0.043000538182315286, 0.16345588044718087], 'false,false': [0.12790415127798868, 0.2052992872854604], 'false,false,false': [0.2052992872854604, nan], 'false,false,true': [0.13484179771261157, 3.985779346254199e-07], 'true': [0.08376133206859225, 5.712513923819551e-05], 'true,true': [0.09150819521628996, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.09271924991463804, 0.10002297140623892], 'false': [0.13536568959155396, 0.09586638521355119], 'false,true': [0.2209354216360987, 9.960057599178729e-06], 'false,false': [0.05174251537715868, 0.14998958879512517], 'false,false,false': [0.10308362397947597, 0.2099999999999999], 'true': [0.025183495647707034, 0.09722984403477739], 'true,true': [0.009656465877289064, 0.07770095439082213], 'true,true,false': [0.07603619418200935, 0.07734789143628866]}, {'': [0.06159360649928145, 0.09688982732468919], 'false': [0.046178692011122034, 0.14515083828290287], 'false,false': [0.1416536423669811, 0.16517259057162031], 'false,false,false': [0.13107695803602615, 0.18749999999999997], 'false,false,true': [0.0835893826399502, 0.14167291454522926], 'true': [7.93016446160826e-18, 0.07987542701419915], 'true,true': [7.93016446160826e-18, nan]}, {'': [0.00039356404155077145, 0.08694661165205496], 'false': [0.13622976833117373, 0.08541469647277873], 'false,true': [0.15345577294083165, 0.0], 'false,true,true': [0.005564438975157238, 0.24085481424201613], 'false,false': [0.03671500534031313, 0.13193739496268342], 'false,false,false': [0.13247683802552723, 0.12925550418100423], 'true': [0.00035980075769857426, 0.00048254673764397404], 'true,true': [0.00035093501107252194, 0.0003267292003283212]}, {'': [0.03384056858649865, 0.08308679395295696], 'false': [0.004745830751156492, 0.08406097739077768], 'true': [0.04497580968881987, 0.00038317560490640023], 'false,true': [0.0, 0.005407942479638041], 'false,true,false': [0.00229730206065748, 0.00250362231667324], 'true,false': [6.651053371660443e-05, 0.00047015322098944155], 'true,false,true': [0.0, 0.0], 'false,true,true': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;phenotype(A, H).;true;true
5;false,false,true;phenotype(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8081489350995117;  // std dev = 0.218, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17522210583121856;  // std dev = 5.161, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.728939779341051;  // std dev = 0.075, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.7354479067429928;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.7294533872440254;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.622310530101168;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else return -0.12544463852839108;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6916239236441702;  // std dev = 1.876, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return -0.16454699379475288;  // std dev = 3.94e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.24124751696426147;  // std dev = 2.605, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.07774529778713932;  // std dev = 2.441, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.49643597233169795;  // std dev = 0.203, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6002529979136082;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4761348376196949;  // std dev = 2.545, 50.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=39 */
%   | else return -0.1336261145239182;  // std dev = 0.050, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5003434503204639;  // std dev = 0.264, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5831847169308837;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.11231637819360633;  // std dev = 3.65e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7015706821060439;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10000446211899354;  // std dev = 3.471, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.43569087565979897;  // std dev = 0.017, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4469895173250984;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4637319400956843;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.2818369276744708;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5403347790050028;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4437620447202899;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10070621130925662;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.027512521404684773;  // std dev = 4.773, 215.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=52 */
%   | | | else return 0.09386878168456934;  // std dev = 2.971, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.07908841038679104;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.34311554581739284;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.330832016227291;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4108720032141292;  // std dev = 0.159, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.10779636653690264;  // std dev = 0.017, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3929357676303229;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03719202760933323;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.04863393913561269;  // std dev = 2.761, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.10753654551539055;  // std dev = 3.632, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.17577545200754716;  // std dev = 0.292, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, A), complex(A, F) )
%   | | then return 0.2793824393832081;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.048720120917251454;  // std dev = 1.095, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.28012228868178835;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, I) )
%   | then return -0.006315424830781421;  // std dev = 0.201, 165.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=38 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.42483509406262004;  // std dev = 1.865, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return -0.14294370588724886;  // std dev = 0.040, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.3188305695347104;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04385679803485711;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(A, F) )
%   | | then return 0.23328814453894592;  // std dev = 0.029, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.06444162209529107;  // std dev = 1.049, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then return 0.0031388332602758843;  // std dev = 0.202, 117.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=28 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.06297663819355863;  // std dev = 3.277, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.006878876979571456;  // std dev = 2.395, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.25231869533324086;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, L), interaction(A, M) )
%   | | then return -0.08462653109028503;  // std dev = 0.209, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return -0.05616759390599013;  // std dev = 1.065, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.13001808425177158;  // std dev = 1.533, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.1991411303630006;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.04119721909189592;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.20586211376409674;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B), enzyme(G, I) )
%   | | then return 0.33623438395643584;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.03694179212673586;  // std dev = 0.193, 116.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=20 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.44006992565919145;  // std dev = 0.246, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21353602251799678;  // std dev = 0.850, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.12699408678156804;  // std dev = 1.825, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.036964648329965405;  // std dev = 3.857, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16793805720062704;  // std dev = 0.021, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.22890504905637726;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19162161791253474;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.24719828673390046;  // std dev = 0.141, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.16318159507213148;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H), complex(G, I) )
%   | | | then return -0.10604729071291451;  // std dev = 0.378, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.013440407919504075;  // std dev = 1.100, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.01706630013130192;  // std dev = 4.203, 192.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=53 */
%   | | | else return 0.07181368408506876;  // std dev = 1.872, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.14759556094824555;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.0024908665984600584;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1637856665610167;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.028265275201427326;  // std dev = 0.305, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(I, F) )
%   | | | then return 0.20058129906776123;  // std dev = 0.083, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023741099410264567;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07893510321358674;  // std dev = 0.015, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.025982974030704535;  // std dev = 1.978, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return -0.019567291146356327;  // std dev = 4.528, 186.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=46 */


Results
   AUC ROC   = 0.960355
   AUC PR    = 0.381584
   CLL	      = -0.172849
   Precision = 0.408284 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.528736


Total learning time: 11.472 seconds
Total inference time: 4.483 seconds
AUC ROC: 0.960355


Results scoring model
   AUC ROC   = 0.973732
   AUC PR    = 0.261527
   CLL	      = -0.185243
   Precision = 0.182711 at threshold = 0.5
   Recall    = 0.845455
   F1        = 0.300485


Total scoring time: 24.225 seconds
Refined model CLL: -0.185243


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.960355
   AUC PR    = 0.381584
   CLL	      = -0.172849
   Precision = 0.408284 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.528736


Total learning time: 60.677 seconds
Total inference time: 4.483 seconds
AUC ROC: 0.960355
Total revision time: 60.677
Best scored revision CLL: -0.185243


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:35:10
{'AUC ROC': 0.960355, 'AUC PR': 0.381584, 'CLL': -0.172849, 'Precision': [0.408284, 0.5], 'Recall': 0.75, 'F1': 0.528736, 'Learning time': 60.677, 'Inference time': 4.483, 'parameter_0.4': {'AUC ROC': 0.958696, 'AUC PR': 0.375814, 'CLL': -0.169427, 'Precision': [0.383333, 0.5], 'Recall': 0.75, 'F1': 0.507353, 'Learning time': 6.554, 'Inference time': 4.811}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7405018762759829;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.781225858176435;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.14185106490048827;  // std dev = 0.000, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16544060176618028;  // std dev = 6.393, 192.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=59 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7247282331659842;  // std dev = 0.045, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.6516855335039954;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7318724353521421;  // std dev = 0.024, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.6990515130630854;  // std dev = 0.978, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5393070930356207;  // std dev = 4.733, 111.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=79 */
%   | | | else return -0.16446044494788964;  // std dev = 0.036, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.46171543274087473;  // std dev = 1.964, 48.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=42 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.4959150106676214;  // std dev = 0.945, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.33716034673180717;  // std dev = 5.765, 169.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=101 */
%   | else return -0.13003071799386268;  // std dev = 0.225, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5946820121685218;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4864967127718769;  // std dev = 0.948, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3464886256324879;  // std dev = 1.856, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.4700712915537728;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1830067521840816;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.22625445133360614;  // std dev = 1.825, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return -0.01541838315669292;  // std dev = 3.278, 211.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=36 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.13009523193584638;  // std dev = 5.860, 203.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3367931939326255;  // std dev = 0.810, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.3846641891342933;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3631453847125768;  // std dev = 1.633, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0.4616726954224596;  // std dev = 0.093, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.11071132604516101;  // std dev = 0.312, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3627513456289233;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.43466916474530803;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.051204503865395094;  // std dev = 6.153, 245.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.28926060889644656;  // std dev = 0.064, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.3161797434482547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.315866516182364;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return -0.008883270084970899;  // std dev = 3.317, 238.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=55 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2871143029264018;  // std dev = 5.029, 118.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=79 */
%   | | | else return -0.14982202645244294;  // std dev = 0.037, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19777822530871828;  // std dev = 1.695, 43.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=39 */
%   | | else if ( function(A, F) )
%   | | | then return 0.2077711241796376;  // std dev = 1.103, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.008900215910451852;  // std dev = 5.546, 362.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=88 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.2375527102674254;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.022055992378666636;  // std dev = 1.470, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.07671933098165729;  // std dev = 2.352, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1405570608237567;  // std dev = 0.960, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1595133567842739;  // std dev = 1.009, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F) )
%   | then return -0.0021069951391287146;  // std dev = 3.094, 232.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=55 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1963796423234289;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.025784066711118183;  // std dev = 5.103, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   | | else if ( function(A, I) )
%   | | | then return 0.1093666412820622;  // std dev = 2.103, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17965958923590794;  // std dev = 0.072, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.2009881863677388;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.0998380301677445;  // std dev = 0.907, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.12964700418586997;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2108332541033876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.25911058583221697;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0030094130932450656;  // std dev = 2.969, 221.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=54 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.01835377578480602;  // std dev = 5.263, 188.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=59 */
%   | | | else return 0.02937940614986905;  // std dev = 2.279, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11447216270142219;  // std dev = 0.981, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.19111492818259973;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16619442766144765;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2855769486322798;  // std dev = 0.730, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.15430708627028253;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11027684048678614;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.005627727752810027;  // std dev = 6.408, 477.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=126 */


Results
   AUC ROC   = 0.97849
   AUC PR    = 0.347998
   CLL	      = -0.178573
   Precision = 0.172872 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.277778


Total learning time: 35.096 seconds
Total inference time: 15.433 seconds
AUC ROC: 0.97849


Results scoring model
   AUC ROC   = 0.963634
   AUC PR    = 0.166232
   CLL	      = -0.205762
   Precision = 0.110331 at threshold = 0.5
   Recall    = 0.662651
   F1        = 0.189166


Total scoring time: 153.695 seconds
Parameter learned model CLL: -0.205762


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [1.328, 2, 15], 'false,true,true,true': [1.359, 2, 24], 'false,true,true,false': [2.06e-07, 0, 31], 'false,true,false': [0.0, 176, 0], 'false,false,true': [0.0, 0, 7], 'false,false,false,true': [6.393, 133, 59], 'false,false,false,false': [2.834, 21, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.045, 0, 22], 'true,false': [0.953, 1, 10], 'false,true,true,true': [0.024, 0, 16], 'false,true,true,false': [0.978, 1, 39], 'false,true,false': [0.0, 169, 0], 'false,false,true,true': [4.733, 32, 79], 'false,false,true,false': [0.036, 109, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.964, 6, 42], 'true,true,false,true': [0.945, 1, 9], 'true,true,false,false': [5.765, 68, 101], 'true,false': [0.225, 215, 0], 'false,true': [0.014, 0, 3], 'false,false,true,true': [0.948, 1, 11], 'false,false,true,false': [0.0, 26, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.856, 4, 32], 'true,false': [0.0, 0, 0], 'false,true,true': [0.036, 0, 6], 'false,true,false': [0.816, 1, 2], 'false,false,true,true': [1.825, 8, 18], 'false,false,true,false': [3.278, 175, 36], 'false,false,false,true': [5.86, 131, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.81, 1, 25], 'true,false': [0.063, 0, 7], 'false,true,true,true': [1.633, 3, 35], 'false,true,true,false': [0.093, 0, 20], 'false,true,false': [0.312, 169, 0], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.088, 0, 3], 'false,false,false,true': [6.153, 173, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.064, 0, 25], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.04, 0, 6], 'true,false': [0.0, 0, 0], 'false,true': [3.317, 183, 55], 'false,false,true,true': [5.029, 39, 79], 'false,false,true,false': [0.037, 111, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.695, 4, 39], 'true,true,false,true': [1.103, 2, 8], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.546, 274, 88], 'false,true,true': [0.044, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.47, 32, 13], 'false,false,false,true': [2.352, 19, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.96, 1, 17], 'true,true,false': [0.0, 0, 0], 'true,false': [1.009, 1, 15], 'false,true': [3.094, 177, 55], 'false,false,true,true': [0.949, 2, 8], 'false,false,true,false': [5.103, 134, 58], 'false,false,false,true': [2.103, 18, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.072, 0, 21], 'true,true,false': [0.038, 0, 2], 'true,false': [0.907, 1, 9], 'false,true,true,true': [0.302, 1, 5], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.05, 0, 2], 'false,false,true': [2.969, 167, 54], 'false,false,false,true': [5.263, 129, 59], 'false,false,false,false': [2.279, 22, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.981, 1, 23], 'true,false,true,true': [0.026, 0, 5], 'true,false,true,false': [0.029, 0, 4], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.73, 3, 1], 'false,true,false,true': [0.026, 0, 5], 'false,true,false,false': [0.793, 1, 2], 'false,false': [6.408, 351, 126]}]]
[{'': [0.05536332179930943, 0.2048665475510699], 'false': [0.18033119048057702, 0.22409696255226694], 'false,false': [-2.5376526277146434e-16, 0.21708826063121636], 'false,false,false': [0.21286349826388926, 0.23615916955017255], 'false,true': [0.03385657125269298, -1.8924256101565169e-16], 'true': [-2.0898315757650005e-16, 0.10380622837370206], 'false,true,true': [0.07100591715976402, 1.375244004696968e-15], 'true,true': [-2.0898315757650005e-16, nan]}, {'': [0.02879640715200384, 0.18239896046367904], 'false': [0.13429435961822014, 0.22564183848603414], 'false,false': [0.22564183848603414, nan], 'false,false,true': [0.201813598913471, 1.1607215189474927e-05], 'false,true': [0.01729411336059591, -5.2554936076930486e-18], 'true': [9.38846871161303e-05, 0.08264462809917356], 'false,true,true': [3.547748650523097e-05, 0.02388979258454622]}, {'': [0.15032200686708713, 0.11192625308272593], 'true': [0.17061400874190988, 0.00023538202153713255], 'true,true': [0.08038371101091583, 0.19197989891850833], 'true,true,false': [0.08921082391592958, 0.1966529180266863], 'false': [6.917822793524782e-05, 0.10113122753810365], 'false,false': [0.10113122753810365, nan], 'false,false,true': [0.07490664863287562, -1.0675221390626506e-17]}, {'': [0.09565478094707269, 0.11801087865836986], 'false': [0.09253185688738592, 0.11662576410987781], 'false,false': [0.0651130517138529, 0.16913846581806394], 'false,false,false': [0.16913846581806394, nan], 'true': [0.09565478094707269, nan], 'false,true': [0.00021799096545678984, 0.2222222222222223], 'false,false,true': [0.12816473935525455, 0.05093626660897839]}, {'': [0.02036746592786915, 0.1104748280445382], 'false': [0.061825926364505304, 0.1534744997928309], 'false,false': [0.0023749772631690264, 0.154535618709948], 'false,false,false': [0.154535618709948, nan], 'false,true': [0.048296089822215976, 0.0005759416506873632], 'false,true,true': [0.07014099486066042, 0.0004305982436995315], 'true': [0.025214034973117975, 0.0005603953743005581], 'false,false,true': [0.0, 0.002586086353228508]}, {'': [0.0003013411630949925, 0.10287871337028015], 'false': [0.04623790451483992, 0.1581318031173079], 'false,false': [0.1581318031173079, nan], 'false,false,true': [0.21433255596455666, 1.2290964060065898e-05], 'true': [0.0003013411630949925, nan], 'true,true': [0.0001659072398547501, 0.00023014518307752838], 'true,true,false': [0.0, 0.00026848869768760403]}, {'': [0.08803442249274283, 0.09663766779775049], 'false': [0.0003827852324083669, 0.10062189153505395], 'false,false': [0.04804453265584062, 0.1728125215962836], 'false,false,false': [0.1728125215962836, nan], 'true': [0.07717458509299045, 0.08497691189789192], 'true,true': [0.06679948398071049, 0.12170650298527899], 'true,true,false': [0.12170650298527899, nan], 'false,true': [0.0003827852324083669, nan]}, {'': [0.05717467887791421, 0.08948253076188958], 'false': [0.041250873351765686, 0.13643611150939894], 'false,false': [0.1347311303121412, 0.14265151494875045], 'false,false,false': [0.14265151494875045, nan], 'false,false,true': [0.09000188213832158, 0.1356200434852952], 'true': [0.05124414835292027, 0.06365628628271565], 'true,true': [0.05124414835292027, nan]}, {'': [0.0265446798514834, 0.09289879146607968], 'false': [0.013464025769638744, 0.09402637534537187], 'false,false': [0.03989506387575596, 0.14752708571741677], 'false,false,false': [0.14733732887859297, 0.14844386613211213], 'true': [0.0003231185143617938, 0.08220478268931079], 'false,true': [0.01386782677656992, 0.0012456101959925914], 'false,true,true': [0.015237530214235913, 0.0], 'true,true': [0.0002464879189218582, 0.0007123880200528496]}, {'': [0.03012408102214541, 0.08734606069955868], 'false': [0.13357725242523885, 0.08608219903612274], 'false,true': [0.133334112316481, 0.09501459424006971], 'false,true,true': [nan, 0.133334112316481], 'false,true,false': [0.0001389789507333511, 0.2093877107859283], 'true': [0.04012556955342356, 0.0003268777779194913], 'true,false': [0.0003268777779194913, nan], 'true,false,true': [0.000138898985075514, 0.00021683385440514347]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8025933795439567;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8230612158012668;  // std dev = 0.184, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | else return -0.1418510649004883;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.14386322081379904;  // std dev = 6.437, 203.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=58 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7319039495606616;  // std dev = 0.048, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.4040312867790936;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7535523338793028;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32799314262804147;  // std dev = 1.073, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6914126628073815;  // std dev = 0.184, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | else return -0.12544463852839127;  // std dev = 5.58e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.48768663230082454;  // std dev = 3.105, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return 0.3604079041984687;  // std dev = 4.837, 95.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=50 */
%   | | else return -0.16260969917559784;  // std dev = 0.051, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4417488977809253;  // std dev = 1.801, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return 0.14154621202569712;  // std dev = 2.278, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( location(A, I), phenotype(A, J) )
%   | | | then return 0.38123074298163734;  // std dev = 3.872, 65.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | | | else return 0.45929937881130817;  // std dev = 3.764, 93.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=69 */
%   | else return -0.13497428372081036;  // std dev = 0.443, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.34921790051643953;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, M), recursion_proteinclass(L, B) )
%   | | then if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.4732980907987846;  // std dev = 0.633, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.16943828389246066;  // std dev = 1.249, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return -0.1123163781936063;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.4783756313446567;  // std dev = 0.223, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then return 0.19751172634150915;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.47109705674024227;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H) )
%   | | then return 0.5587493715532044;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5182253442461253;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.4040306091530379;  // std dev = 0.803, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.028349792941014532;  // std dev = 2.811, 166.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=24 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.07044536017443043;  // std dev = 3.163, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.1465845034664007;  // std dev = 5.374, 171.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=65 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3217358913778561;  // std dev = 0.205, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return -0.1586314106099679;  // std dev = 1.019, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4031508586779117;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3986792601900781;  // std dev = 0.216, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | else return -0.1159202196176713;  // std dev = 0.031, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4309439911225913;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15089728648900433;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08997657053134968;  // std dev = 5.496, 173.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=59 */
%   | | | else return 0.14667251538801482;  // std dev = 2.457, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2843231718882437;  // std dev = 0.030, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.23734457725317498;  // std dev = 0.328, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( phenotype(F, G), interaction(F, F) )
%   | | | then return -0.1282766777135954;  // std dev = 0.971, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return -0.023444878948639773;  // std dev = 1.279, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.22749963204148674;  // std dev = 0.583, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.04435232840129062;  // std dev = 2.457, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.12997172874565224;  // std dev = 3.578, 57.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=29 */
%   | | | else return 0.28402966434228233;  // std dev = 4.093, 79.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=50 */
%   | | else return -0.1525359772902925;  // std dev = 0.063, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.21076847308831162;  // std dev = 0.185, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.05195828543987198;  // std dev = 0.187, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.057644002014996754;  // std dev = 2.696, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.010190612232905544;  // std dev = 5.386, 246.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=72 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.09862680508037963;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.012081296141727128;  // std dev = 1.392, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return -0.2088303692910729;  // std dev = 0.490, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.08168068974161122;  // std dev = 1.282, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.17506182824660108;  // std dev = 1.774, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, E), interaction(A, F) )
%   | | then return 0.24760139388532323;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return 0.009858595842109998;  // std dev = 0.463, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, C) )
%   | | then return -0.10338520130689062;  // std dev = 0.085, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3174962433345026;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.01584721377214762;  // std dev = 5.301, 264.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=77 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.4746696936577061;  // std dev = 0.736, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.017676887094183663;  // std dev = 1.744, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else return -0.12657818109519506;  // std dev = 0.058, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return 0.2330887252353235;  // std dev = 0.371, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16195981391063471;  // std dev = 0.029, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.14460988729600296;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.21257004665165624;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.26168261169453716;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2644104482957273;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(H, G) )
%   | | | then return -0.04588981333310021;  // std dev = 1.893, 127.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=20 */
%   | | | else return 0.050508354090779625;  // std dev = 1.630, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05240308230237656;  // std dev = 5.330, 233.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=79 */
%   | | | else return -0.03421097176475084;  // std dev = 1.323, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.07513191691937468;  // std dev = 0.245, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.09533303969499798;  // std dev = 0.289, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return -0.281241558830216;  // std dev = 0.666, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( function(A, G), interaction(H, E) )
%   | | | then return 0.05175570048945438;  // std dev = 0.823, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2662734663374602;  // std dev = 0.000827, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.41938576735578287;  // std dev = 0.645, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1721714102255424;  // std dev = 1.524, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.011873028560031869;  // std dev = 1.159, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.045625060849904926;  // std dev = 5.197, 251.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=88 */


Results
   AUC ROC   = 0.99374
   AUC PR    = 0.532618
   CLL	      = -0.185316
   Precision = 0.473684 at threshold = 0.5
   Recall    = 0.880435
   F1        = 0.61597


Total learning time: 129.165 seconds
Total inference time: 39.759 seconds
AUC ROC: 0.99374


Results scoring model
   AUC ROC   = 0.978925
   AUC PR    = 0.331481
   CLL	      = -0.206911
   Precision = 0.224863 at threshold = 0.5
   Recall    = 0.740964
   F1        = 0.345021


Total scoring time: 278.072 seconds
Refined model CLL: -0.206911


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97849
   AUC PR    = 0.347998
   CLL	      = -0.178573
   Precision = 0.172872 at threshold = 0.5
   Recall    = 0.706522
   F1        = 0.277778


Total learning time: 596.028 seconds
Total inference time: 15.433 seconds
AUC ROC: 0.97849
Total revision time: 596.028
Best scored revision CLL: -0.205762


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:46:02
{'AUC ROC': 0.97849, 'AUC PR': 0.347998, 'CLL': -0.178573, 'Precision': [0.172872, 0.5], 'Recall': 0.706522, 'F1': 0.277778, 'Learning time': 596.028, 'Inference time': 15.433, 'parameter_0.6': {'AUC ROC': 0.97849, 'AUC PR': 0.347998, 'CLL': -0.178573, 'Precision': [0.172872, 0.5], 'Recall': 0.706522, 'F1': 0.277778, 'Learning time': 35.096, 'Inference time': 15.433}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7605879594897553;  // std dev = 1.900, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return -0.14185106490048838;  // std dev = 0.000, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15699950981215682;  // std dev = 7.395, 261.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=78 */
%   | | | else return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7303969783127998;  // std dev = 0.024, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.6057866922089092;  // std dev = 1.235, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7366162612282345;  // std dev = 0.019, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.679944987587746;  // std dev = 1.681, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | else return -0.12544463852839172;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5044897375208395;  // std dev = 5.774, 155.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=105 */
%   | | | else return -0.16399418987902764;  // std dev = 0.051, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.44096341268980904;  // std dev = 2.486, 64.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=54 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.47777982003513;  // std dev = 1.316, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.32463527642778855;  // std dev = 6.879, 233.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=135 */
%   | else return -0.12907223034271068;  // std dev = 0.377, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5985582100758694;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5832451165890113;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11231637819360621;  // std dev = 2.69e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4186990409167871;  // std dev = 1.414, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.3288642132315133;  // std dev = 1.298, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.5281517083550028;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.37128422501832375;  // std dev = 1.463, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | | else return -0.01402994836198941;  // std dev = 3.860, 284.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=48 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.11220091542394951;  // std dev = 6.937, 284.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=94 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.36409671415378614;  // std dev = 0.106, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return 0.27317261682260213;  // std dev = 0.904, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.42018612959342055;  // std dev = 1.030, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | | else return 0.3881348216107134;  // std dev = 1.294, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | else return -0.11111029586994142;  // std dev = 0.348, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.40871435647717114;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2983806843664475;  // std dev = 0.679, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.06038320483976691;  // std dev = 7.063, 326.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=94 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2529820313050174;  // std dev = 0.958, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.3059233024787713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3255781113486316;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.5303306881965338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G) )
%   | then return -0.00873247964878305;  // std dev = 3.834, 339.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=77 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2982122525245799;  // std dev = 5.779, 157.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=105 */
%   | | | else return -0.1475038523680224;  // std dev = 0.040, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.15802874146084256;  // std dev = 2.210, 62.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=53 */
%   | | else if ( function(A, F) )
%   | | | then return 0.24987165976817718;  // std dev = 0.961, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 9.457460352244718E-4;  // std dev = 6.791, 503.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=120 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.25131783650990974;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.006736059242223059;  // std dev = 1.767, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.07688903533975015;  // std dev = 2.530, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.20103508428184036;  // std dev = 2.79e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.5749220805112771;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.09817329343004946;  // std dev = 1.442, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else if ( interaction(A, G) )
%   | then return -0.004691470061015746;  // std dev = 3.838, 316.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=77 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17146504364606197;  // std dev = 1.105, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.029195860935575985;  // std dev = 6.017, 266.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=80 */
%   | | else if ( function(A, J) )
%   | | | then return 0.022023171448499124;  // std dev = 2.674, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1783630962805218;  // std dev = 0.093, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.05985175704991086;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2176611879924556;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.09098263248271997;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.27689618386721193;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.009564844766603964;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.012281977968622942;  // std dev = 3.521, 279.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=74 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.02464630053026389;  // std dev = 6.055, 261.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=78 */
%   | | | else return -1.2794196417078573E-4;  // std dev = 2.693, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.09620431985953516;  // std dev = 1.287, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.184264914922896;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02256437246025217;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.04967267115798153;  // std dev = 0.905, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.18802897694607235;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.23974351570354013;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.015869421666782513;  // std dev = 7.454, 594.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=168 */


Results
   AUC ROC   = 0.978519
   AUC PR    = 0.374649
   CLL	      = -0.174431
   Precision = 0.434109 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.506787


Total learning time: 47.944 seconds
Total inference time: 14.028 seconds
AUC ROC: 0.978519


Results scoring model
   AUC ROC   = 0.963716
   AUC PR    = 0.228816
   CLL	      = -0.201939
   Precision = 0.163522 at threshold = 0.5
   Recall    = 0.588235
   F1        = 0.255906


Total scoring time: 172.203 seconds
Parameter learned model CLL: -0.201939


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.978, 1, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [1.338, 2, 17], 'false,true,true,true': [1.9, 4, 37], 'false,true,true,false': [1.38, 2, 40], 'false,true,false': [0.0, 237, 0], 'false,false,true': [0.0, 0, 11], 'false,false,false,true': [7.395, 183, 78], 'false,false,false,false': [3.147, 26, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.024, 0, 27], 'true,false': [1.235, 2, 12], 'false,true,true,true': [0.019, 0, 23], 'false,true,true,false': [1.681, 3, 54], 'false,true,false': [0.0, 215, 0], 'false,false,true,true': [5.774, 50, 105], 'false,false,true,false': [0.051, 142, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [2.486, 10, 54], 'true,true,false,true': [1.316, 2, 14], 'true,true,false,false': [6.879, 98, 135], 'true,false': [0.377, 316, 0], 'false,true': [0.025, 0, 3], 'false,false,true,true': [0.023, 0, 15], 'false,false,true,false': [2.69e-08, 33, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.414, 2, 39], 'true,false': [0.0, 0, 0], 'false,true,true': [1.298, 2, 11], 'false,true,false': [1.05e-08, 0, 3], 'false,false,true,true': [1.463, 3, 26], 'false,false,true,false': [3.86, 236, 48], 'false,false,false,true': [6.937, 190, 94], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.106, 0, 31], 'true,false': [0.904, 1, 8], 'false,true,true,true': [1.03, 1, 51], 'false,true,true,false': [1.294, 2, 26], 'false,true,false': [0.348, 204, 0], 'false,false,true,true': [1.05e-08, 0, 5], 'false,false,true,false': [0.679, 1, 6], 'false,false,false,true': [7.063, 232, 94], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.958, 1, 31], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.063, 0, 7], 'true,false': [0.0, 1, 0], 'false,true': [3.834, 262, 77], 'false,false,true,true': [5.779, 52, 105], 'false,false,true,false': [0.04, 147, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [2.21, 9, 53], 'true,true,false,true': [0.961, 2, 9], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.791, 383, 120], 'false,true,true': [0.048, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.767, 58, 18], 'false,false,false,true': [2.53, 28, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [2.79e-08, 0, 22], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [1.442, 3, 17], 'false,true': [3.838, 239, 77], 'false,false,true,true': [1.105, 2, 9], 'false,false,true,false': [6.017, 186, 80], 'false,false,false,true': [2.674, 35, 16], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.093, 0, 25], 'true,true,false': [0.869, 1, 3], 'true,false': [0.075, 0, 11], 'false,true,true,true': [0.893, 1, 7], 'false,true,true,false': [0.025, 0, 4], 'false,true,false': [0.859, 1, 3], 'false,false,true': [3.521, 205, 74], 'false,false,false,true': [6.055, 183, 78], 'false,false,false,false': [2.693, 39, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [1.287, 2, 28], 'true,false,true,true': [0.023, 0, 6], 'true,false,true,false': [0.872, 1, 5], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.905, 2, 3], 'false,true,false,true': [0.067, 0, 8], 'false,true,false,false': [0.056, 0, 3], 'false,false': [7.454, 426, 168]}]]
[{'': [0.06632653061224614, 0.20465921643165033], 'false': [0.1827246093750005, 0.22257495233072547], 'false,false': [-1.6148698540002277e-16, 0.21398773540720537], 'false,false,false': [0.20953890870656663, 0.23582766439909247], 'false,true': [0.0670634344607341, -1.7988423690129118e-16], 'false,true,true': [0.08804283164783049, 0.045351473922903854], 'true': [0.04158790170132359, 0.09418282548476423], 'true,true': [0.04158790170132359, nan]}, {'': [0.04070210781307806, 0.18552480879214905], 'false': [0.1432010611703448, 0.22374893596160184], 'false,false': [0.22374893596160184, nan], 'false,false,true': [0.21505955151795764, 1.8447011740116388e-05], 'false,true': [0.03598645691692424, -4.337615538070379e-17], 'true': [2.1931577810389796e-05, 0.10893115946141745], 'false,true,true': [1.6184140841856298e-05, 0.04957743294967181]}, {'': [0.148398841141855, 0.11133491748047028], 'true': [0.17943652502420337, 0.00044882742452934956], 'true,true': [0.09653251156745085, 0.198426548383489], 'true,true,false': [0.10828001775455912, 0.2031098318592851], 'false': [0.00020068455012508166, 0.10395411761449865], 'false,false': [0.10395411761449865, nan], 'false,false,true': [3.6693662238936516e-05, 2.186802927291975e-17]}, {'': [0.048751998244653975, 0.11987149565261832], 'false': [0.11142062298797523, 0.11772542755277628], 'false,false': [0.06691686969658549, 0.16942520653904986], 'false,false,false': [0.16942520653904986, nan], 'false,true': [0.12968641712562715, 3.700743415417188e-17], 'false,false,true': [0.07382368480404145, 0.052455866757363516], 'true': [0.048751998244653975, nan]}, {'': [0.022148613308312214, 0.11242383400130769], 'false': [0.06485327701196136, 0.1518326593723023], 'false,false': [0.041401999296365066, 0.15303467312384766], 'false,false,false': [0.15303467312384766, nan], 'false,true': [0.03442948016992031, 0.0005921742038050042], 'false,false,true': [2.2204460492503132e-17, 0.06590255626936062], 'false,true,true': [0.02039899301801592, 0.05981836304310316], 'true': [0.00036412846068028187, 0.09077698772331701]}, {'': [0.038404136694603574, 0.1003536639162745], 'false': [0.043368477494858323, 0.15949361173138338], 'false,false': [0.15949361173138338, nan], 'false,false,true': [0.21275432895332647, 1.0812364434879732e-05], 'true': [0.023858094330148426, 0.0], 'true,true': [0.028702317172349764, 0.0005455938128798576], 'true,true,false': [0.0, 0.0005752468471845898]}, {'': [0.0935277018003722, 0.07914786122494892], 'true': [0.08063607577811584, 0.09169612820694364], 'true,true': [0.07878812974714537, 0.08388769567289149], 'true,true,false': [0.08388769567289149, nan], 'false': [0.0004542835805463885, 0.08051078947916482], 'false,false': [0.041074843353671286, 0.14551051166087758], 'false,false,false': [0.14551051166087758, nan], 'false,true': [0.0004542835805463885, nan]}, {'': [0.06295721205985905, 0.09278547556655264], 'false': [0.04661515973456747, 0.13657501624442392], 'false,false': [0.1358758598950866, 0.14023354595702617], 'false,false,false': [0.14023354595702617, nan], 'false,false,true': [0.11103424158382276, 0.1360993696865272], 'true': [0.025040471597472653, 0.10400568238093891], 'true,true': [3.532527805625498e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.025151105155672406, 0.09526095467308648], 'false': [0.10670501995600279, 0.09471305651503471], 'false,true': [0.07411671887533877, 0.18466068680730618], 'false,false': [0.04443366694496763, 0.1390748982437424], 'false,false,false': [0.14048123368524312, 0.1318942600937407], 'false,true,true': [0.09957666088908387, 0.00015426912225248446], 'true': [0.03306482470666671, 0.0005130305518554252], 'true,true': [0.0003448395821270145, 0.188645493504661]}, {'': [0.05941680920693063, 0.09309290904342869], 'false': [0.06564019918326339, 0.09352884226389457], 'false,true': [0.16375752712616354, 0.0012270178643715409], 'false,true,true': [nan, 0.16375752712616354], 'true': [0.0551794522068377, 0.06997306687161817], 'true,false': [0.06997306687161817, nan], 'true,false,true': [8.801451504316289e-05, 0.12678458651183652], 'false,true,false': [0.000566597943953008, 0.0010431241838651146]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995116;  // std dev = 2.46e-07, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.7846195233348064;  // std dev = 2.152, 68.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.23314893509951237;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.16336981863365005;  // std dev = 7.267, 249.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=76 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.7479016088356696;  // std dev = 0.083, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6381951291814658;  // std dev = 2.306, 60.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | else return -0.12544463852839172;  // std dev = 0.000, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.38039921588817693;  // std dev = 6.248, 161.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=89 */
%   | | | else return 0.49394234462086617;  // std dev = 2.382, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return -0.164734510219299;  // std dev = 0.040, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.4770814303744546;  // std dev = 0.899, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5626360275708494;  // std dev = 0.098, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.23087226490798782;  // std dev = 4.055, 125.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=62 */
%   | | | else return 0.4200034012031223;  // std dev = 5.964, 160.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=105 */
%   | else return -0.1340957875624972;  // std dev = 0.467, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.3727220508175044;  // std dev = 1.308, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | else return 0.20124381833882887;  // std dev = 1.052, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.11231637819360625;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4249512360945467;  // std dev = 0.052, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.11138775539877935;  // std dev = 1.010, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.4162285891940128;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.05048083983799069;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.44461415853777275;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.6151549639334918;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11260248229981548;  // std dev = 0.106, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03433704677452064;  // std dev = 3.041, 118.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=28 */
%   | | | else return 0.0778890683158983;  // std dev = 8.057, 477.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=140 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3053707134224717;  // std dev = 0.157, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( complex(A, E) )
%   | | then return 0.34611224832303644;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07995757605480451;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.36696394297461576;  // std dev = 1.827, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | | else return 0.49756348804825506;  // std dev = 0.997, 55.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | else return -0.11447844495483328;  // std dev = 0.294, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.4359232342273435;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08682734725834657;  // std dev = 6.344, 252.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=78 */
%   | | | else return 0.16834004403931604;  // std dev = 2.591, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.26843423750905554;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return 0.30024409517708617;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.6241068930463171;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.23919506514202474;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.02851797375589216;  // std dev = 2.439, 108.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=21 */
%   | | | else return 0.020075209312897933;  // std dev = 3.347, 206.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=53 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.2527791044889288;  // std dev = 5.998, 166.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=101 */
%   | | | else return -0.027874707039211397;  // std dev = 1.492, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.14892041071074746;  // std dev = 0.051, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.21658576809415284;  // std dev = 0.158, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1058225820131732;  // std dev = 0.100, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.039609869927521434;  // std dev = 6.402, 378.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=118 */
%   | | | else return -0.021532318869809722;  // std dev = 3.308, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.07220045057518636;  // std dev = 0.877, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5107958117648315;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.12749102871447973;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.003581693415974327;  // std dev = 1.030, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.05457577348421185;  // std dev = 2.868, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1472638110796503;  // std dev = 0.194, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, D), complex(A, F) )
%   | | | then return -9.138885338864995E-5;  // std dev = 0.846, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.11598244370489308;  // std dev = 1.455, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.040108408942712476;  // std dev = 1.571, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.072982364079971;  // std dev = 0.524, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( phenotype(H, J), phenotype(A, J) )
%   | | | then return -0.03543241123298227;  // std dev = 1.789, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.07512325485986507;  // std dev = 3.861, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04202136769561737;  // std dev = 4.989, 214.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=69 */
%   | | | else return 0.013172830917585811;  // std dev = 3.369, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13581453957931064;  // std dev = 0.139, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return -0.05421935105104181;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.21079544505263365;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.23596624009427522;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.019859415520907725;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( phenotype(A, I), interaction(A, H) )
%   | | | then return -0.08316892944980694;  // std dev = 1.650, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | | else return 0.008286935385212543;  // std dev = 3.881, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08738934565559779;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.04097646232651362;  // std dev = 6.375, 387.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14832232404096485;  // std dev = 0.058, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.1664293519483375;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.030989968990252043;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.11110995710248775;  // std dev = 0.358, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.20751535556027775;  // std dev = 0.039, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( complex(H, J), interaction(K, A) )
%   | | | then return 0.04041101036990437;  // std dev = 1.618, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return -0.04274789976178153;  // std dev = 1.898, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.04955302026038385;  // std dev = 2.208, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | | else return 0.017497753595398544;  // std dev = 6.789, 376.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=110 */


Results
   AUC ROC   = 0.979511
   AUC PR    = 0.412209
   CLL	      = -0.19597
   Precision = 0.456693 at threshold = 0.5
   Recall    = 0.630435
   F1        = 0.52968


Total learning time: 159.09300000000002 seconds
Total inference time: 35.887 seconds
AUC ROC: 0.979511


Results scoring model
   AUC ROC   = 0.966712
   AUC PR    = 0.237618
   CLL	      = -0.214248
   Precision = 0.201563 at threshold = 0.5
   Recall    = 0.58371
   F1        = 0.299652


Total scoring time: 326.15 seconds
Refined model CLL: -0.214248


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978519
   AUC PR    = 0.374649
   CLL	      = -0.174431
   Precision = 0.434109 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.506787


Total learning time: 705.39 seconds
Total inference time: 14.028 seconds
AUC ROC: 0.978519
Total revision time: 705.39
Best scored revision CLL: -0.201939


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 03:58:38
{'AUC ROC': 0.978519, 'AUC PR': 0.374649, 'CLL': -0.174431, 'Precision': [0.434109, 0.5], 'Recall': 0.608696, 'F1': 0.506787, 'Learning time': 705.39, 'Inference time': 14.028, 'parameter_0.8': {'AUC ROC': 0.978519, 'AUC PR': 0.374649, 'CLL': -0.174431, 'Precision': [0.434109, 0.5], 'Recall': 0.608696, 'F1': 0.506787, 'Learning time': 47.944, 'Inference time': 14.028}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8396304165809938;  // std dev = 0.991, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return 0.8392810105712104;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else return -0.1418510649004877;  // std dev = 1.63e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16182991669460214;  // std dev = 8.303, 326.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=99 */
%   | | | else return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6874472502372454;  // std dev = 0.969, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6255735452225336;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6012599289310234;  // std dev = 2.095, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | | | else return 0.6684463050374663;  // std dev = 1.944, 73.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=69 */
%   | | else return -0.12544463852839197;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5437069278938853;  // std dev = 6.043, 181.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=129 */
%   | | | else return -0.16284565708442433;  // std dev = 0.004, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.474034941061357;  // std dev = 2.538, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5584427718078152;  // std dev = 0.696, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.3134427426869891;  // std dev = 7.711, 293.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=167 */
%   | else return -0.12996461334757697;  // std dev = 0.560, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.596475725184755;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5256634704398483;  // std dev = 0.960, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.11231637819360635;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.39908200047070097;  // std dev = 1.586, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.39783019178821605;  // std dev = 0.953, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.5419101149420849;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3374131609193483;  // std dev = 2.052, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return -0.014898353672088074;  // std dev = 4.274, 358.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=60 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.09439251762061528;  // std dev = 7.906, 369.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3291696355613189;  // std dev = 0.984, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else return 0.2272745458980493;  // std dev = 1.281, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.35443982665731266;  // std dev = 2.402, 78.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=72 */
%   | | | else return 0.45645054863770984;  // std dev = 0.235, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.10861591872576482;  // std dev = 0.346, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3834818445305592;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.39554338443091436;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.0869918133173437;  // std dev = 7.734, 368.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=118 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2884392218209988;  // std dev = 0.092, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.29246121950909765;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2554474706241335;  // std dev = 0.792, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.5232726445723893;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G) )
%   | then return 0.00812490675467342;  // std dev = 4.343, 403.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=105 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.333334399294989;  // std dev = 6.049, 182.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=129 */
%   | | | else return -0.14820708654518436;  // std dev = 0.004, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.23874751074448244;  // std dev = 1.608, 70.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=67 */
%   | | else if ( function(A, F) )
%   | | | then return 0.23167818844869395;  // std dev = 0.954, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.006747424862745851;  // std dev = 7.604, 638.000 (wgt'ed) examples reached here.  /* #neg=487 #pos=151 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.03653104349370332;  // std dev = 1.255, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.009287890959853272;  // std dev = 2.045, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.05261991209817214;  // std dev = 2.923, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18617329829040677;  // std dev = 1.83e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1640977309099678;  // std dev = 1.331, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, F) )
%   | then return -0.008228594963549728;  // std dev = 4.410, 426.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=105 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.016421099587089132;  // std dev = 1.642, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.03734388511336849;  // std dev = 6.634, 311.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=101 */
%   | | else if ( function(A, I) )
%   | | | then return 0.03630487043554986;  // std dev = 2.819, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17096637412829443;  // std dev = 0.116, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return 0.19924510883303492;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22001440177346135;  // std dev = 0.122, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.11806972349718188;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07250160908530012;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.23093932549954818;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.002422532144809695;  // std dev = 4.132, 386.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=99 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0351399904019452;  // std dev = 6.622, 304.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=99 */
%   | | | else return 0.030355020645050638;  // std dev = 2.836, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.08890518830006422;  // std dev = 1.382, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.16389649158218253;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 5.6911517647972865E-5;  // std dev = 1.147, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.4868155457905451;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0.2273106610346004;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0025208568821983857;  // std dev = 0.984, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return -0.0143159870574048;  // std dev = 1.285, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.19254336950709797;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.010840300580985795;  // std dev = 8.355, 774.000 (wgt'ed) examples reached here.  /* #neg=557 #pos=217 */


Results
   AUC ROC   = 0.978548
   AUC PR    = 0.375677
   CLL	      = -0.176981
   Precision = 0.440945 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.511416


Total learning time: 60.044 seconds
Total inference time: 15.418 seconds
AUC ROC: 0.978548


Results scoring model
   AUC ROC   = 0.963302
   AUC PR    = 0.197575
   CLL	      = -0.204983
   Precision = 0.164802 at threshold = 0.5
   Recall    = 0.584838
   F1        = 0.257143


Total scoring time: 245.626 seconds
Parameter learned model CLL: -0.204983


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [5.96e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [1.351, 2, 21], 'false,true,true,true': [0.991, 1, 53], 'false,true,true,false': [0.991, 1, 52], 'false,true,false': [1.63e-07, 320, 0], 'false,false,true': [0.957, 1, 11], 'false,false,false,true': [8.303, 227, 99], 'false,false,false,false': [3.617, 42, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.969, 1, 27], 'true,false': [1.333, 2, 16], 'false,true,true,true': [2.095, 5, 36], 'false,true,true,false': [1.944, 4, 69], 'false,true,false': [0.0, 283, 0], 'false,false,true,true': [6.043, 52, 129], 'false,false,true,false': [0.004, 162, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [2.538, 10, 69], 'true,true,false,true': [0.696, 1, 16], 'true,true,false,false': [7.711, 126, 167], 'true,false': [0.56, 357, 0], 'false,true': [0.013, 0, 5], 'false,false,true,true': [0.96, 1, 20], 'false,false,true,false': [0.0, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.586, 3, 43], 'true,false': [0.0, 0, 0], 'false,true,true': [0.953, 1, 14], 'false,true,false': [0.0, 0, 3], 'false,false,true,true': [2.052, 8, 39], 'false,false,true,false': [4.274, 298, 60], 'false,false,false,true': [7.906, 251, 118], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.984, 1, 32], 'true,false': [1.281, 2, 11], 'false,true,true,true': [2.402, 6, 72], 'false,true,true,false': [0.235, 0, 33], 'false,true,false': [0.346, 255, 0], 'false,false,true,true': [0.0, 0, 5], 'false,false,true,false': [0.03, 0, 6], 'false,false,false,true': [7.734, 250, 118], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.092, 0, 31], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.792, 1, 11], 'true,false': [0.0, 1, 0], 'false,true': [4.343, 298, 105], 'false,false,true,true': [6.049, 53, 129], 'false,false,true,false': [0.004, 172, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.608, 3, 67], 'true,true,false,true': [0.954, 2, 9], 'true,true,false,false': [0.0, 0, 0], 'true,false': [7.604, 487, 151], 'false,true,true': [1.255, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.045, 66, 24], 'false,false,false,true': [2.923, 33, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [1.83e-08, 0, 22], 'true,true,false': [0.0, 0, 0], 'true,false': [1.331, 2, 21], 'false,true': [4.41, 321, 105], 'false,false,true,true': [1.642, 4, 9], 'false,false,true,false': [6.634, 210, 101], 'false,false,false,true': [2.819, 42, 19], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.116, 0, 25], 'true,true,false': [0.073, 0, 5], 'true,false': [0.122, 0, 13], 'false,true,true,true': [0.934, 1, 9], 'false,true,true,false': [0.929, 1, 5], 'false,true,false': [0.031, 0, 3], 'false,false,true': [4.132, 287, 99], 'false,false,false,true': [6.622, 205, 99], 'false,false,false,false': [2.836, 40, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [1.382, 2, 30], 'true,false,true,true': [0.037, 0, 6], 'true,false,true,false': [1.147, 2, 7], 'true,false,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.984, 3, 5], 'false,true,false,true': [1.285, 2, 8], 'false,true,false,false': [0.027, 0, 3], 'false,false': [8.355, 557, 217]}]]
[{'': [0.04246913580247025, 0.20303806670614427], 'false': [0.18543402311206797, 0.21878003278874142], 'false,false': [0.07638888888888877, 0.21193972050291016], 'false,false,false': [0.2114588430125349, 0.21445847890352004], 'false,true': [0.018342213293739716, 8.326672684688674e-17], 'true': [1.6148698540002277e-16, 0.07939508506616269], 'false,true,true': [0.018175582990397926, 0.018511925952296473], 'true,true': [1.6148698540002277e-16, nan]}, {'': [0.059964330619947444, 0.18654280783758728], 'false': [0.1421590396488162, 0.23089113949770193], 'false,false': [0.23089113949770193, nan], 'false,false,true': [0.20176339769073973, 1.2266970831164576e-07], 'false,true': [0.07271519930127045, -7.846099113958704e-17], 'false,true,true': [0.10707604155585172, 0.05179318463689767], 'true': [0.0335227132813808, 0.09876543209876577]}, {'': [0.15164022121019932, 0.11181083559561326], 'true': [0.17662752758969358, 0.0008799591880162324], 'true,true': [0.08153427808561077, 0.19646314660231745], 'true,true,false': [0.028495758738320658, 0.20291700037274935], 'false': [3.5729299788567204e-05, 0.10226229893531535], 'false,false': [0.10226229893531535, nan], 'false,false,true': [0.04388332806587262, 0.0]}, {'': [0.0546504515875826, 0.11908780478590672], 'false': [0.05332337309274328, 0.11761842480908417], 'false,false': [0.06822563217367325, 0.16938156068051774], 'false,false,false': [0.16938156068051774, nan], 'false,false,true': [0.08955426769222169, 0.05102105971176579], 'true': [0.0546504515875826, nan], 'false,true': [0.06052821033528781, 0.0]}, {'': [0.05885477129406594, 0.11593339143043321], 'false': [0.06833942546400858, 0.16042107239356937], 'false,false': [0.00011542273965060478, 0.162546961525981], 'false,false,false': [0.162546961525981, nan], 'false,true': [0.05465549421907523, 0.00046972722110604365], 'true': [0.029362753825335253, 0.12627072970361772], 'false,true,true': [0.07397859174237577, 0.0016702622448295419], 'false,false,true': [-2.2204460492503132e-17, 0.0001454807447678156]}, {'': [0.02833816909943012, 0.10240419378645882], 'false': [0.0467973501152038, 0.16127621658372937], 'false,false': [0.16127621658372937, nan], 'false,false,true': [0.20102508334922836, 9.554685343432641e-08], 'true': [0.01466006926070768, 0.0], 'true,true': [0.00027013822753099086, 0.048334304468519856], 'true,true,false': [0.0, 0.05225677720449759]}, {'': [0.09124986873066733, 0.09515098527802236], 'false': [0.175142239338854, 0.09007340491895056], 'false,true': [0.175142239338854, nan], 'true': [0.043161237130218875, 0.09061861046457771], 'false,false': [0.0464762946506476, 0.16433987315393855], 'false,false,false': [0.16433987315393855, nan], 'true,true': [0.03693762521116674, 0.08272285170528007], 'true,true,false': [0.08272285170528007, nan]}, {'': [0.03947842608125933, 0.09188101321103713], 'false': [0.045660696447602164, 0.14197387749609952], 'false,false': [0.14417779250012447, 0.13026780364583507], 'false,false,true': [0.20737064235764274, 0.14151872617461522], 'false,false,false': [0.13026780364583507, nan], 'true': [1.5139404881252134e-17, 0.0770021483023333], 'true,true': [1.5139404881252134e-17, nan]}, {'': [0.0012755158700177966, 0.0926351980361459], 'false': [0.0940884618046534, 0.0923328074707553], 'false,true': [0.10900379169033071, 0.0003177288258318922], 'false,true,true': [0.08732108364742104, 0.14384385527160454], 'false,false': [0.04422792276042665, 0.14295992358413287], 'false,false,false': [0.14425013621624624, 0.13629287376952537], 'true': [0.0007348549989454185, 0.0011518572554051882], 'true,true': [0.000535652330153118, 0.0010644626458227446]}, {'': [0.07595950525911686, 0.09118569840842371], 'false': [0.12571971366381202, 0.09019483139061545], 'false,true': [0.11285609005546254, 0.1345810110356294], 'false,true,false': [0.1650079059812907, 0.0002420329616710376], 'false,true,true': [0.0, 0.12109393168706871], 'true': [0.059703363354565185, 0.1062416357712345], 'true,false': [0.09425222910650906, 0.0], 'true,false,true': [0.0002261956245821345, 0.1461988882295045]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;function(A, E), function(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6359267128772901;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8394573463144643;  // std dev = 0.135, 107.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=105 */
%   | | else return -0.14185106490048788;  // std dev = 6.66e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), complex(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.178537284614073;  // std dev = 8.203, 309.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=99 */
%   | | | else return 0.2803711573217345;  // std dev = 3.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7271193241237252;  // std dev = 0.102, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6151223321687996;  // std dev = 1.889, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.7095318101399214;  // std dev = 0.993, 73.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.3377309672230773;  // std dev = 3.406, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.45548039262819656;  // std dev = 6.207, 167.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=105 */
%   | | else return -0.16653566467058536;  // std dev = 0.057, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), location(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4940828877419855;  // std dev = 1.980, 74.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=67 */
%   | | | else return 0.16978433460613324;  // std dev = 3.749, 116.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.32285401722017915;  // std dev = 3.840, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   | | | else return 0.47559705493278714;  // std dev = 5.178, 138.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=100 */
%   | else return -0.13678080687744987;  // std dev = 0.655, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.42226770345578757;  // std dev = 0.894, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(L, M), recursion_proteinclass(L, B) )
%   | | then if ( complex(A, N) )
%   | | | then return 0.2654576412873999;  // std dev = 1.494, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.3696419549997122;  // std dev = 1.141, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else return -0.11231637819360622;  // std dev = 2.47e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43253935252622217;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.0332546599172965;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.49695022874948375;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.446661526861744;  // std dev = 0.229, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.534878858837256;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( complex(A, H), complex(G, H) )
%   | | | then return -0.024969862303821182;  // std dev = 2.184, 84.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=14 */
%   | | | else return 0.05086111503453872;  // std dev = 4.796, 307.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=85 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.12896408918178054;  // std dev = 5.481, 173.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=62 */
%   | | | else return 0.07033851067595044;  // std dev = 5.444, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3312261088441209;  // std dev = 0.038, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, E), enzyme(E, F) )
%   | | | then return 0.1724123434979915;  // std dev = 1.107, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.6342843313856918;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.32422192207210293;  // std dev = 0.227, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4354535322310648;  // std dev = 0.194, 109.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=105 */
%   | | else return -0.11175380508226791;  // std dev = 0.335, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.34873401249115354;  // std dev = 0.252, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.11058082061561009;  // std dev = 5.784, 190.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=69 */
%   | | | else return 0.06619941175832504;  // std dev = 4.972, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.20608742244228123;  // std dev = 0.235, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | else return 0.333372356227144;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11603132317193726;  // std dev = 0.087, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.015806267478907694;  // std dev = 3.598, 254.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=69 */
%   | | | else return 0.05983609305240809;  // std dev = 2.417, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K) )
%   | | | then return 0.20203749499387022;  // std dev = 6.945, 216.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=123 */
%   | | | else return 0.35273249249417205;  // std dev = 1.201, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return -0.15286287785592143;  // std dev = 0.077, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, E), interaction(A, F) )
%   | | then return 0.2557043842514258;  // std dev = 0.204, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | else return -0.03512160117104305;  // std dev = 0.443, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1005130764567579;  // std dev = 0.204, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(G, C), enzyme(G, H) )
%   | | | then return 0.04672637361078846;  // std dev = 4.998, 201.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=68 */
%   | | | else return 0.009241177330940554;  // std dev = 5.187, 254.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=74 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2406534018303071;  // std dev = 0.099, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.010759731999733372;  // std dev = 0.243, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return -0.023929063949137658;  // std dev = 1.159, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11478856280818737;  // std dev = 3.353, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.15053700428252567;  // std dev = 0.188, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.06790100908257016;  // std dev = 1.006, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.19453456565581603;  // std dev = 0.199, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.2883890361957791;  // std dev = 0.179, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.01906640947050231;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47685234022757583;  // std dev = 0.603, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.13372297600822036;  // std dev = 0.564, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09948665091165002;  // std dev = 0.539, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 3.076063566532471E-4;  // std dev = 8.173, 673.000 (wgt'ed) examples reached here.  /* #neg=485 #pos=188 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11941734417730399;  // std dev = 0.206, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | else if ( complex(A, E) )
%   | | then return 0.24997661373286517;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.23415953860879027;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2561179464219876;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2335108969634829;  // std dev = 0.156, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.11188447808759942;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.05062600148557682;  // std dev = 0.182, 207.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=35 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.0021074831468555866;  // std dev = 6.220, 353.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=97 */
%   | | | else return 0.028673913352462874;  // std dev = 5.265, 261.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=85 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15618669629591003;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.22478792063820896;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11143446357148458;  // std dev = 0.768, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21335463852192318;  // std dev = 0.053, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1685252334331908;  // std dev = 6.902, 345.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=205 */
%   | | | else return -0.13257672694377634;  // std dev = 1.512, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07813383102874213;  // std dev = 1.511, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | | else return 0.008914514697407661;  // std dev = 1.288, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */


Results
   AUC ROC   = 0.988844
   AUC PR    = 0.415069
   CLL	      = -0.183877
   Precision = 0.237113 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.360313


Total learning time: 193.881 seconds
Total inference time: 39.515 seconds
AUC ROC: 0.988844


Results scoring model
   AUC ROC   = 0.97565
   AUC PR    = 0.229926
   CLL	      = -0.204067
   Precision = 0.149254 at threshold = 0.5
   Recall    = 0.685921
   F1        = 0.245161


Total scoring time: 463.44 seconds
Refined model CLL: -0.204067


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.988844
   AUC PR    = 0.415069
   CLL	      = -0.183877
   Precision = 0.237113 at threshold = 0.5
   Recall    = 0.75
   F1        = 0.360313


Total learning time: 962.991 seconds
Total inference time: 39.515 seconds
AUC ROC: 0.988844
Total revision time: 962.991
Best scored revision CLL: -0.204067


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 04:15:37
{'AUC ROC': 0.988844, 'AUC PR': 0.415069, 'CLL': -0.183877, 'Precision': [0.237113, 0.5], 'Recall': 0.75, 'F1': 0.360313, 'Learning time': 962.991, 'Inference time': 39.515, 'parameter_1.0': {'AUC ROC': 0.978548, 'AUC PR': 0.375677, 'CLL': -0.176981, 'Precision': [0.440945, 0.5], 'Recall': 0.608696, 'F1': 0.511416, 'Learning time': 60.044, 'Inference time': 15.418}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17243464938522607;  // std dev = 3.884, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.594374991457909;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7392070123615109;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6619068122485935;  // std dev = 0.974, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6685302587396658;  // std dev = 1.577, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.16878961411165272;  // std dev = 0.085, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07112996083595015;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.3448207410601201;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.6106209797788587;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5679079756876899;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5709557843565204;  // std dev = 1.408, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else return -0.12551789691598894;  // std dev = 0.177, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5798776071848587;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5761732886313379;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.10511240253995022;  // std dev = 2.834, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.48293569202173714;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4421597142866214;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4115648908926489;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.42688122474995427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4269815262704754;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.00968076210336746;  // std dev = 1.853, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.17924243421597202;  // std dev = 2.222, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.09637850028171374;  // std dev = 2.833, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35762821333386485;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3260925281960319;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3201285821617091;  // std dev = 0.873, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.43057969161204734;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.10990840282782817;  // std dev = 0.216, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3270697144936099;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.0701805988106;  // std dev = 2.306, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.05259716686730135;  // std dev = 2.884, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3163978883520666;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2661739699650398;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F) )
%   | then return -0.022839129095214298;  // std dev = 2.056, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2739299171802684;  // std dev = 1.967, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return -0.1651063275737764;  // std dev = 0.099, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.06986271794045686;  // std dev = 2.814, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.07889603626217187;  // std dev = 1.304, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.16444624357719656;  // std dev = 0.427, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7742531418833936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.002200064497321935;  // std dev = 3.449, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2198007732252799;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return -1.831969870170933E-4;  // std dev = 0.766, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.16743935153668466;  // std dev = 0.710, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.036173408041740025;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2422478641037048;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19809905934094182;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then return -0.0013575204585190306;  // std dev = 1.663, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5191102531701757;  // std dev = 0.132, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0041482557296260185;  // std dev = 3.091, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.12911007233278587;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1991888737137391;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18143449761937483;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16184583160396881;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2899155116503572;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.02232912541722056;  // std dev = 1.691, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.012990050483758495;  // std dev = 3.236, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | | else return 0.150184422387017;  // std dev = 1.374, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1560680284835889;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14107492201927457;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( phenotype(A, H), interaction(I, F) )
%   | | | then return 0.2622124793969587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.735847952493691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.018584356427077585;  // std dev = 3.842, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */


Results
   AUC ROC   = 0.981369
   AUC PR    = 0.285681
   CLL	      = -0.174421
   Precision = 0.269091 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.409972


Total learning time: 4.252 seconds
Total inference time: 5.081 seconds
AUC ROC: 0.981369


Results scoring model
   AUC ROC   = 0.961562
   AUC PR    = 0.16796
   CLL	      = -0.206081
   Precision = 0.14377 at threshold = 0.5
   Recall    = 0.803571
   F1        = 0.243902


Total scoring time: 10.233 seconds
Parameter learned model CLL: -0.206081


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.816, 1, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [2.98e-08, 0, 6], 'false,true,true,true': [0.949, 1, 9], 'false,true,true,false': [0.0, 0, 11], 'false,true,false': [6.66e-08, 65, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.884, 48, 22], 'false,false,false,false': [1.195, 2, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.948, 1, 6], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.0, 0, 5], 'false,true,true,false': [0.974, 1, 15], 'false,true,false': [0.0, 56, 0], 'false,false,true,true': [1.577, 3, 16], 'false,false,true,false': [0.085, 27, 0], 'false,false,false,true': [2.473, 26, 8], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.097, 0, 5], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.408, 3, 24], 'true,false': [0.177, 49, 0], 'false,true': [0.027, 0, 5], 'false,false,true,true': [0.029, 0, 9], 'false,false,true,false': [0.0, 36, 0], 'false,false,false,true': [2.834, 28, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.085, 0, 3], 'true,false,true': [0.0, 0, 4], 'true,false,false': [0.0, 0, 1], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.009, 0, 5], 'false,false,true,false': [1.853, 56, 15], 'false,false,false,true': [2.222, 17, 15], 'false,false,false,false': [2.833, 26, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.076, 0, 5], 'true,false': [0.028, 0, 3], 'false,true,true,true': [0.873, 1, 12], 'false,true,true,false': [0.03, 0, 8], 'false,true,false': [0.216, 64, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.306, 29, 15], 'false,false,false,false': [2.884, 30, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.061, 0, 7], 'false,true': [2.056, 67, 20], 'false,false,true,true': [1.967, 5, 16], 'false,false,true,false': [0.099, 26, 0], 'false,false,false,true': [2.814, 27, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [1.304, 2, 10], 'true,true,false,true': [0.427, 1, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [3.449, 106, 34], 'false,true,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 1], 'false,false,true': [0.766, 15, 4], 'false,false,false,true': [0.71, 4, 1], 'false,false,false,false': [1.549, 6, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.007, 0, 2], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 6], 'false,true': [1.663, 70, 20], 'false,false,true,true': [0.132, 0, 2], 'false,false,true,false': [3.091, 61, 21], 'false,false,false,true': [0.711, 3, 1], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.04, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.005, 0, 2], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.707, 1, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.691, 48, 20], 'false,false,false,true': [3.236, 51, 22], 'false,false,false,false': [1.374, 4, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(A, G)', 'false,true,false': 'phenotype(A, H), interaction(I, F)'}, {'true,true': [0.036, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.004, 0, 2], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 1, 0], 'false,false': [3.842, 109, 47]}]]
[{'': [0.09876543209876527, 0.2070196311719218], 'false': [0.17847485127095683, 0.2301117685733084], 'false,false': [0.0, 0.2276943835385407], 'false,false,false': [0.21551020408163357, 0.20408163265306106], 'false,true': [0.04535147392290242, 6.832141690000964e-17], 'true': [0.22222222222222224, 1.4802973661668753e-16], 'true,true': [0.22222222222222224, nan], 'false,true,true': [0.08999999999999977, -1.6148698540002277e-16]}, {'': [0.10250257337783363, 0.1808800032323946], 'false': [0.14138976301512068, 0.214418446879522], 'false,false': [0.22416670148178308, 0.20162821223929273], 'false,false,true': [0.13082144287054728, 0.00026743569048941977], 'false,false,false': [0.17993079584775074, 0.24489795918367335], 'false,true': [0.04625229392290117, -3.766828119263924e-17], 'true': [0.12831133071993392, 0.0], 'false,true,true': [0.0, 0.05928344031249905]}, {'': [0.14339040718930196, 0.14269046084071615], 'true': [0.0605444375054713, 0.0006399707008993611], 'false': [0.00015019936906717212, 0.1362271917673585], 'false,false': [0.07586173817473173, 0.200772852223829], 'false,false,false': [0.200772852223829, nan], 'false,false,true': [9.427381388022521e-05, -1.0793834961633467e-17], 'true,true': [0.0018938090448435308, 0.07077807087782961], 'true,true,false': [0.0, 0.07339914915542461]}, {'': [0.001507115483751903, 0.12105520629425241], 'false': [0.0, 0.12108317811167608], 'false,false': [0.05589446366624204, 0.18694909068398866], 'false,false,false': [0.15433763413787566, 0.21127242974491528], 'false,false,true': [1.7064698184410254e-05, 0.048372917566896476], 'true': [0.0023949033334006073, 0.00014976691496135786], 'true,false': [0.0, 0.0], 'false,true': [0.0, nan]}, {'': [0.0010539876669248133, 0.10610061757352525], 'false': [0.05168760454082168, 0.1576052774827575], 'false,false': [0.0, 0.15862780842862925], 'false,false,false': [0.12083568460631534, 0.19806137357309792], 'false,true': [0.0391713443667398, 0.0007272525281281968], 'false,true,true': [0.058561831581475016, 0.0001097636654361911], 'true': [0.001157935904697549, 0.00025917845577481485], 'false,false,true': [nan, 0.0]}, {'': [0.0007448897425262335, 0.1070000568545018], 'false': [0.048566042624374514, 0.16354299157953306], 'false,false': [0.13014140019403836, 0.20297328495356226], 'false,false,false': [0.20297328495356226, nan], 'false,false,true': [0.18417338463621885, 0.00037657968515533924], 'true': [0.0, 0.0005359973156187795], 'true,true': [0.0, nan]}, {'': [0.09346203144710047, 0.10545801893212293], 'false': [0.0, 0.10699677423211533], 'false,false': [0.03088817140588467, 0.20284600775085823], 'false,false,false': [0.10089925267714724, 0.24], 'true': [0.15541876009744457, 0.08495780261661243], 'true,true': [0.14175179655327222, 0.14335340232746877], 'true,true,false': [0.09107528575059508, 0.0], 'false,true': [nan, 0.0]}, {'': [0.00047588649167863706, 0.0833315925028002], 'false': [0.030724822167151108, 0.13286290801950626], 'false,false': [0.12010022036909958, 0.22676949833413096], 'false,false,false': [0.12645729313590304, 0.2448979591836735], 'false,false,true': [0.008739312929965992, 0.11650239104349988], 'true': [2.124483745302025e-05, 0.00014015446925867703], 'true,true': [2.124483745302025e-05, nan]}, {'': [0.00027889529016018183, 0.10570557312442591], 'false': [0.24999999999999994, 0.10247297863276818], 'false,true': [0.24999999999999994, nan], 'false,true,true': [nan, 0.24999999999999994], 'false,false': [0.04206194251868366, 0.15255510906387498], 'false,false,false': [0.14342357856172117, 0.20986553362060228], 'true': [0.0002720706800918525, 1.1582243167818779e-05], 'true,true': [0.0002720706800918525, nan]}, {'': [0.00020483691538201315, 0.09737711425314056], 'false': [0.24903115642643756, 0.09460713255869108], 'false,true': [nan, 0.24903115642643756], 'false,true,false': [0.0, 0.0], 'true': [0.00021383706516094983, 9.241534957502018e-06], 'true,false': [nan, 9.241534957502018e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;phenotype(A, G).;true;true
5;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
9;false,true;phenotype(A, H), interaction(I, F).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.19617710411359685;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7194734122109542;  // std dev = 5.16e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8279781908620818;  // std dev = 0.115, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16345824063918812;  // std dev = 0.040, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.07746507412854532;  // std dev = 0.972, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.1386616970623424;  // std dev = 2.762, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.4073355911318323;  // std dev = 0.935, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5284374959899324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6088339779077522;  // std dev = 0.802, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return -0.12605047323458468;  // std dev = 0.015, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4120859462763998;  // std dev = 0.942, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5644078102435839;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17751554504222247;  // std dev = 2.108, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 9.231169745172E-4;  // std dev = 2.011, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.24155628995873255;  // std dev = 0.668, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2984787611905876;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.4527146552352971;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3978181171401024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3828713110853601;  // std dev = 0.532, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 8.854368867031395E-5;  // std dev = 1.780, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.2030963666963427;  // std dev = 2.435, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.03474676566193998;  // std dev = 2.609, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.4074351096005687;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.36628718386441167;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.32139625719224824;  // std dev = 0.956, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.4126085156689427;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.11029777838860488;  // std dev = 0.127, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.1012580727739032;  // std dev = 0.003, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.30738298099445993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.13154774961439747;  // std dev = 2.461, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.021027237195571535;  // std dev = 2.698, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30388210669070914;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.16184678580863338;  // std dev = 0.691, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.04428495411710558;  // std dev = 1.195, 62.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.31340181068124073;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07251034704434686;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3781252965685714;  // std dev = 1.305, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.14846448387227923;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.019505102477996496;  // std dev = 2.476, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.35157924271243957;  // std dev = 1.258, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.23418948584322666;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.09973995507968475;  // std dev = 0.754, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.7923520297915231;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.11377114476636375;  // std dev = 0.100, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.02628950029394018;  // std dev = 0.300, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2352185806389665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then return -0.14162144255374395;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.024307511238384944;  // std dev = 0.708, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.3573981745074543;  // std dev = 1.217, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2119243426774641;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2736896970527205;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4082646202580061;  // std dev = 0.332, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.09331975051691119;  // std dev = 0.160, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return -0.22379404900899427;  // std dev = 0.699, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J), phenotype(H, K) )
%   | | | then return 0.0979113123073184;  // std dev = 1.282, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return -0.026181223995808363;  // std dev = 2.468, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.016892206066871293;  // std dev = 0.608, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.18831923308918153;  // std dev = 1.283, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.08720573219431642;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19419054332356236;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15946433846578562;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.27441248693649134;  // std dev = 0.094, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.13142316470201407;  // std dev = 0.111, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return -0.11369233564863677;  // std dev = 0.734, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.11639367387613779;  // std dev = 0.382, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.22828142428255474;  // std dev = 0.578, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04489924109111506;  // std dev = 2.858, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1791203870723747;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12337952493880995;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.16549075734368981;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(H, F) )
%   | | then return 0.09913636025868822;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.289827040661464;  // std dev = 1.371, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.1451829151841426;  // std dev = 0.845, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.05635966895743077;  // std dev = 0.988, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.1374061046174552;  // std dev = 1.976, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */


Results
   AUC ROC   = 0.98944
   AUC PR    = 0.417941
   CLL	      = -0.155443
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.415512


Total learning time: 10.632 seconds
Total inference time: 7.038 seconds
AUC ROC: 0.98944


Results scoring model
   AUC ROC   = 0.981174
   AUC PR    = 0.388538
   CLL	      = -0.176887
   Precision = 0.157718 at threshold = 0.5
   Recall    = 0.839286
   F1        = 0.265537


Total scoring time: 28.429 seconds
Refined model CLL: -0.176887


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98944
   AUC PR    = 0.417941
   CLL	      = -0.155443
   Precision = 0.272727 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.415512


Total learning time: 53.54599999999999 seconds
Total inference time: 7.038 seconds
AUC ROC: 0.98944
Total revision time: 53.54599999999999
Best scored revision CLL: -0.176887


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:16:43
{'AUC ROC': 0.98944, 'AUC PR': 0.417941, 'CLL': -0.155443, 'Precision': [0.272727, 0.5], 'Recall': 0.872093, 'F1': 0.415512, 'Learning time': 53.54599999999999, 'Inference time': 7.038, 'parameter_0.2': {'AUC ROC': 0.981369, 'AUC PR': 0.285681, 'CLL': -0.174421, 'Precision': [0.269091, 0.5], 'Recall': 0.860465, 'F1': 0.409972, 'Learning time': 4.252, 'Inference time': 5.081}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.8105298874804645;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16800809002908948;  // std dev = 5.511, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | | else return 0.1914822684328457;  // std dev = 2.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7260512789278065;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7392070123615109;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6425503352878774;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6915491603042313;  // std dev = 0.990, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4988736272142828;  // std dev = 4.299, 84.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | | | else return -0.16374369730558405;  // std dev = 0.007, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.4110152801256889;  // std dev = 1.758, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6206659944899195;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.34734026731639767;  // std dev = 4.865, 122.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=73 */
%   | else return -0.13031794837793212;  // std dev = 0.175, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5783002881462084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5695529268198964;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11231637819360635;  // std dev = 1.49e-08, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4608688598282102;  // std dev = 0.079, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.33348924315891504;  // std dev = 0.936, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.48764768509507994;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.20243814756421472;  // std dev = 1.765, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | | | else return -0.01054878079858608;  // std dev = 2.663, 144.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=25 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.10407504663823798;  // std dev = 5.170, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.349959322775281;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3516263796811828;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4038975122542817;  // std dev = 0.965, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.39143826476240084;  // std dev = 0.999, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.11416358808555328;  // std dev = 0.315, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4228272773217503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4228272773217503;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.08506925759687056;  // std dev = 5.120, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2736812910070726;  // std dev = 0.043, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08459322260203106;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.016726084006264116;  // std dev = 2.622, 145.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=40 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2731431328589898;  // std dev = 4.407, 87.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=56 */
%   | | | else return -0.1500603849263627;  // std dev = 0.009, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.12865212198519113;  // std dev = 1.861, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | | else if ( function(A, F) )
%   | | | then return 0.11764742147262974;  // std dev = 1.014, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04480010048307911;  // std dev = 4.751, 217.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=70 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.20608674492980883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.008368517783111401;  // std dev = 1.056, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.18209703237120406;  // std dev = 1.550, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19649015811428305;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23182608208233552;  // std dev = 0.090, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F) )
%   | then return 0.010220290401117868;  // std dev = 2.488, 148.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=40 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.44922750923244786;  // std dev = 0.250, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.041308325496614035;  // std dev = 4.176, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   | | else if ( function(A, I) )
%   | | | then return 0.12745944439910847;  // std dev = 1.664, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17072780179206237;  // std dev = 0.043, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.2174789403706684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.2029556974643737;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.11073924023630753;  // std dev = 0.367, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.25100552876440263;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2664496414394417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.006907064490141873;  // std dev = 2.430, 144.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=37 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.00962229545698921;  // std dev = 4.533, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.051348415424585625;  // std dev = 1.768, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.07823773959564069;  // std dev = 0.977, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1554290236944521;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.2250262802458519;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21783012905762056;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.19422398576062608;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 9.55517252693233E-4;  // std dev = 5.544, 310.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=89 */


Results
   AUC ROC   = 0.977019
   AUC PR    = 0.254335
   CLL	      = -0.191235
   Precision = 0.136082 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.231173


Total learning time: 24.438 seconds
Total inference time: 15.471 seconds
AUC ROC: 0.977019


Results scoring model
   AUC ROC   = 0.961519
   AUC PR    = 0.133819
   CLL	      = -0.212195
   Precision = 0.109737 at threshold = 0.5
   Recall    = 0.628319
   F1        = 0.186842


Total scoring time: 83.401 seconds
Parameter learned model CLL: -0.212195


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 0, 20], 'false,true,true,false': [0.976, 1, 20], 'false,true,false': [8.16e-08, 111, 0], 'false,false,true': [0.894, 1, 4], 'false,false,false,true': [5.511, 98, 44], 'false,false,false,false': [2.309, 16, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.032, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true,true': [0.961, 1, 12], 'false,true,true,false': [0.99, 1, 28], 'false,true,false': [0.0, 103, 0], 'false,false,true,true': [4.299, 28, 56], 'false,false,true,false': [0.007, 87, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.758, 6, 24], 'true,true,false,true': [0.106, 0, 7], 'true,true,false,false': [4.865, 49, 73], 'true,false': [0.175, 137, 0], 'false,true': [0.0, 0, 1], 'false,false,true,true': [0.016, 0, 8], 'false,false,true,false': [1.49e-08, 17, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.079, 0, 17], 'true,false': [0.0, 0, 0], 'false,true,true': [0.936, 1, 6], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [1.765, 5, 12], 'false,false,true,false': [2.663, 119, 25], 'false,false,false,true': [5.17, 109, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.042, 0, 12], 'true,false': [0.058, 0, 5], 'false,true,true,true': [0.965, 1, 24], 'false,true,true,false': [0.999, 1, 16], 'false,true,false': [0.315, 119, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 3], 'false,false,false,true': [5.12, 112, 52], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.043, 0, 13], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.881, 1, 4], 'true,false': [0.0, 0, 0], 'false,true': [2.622, 105, 40], 'false,false,true,true': [4.407, 31, 56], 'false,false,true,false': [0.009, 85, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.861, 4, 23], 'true,true,false,true': [1.014, 2, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.751, 147, 70], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.056, 26, 8], 'false,false,false,true': [1.55, 9, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.09, 0, 9], 'false,true': [2.488, 108, 40], 'false,false,true,true': [0.25, 0, 3], 'false,false,true,false': [4.176, 110, 45], 'false,false,false,true': [1.664, 8, 8], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.043, 0, 12], 'true,true,false': [0.0, 0, 1], 'true,false': [0.051, 0, 4], 'false,true,true,true': [0.367, 1, 3], 'false,true,true,false': [5.27e-09, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true': [2.43, 107, 37], 'false,false,false,true': [4.533, 102, 44], 'false,false,false,false': [1.768, 10, 8]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.977, 1, 13], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [1.104, 2, 3], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.009, 0, 3], 'false,true,false,true': [0.044, 0, 4], 'false,true,false,false': [0.0, 0, 0], 'false,false': [5.544, 221, 89]}]]
[{'': [0.05246913580246885, 0.20887768501567242], 'false': [0.1939058171745165, 0.2202387059266102], 'false,false': [0.15999999999999986, 0.21512556249092818], 'false,false,false': [0.21384645903590668, 0.22222222222222232], 'false,true': [0.023795359904820054, 6.00120553851436e-17], 'true': [-2.220446049250313e-16, 0.08999999999999977], 'false,true,true': [-8.881784197001253e-17, 0.04535147392290242], 'true,true': [-2.220446049250313e-16, nan]}, {'': [9.70168795603645e-05, 0.1854156468413865], 'false': [0.14555329479301019, 0.21783184348763665], 'false,false': [0.21783184348763665, nan], 'false,false,true': [0.2200605299124532, 5.675274745428201e-07], 'false,true': [0.045805316915965545, -1.0778864316749092e-17], 'false,true,true': [0.0710059171597634, 0.033765365091099335], 'true': [8.653666108944987e-05, 0.0]}, {'': [0.15499614677772888, 0.10554447029624273], 'true': [0.1718525348858745, 0.0002246187642650102], 'true,true': [0.10298182629711024, 0.18741885116251888], 'true,true,false': [0.0016111565038992662, 0.19402608272304125], 'false': [0.0, 0.1011824326273568], 'false,false': [0.1011824326273568, nan], 'false,false,true': [3.199255916369603e-05, 1.3061447348531253e-17]}, {'': [0.0003635933583921806, 0.1208774473074232], 'false': [0.11202665896043226, 0.11899120187929407], 'false,false': [0.06769826025976328, 0.16603975820174818], 'false,false,false': [0.16603975820174818, nan], 'false,true': [0.12505986423082796, 0.0], 'false,false,true': [0.18327006994890183, 0.04926443849446187], 'true': [0.0003635933583921806, nan]}, {'': [0.00030477807641050766, 0.1133703951122434], 'false': [0.06335399501906618, 0.15866315821411328], 'false,false': [0.0, 0.15981678943918032], 'false,false,false': [0.15981678943918032, nan], 'false,true': [0.04596060825409941, 0.0008352178116259394], 'false,true,true': [0.03722830503561237, 0.05870983012942706], 'true': [0.00014984075938565913, 0.0006746659346388295], 'false,false,true': [0.0, 0.0]}, {'': [0.050359289304954896, 0.10779348099595405], 'false': [0.04740218686178745, 0.15768242826721782], 'false,false': [0.15768242826721782, nan], 'false,false,true': [0.22322972998161686, 9.422197086576577e-07], 'true': [0.050359289304954896, nan], 'true,true': [0.00014191261162549857, 0.15510192043144772], 'true,true,false': [nan, 0.15510192043144772]}, {'': [0.10945316274224273, 0.07455917103923804], 'true': [0.14032936226504972, 0.10403306629958264], 'true,true': [0.12822016981604845, 0.20561682046774962], 'true,true,false': [0.20561682046774962, nan], 'false': [0.0, 0.07564522174582908], 'false,false': [0.03277255639938271, 0.14126948791806507], 'false,false,false': [0.14126948791806507, nan], 'false,true': [0.0, nan]}, {'': [0.0007831707176078192, 0.08450388424317895], 'false': [0.04182563764267016, 0.11983052820538702], 'false,false': [0.11386873998074103, 0.1731209994441272], 'false,false,false': [0.1731209994441272, nan], 'false,false,true': [0.02082936065392978, 0.11251004531708804], 'true': [0.0, 0.000891733044156832], 'true,true': [0.0, nan]}, {'': [0.0005286509701469234, 0.09500417937704822], 'false': [0.022032523044488293, 0.09615048469936192], 'false,false': [0.04101422289583271, 0.14453793194713194], 'false,false,false': [0.14075694190927787, 0.1736559861152539], 'false,true': [0.024037695301423117, 0.0], 'false,true,true': [0.033633981764298965, 9.25185853854297e-18], 'true': [0.0002960327000061487, 0.0006577761645092176], 'true,true': [0.0001525737102582488, 0.0]}, {'': [0.1268736218217567, 0.09784996653874035], 'true': [0.06824730975391914, 0.2233971215763437], 'true,false': [0.2233971215763437, nan], 'true,false,true': [0.0, 0.24395217284222753], 'false': [0.0004185994931501117, 0.09913659335738198], 'false,true': [2.4670460572232915e-05, 0.00047522483843001617], 'false,true,false': [0.00047522483843001617, nan], 'false,true,true': [nan, 2.4670460572232915e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( location(A, E), interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8337586911970727;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.03996711691769416;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.21473808238633427;  // std dev = 5.440, 129.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7298326667716778;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7243696773246421;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.1254446385283911;  // std dev = 8.16e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( function(G, H), recursion_proteinclass(G, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.4500792772104013;  // std dev = 4.225, 77.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=48 */
%   | | | else return 0.21200869749756765;  // std dev = 2.222, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.16423522278419753;  // std dev = 0.081, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, A), complex(A, G) )
%   | | | then return 0.3019099382907234;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5373826014064046;  // std dev = 0.676, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( interaction(H, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5149761580178474;  // std dev = 0.675, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.33903756210833463;  // std dev = 4.993, 124.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=73 */
%   | else return -0.14054803985472006;  // std dev = 0.035, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5528069336768036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.07982396750338457;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.25449700904610356;  // std dev = 1.111, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else return -0.11231637819360644;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.4697052899040699;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.41811865474050025;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.34508892802445856;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4495752721816708;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.4738306395904049;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, H) )
%   | | | then return 0.002136985909768213;  // std dev = 1.309, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.15088418795854547;  // std dev = 4.086, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.03149861096199183;  // std dev = 1.834, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return 0.048938835517276784;  // std dev = 3.927, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.38125020077217675;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3125246486504653;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2072362970735598;  // std dev = 0.776, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.1756493481867903;  // std dev = 1.710, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.42014309492939944;  // std dev = 0.987, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.11477127629722679;  // std dev = 0.026, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.37823770505075327;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.017482307504098477;  // std dev = 2.681, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.1553647092623062;  // std dev = 4.338, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.2667131018635756;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.20994277071884007;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.31380503236714724;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11992547112483856;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.030316489040243127;  // std dev = 0.210, 74.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=13 */
%   | | else return 0.013648614470431784;  // std dev = 0.203, 104.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=27 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.010949894371641122;  // std dev = 1.852, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2476440841716448;  // std dev = 4.275, 84.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=50 */
%   | | else return -0.15009113687375714;  // std dev = 0.015, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.2578587906773233;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4934901260303952;  // std dev = 0.718, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.15285316314879865;  // std dev = 0.571, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( phenotype(A, H), location(A, I) )
%   | | | then return 0.07236981683532906;  // std dev = 2.927, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return -0.015779214697696838;  // std dev = 2.641, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.21755898678533703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return -0.07620404663499124;  // std dev = 0.107, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return -0.09448801006868311;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09875352164226703;  // std dev = 2.205, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21056742147209231;  // std dev = 0.048, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F), complex(D, G) )
%   | | then if ( interaction(H, D), phenotype(H, I) )
%   | | | then return 0.17690451343555766;  // std dev = 0.907, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.04018490323927393;  // std dev = 0.440, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(D, K) )
%   | | | then return -0.23084291569424917;  // std dev = 1.075, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.053422895396099346;  // std dev = 2.111, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | else if ( complex(A, L) )
%   | | then if ( complex(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.39256947995803904;  // std dev = 1.100, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.1367046673718002;  // std dev = 0.906, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.0029831550512460707;  // std dev = 2.760, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.09418321980604986;  // std dev = 2.845, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.11119973117853235;  // std dev = 0.192, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.22489265493046734;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.18379013057653193;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0462015182084953;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18875909225153797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), complex(I, H) )
%   | | | then return -0.08994386032323862;  // std dev = 1.365, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.005132982037280125;  // std dev = 2.388, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.16435422367590008;  // std dev = 2.418, 52.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=28 */
%   | | | else return 0.003534987835530085;  // std dev = 3.360, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1576788630696776;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.050551717651942954;  // std dev = 0.807, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.18830402793501105;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.1594900011516792;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.0042425755909447195;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.17800861553533412;  // std dev = 2.863, 77.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=50 */
%   | | | else return -0.12793335454300234;  // std dev = 0.653, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.02841657988431518;  // std dev = 2.051, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return -0.03659770418125658;  // std dev = 2.917, 99.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=21 */


Results
   AUC ROC   = 0.985154
   AUC PR    = 0.304132
   CLL	      = -0.19115
   Precision = 0.225914 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.351421


Total learning time: 90.111 seconds
Total inference time: 35.47 seconds
AUC ROC: 0.985154


Results scoring model
   AUC ROC   = 0.982425
   AUC PR    = 0.31606
   CLL	      = -0.197129
   Precision = 0.169429 at threshold = 0.5
   Recall    = 0.814159
   F1        = 0.280488


Total scoring time: 229.751 seconds
Refined model CLL: -0.197129


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985154
   AUC PR    = 0.304132
   CLL	      = -0.19115
   Precision = 0.225914 at threshold = 0.5
   Recall    = 0.790698
   F1        = 0.351421


Total learning time: 427.701 seconds
Total inference time: 35.47 seconds
AUC ROC: 0.985154
Total revision time: 427.701
Best scored revision CLL: -0.197129


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:24:43
{'AUC ROC': 0.985154, 'AUC PR': 0.304132, 'CLL': -0.19115, 'Precision': [0.225914, 0.5], 'Recall': 0.790698, 'F1': 0.351421, 'Learning time': 427.701, 'Inference time': 35.47, 'parameter_0.4': {'AUC ROC': 0.977019, 'AUC PR': 0.254335, 'CLL': -0.191235, 'Precision': [0.136082, 0.5], 'Recall': 0.767442, 'F1': 0.231173, 'Learning time': 24.438, 'Inference time': 15.471}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.14185106490048813;  // std dev = 0.000, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.212987644776933;  // std dev = 6.525, 186.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=66 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7238335082606028;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.7347337483847239;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.630699681110147;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.5982782018801573;  // std dev = 2.288, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5265835689137064;  // std dev = 5.065, 124.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=87 */
%   | | | else return -0.17022401239949686;  // std dev = 0.014, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.38818829816639944;  // std dev = 2.409, 43.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6266480180883683;  // std dev = 0.101, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3769297078265955;  // std dev = 5.679, 166.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=106 */
%   | else return -0.13302615765597225;  // std dev = 0.398, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.32120368777781694;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5928671811252411;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.11231637819360636;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4231156001230555;  // std dev = 0.990, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.4792951487798516;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5295146438381764;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3460887751509894;  // std dev = 1.445, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -6.403687491614135E-4;  // std dev = 3.207, 192.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=36 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.08280692155008418;  // std dev = 6.337, 252.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2995919190988884;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.37171851708792314;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.33881673694519626;  // std dev = 1.792, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | | else return 0.4137572928623308;  // std dev = 1.130, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else return -0.11283994800115735;  // std dev = 0.382, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.37973440978617445;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3877313044478588;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.07540074428364531;  // std dev = 6.271, 244.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=79 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2958633562232484;  // std dev = 0.030, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28669667143639793;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.013196482250069697;  // std dev = 3.285, 224.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=60 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3611159826847534;  // std dev = 4.549, 115.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=87 */
%   | | | else return -0.15065499761571619;  // std dev = 0.012, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.10484404065952288;  // std dev = 2.191, 45.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=33 */
%   | | else if ( function(A, F) )
%   | | | then return -0.03780745329332791;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.007926289918317973;  // std dev = 6.117, 383.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=101 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.24579507078720533;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.03342016911460555;  // std dev = 1.414, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.09837294520011233;  // std dev = 2.086, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2152465194399658;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14645560230220206;  // std dev = 0.984, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, F) )
%   | then return 0.020983353570394853;  // std dev = 3.155, 205.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=60 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3914596351224855;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018911230989947743;  // std dev = 5.444, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | else if ( function(A, I) )
%   | | | then return 0.12354900979580938;  // std dev = 1.928, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1897499881890967;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.20172598704140404;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.06996113600798227;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.2116944201343383;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09620051974680774;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.2744848400023054;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return -0.007318847831500898;  // std dev = 3.294, 226.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=56 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.02115469108460935;  // std dev = 5.363, 205.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=66 */
%   | | | else return -0.03195258980969515;  // std dev = 2.416, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10150201245230735;  // std dev = 0.962, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.19180246358018666;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.10597095800195253;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21151961639451936;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.21185433874559623;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2099056998830967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.012797982804459948;  // std dev = 6.442, 485.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=135 */


Results
   AUC ROC   = 0.977171
   AUC PR    = 0.243335
   CLL	      = -0.189569
   Precision = 0.137214 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.232804


Total learning time: 34.248 seconds
Total inference time: 15.46 seconds
AUC ROC: 0.977171


Results scoring model
   AUC ROC   = 0.961511
   AUC PR    = 0.135795
   CLL	      = -0.212538
   Precision = 0.113269 at threshold = 0.5
   Recall    = 0.621302
   F1        = 0.191606


Total scoring time: 143.89 seconds
Parameter learned model CLL: -0.212538


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.961, 1, 12], 'false,true,true,true': [0.984, 1, 30], 'false,true,true,false': [0.984, 1, 30], 'false,true,false': [0.0, 156, 0], 'false,false,true': [1.265, 2, 8], 'false,false,false,true': [6.525, 120, 66], 'false,false,false,false': [2.834, 21, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.026, 0, 14], 'true,false': [0.0, 0, 8], 'false,true,true,true': [1.345, 2, 19], 'false,true,true,false': [2.288, 6, 41], 'false,true,false': [0.0, 181, 0], 'false,false,true,true': [5.065, 37, 87], 'false,false,true,false': [0.014, 140, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [2.409, 9, 34], 'true,true,false,true': [0.101, 0, 11], 'true,true,false,false': [5.679, 60, 106], 'true,false': [0.398, 227, 0], 'false,true': [0.867, 1, 3], 'false,false,true,true': [0.0, 0, 15], 'false,false,true,false': [0.0, 43, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.99, 1, 22], 'true,false': [0.0, 0, 0], 'false,true,true': [0.086, 0, 10], 'false,true,false': [0.042, 0, 2], 'false,false,true,true': [1.445, 5, 20], 'false,false,true,false': [3.207, 156, 36], 'false,false,false,true': [6.337, 173, 79], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.959, 1, 15], 'true,false': [0.061, 0, 7], 'false,true,true,true': [1.792, 4, 35], 'false,true,true,false': [1.13, 1, 25], 'false,true,false': [0.382, 160, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.044, 0, 6], 'false,false,false,true': [6.271, 165, 79], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.03, 0, 17], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.051, 0, 5], 'true,false': [0.0, 0, 0], 'false,true': [3.285, 164, 60], 'false,false,true,true': [4.549, 28, 87], 'false,false,true,false': [0.012, 129, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [2.191, 12, 33], 'true,true,false,true': [1.232, 4, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.117, 282, 101], 'false,true,true': [0.002, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.414, 36, 15], 'false,false,false,true': [2.086, 20, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [1.83e-08, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [0.984, 1, 12], 'false,true': [3.155, 145, 60], 'false,false,true,true': [0.318, 0, 4], 'false,false,true,false': [5.444, 143, 70], 'false,false,false,true': [1.928, 16, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.058, 0, 13], 'true,true,false': [0.029, 0, 2], 'true,false': [0.919, 1, 7], 'false,true,true,true': [0.081, 0, 5], 'false,true,true,false': [1.221, 3, 5], 'false,true,false': [0.022, 0, 2], 'false,false,true': [3.294, 170, 56], 'false,false,false,true': [5.363, 139, 66], 'false,false,false,false': [2.416, 26, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.962, 1, 15], 'true,false,true,true': [0.001, 0, 2], 'true,false,true,false': [1.189, 2, 5], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.038, 0, 4], 'false,true,false,true': [0.117, 0, 7], 'false,true,false,false': [0.0, 0, 1], 'false,false': [6.442, 350, 135]}]]
[{'': [0.04158790170132359, 0.22045898437500067], 'false': [0.19947815840417527, 0.23517958412098403], 'false,false': [0.15999999999999986, 0.2301446280991739], 'false,false,false': [0.22892819979188353, 0.23615916955017255], 'false,true': [0.031217481789801747, -1.3664283380001927e-16], 'true': [-8.881784197001253e-17, 0.07100591715976314], 'false,true,true': [0.03121748178980358, 0.03121748178980358], 'true,true': [-8.881784197001253e-17, nan]}, {'': [5.773831243064106e-05, 0.17955850189719602], 'false': [0.13522161164966004, 0.21810207796201594], 'false,false': [0.21810207796201594, nan], 'false,false,true': [0.20686094448644068, 1.4655198289644947e-06], 'false,true': [0.10380622837370304, -1.7174720822930598e-17], 'false,true,true': [0.08616780045351452, 0.1113626075147121], 'true': [4.752609390549064e-05, 0.0]}, {'': [0.15574816402195935, 0.10512092345247873], 'true': [0.17595191333276425, 0.0006978518915703564], 'true,true': [0.13495807749787456, 0.18590731972654592], 'true,true,false': [0.0009194198918048745, 0.1942901214016451], 'false': [0.18783492899966803, 0.09534723090225027], 'false,false': [0.09534723090225027, nan], 'false,false,true': [0.0, -5.163828021512356e-18]}, {'': [0.04264101906347781, 0.11961856911111367], 'false': [0.001118399085993908, 0.11814462221987153], 'false,false': [0.06928528049932425, 0.15934236375362276], 'false,false,false': [0.15934236375362276, nan], 'false,false,true': [0.08356401000183468, 0.05357571387456853], 'true': [0.04264101906347781, nan], 'false,true': [0.0007442650136558094, 0.0008874047110905003]}, {'': [0.04128197680256379, 0.11726451466687923], 'false': [0.06863538195270169, 0.1590439566647716], 'false,false': [0.0002518044016559806, 0.16119293805919033], 'false,false,false': [0.16119293805919033, nan], 'false,true': [0.07038505134018397, 0.0009109488464667942], 'false,true,true': [0.08232144138892246, 0.049110814114374686], 'true': [0.057525731353314735, 0.0005344411375129658], 'false,false,true': [0.0, 0.00031975162115036965]}, {'': [0.00017074093001249885, 0.102798791191736], 'false': [0.0481894569950004, 0.15006812933309024], 'false,false': [0.15006812933309024, nan], 'false,false,true': [0.17993566439920106, 1.0622141803556161e-06], 'true': [0.00017074093001249885, nan], 'true,true': [5.1343130243575175e-05, 0.0005117626369684269], 'true,true,false': [nan, 0.0005117626369684269]}, {'': [0.10151226878044638, 0.07513215359210405], 'true': [0.12187273262776277, 0.0976828549989813], 'true,true': [0.10671631538969123, 0.18984974576712063], 'true,true,false': [0.18984974576712063, nan], 'false': [7.847896917138423e-07, 0.07661142314765329], 'false,false': [0.0392039567636582, 0.13186150949542816], 'false,false,false': [0.13186150949542816, nan], 'false,true': [7.847896917138423e-07, nan]}, {'': [0.04326972587452852, 0.09805035948017879], 'false': [0.04854172941829486, 0.13918647277744856], 'false,false': [0.13953017480457533, 0.1281824404381978], 'false,false,true': [0.02523812317657173, 0.1391181207550701], 'false,false,false': [0.1281824404381978, nan], 'true': [3.3306690738754695e-17, 0.07449665635832937], 'true,true': [3.3306690738754695e-17, nan]}, {'': [0.04022057893615993, 0.09798380976992772], 'false': [0.1265947564429438, 0.0969844743706759], 'false,true': [0.13754916738908496, 0.00023880954659849518], 'false,true,true': [0.0013058281476206913, 0.18623998749022527], 'false,false': [0.04799912054032351, 0.14216410099552157], 'false,false,false': [0.14027744249611995, 0.14971156776565672], 'true': [0.00029572139159697033, 0.10547024562463872], 'true,true': [0.000256718426179743, 0.0004249393914332461]}, {'': [0.1036910760304745, 0.08445035407108388], 'true': [0.05788702889845428, 0.17234225278528306], 'true,false': [0.17234225278528306, nan], 'true,false,true': [7.614590299548363e-07, 0.20187845430055726], 'false': [0.001251706689622702, 0.08555480630335938], 'false,true': [0.0003612123879727716, 0.0016969510714629973], 'false,true,false': [0.001938898003923503, 0.0], 'false,true,true': [nan, 0.0003612123879727716]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8258908705833835;  // std dev = 0.177, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | else return -0.1418510649004883;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7956489350995121;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.24590403714032863;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.16895974591032248;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.25072191861715465;  // std dev = 0.942, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7403057498150879;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.6350286854391509;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.7259377763482422;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return -0.12544463852839133;  // std dev = 4.21e-08, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.6818498808907403;  // std dev = 0.868, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.4135334753671995;  // std dev = 5.219, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | | else return -0.14835756845619466;  // std dev = 0.230, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5660573243667054;  // std dev = 0.160, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.4716407323376715;  // std dev = 0.887, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(I, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5615245282426541;  // std dev = 0.849, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3275149492181487;  // std dev = 5.603, 178.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=106 */
%   | else return -0.1332509921017455;  // std dev = 0.608, 237.000 (wgt'ed) examples reached here.  /* #neg=237 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5519331181667592;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.322685574611045;  // std dev = 1.091, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.18725817100145242;  // std dev = 1.421, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.4206881611435528;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.19421137753954598;  // std dev = 0.541, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.1174099386580983;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.4550080263613022;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4961943225299113;  // std dev = 0.072, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G), interaction(A, F) )
%   | | | then return -0.16990728700820748;  // std dev = 0.444, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0014507175317843757;  // std dev = 2.706, 87.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.018125473750689364;  // std dev = 2.594, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | | else return 0.09156593046960763;  // std dev = 6.076, 294.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=98 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.37139167899385667;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.036347499301244965;  // std dev = 0.970, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.33644502206995375;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.12004746474101374;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3910267612878764;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, J) )
%   | then return 0.019890215262068155;  // std dev = 0.258, 235.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=60 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.4027321123484738;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.06032565948582989;  // std dev = 5.433, 224.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=66 */
%   | | | else return 0.1692499439196561;  // std dev = 2.186, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.24743734778120854;  // std dev = 0.204, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.0759644916105067;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3041134141641306;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), interaction(H, H) )
%   | | then return -0.04166998867160114;  // std dev = 0.190, 67.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.023760358357765608;  // std dev = 3.218, 146.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=40 */
%   | | | else return 0.12486103453461682;  // std dev = 1.428, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.0841359956695703;  // std dev = 2.514, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.2701865703523951;  // std dev = 4.449, 112.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=72 */
%   | | else return -0.12831577476991923;  // std dev = 0.196, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1867037740580576;  // std dev = 0.265, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.01548026577136374;  // std dev = 0.296, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10687555359668788;  // std dev = 2.851, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
%   | | | else return 0.026754038969153234;  // std dev = 4.583, 248.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=69 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.21959847814368605;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(A, K), complex(K, J) )
%   | | | then return -0.1736227666510094;  // std dev = 0.384, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.010833662836320122;  // std dev = 1.447, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.24949447134468183;  // std dev = 0.799, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.05180027229061232;  // std dev = 2.447, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.2028023194681717;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.23945471552303157;  // std dev = 0.076, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then return -0.19805838635541848;  // std dev = 0.506, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13267285030317175;  // std dev = 0.469, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.009175138973494599;  // std dev = 2.609, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(H, J) )
%   | | | then return 0.02927114667585634;  // std dev = 2.848, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | | | else return -0.02695792253588355;  // std dev = 1.848, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08422401551271318;  // std dev = 3.035, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.049282590551979095;  // std dev = 4.082, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.17335930579873005;  // std dev = 0.020, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.15919437156871505;  // std dev = 0.172, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.10467573940417348;  // std dev = 0.879, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.2062965548131211;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2778089538494727;  // std dev = 0.080, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( complex(H, J), phenotype(A, K) )
%   | | | then return 0.04003578462988379;  // std dev = 1.786, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.052739694383720524;  // std dev = 2.551, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 1.605820535060018E-4;  // std dev = 3.448, 140.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=37 */
%   | | | else return 0.05068255888268728;  // std dev = 4.770, 194.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=71 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.149958295065148;  // std dev = 0.067, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.19203595744883398;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.07580408961669187;  // std dev = 0.743, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( function(A, G), interaction(H, E) )
%   | | | then return 0.20144925228331328;  // std dev = 0.156, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.17699905735424293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09851199974593383;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.004990802422907546;  // std dev = 3.517, 202.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=51 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.009474797898124299;  // std dev = 2.048, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.05046595854199667;  // std dev = 5.075, 194.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=70 */


Results
   AUC ROC   = 0.986945
   AUC PR    = 0.300698
   CLL	      = -0.196404
   Precision = 0.258182 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.393352


Total learning time: 133.775 seconds
Total inference time: 34.87 seconds
AUC ROC: 0.986945


Results scoring model
   AUC ROC   = 0.980281
   AUC PR    = 0.263949
   CLL	      = -0.213561
   Precision = 0.17328 at threshold = 0.5
   Recall    = 0.775148
   F1        = 0.283243


Total scoring time: 330.168 seconds
Refined model CLL: -0.213561


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.977171
   AUC PR    = 0.243335
   CLL	      = -0.189569
   Precision = 0.137214 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.232804


Total learning time: 642.081 seconds
Total inference time: 15.46 seconds
AUC ROC: 0.977171
Total revision time: 642.081
Best scored revision CLL: -0.212538


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:36:16
{'AUC ROC': 0.977171, 'AUC PR': 0.243335, 'CLL': -0.189569, 'Precision': [0.137214, 0.5], 'Recall': 0.767442, 'F1': 0.232804, 'Learning time': 642.081, 'Inference time': 15.46, 'parameter_0.6': {'AUC ROC': 0.977171, 'AUC PR': 0.243335, 'CLL': -0.189569, 'Precision': [0.137214, 0.5], 'Recall': 0.767442, 'F1': 0.232804, 'Learning time': 34.248, 'Inference time': 15.46}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8105298874804642;  // std dev = 1.380, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.8581489350995121;  // std dev = 2.06e-07, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.1418510649004885;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15639454913459971;  // std dev = 7.723, 285.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=85 */
%   | | | else return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6832761568884211;  // std dev = 0.987, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.6194734122109543;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.653852524568215;  // std dev = 1.359, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.7064684417342842;  // std dev = 0.986, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | else return -0.12544463852839172;  // std dev = 0.000, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7913825709052985;  // std dev = 1.002, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.1628132292358514;  // std dev = 0.015, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1568114318158522;  // std dev = 6.442, 193.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=62 */
%   | | | else return 0.1557861363928387;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5430726918976906;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5492623910652337;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.64886216171824;  // std dev = 0.462, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | else return -0.1315381509507056;  // std dev = 0.628, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5691664574064842;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5493436084108927;  // std dev = 0.978, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return -0.11231637819360615;  // std dev = 8.16e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14912898809955794;  // std dev = 6.865, 214.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.34323962626354015;  // std dev = 1.350, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.25760732877016734;  // std dev = 1.281, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return 0.4386140408806323;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4086136080707997;  // std dev = 1.102, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.38799816216045613;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32324755097231905;  // std dev = 1.546, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | | else return -0.003724266936632821;  // std dev = 3.603, 287.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=56 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08955834006346482;  // std dev = 3.055, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | | else return 0.09900336086561025;  // std dev = 6.861, 221.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3262582905462266;  // std dev = 0.820, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.19512473945101141;  // std dev = 1.191, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.33291574741837526;  // std dev = 1.612, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | | else return 0.370790736684826;  // std dev = 1.258, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | else return -0.10149569779540558;  // std dev = 0.095, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.39115576690144765;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4124181776006777;  // std dev = 0.331, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.09523506465679131;  // std dev = 2.934, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.0754739260038169;  // std dev = 6.894, 226.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=68 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.3031845568612842;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3064201869886067;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1731242482695781;  // std dev = 1.220, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(A, G) )
%   | then return 0.009359906161529733;  // std dev = 3.614, 321.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=87 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45762956361340607;  // std dev = 0.619, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1480349853552519;  // std dev = 0.011, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08419356521369431;  // std dev = 6.859, 219.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=72 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.20663734161482333;  // std dev = 1.673, 51.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=47 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.18865602695154082;  // std dev = 0.432, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.3103033804125371;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.018040803060180778;  // std dev = 7.183, 494.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=130 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.0019935718645613387;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.7183815847773656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.061845719989985844;  // std dev = 1.750, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.12482104172535317;  // std dev = 0.634, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12441585462704507;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.21065854295835287;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20818186682585993;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19566955151233892;  // std dev = 0.770, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, G) )
%   | then return 0.004870495372342852;  // std dev = 3.399, 322.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=87 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3071674005062337;  // std dev = 0.486, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.0310524867440552;  // std dev = 6.772, 296.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=88 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.023217112884123887;  // std dev = 0.756, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.027647212293372397;  // std dev = 2.622, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13717375837186457;  // std dev = 0.958, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return 0.19003407302307307;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.12092375341644991;  // std dev = 0.778, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.18483790378749315;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.173084610621869;  // std dev = 0.878, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.1893186400496954;  // std dev = 0.068, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.00752221718045156;  // std dev = 3.312, 301.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.019758123344805367;  // std dev = 6.774, 303.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=85 */
%   | | | else return 0.11362538601498434;  // std dev = 2.508, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.06035920236082342;  // std dev = 1.395, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.15230857020594568;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1759602235306797;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.018101489040611617;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030654787603041522;  // std dev = 0.786, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.1047775991280407;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.303957861121519;  // std dev = 0.230, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.015070668825001276;  // std dev = 7.985, 636.000 (wgt'ed) examples reached here.  /* #neg=455 #pos=181 */


Results
   AUC ROC   = 0.954913
   AUC PR    = 0.302275
   CLL	      = -0.195029
   Precision = 0.310345 at threshold = 0.5
   Recall    = 0.732558
   F1        = 0.435986


Total learning time: 5.576 seconds
Total inference time: 5.091 seconds
AUC ROC: 0.954913


Results scoring model
   AUC ROC   = 0.942665
   AUC PR    = 0.276659
   CLL	      = -0.203711
   Precision = 0.24649 at threshold = 0.5
   Recall    = 0.699115
   F1        = 0.364475


Total scoring time: 17.443 seconds
Parameter learned model CLL: -0.203711


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.926, 1, 6], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 23], 'false,true,true,true': [1.38, 2, 40], 'false,true,true,false': [2.06e-07, 0, 47], 'false,true,false': [0.0, 227, 0], 'false,false,true': [0.0, 0, 10], 'false,false,false,true': [7.723, 200, 85], 'false,false,false,false': [2.944, 26, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.987, 1, 22], 'true,false': [0.949, 1, 9], 'false,true,true,true': [1.359, 2, 25], 'false,true,true,false': [0.986, 1, 62], 'false,true,false': [0.0, 213, 0], 'false,false,true,true': [1.002, 1, 36], 'false,false,true,false': [0.015, 69, 0], 'false,false,false,true': [6.442, 131, 62], 'false,false,false,false': [2.603, 21, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.981, 1, 25], 'true,true,false,true': [0.043, 0, 9], 'true,true,false,false': [0.462, 0, 48], 'true,false': [0.628, 170, 0], 'false,true': [0.029, 0, 16], 'false,false,true,true': [0.978, 1, 56], 'false,false,true,false': [8.16e-08, 147, 0], 'false,false,false,true': [6.865, 142, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [1.35, 2, 18], 'true,false,true': [1.281, 2, 10], 'true,false,false': [1.05e-08, 0, 3], 'false,true,true': [1.102, 1, 12], 'false,true,false': [0.014, 0, 2], 'false,false,true,true': [1.546, 6, 27], 'false,false,true,false': [3.603, 231, 56], 'false,false,false,true': [3.055, 64, 30], 'false,false,false,false': [6.861, 153, 68]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.82, 1, 21], 'true,false': [1.191, 2, 10], 'false,true,true,true': [1.612, 3, 51], 'false,true,true,false': [1.258, 2, 36], 'false,true,false': [0.095, 244, 0], 'false,false,true,true': [0.203, 0, 3], 'false,false,true,false': [0.331, 0, 7], 'false,false,false,true': [2.934, 56, 30], 'false,false,false,false': [6.894, 158, 68]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.032, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 5], 'true,false': [1.22, 2, 14], 'false,true': [3.614, 234, 87], 'false,false,true,true': [0.619, 0, 36], 'false,false,true,false': [0.011, 81, 0], 'false,false,false,true': [6.859, 147, 72], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.673, 4, 47], 'true,true,false,true': [0.432, 1, 5], 'true,true,false,false': [0.724, 1, 2], 'true,false': [7.183, 364, 130], 'false,true,true': [0.851, 1, 3], 'false,true,false': [0.0, 1, 0], 'false,false,true': [1.75, 46, 26], 'false,false,false,true': [0.634, 3, 3], 'false,false,false,false': [2.481, 16, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.77, 1, 23], 'false,true': [3.399, 235, 87], 'false,false,true,true': [0.486, 0, 7], 'false,false,true,false': [6.772, 208, 88], 'false,false,false,true': [0.756, 9, 3], 'false,false,false,false': [2.622, 22, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.958, 1, 18], 'true,true,false': [0.008, 0, 3], 'true,false': [0.778, 1, 10], 'false,true,true,true': [0.151, 0, 5], 'false,true,true,false': [0.878, 1, 7], 'false,true,false': [0.068, 0, 2], 'false,false,true': [3.312, 218, 83], 'false,false,false,true': [6.774, 218, 85], 'false,false,false,false': [2.508, 18, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [1.395, 3, 21], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.038, 0, 5], 'true,false,false': [0.741, 1, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.786, 1, 4], 'false,true,false,true': [0.046, 0, 5], 'false,true,false,false': [0.23, 0, 5], 'false,false': [7.985, 455, 181]}]]
[{'': [0.030273437500001332, 0.2100000000000014], 'false': [0.19951730491908423, 0.21879594105202982], 'false,false': [-8.881784197001253e-17, 0.21098155768937807], 'false,false,false': [0.20929516774392193, 0.2222222222222217], 'false,true': [0.02196692336826161, -2.2302277499078035e-16], 'true': [0.09876543209876527, -3.089316242435218e-16], 'true,true': [0.12244897959183662, 0.0], 'false,true,true': [0.045351473922903854, 9.070758328852342e-16]}, {'': [0.05766395781108729, 0.18409797189964044], 'false': [0.1485558127902565, 0.21580274088202356], 'false,false': [0.21635084492095688, 0.21548408476593534], 'false,false,true': [0.027132502376949297, 3.3369656246216466e-06], 'false,false,false': [0.21499592415024882, 0.21852237252861584], 'false,true': [0.03191370366594231, -6.046285016737941e-17], 'true': [0.04237123623682169, 0.09000000000000008], 'false,true,true': [0.06843949717977885, 0.015429261738244491]}, {'': [0.12664131945229118, 0.1610628982837893], 'false': [5.24027814418071e-05, 0.15951277525187518], 'false,false': [0.09283069147407869, 0.22021753882329448], 'false,false,false': [0.22021753882329448, nan], 'true': [0.016837099790942455, 0.002318152779489695], 'false,false,true': [0.016766997845160017, 4.531522549490435e-17], 'true,true': [0.0370131178703533, 0.00509309016032894], 'true,true,false': [0.00020949063472948856, 0.004442431232305551]}, {'': [0.10181991058773761, 0.12090022688984409], 'false': [0.0810248101930294, 0.11912662377469833], 'false,false': [0.057931166656520525, 0.17908562114761212], 'false,false,false': [0.09929296060151208, 0.2129979599121808], 'true': [0.09116514284399602, 0.11463002796838788], 'true,false': [0.13673484899467672, 3.700743415417188e-17], 'false,true': [0.09341786787104842, 0.00010160489050131671], 'false,false,true': [0.07239177364503586, 0.045243296278790396]}, {'': [0.06542708889706782, 0.11531225102361854], 'false': [0.05283888680141428, 0.1780506467052986], 'false,false': [0.015131409215102365, 0.17998974415124155], 'false,false,false': [0.10012370968177921, 0.2102736054561862], 'true': [0.030532392483273683, 0.11827387013894969], 'false,true': [0.045789670387500835, 3.6691109096844844e-05], 'false,true,true': [0.048119220785076966, 0.04163725884023419], 'false,false,true': [0.013682732283413435, 0.015616643724631927]}, {'': [0.04940817561767794, 0.1071043436423888], 'false': [0.04068465533015948, 0.16886610961322607], 'false,false': [0.0814203587327403, 0.2148510326014115], 'false,false,false': [0.2148510326014115, nan], 'false,false,true': [0.010653699213327952, 1.5779072940823193e-06], 'true': [8.600096873095604e-05, 0.09297085611043271], 'true,true': [8.476705858623257e-05, 8.157225732233764e-05], 'true,true,false': [nan, 8.157225732233764e-05]}, {'': [0.10310075925095141, 0.10168462790088167], 'true': [0.05907899552619135, 0.1044558018551472], 'false': [0.22803921192339255, 0.09332458843626922], 'false,true': [0.18126094164286455, 0.0], 'false,false': [0.042542504871624004, 0.20486729086086608], 'false,false,false': [0.066984392223451, 0.23668639053254453], 'true,true': [0.05489985357867816, 0.08232789001699763], 'true,true,false': [0.031129836142693643, 0.17485861202956246]}, {'': [0.018575766370388117, 0.09836972599662556], 'false': [0.035877176626381464, 0.15593932461943094], 'false,false': [0.15386450696572554, 0.16973861529765885], 'false,false,false': [0.047576670945407594, 0.2148437499999997], 'false,false,true': [0.033749792710237134, 0.15494375031655022], 'true': [1.1501108747452582e-06, 0.024715682174514683], 'true,true': [-9.25185853854297e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.046520178089624324, 0.09944263448527091], 'false': [0.05328369262993869, 0.09993759988722711], 'false,false': [0.036440301859955095, 0.15695320308050165], 'false,false,false': [0.1514370296959192, 0.20287607965924268], 'false,true': [0.061106360972379245, 0.002317435815269539], 'false,true,true': [0.004557257517904428, 0.09639641990056562], 'true': [0.04205966677692086, 0.055074341688533375], 'true,true': [0.04831665278607673, 1.8904880957709702e-05]}, {'': [0.07354407221551044, 0.09966628002634202], 'false': [0.058171123823951065, 0.10024715010812718], 'true': [0.08105432774505869, 0.055965855677862296], 'false,true': [0.12355367263719672, 0.015421120617474627], 'false,true,true': [nan, 0.12355367263719672], 'true,false': [0.00032153376248805304, 0.1098170170986035], 'false,true,false': [0.000429249736404945, 0.010576603114648975], 'true,false,true': [0.0, 0.0002926070641534384]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then if ( phenotype(F, G), complex(F, E) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8248156017661785;  // std dev = 0.180, 90.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=87 */
%   | | else return -0.14185106490048846;  // std dev = 0.000, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.17769780727996462;  // std dev = 7.605, 266.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=85 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7243333900449558;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.7316740515987086;  // std dev = 0.124, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7147880150164405;  // std dev = 0.106, 88.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=87 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8218211723143737;  // std dev = 0.278, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.15683056297399092;  // std dev = 0.142, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.09827028038838705;  // std dev = 5.078, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
%   | | | else return 0.28619194251867625;  // std dev = 4.433, 81.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5934917138346322;  // std dev = 0.164, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | else return -0.1280091822339863;  // std dev = 0.466, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.5534402830407477;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.21901834483188468;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.552351678165218;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5138862714528533;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return -0.11231637819360611;  // std dev = 8.02e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.15664786890894533;  // std dev = 4.377, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
%   | | | else return 0.07839311429552366;  // std dev = 5.477, 153.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=42 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.39826623446185844;  // std dev = 0.199, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.3251046302773575;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.44269600388138014;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.17882831428291604;  // std dev = 0.191, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4747315896360315;  // std dev = 0.387, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.40064243880468187;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1006752900921258;  // std dev = 0.004, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.00927226325834585;  // std dev = 4.099, 177.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=40 */
%   | | | else return 0.08348236930206501;  // std dev = 7.657, 458.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=141 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.34135846014639926;  // std dev = 0.055, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.0022563545865257216;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.35434908769319007;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4105641086402465;  // std dev = 0.228, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else return -0.10540945729145669;  // std dev = 0.079, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.06278898834644682;  // std dev = 5.990, 223.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=64 */
%   | | | else return 0.3207189509664975;  // std dev = 1.252, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.05949684721726758;  // std dev = 1.814, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.17312609544803678;  // std dev = 3.966, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.27850059599533206;  // std dev = 0.037, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09738957908257653;  // std dev = 0.390, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.003538108734691267;  // std dev = 1.987, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.02335910235453472;  // std dev = 1.974, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.06108779466694494;  // std dev = 1.762, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.48882710111634925;  // std dev = 0.594, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1374924051257051;  // std dev = 0.072, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.15969762403706803;  // std dev = 3.707, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.0810665374338028;  // std dev = 5.608, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return 0.011418560763075247;  // std dev = 0.196, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.16635417538690378;  // std dev = 0.266, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.019395381893879377;  // std dev = 3.277, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | else return 0.05608129223175087;  // std dev = 6.281, 289.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=98 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.22177856320275977;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5149502232171823;  // std dev = 0.485, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.19139093378261807;  // std dev = 0.166, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.1122377183900535;  // std dev = 1.551, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.024485291885885163;  // std dev = 2.296, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.213089974199402;  // std dev = 0.000894, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.2141793183281907;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.22702982488228546;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.21182325031680227;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.001888909972601568;  // std dev = 0.192, 238.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=64 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, J), interaction(K, H) )
%   | | | then return 0.043781455546350254;  // std dev = 4.094, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.0012566054642551326;  // std dev = 4.235, 123.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=32 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.10351401018930687;  // std dev = 1.058, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.0508672795273328;  // std dev = 4.474, 134.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.18618381894001518;  // std dev = 0.026, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return 0.18787233574967652;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.315920045430401;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1709574643396765;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.23494734322827024;  // std dev = 0.148, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return -0.0570719994693582;  // std dev = 1.238, 65.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=8 */
%   | | | else return -0.002061976009569013;  // std dev = 2.701, 204.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=52 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03503537711119809;  // std dev = 7.203, 357.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=116 */
%   | | | else return -0.08259126676936887;  // std dev = 1.653, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.03916240642278253;  // std dev = 0.598, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.1567722950604918;  // std dev = 0.084, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.16163733793157448;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.1814588332797566;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23769363030803797;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4204743996351554;  // std dev = 1.782, 73.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=70 */
%   | | | else return -0.1531715104637002;  // std dev = 1.062, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.030304617800059573;  // std dev = 1.647, 92.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=17 */
%   | | | else return 0.002884055852648419;  // std dev = 6.279, 337.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=94 */


Results
   AUC ROC   = 0.97646
   AUC PR    = 0.296335
   CLL	      = -0.189535
   Precision = 0.335025 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.466431


Total learning time: 14.951 seconds
Total inference time: 4.555 seconds
AUC ROC: 0.97646


Results scoring model
   AUC ROC   = 0.967739
   AUC PR    = 0.361858
   CLL	      = -0.194361
   Precision = 0.278746 at threshold = 0.5
   Recall    = 0.707965
   F1        = 0.4


Total scoring time: 15.66 seconds
Refined model CLL: -0.194361


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.97646
   AUC PR    = 0.296335
   CLL	      = -0.189535
   Precision = 0.335025 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.466431


Total learning time: 53.629999999999995 seconds
Total inference time: 4.555 seconds
AUC ROC: 0.97646
Total revision time: 53.629999999999995
Best scored revision CLL: -0.194361


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:37:21
{'AUC ROC': 0.97646, 'AUC PR': 0.296335, 'CLL': -0.189535, 'Precision': [0.335025, 0.5], 'Recall': 0.767442, 'F1': 0.466431, 'Learning time': 53.629999999999995, 'Inference time': 4.555, 'parameter_0.8': {'AUC ROC': 0.954913, 'AUC PR': 0.302275, 'CLL': -0.195029, 'Precision': [0.310345, 0.5], 'Recall': 0.732558, 'F1': 0.435986, 'Learning time': 5.576, 'Inference time': 5.091}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8268989350995122;  // std dev = 0.984, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7418698653320703;  // std dev = 2.973, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return 0.7882188651694402;  // std dev = 3.050, 143.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=133 */
%   | | else return -0.1418510649004875;  // std dev = 1.79e-07, 478.000 (wgt'ed) examples reached here.  /* #neg=478 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17460463130204304;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6931650938927674;  // std dev = 0.988, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.6003456889840737;  // std dev = 1.327, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6451739955308368;  // std dev = 1.898, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | | else return 0.5955030572057771;  // std dev = 4.892, 199.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=171 */
%   | | else return -0.12544463852839238;  // std dev = 0.000, 534.000 (wgt'ed) examples reached here.  /* #neg=534 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8026978533937994;  // std dev = 0.197, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16416228887606593;  // std dev = 0.004, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.27985196675826973;  // std dev = 3.084, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.17111998811631232;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5900701201624846;  // std dev = 0.122, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5766651156070324;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6284438392688353;  // std dev = 0.264, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.12315083429020855;  // std dev = 0.490, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4347426977106029;  // std dev = 1.846, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5539890003482101;  // std dev = 2.909, 175.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=166 */
%   | | | else return -0.11231637819360653;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.12572197882326275;  // std dev = 3.478, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4128203809432523;  // std dev = 0.841, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.38623178637233824;  // std dev = 0.963, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.48450812976688495;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3913029846098055;  // std dev = 0.528, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4466577535619987;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.30563843611999253;  // std dev = 2.044, 49.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=38 */
%   | | | else return 0.03959657270842942;  // std dev = 6.440, 603.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=159 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.02229414099929002;  // std dev = 1.889, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | | else return 0.21209457813690977;  // std dev = 3.179, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.34488172194710454;  // std dev = 0.108, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.3129389262151778;  // std dev = 0.960, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3138703534187724;  // std dev = 2.635, 91.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=81 */
%   | | | else return 0.33482342528613024;  // std dev = 3.932, 146.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=128 */
%   | | else return -0.10511401407927012;  // std dev = 0.041, 510.000 (wgt'ed) examples reached here.  /* #neg=510 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3038957140226374;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2817194767076643;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.08687252054378677;  // std dev = 1.755, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.06071328297709966;  // std dev = 3.482, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.26182215193210107;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2928380844774875;  // std dev = 0.074, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19568567376687887;  // std dev = 1.344, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(G, A) )
%   | then return 0.016882099713144427;  // std dev = 6.649, 692.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=209 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.44143785582805845;  // std dev = 0.477, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14075836785113652;  // std dev = 0.005, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.03297117790082578;  // std dev = 3.520, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.20691961826814975;  // std dev = 2.025, 73.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=65 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.17162580009924266;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21382664682133526;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.028785966624345682;  // std dev = 4.592, 288.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=56 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.24022408105168258;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.2606169192659517;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then return 0.028532957602990214;  // std dev = 5.262, 453.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=139 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.0711444161967991;  // std dev = 0.630, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.011298581879552017;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.07369152510395957;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22555758289977756;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20900007949340355;  // std dev = 0.077, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(G, A) )
%   | then return 0.009369000515959753;  // std dev = 6.457, 709.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1616840616407468;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03660014995778153;  // std dev = 3.570, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03642968428931366;  // std dev = 0.645, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.7408763998090551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17219909866958918;  // std dev = 0.044, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.18629062195020157;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.12545720179757866;  // std dev = 0.857, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(E, G), interaction(A, F) )
%   | | | then return 0.18816066061052833;  // std dev = 0.371, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.16204930677585982;  // std dev = 0.601, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.24255689203491645;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.015488313074554047;  // std dev = 6.055, 672.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=197 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04855927832303038;  // std dev = 3.547, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
%   | | | else return 0.07528954077876641;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.11869653772336101;  // std dev = 0.986, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.1527428080696518;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.15651723613094842;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1627956558088311;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), complex(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20075043357690167;  // std dev = 0.341, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( complex(A, J), interaction(G, K) )
%   | | | then return 0.13352578477358457;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11823653306294435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.0021849099809156357;  // std dev = 7.208, 837.000 (wgt'ed) examples reached here.  /* #neg=612 #pos=225 */


Results
   AUC ROC   = 0.984974
   AUC PR    = 0.293839
   CLL	      = -0.164923
   Precision = 0.25 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.393035


Total learning time: 9.667 seconds
Total inference time: 5.062 seconds
AUC ROC: 0.984974


Results scoring model
   AUC ROC   = 0.978534
   AUC PR    = 0.242953
   CLL	      = -0.172569
   Precision = 0.125951 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.222036


Total scoring time: 26.346 seconds
Parameter learned model CLL: -0.172569


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.816, 1, 2], 'true,false': [0.984, 1, 31], 'false,true,true,true': [2.973, 10, 76], 'false,true,true,false': [3.05, 10, 133], 'false,true,false': [1.79e-07, 478, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.988, 1, 28], 'true,false': [1.327, 2, 14], 'false,true,true,true': [1.898, 4, 38], 'false,true,true,false': [4.892, 28, 171], 'false,true,false': [0.0, 534, 0], 'false,false,true,true': [0.197, 0, 14], 'false,false,true,false': [0.004, 30, 0], 'false,false,false,true': [3.084, 21, 17], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.122, 0, 35], 'true,true,false,true': [0.097, 0, 7], 'true,true,false,false': [0.264, 0, 33], 'true,false': [0.49, 159, 0], 'false,true': [1.846, 4, 24], 'false,false,true,true': [2.909, 9, 166], 'false,false,true,false': [0.0, 340, 0], 'false,false,false,true': [3.478, 36, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.841, 1, 26], 'true,false,true': [0.963, 1, 12], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.528, 1, 10], 'false,true,false': [0.075, 0, 6], 'false,false,true,true': [2.044, 11, 38], 'false,false,true,false': [6.44, 444, 159], 'false,false,false,true': [1.889, 35, 10], 'false,false,false,false': [3.179, 23, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), complex(A, L)'}, {'true,true': [0.108, 0, 26], 'true,false': [0.96, 1, 16], 'false,true,true,true': [2.635, 10, 81], 'false,true,true,false': [3.932, 18, 128], 'false,true,false': [0.041, 510, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.755, 21, 10], 'false,false,false,false': [3.482, 37, 18]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.065, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.074, 0, 9], 'true,false': [1.344, 2, 18], 'false,true': [6.649, 483, 209], 'false,false,true,true': [0.477, 0, 14], 'false,false,true,false': [0.005, 27, 0], 'false,false,false,true': [3.52, 40, 18], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true,true': [2.025, 8, 65], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.707, 1, 1], 'true,false': [4.592, 232, 56], 'false,true,true': [0.059, 0, 11], 'false,true,false': [0.019, 0, 6], 'false,false,true': [5.262, 314, 139], 'false,false,false,true': [0.63, 4, 3], 'false,false,false,false': [0.866, 3, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.938, 1, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.077, 0, 31], 'false,true': [6.457, 500, 209], 'false,false,true,true': [0.707, 1, 2], 'false,false,true,false': [3.57, 54, 26], 'false,false,false,true': [0.645, 5, 3], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'complex(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.044, 0, 22], 'true,true,false': [1.024, 2, 3], 'true,false': [0.857, 1, 17], 'false,true,true,true': [0.371, 1, 9], 'false,true,true,false': [0.601, 1, 1], 'false,true,false': [0.118, 0, 6], 'false,false,true': [6.055, 475, 197], 'false,false,false,true': [3.547, 52, 25], 'false,false,false,false': [0.912, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(G, K)'}, {'true,true': [0.986, 1, 25], 'true,false,true,true': [0.041, 0, 6], 'true,false,true,false': [0.034, 0, 6], 'true,false,false': [0.013, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.341, 1, 12], 'false,true,false,true': [0.029, 0, 3], 'false,true,false,false': [0.0, 0, 1], 'false,false': [7.208, 612, 225]}]]
[{'': [0.04338842975206727, 0.21049843750000222], 'false': [0.20822688451912705, 0.22569083130997944], 'false,false': [0.0, 0.21562933972983336], 'false,false,false': [0.21631148854350374, 0.20999999999999988], 'false,true': [0.07970862493088009, 6.689209855482115e-17], 'false,true,true': [0.10275824770146001, 0.06503985524965017], 'true': [0.07638888888888877, 0.03027343749999989], 'true,true': [-2.9605947323337506e-16, 0.22222222222222224]}, {'': [0.06279259476192701, 0.15857307348833571], 'false': [0.1497049317159757, 0.22968632627462196], 'false,false': [0.20368365400360144, 0.2490546300958862], 'false,false,false': [0.2503079066337615, 0.2222222222222222], 'false,false,true': [0.002771100988837435, 5.843663670882885e-07], 'false,true': [0.11462920464691229, -1.8628461237156186e-16], 'false,true,true': [0.08581543385794194, 0.12028053417122184], 'true': [0.033649435153330375, 0.11006239786583066]}, {'': [0.1172562916539753, 0.1306291600550734], 'false': [0.12164397714665744, 0.12628238654511448], 'false,false': [0.11602474715592812, 0.2239875809623936], 'false,false,false': [0.2239875809623936, nan], 'true': [0.0016752434453875273, 0.0015101001401655206], 'false,false,true': [0.048342563603247055, -4.179663151530001e-17], 'true,true': [0.0004238729098376938, 0.0023692236651233767], 'true,true,false': [0.001336199480458346, 0.002119168668116829]}, {'': [0.03782188430893138, 0.08713700784495985], 'false': [0.017401373144535087, 0.0860625561331594], 'false,false': [0.07492765721709316, 0.16798114939962033], 'false,false,false': [0.07933158071451267, 0.24642958129310732], 'false,false,true': [0.08523615782013523, 0.06877075865219207], 'true': [0.026198706317583326, 0.05627485943540888], 'true,false': [0.07131767381873745, 0.0], 'false,true': [0.025296706525040135, 0.0009439096977309491]}, {'': [0.021965718187981764, 0.08150738713163655], 'false': [0.07043290404520171, 0.17133722423360823], 'false,false': [9.220978152184311e-05, 0.17698747340439028], 'false,false,false': [0.09937834516627891, 0.22048413189215632], 'false,true': [0.0946399528996213, 3.277484161244652e-06], 'false,true,true': [0.0762799032824433, 0.10591497230011196], 'true': [0.0004461024208558283, 0.054261120617000974], 'false,false,true': [0.0, 0.0]}, {'': [0.04291680172429655, 0.07588648232852951], 'false': [0.06388455101535649, 0.15916574408455886], 'false,false': [0.08177591947457372, 0.21361207167506185], 'false,false,false': [0.21361207167506185, nan], 'false,false,true': [0.016272346116231327, 8.767502930205772e-07], 'true': [0.0006320494186895786, 0.09035971718601714], 'true,true': [0.00028433056024856164, 0.0006103383046371924], 'true,true,false': [nan, 0.00061033830463718]}, {'': [0.07973340071561408, 0.061621159095459045], 'true': [0.06053419874231294, 0.07322781942798699], 'false': [0.0003196522768878986, 0.062178386624793865], 'false,false': [0.061114551785049855, 0.10583325039333068], 'false,false,false': [0.05669495526626146, 0.18750000000000003], 'true,true': [0.05615430284272916, 0.1670624247697914], 'true,true,false': [0.0, 0.24999999999999997], 'false,true': [0.00031310550183454906, 6.256373577383696e-05]}, {'': [0.023910856433064637, 0.06991613525207711], 'false': [0.058801985437507205, 0.15422469639548136], 'false,false': [0.1600904522767602, 0.09524496977648253], 'false,false,true': [0.16675251203314276, 0.15927510750715204], 'false,false,false': [0.05201223822003715, 0.0], 'true': [0.0764654996874746, 0.00019053011317330643], 'true,true': [0.08791471637322908, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.051425303868469247, 0.06630220364971028], 'false': [0.0426745266076371, 0.0663555774848673], 'false,false': [0.05454927991087997, 0.15969841746080998], 'false,false,false': [0.1633602993385876, 0.11876275211854996], 'true': [0.058335619527623055, 0.04082827268013331], 'true,true': [8.687597068350972e-05, 0.2099142632010747], 'false,true': [0.0586103720444948, 0.0023256051745137916], 'false,true,true': [0.013733898112964094, 0.18078689065483577]}, {'': [0.023043763182792148, 0.06163268808743341], 'false': [0.007801836758540881, 0.06206774635048955], 'true': [0.03740383912545005, 0.00019270898656755536], 'false,true': [0.008934753497733752, 0.0002598738252441203], 'false,true,true': [nan, 0.008934753497733752], 'false,true,false': [0.00028805812919099893, 0.0], 'true,false': [0.00023936887205018575, 3.3658738683201014e-05], 'true,false,true': [0.0002737232261530026, 0.0001978913643524242]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), complex(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), complex(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
7;false;interaction(G, A).;true;true
7;false,false;interaction(A, H), interaction(H, I).;true;true
7;false,false,false;complex(A, J).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;complex(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.6790444574875724;  // std dev = 3.139, 67.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=55 */
%   | | | else return 0.8029342111731294;  // std dev = 2.916, 163.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=154 */
%   | | else return -0.14185106490048766;  // std dev = 4.21e-08, 492.000 (wgt'ed) examples reached here.  /* #neg=492 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12130682983635446;  // std dev = 2.714, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.2110901115701006;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.6944734122109549;  // std dev = 0.156, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5118725038838051;  // std dev = 3.141, 56.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=43 */
%   | | | else return 0.6375465907516201;  // std dev = 4.024, 184.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=166 */
%   | | else return -0.12544463852839235;  // std dev = 0.000, 501.000 (wgt'ed) examples reached here.  /* #neg=501 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7349787425698525;  // std dev = 1.072, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.1572685922506983;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.05269427176347692;  // std dev = 1.540, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.15654963324792606;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6084874917342697;  // std dev = 0.051, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.13092678144922923;  // std dev = 0.062, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.5615309469493336;  // std dev = 3.65e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22819761361600036;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5724140296163317;  // std dev = 0.022, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5353040853945916;  // std dev = 3.300, 178.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=166 */
%   | | | else return -0.11231637819360632;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.21091932996519566;  // std dev = 2.685, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.0681383697121723;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4133856718325343;  // std dev = 0.004, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.44068749332974966;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.13396929856732956;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4407853434090578;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I) )
%   | | then return 0.3834869676532225;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.4564188320440287;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1231862672355132;  // std dev = 0.070, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.052091010327194126;  // std dev = 6.948, 654.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=188 */
%   | | | else return 0.12182502172154308;  // std dev = 4.098, 107.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.2977500583369479;  // std dev = 0.180, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.0407484901527612;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3242769129758409;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.29877869672593776;  // std dev = 4.514, 163.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=137 */
%   | | | else return 0.3914066379060344;  // std dev = 1.892, 76.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=72 */
%   | | else return -0.1054953512256765;  // std dev = 0.006, 468.000 (wgt'ed) examples reached here.  /* #neg=468 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.30935354206277255;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.17148716558957702;  // std dev = 2.264, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.016232261829297916;  // std dev = 3.223, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22342549580985935;  // std dev = 0.205, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3071243710430548;  // std dev = 0.925, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.022812667311634942;  // std dev = 3.650, 220.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=46 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.23451141620310417;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.024592718030124788;  // std dev = 5.282, 482.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=145 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4518840502439441;  // std dev = 0.488, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.14620571330363974;  // std dev = 0.048, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.4083864880966277;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11810095665982116;  // std dev = 2.973, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2627665540037121;  // std dev = 0.208, 72.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=67 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.11139642976781702;  // std dev = 0.093, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.020800793108106144;  // std dev = 1.769, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.027629752159468727;  // std dev = 3.971, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1677668551152177;  // std dev = 0.219, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), complex(K, J) )
%   | | | then return -7.39501678614433E-4;  // std dev = 0.733, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.04596373136670513;  // std dev = 1.293, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.021248743570287627;  // std dev = 4.172, 252.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=77 */
%   | | | else return 0.06452542503917359;  // std dev = 2.932, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.1811532216260421;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.11833244855760805;  // std dev = 0.254, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.026690609924835854;  // std dev = 0.212, 133.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=29 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.011848439052839714;  // std dev = 4.876, 404.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=115 */
%   | | | else return 0.026727482751843678;  // std dev = 2.981, 210.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=65 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.03285845484526474;  // std dev = 2.938, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | else return 0.26404677037610513;  // std dev = 1.686, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.05247576198562653;  // std dev = 0.680, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.10006932926032337;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.13018069677194288;  // std dev = 0.193, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.12705153673212788;  // std dev = 0.213, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.15479106832736517;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.325580654072012;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.22455109198276668;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return -0.06577544644008582;  // std dev = 1.932, 95.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=12 */
%   | | | else return 0.0010737573648973292;  // std dev = 1.827, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.00429055405682441;  // std dev = 3.430, 254.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=64 */
%   | | | else return 0.028788321472014277;  // std dev = 5.653, 393.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=127 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.11576433608797046;  // std dev = 0.178, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.10478752718410372;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.22651397208296833;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19557873898529038;  // std dev = 0.181, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.13713823461687663;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.16687079365652785;  // std dev = 5.376, 347.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=214 */
%   | | | else return -0.11989638040764074;  // std dev = 1.585, 429.000 (wgt'ed) examples reached here.  /* #neg=429 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.09964572235756547;  // std dev = 1.607, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.008742575080904343;  // std dev = 0.982, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */


Results
   AUC ROC   = 0.987988
   AUC PR    = 0.344894
   CLL	      = -0.155713
   Precision = 0.252396 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.39599


Total learning time: 22.557 seconds
Total inference time: 6.37 seconds
AUC ROC: 0.987988


Results scoring model
   AUC ROC   = 0.984941
   AUC PR    = 0.267528
   CLL	      = -0.16764
   Precision = 0.130413 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.228942


Total scoring time: 41.334 seconds
Refined model CLL: -0.16764


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987988
   AUC PR    = 0.344894
   CLL	      = -0.155713
   Precision = 0.252396 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.39599


Total learning time: 99.904 seconds
Total inference time: 6.37 seconds
AUC ROC: 0.987988
Total revision time: 99.904
Best scored revision CLL: -0.16764


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 04:39:13
{'AUC ROC': 0.987988, 'AUC PR': 0.344894, 'CLL': -0.155713, 'Precision': [0.252396, 0.5], 'Recall': 0.918605, 'F1': 0.39599, 'Learning time': 99.904, 'Inference time': 6.37, 'parameter_1.0': {'AUC ROC': 0.984974, 'AUC PR': 0.293839, 'CLL': -0.164923, 'Precision': [0.25, 0.5], 'Recall': 0.918605, 'F1': 0.393035, 'Learning time': 9.667, 'Inference time': 5.062}}


Starting fold 1

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos	 examples: 87
Target test neg examples: 11565

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8434559695824628;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1574002509347231;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03772170028478923;  // std dev = 2.538, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.1460246311340201;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6595504925393979;  // std dev = 0.212, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.12339389245483995;  // std dev = 0.088, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462843;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04730054764190982;  // std dev = 2.940, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4150037088145687;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return -0.58248641584169;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3433550250660033;  // std dev = 0.481, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.028214200577585086;  // std dev = 1.919, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08237170153468425;  // std dev = 1.573, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.02466614194509174;  // std dev = 2.972, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3166929949669397;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32112212466301565;  // std dev = 0.000670, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.24692876675705927;  // std dev = 1.439, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.2764695667476164;  // std dev = 0.928, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.10477391687504763;  // std dev = 0.046, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.11779160873572721;  // std dev = 1.463, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.03648765098439585;  // std dev = 2.942, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2559089257558851;  // std dev = 0.000924, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.255852687445925;  // std dev = 0.000689, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.03288752501702733;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, G) )
%   | then return 0.019187156513102495;  // std dev = 1.856, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4952613270015446;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.14639252719719886;  // std dev = 0.005, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.007205559407234122;  // std dev = 2.985, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.18378862646917624;  // std dev = 0.790, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( complex(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.17882647525413836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.025269534440194297;  // std dev = 3.099, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return -0.26406882217302036;  // std dev = 0.670, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return -0.23860622967210598;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.01783262018848639;  // std dev = 1.206, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.12606422602408413;  // std dev = 0.505, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.1421085318618667;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1817727186434155;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1811232372328504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.23467577763707875;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G) )
%   | then return 0.015143729895577907;  // std dev = 1.829, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04526788439387511;  // std dev = 2.672, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.001023408104247384;  // std dev = 0.587, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08582871618954614;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17353025750328713;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.18459509866032237;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19760397892709045;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.22872040158975637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.14096815332615528;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.0034473840944371495;  // std dev = 1.825, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.027679491641266752;  // std dev = 2.695, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return -0.026806145521807215;  // std dev = 1.679, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15248332492310931;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1285329126076828;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1882954941645637;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.19088482328778122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.7454674023539555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02325183545969266;  // std dev = 3.613, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */


Results
   AUC ROC   = 0.944346
   AUC PR    = 0.322332
   CLL	      = -0.167984
   Precision = 0.327778 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.441948


Total learning time: 2.923 seconds
Total inference time: 9.053 seconds
AUC ROC: 0.944346


Results scoring model
   AUC ROC   = 0.96375
   AUC PR    = 0.412681
   CLL	      = -0.170178
   Precision = 0.294118 at threshold = 0.5
   Recall    = 0.803571
   F1        = 0.430622


Total scoring time: 4.738 seconds
Parameter learned model CLL: -0.170178


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 10], 'false,true,true,true': [0.0, 0, 11], 'false,true,true,false': [0.0, 0, 13], 'false,true,false': [5.96e-08, 57, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.21, 39, 14], 'false,false,false,false': [1.952, 16, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 7], 'false,true,true,true': [2.11e-08, 0, 6], 'false,true,true,false': [7.3e-08, 0, 18], 'false,true,false': [0.0, 60, 0], 'false,false,true,true': [0.004, 0, 8], 'false,false,true,false': [0.0, 20, 0], 'false,false,false,true': [2.538, 33, 8], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.0, 0, 12], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.212, 0, 11], 'true,false': [0.088, 50, 0], 'false,true': [1.49e-08, 0, 4], 'false,false,true,true': [0.0, 0, 18], 'false,false,true,false': [0.0, 40, 0], 'false,false,false,true': [2.94, 41, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.024, 0, 10], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.481, 1, 6], 'false,false,true,false': [1.919, 47, 17], 'false,false,false,true': [1.573, 18, 8], 'false,false,false,false': [2.972, 45, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), complex(A, K)'}, {'true,true': [0.02, 0, 5], 'true,false': [0.00067, 0, 8], 'false,true,true,true': [1.439, 3, 17], 'false,true,true,false': [0.928, 1, 7], 'false,true,false': [0.046, 60, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.463, 13, 8], 'false,false,false,false': [2.942, 41, 11]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.000924, 0, 5], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000689, 0, 3], 'true,false': [1.191, 2, 5], 'false,true': [1.856, 61, 24], 'false,false,true,true': [0.008, 0, 8], 'false,false,true,false': [0.005, 16, 0], 'false,false,false,true': [2.985, 48, 11], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.79, 1, 11], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [3.099, 80, 30], 'false,true,true': [0.67, 1, 1], 'false,true,false': [0.707, 1, 1], 'false,false,true': [1.206, 17, 8], 'false,false,false,true': [0.505, 2, 2], 'false,false,false,false': [1.414, 6, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 2], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.112, 0, 10], 'false,true': [1.829, 57, 24], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.672, 38, 14], 'false,false,false,true': [0.587, 5, 2], 'false,false,false,false': [1.449, 7, 3]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.048, 0, 5], 'true,true,false': [0.02, 0, 2], 'true,false': [0.095, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.825, 70, 23], 'false,false,false,true': [2.695, 40, 14], 'false,false,false,false': [1.679, 16, 5]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)'}, {'true,true': [0.048, 0, 7], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.004, 0, 2], 'true,false,false': [0.047, 0, 4], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 1, 0], 'false,true,false': [0.0, 0, 0], 'false,false': [3.613, 105, 42]}]]
[{'': [-2.7328566760003855e-16, 0.20045785639958405], 'false': [0.2085048010973947, 0.19083272461650785], 'false,true': [4.440892098500626e-16, 6.232831015439475e-17], 'false,false': [nan, 0.19083272461650785], 'false,false,false': [0.19437522249910946, 0.1814058956916098], 'false,true,true': [-1.6148698540002277e-16, -2.7328566760003855e-16], 'true': [1.4802973661668753e-16, -8.881784197001253e-17], 'true,true': [0.0, 0.0]}, {'': [1.3664283380001927e-16, 0.16396072132032183], 'false': [0.1456911249928924, 0.18284783550456232], 'false,false': [0.20443188841325646, 0.16928079549517747], 'false,false,true': [2.1993407219866867e-06, -1.9428902930940238e-17], 'false,false,false': [0.15704937537180255, 0.2100000000000001], 'false,true': [1.4802973661668753e-16, -4.070817756958907e-17], 'false,true,true': [7.401486830834377e-17, 2.9605947323337506e-16], 'true': [7.401486830834377e-17, -6.344131569286608e-17]}, {'': [0.11612979164101453, 0.1328102681368899], 'false': [5.551115123125783e-17, 0.12945515833151575], 'false,false': [0.09541505522697964, 0.16622854404544024], 'false,false,false': [0.16622854404544024, nan], 'true': [0.0046571005611624776, 0.00015635720769427541], 'false,false,true': [-2.4671622769447924e-16, -5.551115123125783e-18], 'true,true': [-2.220446049250313e-16, 0.004074451736350197], 'true,true,false': [nan, 0.004074451736350197]}, {'': [0.06611220311040127, 0.10421413086520698], 'false': [0.0, 0.104020776718567], 'false,false': [0.06395316759926847, 0.13858984471741345], 'false,false,false': [0.09519788802005785, 0.15768027835377518], 'true': [5.669526817015935e-05, 0.1875], 'true,false': [0.0, -3.700743415417188e-17], 'false,false,true': [0.03299695131988283, 0.0575475083349012], 'false,true': [0.0, nan]}, {'': [3.48752070776354e-05, 0.10194011455616579], 'false': [0.0615420842489191, 0.14926939893942415], 'false,false': [nan, 0.14926939893942415], 'false,false,false': [0.1018893844680675, 0.16650203275194386], 'false,true': [0.10490761355875608, 3.57272167754071e-05], 'false,true,true': [0.10355427875331939, 0.10766762281228924], 'true': [7.851364682649464e-05, 5.610920976450995e-08]}, {'': [0.11529571503275156, 0.08697921460883731], 'true': [1.6678551308102474e-07, 0.20258674423044118], 'false': [0.040530275099528466, 0.1345323740208052], 'false,false': [0.09149697567273596, 0.15098736888079478], 'false,false,false': [0.15098736888079478, nan], 'false,false,true': [7.95501603079174e-06, 1.5964650542758807e-06], 'true,true': [1.7078836540562746e-07, 1.5813737536118921e-07], 'true,true,false': [nan, 1.5813737536118921e-07]}, {'': [0.08576024709532155, 0.1221654253583037], 'false': [0.23752499271893882, 0.10087012600606629], 'false,true': [0.2247258136294438, 0.25], 'false,false': [0.05820238895910576, 0.17355383149539028], 'false,false,false': [0.06387173868706855, 0.22222222222222227], 'true': [0.057321410267954835, 0.08731778840149682], 'true,true': [0.05198360122635034, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0014666692529561919, 0.08665010869302286], 'false': [0.04131172928433634, 0.1393441774612814], 'false,false': [0.13729122359448698, 0.14560645065083705], 'false,false,false': [0.04917843557552763, 0.20999999999999996], 'false,false,true': [nan, 0.13729122359448698], 'true': [9.373913392729527e-08, 0.0012554833941706644], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.0010192327763811583, 0.079653690962564], 'false': [0.03416740690895376, 0.0801761458773707], 'false,false': [0.0358079032572763, 0.13505333017550422], 'false,false,false': [0.13453004996485055, 0.13426145490695301], 'false,true': [0.03416740690895376, nan], 'false,true,true': [0.0, 0.0], 'true': [0.00041282050937982033, 0.0014912305827415918], 'true,true': [0.00046603906049026976, 0.0001923236245819776]}, {'': [0.00077420729026144, 0.09172818104876812], 'false': [0.21918887261605846, 0.08878159016800746], 'false,true': [0.21918887261605846, nan], 'false,true,true': [0.0, 0.0], 'true': [0.00032274427382931813, 0.0011649344619659395], 'true,false': [8.992760414383572e-06, 0.0005523832612941079], 'true,false,true': [nan, 8.992760414383572e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;complex(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, G), complex(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995121;  // std dev = 1.83e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.12229987849573874;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7270394937301327;  // std dev = 0.008, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7656457885313253;  // std dev = 0.169, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.13822688349092405;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.06140696088200665;  // std dev = 2.496, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.44899087154654327;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5732151641446642;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.5458424855546619;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.657647799601063;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.11469664023765848;  // std dev = 0.008, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.46169398573138337;  // std dev = 1.324, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.13625556984833537;  // std dev = 2.015, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.007628440612104793;  // std dev = 2.024, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.11387582248362435;  // std dev = 0.826, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.46814249195998164;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4142629021498902;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.411346065922206;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, H), complex(H, J) )
%   | | | then return 0.1004703020271857;  // std dev = 0.921, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.09208700045880097;  // std dev = 0.614, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.029649156005398917;  // std dev = 1.170, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.1123369801840706;  // std dev = 3.366, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.22545962848589282;  // std dev = 0.743, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.33738663409182507;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.38128985589717657;  // std dev = 0.166, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.10431517169423779;  // std dev = 0.009, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.590862297707309;  // std dev = 1.051, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.16836155237493217;  // std dev = 0.185, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.14203223129051937;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.02319062857193932;  // std dev = 1.901, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2793020712538817;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.23374783320827755;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3151850035032869;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then return -0.012143601810405823;  // std dev = 0.159, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else return 0.06706431372997707;  // std dev = 0.211, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35327849329705835;  // std dev = 0.253, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10807619375738804;  // std dev = 0.045, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.06541729896538975;  // std dev = 1.211, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.1542127475876684;  // std dev = 2.153, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.29469328868153755;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22805195774720696;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.09775752690810474;  // std dev = 0.045, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.030570369170677413;  // std dev = 2.536, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(G, H) )
%   | | then return 0.030450953853864853;  // std dev = 0.188, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.32958219777651915;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4286279860860667;  // std dev = 0.321, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19288008913843202;  // std dev = 0.344, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.07829485740154665;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.19701854296795174;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.22435763555904004;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19274063796035112;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.26130472800641513;  // std dev = 1.417, 32.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=26 */
%   | | | else return 0.06562950132224663;  // std dev = 2.145, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.09817986451868017;  // std dev = 0.086, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return -0.17292825646093835;  // std dev = 0.366, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.04312412102808542;  // std dev = 0.317, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1770292830917839;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16512708991953273;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.17436346181446494;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1821166093947295;  // std dev = 0.098, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, A) )
%   | | then return 0.15513332443500405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.18934132235427886;  // std dev = 1.512, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return -0.1224312794364848;  // std dev = 0.449, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.016983441705773605;  // std dev = 1.633, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.1456681354110264;  // std dev = 1.094, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14568287504128236;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return 0.12674256189791983;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17180812722958652;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F), complex(A, H) )
%   | | then return -0.28579796696045295;  // std dev = 0.596, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( phenotype(K, J), interaction(K, K) )
%   | | | then return -0.052820904911783595;  // std dev = 0.765, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.034177787157629626;  // std dev = 0.334, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.03916201811713646;  // std dev = 1.674, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return -0.011595803280013162;  // std dev = 2.105, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */


Results
   AUC ROC   = 0.986008
   AUC PR    = 0.49979
   CLL	      = -0.14347
   Precision = 0.337143 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.450382


Total learning time: 12.295 seconds
Total inference time: 14.009 seconds
AUC ROC: 0.986008


Results scoring model
   AUC ROC   = 0.993669
   AUC PR    = 0.470177
   CLL	      = -0.15059
   Precision = 0.306667 at threshold = 0.5
   Recall    = 0.821429
   F1        = 0.446602


Total scoring time: 12.006 seconds
Refined model CLL: -0.15059


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.986008
   AUC PR    = 0.49979
   CLL	      = -0.14347
   Precision = 0.337143 at threshold = 0.5
   Recall    = 0.678161
   F1        = 0.450382


Total learning time: 31.962 seconds
Total inference time: 14.009 seconds
AUC ROC: 0.986008
Total revision time: 31.962
Best scored revision CLL: -0.15059


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:40:09
{'AUC ROC': 0.986008, 'AUC PR': 0.49979, 'CLL': -0.14347, 'Precision': [0.337143, 0.5], 'Recall': 0.678161, 'F1': 0.450382, 'Learning time': 31.962, 'Inference time': 14.009, 'parameter_0.2': {'AUC ROC': 0.944346, 'AUC PR': 0.322332, 'CLL': -0.167984, 'Precision': [0.327778, 0.5], 'Recall': 0.678161, 'F1': 0.441948, 'Learning time': 2.923, 'Inference time': 9.053}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8025933795439566;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.8211118980624748;  // std dev = 0.981, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08955389377719739;  // std dev = 4.639, 121.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=28 */
%   | | | else return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7387824531256607;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.5638817171632698;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7278907785653168;  // std dev = 0.002, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.7273006357373664;  // std dev = 0.003, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.1254446385283913;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8348956839410083;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.15478581379040862;  // std dev = 0.021, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1880102817464511;  // std dev = 3.738, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.18737441441617922;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5773643756411282;  // std dev = 0.085, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5653318814140782;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6487486476948271;  // std dev = 0.296, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.12022516457094415;  // std dev = 0.091, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4965255150585071;  // std dev = 0.936, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5319381957529788;  // std dev = 0.983, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11231637819360628;  // std dev = 5.16e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.07797350170989266;  // std dev = 4.561, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3894708224482229;  // std dev = 0.938, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2016664600326592;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.48425505445597783;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4728781496288694;  // std dev = 0.221, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4080116862855659;  // std dev = 0.624, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39277713951248266;  // std dev = 0.510, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.0025168489527706292;  // std dev = 2.723, 148.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=31 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.043062928863719645;  // std dev = 2.029, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.06163011723887165;  // std dev = 4.398, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3716643467706903;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.28326192873774625;  // std dev = 0.824, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.30653237797469135;  // std dev = 1.423, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | | else return 0.40926350856488314;  // std dev = 0.157, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.10255222897184617;  // std dev = 0.071, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.28267024254508566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5612355028446993;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.040627438377367105;  // std dev = 2.003, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.07914814235002336;  // std dev = 4.318, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2851352558103015;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.29050304486214695;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2847723873777333;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2998639459082131;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then return 0.009033838452566617;  // std dev = 2.826, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5080039437440487;  // std dev = 0.292, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.131671965507048;  // std dev = 0.020, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05754179891457459;  // std dev = 4.421, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.1938969305681834;  // std dev = 1.053, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.151622884147118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4131589274916816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.040165957631617066;  // std dev = 4.262, 195.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=53 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.24310519929583066;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.24409069576291376;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then return 0.017649038174198876;  // std dev = 1.432, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04867637573899289;  // std dev = 0.730, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.08225696117838838;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19553105951331862;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1786240163994851;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21144567776141418;  // std dev = 0.046, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G) )
%   | then return 0.013816608249774128;  // std dev = 2.424, 163.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=48 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22544613313590406;  // std dev = 0.131, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.005361142296718682;  // std dev = 4.137, 121.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=30 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.08979480374143188;  // std dev = 0.667, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.021949482753626494;  // std dev = 2.367, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1704970692260342;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.18321077405705363;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.17752177719700116;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.1718039333759295;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3866738517055237;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.33658570530967574;  // std dev = 0.093, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return 0.007936932466237445;  // std dev = 2.399, 166.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=46 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03217317935738141;  // std dev = 3.975, 101.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=28 */
%   | | | else return 0.022001068854606908;  // std dev = 2.383, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1499523701880691;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.14600186956561734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14980933699259283;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1564767302077387;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.18327287347018417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17016795795433448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.09357018666167527;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2780623894533782;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.008827187996859404;  // std dev = 5.324, 352.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=84 */


Results
   AUC ROC   = 0.94186
   AUC PR    = 0.307013
   CLL	      = -0.18163
   Precision = 0.29703 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.415225


Total learning time: 3.7 seconds
Total inference time: 8.618 seconds
AUC ROC: 0.94186


Results scoring model
   AUC ROC   = 0.955637
   AUC PR    = 0.241959
   CLL	      = -0.184214
   Precision = 0.266254 at threshold = 0.5
   Recall    = 0.767857
   F1        = 0.395402


Total scoring time: 8.058 seconds
Parameter learned model CLL: -0.184214


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.972, 1, 17], 'false,true,true,true': [0.978, 1, 22], 'false,true,true,false': [0.981, 1, 26], 'false,true,false': [8.94e-08, 101, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [4.639, 93, 28], 'false,false,false,false': [2.64, 23, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.048, 0, 12], 'true,false': [1.291, 2, 10], 'false,true,true,true': [0.002, 0, 14], 'false,true,true,false': [0.003, 0, 34], 'false,true,false': [0.0, 117, 0], 'false,false,true,true': [0.121, 0, 13], 'false,false,true,false': [0.021, 34, 0], 'false,false,false,true': [3.738, 41, 22], 'false,false,false,false': [2.133, 13, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.085, 0, 19], 'true,true,false,true': [0.057, 0, 3], 'true,true,false,false': [0.296, 0, 20], 'true,false': [0.091, 71, 0], 'false,true': [0.936, 1, 10], 'false,false,true,true': [0.983, 1, 31], 'false,false,true,false': [5.16e-08, 71, 0], 'false,false,false,true': [4.561, 81, 29], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [0.938, 1, 15], 'true,false,true': [0.828, 1, 3], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.221, 0, 4], 'false,true,false': [0.624, 1, 2], 'false,false,true,true': [0.51, 1, 15], 'false,false,true,false': [2.723, 117, 31], 'false,false,false,true': [2.029, 37, 12], 'false,false,false,false': [4.398, 76, 26]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.044, 0, 11], 'true,false': [0.824, 1, 11], 'false,true,true,true': [1.423, 3, 31], 'false,true,true,false': [0.157, 0, 17], 'false,true,false': [0.071, 130, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.013, 0, 3], 'false,false,false,true': [2.003, 36, 12], 'false,false,false,false': [4.318, 66, 26]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.044, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.033, 0, 3], 'true,false': [0.034, 0, 9], 'false,true': [2.826, 115, 48], 'false,false,true,true': [0.292, 0, 13], 'false,false,true,false': [0.02, 33, 0], 'false,false,false,true': [4.421, 73, 29], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.053, 3, 26], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 1], 'true,false': [4.262, 142, 53], 'false,true,true': [0.027, 0, 3], 'false,true,false': [0.0, 0, 2], 'false,false,true': [1.432, 44, 16], 'false,false,false,true': [0.73, 6, 3], 'false,false,false,false': [2.185, 15, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.046, 0, 17], 'false,true': [2.424, 115, 48], 'false,false,true,true': [0.131, 0, 2], 'false,false,true,false': [4.137, 91, 30], 'false,false,false,true': [0.667, 4, 3], 'false,false,false,false': [2.367, 22, 7]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.023, 0, 10], 'true,true,false': [0.01, 0, 3], 'true,false': [0.038, 0, 9], 'false,true,true,true': [0.077, 0, 3], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.093, 0, 2], 'false,false,true': [2.399, 120, 46], 'false,false,false,true': [3.975, 73, 28], 'false,false,false,false': [2.383, 24, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.027, 0, 13], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.022, 0, 3], 'true,false,false': [0.023, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.085, 0, 3], 'false,false': [5.324, 268, 84]}]]
[{'': [0.07638888888888928, 0.20642850410029326], 'false': [0.21683259506162092, 0.1951610318859169], 'false,true': [0.0384000000000006, 7.91446116564468e-17], 'false,false': [0.0, 0.18586608196997936], 'false,false,false': [0.1778567037770655, 0.21120293847566585], 'true': [0.1388888888888887, 0.05246913580246915], 'true,true': [0.15999999999999986, 0.0], 'false,true,true': [0.04158790170132359, 0.035665294924555065]}, {'': [0.07718899750365771, 0.17887036108701443], 'false': [0.1500629568000602, 0.21452657453937832], 'false,false': [0.19630351358150877, 0.22312929928143108], 'false,false,false': [0.22174167781553433, 0.2275000000000001], 'false,false,true': [0.0011258768518823596, 1.3170433237044536e-05], 'false,true': [4.0475886087243396e-07, -3.795634272222758e-18], 'true': [0.00019397239833374158, 0.13888888888888895], 'false,true,true': [2.744989443367477e-07, 3.5681696802465226e-07]}, {'': [0.12613670475067026, 0.14996505726196996], 'false': [0.07958517301897369, 0.14519184565491383], 'false,false': [0.09827599215340863, 0.18907506690862474], 'false,false,false': [0.18907506690862474, nan], 'true': [0.0036758883227066314, 0.0001169785872849507], 'false,false,true': [0.030213802368755593, 3.752866562113205e-17], 'true,true': [0.0003834073823182524, 0.004739727160899166], 'true,true,false': [0.0010705333112135396, 0.004382494469212262]}, {'': [0.07239318605119481, 0.10835061689997393], 'false': [0.06365842130457068, 0.10591248609704879], 'false,false': [0.060195875529712485, 0.15544760249413075], 'false,false,false': [0.0840338336728112, 0.18964234749926756], 'true': [0.05499675073847432, 0.10574393256645505], 'true,false': [0.17155970828383654, 0.0], 'false,true': [0.01221133160173754, 0.1298501648702521], 'false,false,true': [0.01627541126768467, 0.05008519535145604]}, {'': [0.03153398167148226, 0.1017992946027277], 'false': [0.051786712027372776, 0.16295296878934123], 'false,false': [0.014592365691371983, 0.16215904874876425], 'false,false,false': [0.08359544826681796, 0.2026400066161952], 'false,true': [0.042531253345199485, 3.902653806396103e-05], 'false,true,true': [0.059557707384508, 0.0014425551383564037], 'true': [0.00017402285896833176, 0.05654300785883223], 'false,false,true': [0.0, 5.683652704816892e-05]}, {'': [0.0002446994875385598, 0.10161426584158555], 'false': [0.04899607938115917, 0.1584618365444797], 'false,false': [0.08481568169739978, 0.19165269024713064], 'false,false,false': [0.19165269024713064, nan], 'false,false,true': [0.006541757618173063, 1.1548793236817254e-05], 'true': [0.00023929065625899042, 0.00012998946730818299], 'true,true': [0.0002196473354010421, 0.0002826958074085839], 'true,true,false': [0.0, 0.00036871763441053324]}, {'': [0.08850018740174224, 0.07946937158698174], 'true': [0.03734443771775641, 0.09314566156070085], 'false': [0.00014219150533195668, 0.08159278977829101], 'false,false': [0.03418859848912616, 0.17135856540467226], 'false,false,false': [0.05913175651287084, 0.21694214876033052], 'true,true': [0.0382353491815579, 0.01710027549208236], 'true,true,false': [0.0, 0.0], 'false,true': [0.00023659736090525518, 0.0]}, {'': [0.0001719397060358255, 0.09076607211288484], 'false': [0.03605825606995897, 0.1468257265546496], 'false,false': [0.14002747302672464, 0.16998816784492257], 'false,false,false': [0.06361185126997783, 0.19323722369486063], 'false,false,true': [0.008522029615429895, 0.14141351666755977], 'true': [4.573569709648284e-05, 0.00012443656560333442], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.00011609091612225685, 0.09019691931661727], 'false': [0.010943599221903142, 0.09060469522932525], 'false,false': [0.0346575851583672, 0.15913983877769955], 'false,false,false': [0.1564402874660008, 0.16708168188524908], 'false,true': [0.010153262099254108, 0.004300755443530743], 'false,true,true': [0.001995412348263855, 0.0], 'true': [7.791164411125894e-05, 0.00016135021543008574], 'true,true': [5.394302567766074e-05, 3.346989232820563e-05]}, {'': [8.7195330436077e-05, 0.08009608541968613], 'false': [0.006162134146359364, 0.08052765171108901], 'false,true': [4.293470266939284e-05, 0.00820535738085431], 'false,true,false': [0.0, 0.002431133285072042], 'true': [5.548295063144522e-05, 0.00012718331107993634], 'true,false': [0.00012147865764227522, 0.000105945645366462], 'true,false,true': [0.0, 0.00015834734147116003], 'false,true,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;complex(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(F, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6914822684328454;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8368723393548309;  // std dev = 0.989, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0803711573217337;  // std dev = 4.667, 126.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=28 */
%   | | | else return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7248699547628291;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7291871888043289;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7298185461231391;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6976045364903642;  // std dev = 0.992, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | else return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8307094739996862;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16137116700861734;  // std dev = 0.072, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09091397777051281;  // std dev = 4.409, 104.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5280090218116663;  // std dev = 0.149, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.6359590541671097;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.13045853254751294;  // std dev = 0.050, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H), interaction(I, A) )
%   | | then return 0.23392617518458003;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.578825816041022;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5335045448908738;  // std dev = 0.983, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6159463602843244;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11685973799410232;  // std dev = 4.295, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3946284896757801;  // std dev = 0.174, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( phenotype(D, G), interaction(A, D) )
%   | | | then return -0.10065690739235104;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.20699016185034638;  // std dev = 0.900, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( phenotype(D, H), complex(D, I) )
%   | | | then return 0.016833481943079785;  // std dev = 0.996, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.11659091884359242;  // std dev = 0.971, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( complex(A, L), interaction(M, J) )
%   | | | then return 0.14763214490251786;  // std dev = 1.913, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.027868216368106255;  // std dev = 3.333, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | else if ( phenotype(A, N), complex(A, P) )
%   | | | then return 0.014708498780578024;  // std dev = 1.171, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.19540033507379098;  // std dev = 3.337, 75.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3362916389403557;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.34088983450328314;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.39807750023970784;  // std dev = 0.169, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.3982916038179372;  // std dev = 0.119, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.11079399114910117;  // std dev = 0.011, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3379485497359468;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.416059930642758;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.05506134935900656;  // std dev = 2.996, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.15854896448895317;  // std dev = 3.406, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2637662765099967;  // std dev = 0.012, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( phenotype(A, E), location(A, F) )
%   | | then if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.2733553167246529;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.4279553140113069;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.27080110720850625;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, I) )
%   | then return 0.0123661328580834;  // std dev = 0.198, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.47615063191289353;  // std dev = 0.223, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14240603682304687;  // std dev = 0.061, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.02986416523030191;  // std dev = 2.261, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.06382169395073241;  // std dev = 3.810, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.183644890248712;  // std dev = 0.263, 29.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=26 */
%   | | else return 0.2553484864268599;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.11859375963474757;  // std dev = 0.101, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.006104411083428212;  // std dev = 1.638, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.043545596330894984;  // std dev = 3.959, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2605883295687881;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then return 0.008393788767875365;  // std dev = 0.184, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.0011291279942763429;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.20879475840711556;  // std dev = 1.449, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1993589539793119;  // std dev = 0.030, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), location(E, G) )
%   | | then if ( complex(A, H), phenotype(E, I) )
%   | | | then return 0.014804477183502186;  // std dev = 0.975, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.09919038783392298;  // std dev = 0.917, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( function(A, J), function(E, J) )
%   | | | then return 0.01172814574627438;  // std dev = 2.297, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.10623406715849774;  // std dev = 1.924, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( interaction(A, K) )
%   | | then if ( complex(K, L), enzyme(K, M) )
%   | | | then return -0.02804188656071649;  // std dev = 0.750, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.031058636121231935;  // std dev = 1.496, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.04029552757430112;  // std dev = 2.366, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.1827259419882825;  // std dev = 2.283, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1691383903920466;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1702324930105166;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.28169510045143337;  // std dev = 0.169, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2943968235272011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.04300199688671532;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, H), enzyme(H, J) )
%   | | | then return -0.033336235677846195;  // std dev = 0.460, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.03822736256442303;  // std dev = 1.894, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.08303264764521327;  // std dev = 1.134, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.02347766447875713;  // std dev = 4.541, 161.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14671655797939304;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14772467751518642;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.28940352797546204;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, G), interaction(H, E) )
%   | | | then return -0.16284870717102803;  // std dev = 0.390, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.28080623809225075;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return 0.01742691468972098;  // std dev = 1.042, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.10294366115807131;  // std dev = 1.030, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.010177840325347751;  // std dev = 1.917, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.09439264663328237;  // std dev = 4.152, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */


Results
   AUC ROC   = 0.941102
   AUC PR    = 0.285441
   CLL	      = -0.195939
   Precision = 0.320856 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.437956


Total learning time: 9.1 seconds
Total inference time: 8.997 seconds
AUC ROC: 0.941102


Results scoring model
   AUC ROC   = 0.96466
   AUC PR    = 0.31459
   CLL	      = -0.194751
   Precision = 0.264615 at threshold = 0.5
   Recall    = 0.767857
   F1        = 0.393593


Total scoring time: 7.903 seconds
Refined model CLL: -0.194751


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.94186
   AUC PR    = 0.307013
   CLL	      = -0.18163
   Precision = 0.29703 at threshold = 0.5
   Recall    = 0.689655
   F1        = 0.415225


Total learning time: 28.760999999999996 seconds
Total inference time: 8.618 seconds
AUC ROC: 0.94186
Total revision time: 28.760999999999996
Best scored revision CLL: -0.184214


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:40:56
{'AUC ROC': 0.94186, 'AUC PR': 0.307013, 'CLL': -0.18163, 'Precision': [0.29703, 0.5], 'Recall': 0.689655, 'F1': 0.415225, 'Learning time': 28.760999999999996, 'Inference time': 8.618, 'parameter_0.4': {'AUC ROC': 0.94186, 'AUC PR': 0.307013, 'CLL': -0.18163, 'Precision': [0.29703, 0.5], 'Recall': 0.689655, 'F1': 0.415225, 'Learning time': 3.7, 'Inference time': 8.618}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return 0.8081489350995117;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.14185106490048813;  // std dev = 0.000, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.09404637099694779;  // std dev = 5.929, 195.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=46 */
%   | | | else return 0.1914822684328457;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7268751226349974;  // std dev = 0.009, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.6732008090104724;  // std dev = 1.686, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7828714925214426;  // std dev = 0.982, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.15696559135196478;  // std dev = 0.038, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.13723408159311778;  // std dev = 4.972, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.10593276395882106;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5595998753618802;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5396613930908063;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6483097352451649;  // std dev = 0.416, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1257932872027863;  // std dev = 0.117, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5169048982847462;  // std dev = 0.981, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.554643861094841;  // std dev = 0.991, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.11231637819360617;  // std dev = 9.19e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13914626044155115;  // std dev = 5.299, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.32063200673429726;  // std dev = 0.780, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4268958854224711;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.42689588542247103;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5005461460071808;  // std dev = 0.341, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4862876979492478;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3420928921041902;  // std dev = 1.244, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.004216700458595152;  // std dev = 3.320, 258.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=47 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.0712180977694926;  // std dev = 2.618, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.09776723726720547;  // std dev = 5.184, 130.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3289271976942549;  // std dev = 0.025, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.3305521941285287;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.34978162483964703;  // std dev = 1.287, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0.42748820637381446;  // std dev = 0.158, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.101583412161818;  // std dev = 0.100, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4170306593692901;  // std dev = 0.176, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.41442684747103625;  // std dev = 0.314, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.03749968473617493;  // std dev = 2.613, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.0795150448405534;  // std dev = 5.194, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27359823146111084;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26560470135216313;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1916657374607037;  // std dev = 1.238, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   else if ( interaction(A, G) )
%   | then return 0.02933495078145172;  // std dev = 2.905, 238.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=71 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4427127547419414;  // std dev = 1.094, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.13560122740396785;  // std dev = 0.042, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.046171440330435895;  // std dev = 5.367, 150.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=42 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.17350309196992084;  // std dev = 1.541, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1455400346365936;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4259786109417446;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.024123559989748675;  // std dev = 5.597, 325.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=83 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.22805795725228717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.0988028420448664;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, I) )
%   | | then return 0.029430826327767355;  // std dev = 1.734, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.07279024602511322;  // std dev = 1.037, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.018546447388525334;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19249442753310475;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19348629354186286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.16952913182893503;  // std dev = 0.968, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, G) )
%   | then return 0.004885288971908786;  // std dev = 3.032, 262.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=71 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.07407830173886093;  // std dev = 0.399, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.03128903781890145;  // std dev = 5.205, 185.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=50 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.029851789342745495;  // std dev = 1.067, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.004255452850429831;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17434516364845892;  // std dev = 0.033, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.06578687323673485;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.11042390223515909;  // std dev = 0.952, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( enzyme(E, G), interaction(F, A) )
%   | | | then return -0.15418236491976525;  // std dev = 0.779, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1541069849451212;  // std dev = 0.871, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.08647303041637616;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0056937694910759425;  // std dev = 2.932, 248.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=67 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.046721671680630524;  // std dev = 5.063, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   | | | else return 0.05761921540854696;  // std dev = 2.274, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15748717819708385;  // std dev = 0.074, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14933603243540497;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07512344791953793;  // std dev = 0.944, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20845954450704757;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, J), interaction(K, G) )
%   | | | then return 0.12459460553682607;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15720810445230518;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.008651642064942396;  // std dev = 6.360, 476.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=125 */


Results
   AUC ROC   = 0.948208
   AUC PR    = 0.298395
   CLL	      = -0.18881
   Precision = 0.285714 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.407895


Total learning time: 4.692 seconds
Total inference time: 8.86 seconds
AUC ROC: 0.948208


Results scoring model
   AUC ROC   = 0.957049
   AUC PR    = 0.288432
   CLL	      = -0.187545
   Precision = 0.256863 at threshold = 0.5
   Recall    = 0.775148
   F1        = 0.385862


Total scoring time: 10.99 seconds
Parameter learned model CLL: -0.187545


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 28], 'false,true,true,true': [0.985, 1, 33], 'false,true,true,false': [1.378, 2, 38], 'false,true,false': [0.0, 157, 0], 'false,false,true': [0.0, 0, 8], 'false,false,false,true': [5.929, 149, 46], 'false,false,false,false': [2.828, 24, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 17], 'true,false': [2.98e-08, 0, 15], 'false,true,true,true': [0.009, 0, 19], 'false,true,true,false': [1.686, 3, 52], 'false,true,false': [0.0, 167, 0], 'false,false,true,true': [0.982, 1, 24], 'false,false,true,false': [0.038, 44, 0], 'false,false,false,true': [4.972, 86, 36], 'false,false,false,false': [2.089, 16, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.014, 0, 10], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.416, 0, 36], 'true,false': [0.117, 88, 0], 'false,true': [0.981, 1, 25], 'false,false,true,true': [0.991, 1, 53], 'false,false,true,false': [9.19e-08, 121, 0], 'false,false,false,true': [5.299, 90, 42], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true': [0.78, 1, 8], 'true,false,true': [0.0, 0, 14], 'true,false,false': [0.0, 0, 10], 'false,true,true': [0.341, 0, 9], 'false,true,false': [0.215, 0, 3], 'false,false,true,true': [1.244, 2, 20], 'false,false,true,false': [3.32, 211, 47], 'false,false,false,true': [2.618, 49, 20], 'false,false,false,false': [5.184, 92, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), enzyme(A, L)'}, {'true,true': [0.025, 0, 17], 'true,false': [0.028, 0, 15], 'false,true,true,true': [1.287, 2, 45], 'false,true,true,false': [0.158, 0, 26], 'false,true,false': [0.1, 190, 0], 'false,false,true,true': [0.176, 0, 2], 'false,false,true,false': [0.314, 0, 6], 'false,false,false,true': [2.613, 60, 20], 'false,false,false,false': [5.194, 93, 38]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.007, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 3], 'true,false': [1.238, 2, 25], 'false,true': [2.905, 167, 71], 'false,false,true,true': [1.094, 1, 24], 'false,false,true,false': [0.042, 65, 0], 'false,false,false,true': [5.367, 108, 42], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'enzyme(A, J), interaction(K, A)'}, {'true,true,true': [1.541, 4, 38], 'true,true,false,true': [0.009, 0, 3], 'true,true,false,false': [0.0, 0, 1], 'true,false': [5.597, 242, 83], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.935, 1, 7], 'false,false,true': [1.734, 57, 24], 'false,false,false,true': [1.037, 10, 6], 'false,false,false,false': [2.106, 17, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), enzyme(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.968, 1, 28], 'false,true': [3.032, 191, 71], 'false,false,true,true': [0.399, 2, 4], 'false,false,true,false': [5.205, 135, 50], 'false,false,false,true': [1.067, 13, 6], 'false,false,false,false': [2.121, 18, 6]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'enzyme(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.033, 0, 15], 'true,true,false': [0.857, 1, 3], 'true,false': [0.952, 1, 14], 'false,true,true,true': [0.779, 1, 2], 'false,true,true,false': [0.871, 1, 7], 'false,true,false': [0.615, 1, 3], 'false,false,true': [2.932, 181, 67], 'false,false,false,true': [5.063, 113, 46], 'false,false,false,false': [2.274, 24, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(K, G)'}, {'true,true': [0.074, 0, 18], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.008, 0, 4], 'true,false,false': [0.944, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.033, 0, 4], 'false,true,false,true': [0.023, 0, 3], 'false,true,false,false': [0.853, 1, 5], 'false,false': [6.36, 351, 125]}]]
[{'': [1.4432899320127035e-15, 0.20652331371661414], 'false': [0.2128895635389144, 0.19989145848287007], 'false,true': [0.03889700511322009, -1.3860109097231253e-16], 'false,false': [-2.220446049250313e-16, 0.18803995427372122], 'false,false,false': [0.1802498356344521, 0.22222222222222174], 'false,true,true': [0.028546712802769686, 0.04750000000000139], 'true': [0.0, -2.5376526277146434e-16], 'true,true': [1.4802973661668753e-16, 0.0]}, {'': [-5.551115123125783e-16, 0.17857897435777284], 'false': [0.15240173979509292, 0.20786577895150468], 'false,false': [0.218082308682415, 0.20212436905775533], 'false,false,true': [0.03859071656924705, 3.220253919339333e-05], 'false,false,false': [0.20265582713265645, 0.19834710743801634], 'false,true': [0.03896527047616948, -2.659216825449477e-18], 'false,true,true': [3.877678230255667e-06, 0.051684961973320946], 'true': [1.0449157878825003e-16, 5.921189464667501e-17]}, {'': [0.1309803393519584, 0.1522290571406376], 'false': [0.036982248520709755, 0.14925933848726314], 'false,false': [0.10052195757925596, 0.21268498259813323], 'false,false,false': [0.21268498259813323, nan], 'true': [0.005245042665149625, 0.000156070730369412], 'false,false,true': [0.01819331037584637, 6.973301642273711e-17], 'true,true': [2.0999837450164093e-05, 0.005266889534630956], 'true,true,false': [0.0, 0.004797761437935508]}, {'': [0.020656387249920295, 0.10541972839147258], 'false': [0.013599572899887372, 0.10284221616206779], 'false,false': [0.05358180340793628, 0.1696402372118212], 'false,false,false': [0.0993387573920774, 0.20670970199096694], 'false,false,true': [0.07035209778722627, 0.04272868064217609], 'true': [0.0675277142820561, -1.1102230246251565e-16], 'false,true': [0.012942924815538603, 0.015417039647167822], 'true,false': [-3.172065784643304e-17, 0.0]}, {'': [4.404527831719518e-05, 0.1018883289782864], 'false': [0.0528271295404981, 0.15969955614902828], 'false,false': [0.01615055779362931, 0.1606290341813265], 'false,false,false': [0.08537833729339962, 0.20591435378584616], 'false,true': [0.024401070613047374, 5.257932699158991e-05], 'false,true,true': [0.03521704911795945, 0.000961428616878919], 'false,false,true': [0.015402617121400342, 0.016398176391938597], 'true': [3.545149224410829e-05, 5.2382076658504435e-05]}, {'': [0.04608840851972834, 0.09312325927006194], 'false': [0.03546452945489245, 0.15026194704325846], 'false,false': [0.0804161499876452, 0.19200199810443916], 'false,false,false': [0.19200199810443916, nan], 'false,false,true': [0.0478830100661769, 2.6934459770823803e-05], 'true': [4.994615792451386e-05, 0.0567553912120575], 'true,true': [1.2606969346670716e-05, 6.321944349345816e-05], 'true,true,false': [nan, 6.321944349345816e-05]}, {'': [0.09355166790345341, 0.07359177702728922], 'true': [0.053046619773634604, 0.0963805396818972], 'false': [0.09887228491923788, 0.07124879618741614], 'false,true': [0.0, 0.109375], 'false,false': [0.03713675252338204, 0.1420096328382923], 'false,false,false': [0.0672393115413437, 0.19281663516068046], 'true,true': [0.05653774527086385, 0.014767931172044411], 'true,true,false': [2.912612604421642e-05, 0.0]}, {'': [0.02847794502399929, 0.08505763316876042], 'false': [0.03509782166480185, 0.1406755808118501], 'false,false': [0.14273739357496712, 0.13127951934240675], 'false,false,true': [0.026468680304636102, 0.14645075491582568], 'false,false,false': [0.0598984977119176, 0.1874999999999999], 'true': [1.844621586241657e-07, 0.03234059617474189], 'true,true': [-4.625929269271485e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.053681301834233315, 0.09082427905537195], 'false': [0.1301006190980133, 0.0894132400103863], 'false,true': [0.14299913132810377, 0.0944313902341158], 'false,true,true': [0.20208301076533894, 0.09492204292820028], 'false,false': [0.034674696759051084, 0.15799241757574178], 'false,false,false': [0.16121009980925322, 0.14368415552117345], 'true': [0.04832707625894404, 0.06036346994147509], 'true,true': [7.24105395569959e-05, 0.18375833970246228]}, {'': [0.028632034148964005, 0.08488011355045251], 'false': [0.057032638089654863, 0.08498703238962416], 'false,true': [0.0002774488188095614, 0.08106971489418349], 'false,true,false': [0.00018312625912618682, 0.12115846244120888], 'true': [0.0003081581715599851, 0.06048497501257863], 'true,false': [1.687050670691817e-05, 0.08100470793093752], 'false,true,true': [nan, 0.0002774488188095475], 'true,false,true': [nan, 1.687050670691817e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), enzyme(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;enzyme(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;enzyme(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), enzyme(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;enzyme(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A), complex(A, E) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.7672398441904213;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.8581489350995118;  // std dev = 2.53e-07, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10593654571898038;  // std dev = 4.589, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   | | | else return 0.20698614440183657;  // std dev = 4.420, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6718509483263599;  // std dev = 0.232, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.46947341221095445;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6816051651974266;  // std dev = 0.197, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | else return -0.12544463852839138;  // std dev = 2.98e-08, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7781276130171675;  // std dev = 0.977, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.16165872829690667;  // std dev = 0.054, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11902458011404202;  // std dev = 5.231, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5769485963185327;  // std dev = 0.183, 52.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=49 */
%   | else return -0.13328096485375496;  // std dev = 0.336, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.3263746660497685;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.5871163921871856;  // std dev = 0.118, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.4128019102049471;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5323696283716175;  // std dev = 1.363, 55.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   | | | else return -0.11231637819360618;  // std dev = 8.94e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.041479174629089836;  // std dev = 2.580, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.13707079330716002;  // std dev = 4.645, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4466085986575097;  // std dev = 0.034, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, E), enzyme(A, F) )
%   | | then if ( complex(E, D) )
%   | | | then return 0.01611867315951559;  // std dev = 0.650, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.19332468140362535;  // std dev = 0.788, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( phenotype(A, G), phenotype(E, H) )
%   | | | then return 0.023145084707173857;  // std dev = 1.965, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return -0.048324709831943854;  // std dev = 1.428, 62.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=7 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31612537728582546;  // std dev = 4.933, 166.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=104 */
%   | | | else return -0.14452770355709627;  // std dev = 0.564, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.017066365335405273;  // std dev = 0.666, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.10743354794705735;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3386577331627549;  // std dev = 0.141, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.34357920398150693;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3478446565419751;  // std dev = 1.390, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | | else return 0.3493929565373491;  // std dev = 0.941, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else return -0.10198023243596835;  // std dev = 0.223, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42372360249038854;  // std dev = 1.010, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.12038970235435298;  // std dev = 0.145, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4484738304219136;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08027283441833305;  // std dev = 4.918, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.2514927858264741;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.28240432666914705;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.0850921581093576;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.22556030302431296;  // std dev = 0.966, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, H) )
%   | then return 0.022043031275898153;  // std dev = 0.200, 236.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=71 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.32282981988127185;  // std dev = 1.003, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.10990458989619767;  // std dev = 0.140, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08238706292897714;  // std dev = 4.834, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return -0.060720983053558365;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.21578867252626033;  // std dev = 0.238, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | else return 0.05014133135667706;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.1232947232542595;  // std dev = 0.133, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.007511807742874024;  // std dev = 2.071, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.05425709423663038;  // std dev = 4.579, 215.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=73 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.23856596208763492;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.08490930650724775;  // std dev = 0.138, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.13896238160814078;  // std dev = 0.863, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.005695268852964919;  // std dev = 2.609, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.17354261657839368;  // std dev = 0.000305, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20919223717828625;  // std dev = 0.043, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.26068791500640265;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.07992917070359964;  // std dev = 0.998, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.007277842978188768;  // std dev = 1.445, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J), location(A, K) )
%   | | | then return 0.029575045575153024;  // std dev = 1.818, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.10725475098496291;  // std dev = 1.268, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2587246345245534;  // std dev = 0.208, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.027916779162043534;  // std dev = 5.166, 297.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=89 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16986459996040099;  // std dev = 0.030, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return -0.03547239542606042;  // std dev = 0.888, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.18479443925730007;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then if ( complex(A, G), enzyme(A, H) )
%   | | then return -0.2088063065045973;  // std dev = 0.453, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08042040092063485;  // std dev = 0.050, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(I, A) )
%   | | | then return -0.1361768645711907;  // std dev = 0.430, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.003647728129522687;  // std dev = 1.876, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.017259784233387403;  // std dev = 4.633, 235.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=71 */
%   | | | else return 0.05868102612234388;  // std dev = 3.236, 112.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14736492588098704;  // std dev = 0.027, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then return 0.1310990109819993;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.15257268896899137;  // std dev = 0.848, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1818726409530618;  // std dev = 0.119, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I) )
%   | | then return 0.25545739246991883;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1965680301226217;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07404707050808225;  // std dev = 0.040, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.015419536281787312;  // std dev = 2.389, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
%   | | | else return 0.029738844899989396;  // std dev = 5.322, 294.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=88 */


Results
   AUC ROC   = 0.983955
   AUC PR    = 0.357556
   CLL	      = -0.173421
   Precision = 0.285714 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.407895


Total learning time: 14.945 seconds
Total inference time: 9.068 seconds
AUC ROC: 0.983955


Results scoring model
   AUC ROC   = 0.985466
   AUC PR    = 0.352053
   CLL	      = -0.17191
   Precision = 0.259406 at threshold = 0.5
   Recall    = 0.775148
   F1        = 0.388724


Total scoring time: 17.329 seconds
Refined model CLL: -0.17191


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.983955
   AUC PR    = 0.357556
   CLL	      = -0.173421
   Precision = 0.285714 at threshold = 0.5
   Recall    = 0.712644
   F1        = 0.407895


Total learning time: 47.956 seconds
Total inference time: 9.068 seconds
AUC ROC: 0.983955
Total revision time: 47.956
Best scored revision CLL: -0.17191


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 04:42:03
{'AUC ROC': 0.983955, 'AUC PR': 0.357556, 'CLL': -0.173421, 'Precision': [0.285714, 0.5], 'Recall': 0.712644, 'F1': 0.407895, 'Learning time': 47.956, 'Inference time': 9.068, 'parameter_0.6': {'AUC ROC': 0.948208, 'AUC PR': 0.298395, 'CLL': -0.18881, 'Precision': [0.285714, 0.5], 'Recall': 0.712644, 'F1': 0.407895, 'Learning time': 4.692, 'Inference time': 8.86}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.733148935099512;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7517659563761078;  // std dev = 2.114, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return 0.8164822684328454;  // std dev = 1.384, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   | | else return -0.14185106490048846;  // std dev = 0.000, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11901850031690489;  // std dev = 6.984, 253.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=66 */
%   | | | else return 0.28122585817643464;  // std dev = 3.563, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6463401888084368;  // std dev = 1.350, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.7439976143448208;  // std dev = 5.96e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7360426030435869;  // std dev = 0.029, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6113042977235916;  // std dev = 2.815, 74.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=65 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.49963529703130205;  // std dev = 5.679, 148.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=99 */
%   | | | else return -0.16060499351598498;  // std dev = 0.106, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.479478197045108;  // std dev = 2.122, 56.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.625310501411357;  // std dev = 0.100, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.35613116232618214;  // std dev = 6.425, 209.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=127 */
%   | else return -0.12691772648626776;  // std dev = 0.256, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5894538978696213;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5674626937574183;  // std dev = 0.977, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.11231637819360614;  // std dev = 3.33e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4602968333161267;  // std dev = 0.113, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.37306911535798737;  // std dev = 1.071, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.5411378843660851;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3041673809877232;  // std dev = 1.665, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return 0.004484395532492393;  // std dev = 4.129, 298.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=58 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.0998344415340269;  // std dev = 6.734, 280.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=88 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3456303694086654;  // std dev = 0.059, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.20184000186744208;  // std dev = 1.555, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3391305219633236;  // std dev = 2.400, 59.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=53 */
%   | | | else return 0.4029901264714171;  // std dev = 1.414, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | else return -0.11536472962499603;  // std dev = 0.455, 257.000 (wgt'ed) examples reached here.  /* #neg=257 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4007556163328949;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3191508071393432;  // std dev = 0.664, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.05285206020259768;  // std dev = 6.925, 307.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=88 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.24611742327919467;  // std dev = 0.964, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.24817223633413688;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.21950394466232798;  // std dev = 1.039, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.018899845251909228;  // std dev = 3.870, 337.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=88 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2930101988141638;  // std dev = 5.658, 149.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=99 */
%   | | | else return -0.14394813143940244;  // std dev = 0.105, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2002597782155867;  // std dev = 1.711, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | else if ( function(A, F) )
%   | | | then return 0.20440296822500764;  // std dev = 0.356, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01574156985203308;  // std dev = 6.343, 403.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=107 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.25853308627558147;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.04280264313075556;  // std dev = 2.337, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.03215167612763364;  // std dev = 3.212, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19212335731675217;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2199654235757258;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18375385900984886;  // std dev = 0.932, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, G) )
%   | then return 0.0023298945045942122;  // std dev = 3.857, 349.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=88 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.06442378726619122;  // std dev = 0.714, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.03535555245451524;  // std dev = 5.620, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
%   | | else if ( function(A, J) )
%   | | | then return 0.06319987511097724;  // std dev = 2.937, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17696955280013538;  // std dev = 0.106, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.06281527943364437;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1307760997595689;  // std dev = 0.919, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.0021749612239141524;  // std dev = 1.227, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.2538941068050951;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2664851825689229;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.007913723170264945;  // std dev = 3.788, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03403140945769873;  // std dev = 5.579, 214.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=66 */
%   | | | else return 0.06369142621752215;  // std dev = 2.865, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15867575483822252;  // std dev = 0.124, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1531968281079709;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02424073877339021;  // std dev = 1.293, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return -0.25680465084206633;  // std dev = 0.699, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13653141991163992;  // std dev = 0.465, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.20365927247800666;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2081099541658033;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.012817740155784348;  // std dev = 7.384, 613.000 (wgt'ed) examples reached here.  /* #neg=442 #pos=171 */


Results
   AUC ROC   = 0.967787
   AUC PR    = 0.244657
   CLL	      = -0.191691
   Precision = 0.273256 at threshold = 0.5
   Recall    = 0.54023
   F1        = 0.362934


Total learning time: 37.457 seconds
Total inference time: 31.288 seconds
AUC ROC: 0.967787


Results scoring model
   AUC ROC   = 0.968729
   AUC PR    = 0.20705
   CLL	      = -0.200788
   Precision = 0.222042 at threshold = 0.5
   Recall    = 0.608889
   F1        = 0.325416


Total scoring time: 154.736 seconds
Parameter learned model CLL: -0.200788


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false': [0.0, 0, 2], 'true,false': [1.62, 3, 21], 'false,true,true,true': [2.114, 5, 42], 'false,true,true,false': [1.384, 2, 46], 'false,true,false': [0.0, 215, 0], 'false,false,true': [1.301, 2, 11], 'false,false,false,true': [6.984, 187, 66], 'false,false,false,false': [3.563, 30, 22]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [1.35, 2, 23], 'true,false': [5.96e-08, 0, 15], 'false,true,true,true': [0.029, 0, 23], 'false,true,true,false': [2.815, 9, 65], 'false,true,false': [0.0, 236, 0], 'false,false,true,true': [5.679, 49, 99], 'false,false,true,false': [0.106, 162, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [2.122, 6, 50], 'true,true,false,true': [0.1, 0, 14], 'true,true,false,false': [6.425, 82, 127], 'true,false': [0.256, 276, 0], 'false,true': [0.026, 0, 5], 'false,false,true,true': [0.977, 1, 29], 'false,false,true,false': [3.33e-08, 63, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.113, 0, 38], 'true,false': [0.0, 0, 0], 'false,true,true': [1.071, 2, 13], 'false,true,false': [0.045, 0, 3], 'false,false,true,true': [1.665, 7, 25], 'false,false,true,false': [4.129, 240, 58], 'false,false,false,true': [6.734, 192, 88], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.059, 0, 22], 'true,false': [1.555, 3, 16], 'false,true,true,true': [2.4, 6, 53], 'false,true,true,false': [1.414, 2, 35], 'false,true,false': [0.455, 257, 0], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.664, 1, 7], 'false,false,false,true': [6.925, 219, 88], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.964, 1, 25], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.039, 1, 12], 'true,false': [0.0, 0, 0], 'false,true': [3.87, 249, 88], 'false,false,true,true': [5.658, 50, 99], 'false,false,true,false': [0.105, 165, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.711, 5, 48], 'true,true,false,true': [0.356, 1, 6], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.343, 296, 107], 'false,true,true': [0.056, 0, 8], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.337, 74, 34], 'false,false,false,true': [3.212, 38, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 15], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.932, 1, 21], 'false,true': [3.857, 261, 88], 'false,false,true,true': [0.714, 3, 6], 'false,false,true,false': [5.62, 166, 71], 'false,false,false,true': [2.937, 39, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.106, 0, 20], 'true,true,false': [0.871, 1, 3], 'true,false': [0.919, 1, 15], 'false,true,true,true': [1.227, 2, 7], 'false,true,true,false': [0.046, 0, 6], 'false,true,false': [0.04, 0, 3], 'false,false,true': [3.788, 228, 83], 'false,false,false,true': [5.579, 148, 66], 'false,false,false,false': [2.865, 37, 22]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.124, 0, 23], 'true,false,true,true': [0.026, 0, 4], 'true,false,true,false': [1.293, 2, 11], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.699, 1, 1], 'false,true,true,false': [0.465, 1, 4], 'false,true,false,true': [0.03, 0, 9], 'false,true,false,false': [0.025, 0, 2], 'false,false': [7.384, 442, 171]}]]
[{'': [0.06781677572873421, 0.2091033104791281], 'false': [0.20328824141519333, 0.21440014239943198], 'false,false': [0.13017751479289916, 0.20527815103466893], 'false,false,false': [0.192816635160681, 0.24408284023668736], 'false,true': [0.06825484764542998, -2.354705577809634e-16], 'false,true,true': [0.09506564056134097, 0.03993055555555639], 'true': [-2.0898315757650005e-16, 0.10937500000000015], 'true,true': [-2.3684757858670006e-16, 0.0]}, {'': [0.047771476542019006, 0.1789500721944223], 'false': [0.14585351950088532, 0.21282976388996844], 'false,false': [0.21282976388996844, nan], 'false,false,true': [0.2179143213243103, 6.928456729972233e-05], 'false,true': [0.08452044920560428, -7.150588972162025e-17], 'false,true,true': [3.6185248844604516e-05, 0.10708967147001412], 'true': [0.07285799768133316, 2.3684757858670006e-16]}, {'': [0.15319944081161632, 0.11684986226470646], 'true': [0.16936685936094417, 0.00023767734177386178], 'true,true': [0.08041761925722543, 0.18942953520091432], 'true,true,false': [0.0007172532291921385, 0.197521646917447], 'false': [0.000133511736009595, 0.1112477195683383], 'false,false': [0.1112477195683383, nan], 'false,false,true': [0.03183272679363724, 1.76225876924628e-17]}, {'': [0.00033395054653335466, 0.11406554840734097], 'false': [0.06777542737891823, 0.11217423972016102], 'false,false': [0.0679206456803868, 0.16195299109840675], 'false,false,false': [0.16195299109840675, nan], 'false,false,true': [0.0866735693877072, 0.057198070916497104], 'false,true': [0.07648489084045945, 0.0006888508079641401], 'true': [0.00033395054653335466, nan]}, {'': [0.06420027239850652, 0.10999914872356346], 'false': [0.06828563720154783, 0.1548993330114355], 'false,false': [0.03819008320419152, 0.15622078954172813], 'false,false,false': [0.15622078954172813, nan], 'false,true': [0.08181785260449037, 0.0008051589432887726], 'false,true,true': [0.09766337989842724, 0.054044359431120625], 'true': [0.0001584889935440017, 0.12725965449845864], 'false,false,true': [0.0, 0.05506534317844872]}, {'': [0.050334815333688096, 0.09565453548457718], 'false': [0.04443249530162728, 0.14960347164237764], 'false,false': [0.14960347164237764, nan], 'false,false,true': [0.21486685911285103, 6.688828093291864e-05], 'true': [0.050334815333688096, nan], 'true,true': [0.03571328146432214, 0.07709683327982478], 'true,true,false': [0.0, 0.0829686538490644]}, {'': [0.09735027803202354, 0.0917839821065176], 'true': [0.050887984748236796, 0.09983246008445795], 'false': [0.00039573086028879545, 0.09394510654031499], 'false,false': [0.05055481096944447, 0.1719747108619595], 'false,false,false': [0.1719747108619595, nan], 'true,true': [0.055219835028221295, 0.01807452645049348], 'true,true,false': [0.01807452645049348, nan], 'false,true': [0.00039573086028879545, nan]}, {'': [0.02236323632072436, 0.08519830968153788], 'false': [0.04262263212616339, 0.13277236199099698], 'false,false': [0.13047863373861046, 0.1414477735555294], 'false,false,false': [0.1414477735555294, nan], 'false,false,true': [0.05671324541060593, 0.13324893776292324], 'true': [8.046857995523763e-05, 0.039522627986735386], 'true,true': [-1.4802973661668754e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.04515537504030011, 0.09283027583348591], 'false': [0.1002500531355365, 0.09225916733450241], 'false,true': [0.11573122327150877, 0.0005339164894118861], 'false,true,true': [0.1673025302419133, 0.00035674586463005364], 'false,false': [0.04614910450979832, 0.14422403120837274], 'false,false,false': [0.1454440213499678, 0.13910938752732974], 'true': [0.04007928978229277, 0.052746220313061025], 'true,true': [0.0005647474816343978, 0.1897380298110997]}, {'': [0.046139680028936716, 0.08851071661857972], 'false': [0.05920716589222322, 0.08894988405259394], 'false,true': [0.13214840564773084, 0.0001453415271795988], 'false,true,true': [0.24408082543218357, 0.043171647860816995], 'true': [0.0006704666988115497, 0.1014265942406202], 'true,false': [0.1014265942406202, nan], 'true,false,true': [0.00016503457075248487, 0.12867113298620686], 'false,true,false': [0.00010279475716840686, 0.0003205949824686555]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8126943896449667;  // std dev = 0.208, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.7510060779566546;  // std dev = 1.637, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.8273797043302815;  // std dev = 1.392, 65.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=63 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.16946968981649485;  // std dev = 6.742, 212.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=66 */
%   | | | else return 0.265556342506919;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.729605037571382;  // std dev = 0.119, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( complex(A, E) )
%   | | then return 0.7285554015677008;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.2285554015677008;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7285554015677008;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6863854361894591;  // std dev = 0.204, 92.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=88 */
%   | | else return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6361400788776209;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.41605444487505244;  // std dev = 6.053, 151.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=88 */
%   | | else return -0.16672982390158528;  // std dev = 0.064, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.4913223750610719;  // std dev = 1.408, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | | else return 0.5740987347808835;  // std dev = 0.149, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(I, C), recursion_proteinclass(C, B) )
%   | | | then return 0.36990099303342566;  // std dev = 1.646, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.3238161064655706;  // std dev = 6.676, 225.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=127 */
%   | else return -0.13696972925774054;  // std dev = 0.581, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.5875764652408446;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.22336263514729374;  // std dev = 2.133, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.34431048486621235;  // std dev = 1.370, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | else return -0.11231637819360618;  // std dev = 3.16e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.46339381990077605;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), enzyme(G, E) )
%   | | | then return -0.5097591034459382;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4366058624370135;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.44509935454953214;  // std dev = 0.230, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H) )
%   | | then return 0.41271664402100433;  // std dev = 0.254, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.5002148553008164;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12307555408648965;  // std dev = 0.070, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.02405520907899594;  // std dev = 4.415, 188.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=44 */
%   | | | else return 0.09413562393946243;  // std dev = 7.129, 397.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=127 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3268913948916428;  // std dev = 0.089, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E) )
%   | | then return 0.1978318112306223;  // std dev = 0.338, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.4109733378266786;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return -6.236820764360246E-4;  // std dev = 1.396, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.4571903027884135;  // std dev = 0.989, 84.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=83 */
%   | | else return -0.1188257473634744;  // std dev = 0.364, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.38121235343651033;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.15553106625100796;  // std dev = 2.589, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.07002669157170253;  // std dev = 6.445, 243.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.23142117024079653;  // std dev = 0.154, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.28875548854697597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.199884541427753;  // std dev = 0.285, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return -0.037218526661107504;  // std dev = 0.185, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3817071382422509;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.017097007356154426;  // std dev = 3.429, 270.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=72 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.22386220909164956;  // std dev = 4.325, 85.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=47 */
%   | | | else return 0.3171558823914445;  // std dev = 3.920, 77.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=52 */
%   | | else return -0.1472499191770201;  // std dev = 0.091, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.38035174714942765;  // std dev = 3.088, 167.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=156 */
%   | | | else return -0.2579702334264184;  // std dev = 1.196, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return -0.13384785777730093;  // std dev = 0.082, 223.000 (wgt'ed) examples reached here.  /* #neg=223 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.0034604936119736196;  // std dev = 0.782, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.22124612197651602;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.057002588160130895;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.25738436100897183;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return 0.019265654501110858;  // std dev = 0.232, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | else return 0.06221581649247917;  // std dev = 0.345, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15760994408188508;  // std dev = 0.144, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( interaction(D, D), interaction(E, A) )
%   | | | then return -0.3662948921801112;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24423363057471026;  // std dev = 0.184, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.08699594183476149;  // std dev = 0.199, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -9.60785424232613E-4;  // std dev = 5.431, 386.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=100 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( phenotype(H, I), interaction(H, J) )
%   | | | then return -0.010519150164963449;  // std dev = 1.562, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.056716204800580525;  // std dev = 1.530, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04874548999464648;  // std dev = 2.617, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.17195384746987316;  // std dev = 1.627, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.144261032879269;  // std dev = 0.072, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.31921097831246575;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.1797250108352048;  // std dev = 0.125, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.008993300281675566;  // std dev = 1.044, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18145422318206492;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.06744214735592716;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, H) )
%   | | then return -0.020628135627058647;  // std dev = 0.247, 238.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=53 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return -0.00448208524878368;  // std dev = 1.980, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.052954709879336245;  // std dev = 5.181, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1355135775151971;  // std dev = 0.121, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.055799698417740656;  // std dev = 0.273, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.07661115476052362;  // std dev = 0.673, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( function(A, G), interaction(H, E) )
%   | | | then return 0.16538523344909764;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.1579897963725542;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, J), location(I, K) )
%   | | | then return -0.062162731809328055;  // std dev = 1.857, 109.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
%   | | | else return 0.001245256005306298;  // std dev = 5.373, 367.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=99 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.11588850701419867;  // std dev = 1.323, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.03335477717555956;  // std dev = 3.498, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */


Results
   AUC ROC   = 0.989056
   AUC PR    = 0.371614
   CLL	      = -0.177321
   Precision = 0.222571 at threshold = 0.5
   Recall    = 0.816092
   F1        = 0.349754


Total learning time: 209.26 seconds
Total inference time: 190.959 seconds
AUC ROC: 0.989056


Results scoring model
   AUC ROC   = 0.987825
   AUC PR    = 0.339035
   CLL	      = -0.184792
   Precision = 0.208485 at threshold = 0.5
   Recall    = 0.764444
   F1        = 0.327619


Total scoring time: 627.107 seconds
Refined model CLL: -0.184792


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.989056
   AUC PR    = 0.371614
   CLL	      = -0.177321
   Precision = 0.222571 at threshold = 0.5
   Recall    = 0.816092
   F1        = 0.349754


Total learning time: 1028.56 seconds
Total inference time: 190.959 seconds
AUC ROC: 0.989056
Total revision time: 1028.56
Best scored revision CLL: -0.184792


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 05:02:54
{'AUC ROC': 0.989056, 'AUC PR': 0.371614, 'CLL': -0.177321, 'Precision': [0.222571, 0.5], 'Recall': 0.816092, 'F1': 0.349754, 'Learning time': 1028.56, 'Inference time': 190.959, 'parameter_0.8': {'AUC ROC': 0.967787, 'AUC PR': 0.244657, 'CLL': -0.191691, 'Precision': [0.273256, 0.5], 'Recall': 0.54023, 'F1': 0.362934, 'Learning time': 37.457, 'Inference time': 31.288}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7470378239884007;  // std dev = 1.633, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7066337835843611;  // std dev = 2.913, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | | else return 0.7720562198677218;  // std dev = 3.447, 151.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=138 */
%   | | else return -0.1418510649004872;  // std dev = 2.86e-07, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379663;  // std dev = 4.781, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.691972052278423;  // std dev = 0.968, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return 0.6857877569084052;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6269569502934362;  // std dev = 1.876, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | else return 0.665895142240401;  // std dev = 3.471, 177.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=164 */
%   | | else return -0.12544463852839233;  // std dev = 0.000, 489.000 (wgt'ed) examples reached here.  /* #neg=489 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.44970315005647105;  // std dev = 3.926, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | | | else return -0.16259745243308918;  // std dev = 0.082, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5222327564609783;  // std dev = 1.910, 65.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=60 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.4503781605257094;  // std dev = 1.106, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.2821944503155705;  // std dev = 5.296, 161.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=86 */
%   | else return -0.12171185272151235;  // std dev = 0.353, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5902006776335185;  // std dev = 0.003, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5356624159715868;  // std dev = 2.570, 121.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=114 */
%   | | | else return -0.11231637819360685;  // std dev = 0.000, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.35272530266943714;  // std dev = 2.151, 51.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=46 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.418573727116691;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.524347521680068;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3955044030706154;  // std dev = 1.376, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | else return 0.025107129371243972;  // std dev = 6.524, 620.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=150 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.08007889996818489;  // std dev = 4.506, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.33444821211233955;  // std dev = 0.933, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.31421434962698863;  // std dev = 0.986, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.39725399881207085;  // std dev = 1.881, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | | else return 0.3330933359700265;  // std dev = 3.890, 140.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=123 */
%   | | else return -0.11001605221619462;  // std dev = 0.416, 466.000 (wgt'ed) examples reached here.  /* #neg=466 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.2068979706468494;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0887092299743683;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.09441075085398808;  // std dev = 4.367, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.28836058483956967;  // std dev = 0.126, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.307468037100713;  // std dev = 0.115, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.12727692148278175;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.01987053211275426;  // std dev = 6.259, 662.000 (wgt'ed) examples reached here.  /* #neg=468 #pos=194 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.31948931914457795;  // std dev = 3.601, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   | | | else return -0.14987110948155902;  // std dev = 0.099, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.1928370721212385;  // std dev = 1.884, 67.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | | else if ( function(A, F) )
%   | | | then return 0.2991308102268347;  // std dev = 0.757, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01624485776904839;  // std dev = 5.251, 347.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=76 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.24295786823578003;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.02946304951606757;  // std dev = 4.748, 411.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=121 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return -0.05830263652113574;  // std dev = 1.424, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.19143311633179527;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19160753000654918;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1839940640861276;  // std dev = 1.014, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(G, A) )
%   | then return 0.01348898654170924;  // std dev = 6.043, 669.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=194 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.22083716412764157;  // std dev = 0.819, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.04850809756669444;  // std dev = 3.803, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | else if ( function(A, J) )
%   | | | then return 0.12662501752594357;  // std dev = 1.095, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16762649498976306;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.17403179400908622;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14280175582160118;  // std dev = 1.009, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.20804630936967186;  // std dev = 0.453, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.23810536406029975;  // std dev = 1.011, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.27743630376330364;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then return -0.00413328000949255;  // std dev = 6.232, 686.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=180 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.057699742034482325;  // std dev = 3.753, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | | else return 0.006161756589451779;  // std dev = 1.312, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.05128132905268521;  // std dev = 1.620, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.20441756162901756;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16060717460595242;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206229331144651;  // std dev = 0.426, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.20267173404188293;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22105097134593904;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.01201118547775354;  // std dev = 7.224, 753.000 (wgt'ed) examples reached here.  /* #neg=537 #pos=216 */


Results
   AUC ROC   = 0.974658
   AUC PR    = 0.158215
   CLL	      = -0.180276
   Precision = 0.10533 at threshold = 0.5
   Recall    = 0.954023
   F1        = 0.189714


Total learning time: 48.039 seconds
Total inference time: 29.152 seconds
AUC ROC: 0.974658


Results scoring model
   AUC ROC   = 0.979233
   AUC PR    = 0.197379
   CLL	      = -0.171991
   Precision = 0.143187 at threshold = 0.5
   Recall    = 0.879433
   F1        = 0.246276


Total scoring time: 191.533 seconds
Parameter learned model CLL: -0.171991


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 2], 'true,false': [1.633, 3, 24], 'false,true,true,true': [2.913, 10, 56], 'false,true,true,false': [3.447, 13, 138], 'false,true,false': [2.86e-07, 454, 0], 'false,false,true': [0.0, 0, 6], 'false,false,false,true': [4.781, 80, 32], 'false,false,false,false': [1.309, 3, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.968, 1, 29], 'true,false': [0.972, 1, 17], 'false,true,true,true': [1.876, 4, 30], 'false,true,true,false': [3.471, 13, 164], 'false,true,false': [0.0, 489, 0], 'false,false,true,true': [3.926, 25, 42], 'false,false,true,false': [0.082, 73, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.91, 5, 60], 'true,true,false,true': [1.106, 2, 9], 'true,true,false,false': [5.296, 75, 86], 'true,false': [0.353, 218, 0], 'false,true': [0.003, 0, 13], 'false,false,true,true': [2.57, 7, 114], 'false,false,true,false': [0.0, 243, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [2.151, 5, 46], 'true,false': [0.0, 0, 0], 'false,true,true': [0.944, 1, 13], 'false,true,false': [0.069, 0, 7], 'false,false,true,true': [1.376, 4, 30], 'false,false,true,false': [6.524, 470, 150], 'false,false,false,true': [4.506, 92, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.933, 1, 28], 'true,false': [0.986, 1, 18], 'false,true,true,true': [1.881, 3, 71], 'false,true,true,false': [3.89, 17, 123], 'false,true,false': [0.416, 466, 0], 'false,false,true,true': [0.894, 1, 4], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [4.367, 80, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.126, 0, 29], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.115, 0, 16], 'true,false': [0.59, 1, 1], 'false,true': [6.259, 468, 194], 'false,false,true,true': [3.601, 20, 42], 'false,false,true,false': [0.099, 72, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.884, 7, 60], 'true,true,false,true': [0.757, 1, 5], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.251, 271, 76], 'false,true,true': [0.095, 0, 16], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.748, 290, 121], 'false,false,false,true': [1.424, 14, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.014, 1, 24], 'false,true': [6.043, 475, 194], 'false,false,true,true': [0.819, 1, 5], 'false,false,true,false': [3.803, 78, 33], 'false,false,false,true': [1.095, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.068, 0, 23], 'true,true,false': [0.042, 0, 5], 'true,false': [1.009, 1, 18], 'false,true,true,true': [0.453, 1, 11], 'false,true,true,false': [1.011, 2, 2], 'false,true,false': [0.102, 0, 7], 'false,false,true': [6.232, 506, 180], 'false,false,false,true': [3.753, 70, 32], 'false,false,false,false': [1.312, 8, 4]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [1.62, 3, 28], 'true,false,true,true': [0.07, 0, 6], 'true,false,true,false': [0.11, 0, 12], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.426, 1, 14], 'false,true,false,true': [0.078, 0, 4], 'false,true,false,false': [0.059, 0, 2], 'false,false': [7.224, 537, 216]}]]
[{'': [0.05747605164514856, 0.2085805913992094], 'false': [0.20552992730560096, 0.22310400000000116], 'false,false': [-1.4802973661668753e-16, 0.2110020478779761], 'false,false,false': [0.20408163265306256, 0.24489795918367332], 'false,true': [0.09475673724224923, 1.7998329209782273e-16], 'false,true,true': [0.12855831037649187, 0.07868075961581134], 'true': [1.6148698540002277e-16, 0.0987654320987662], 'true,true': [-8.881784197001253e-17, 0.0]}, {'': [0.039213989630616876, 0.16073559492452444], 'false': [0.15208267333730072, 0.20369186183120633], 'false,false': [0.20369186183120633, nan], 'false,false,true': [0.2300341145117247, 9.254107215886946e-05], 'false,true': [0.07399078685199693, -1.362236840030867e-16], 'false,true,true': [0.10353918041288042, 0.0680705104322408], 'true': [0.03124655986154779, 0.052469135802469244]}, {'': [0.1356214785334983, 0.11538861283850574], 'true': [0.15058034464906986, 0.0005724842510586331], 'true,true': [0.056151078190079154, 0.1718477794847982], 'true,true,false': [0.11113695002063811, 0.17418675130745914], 'false': [5.296714537741728e-07, 0.11132742718393264], 'false,false': [0.11132742718393264, nan], 'false,false,true': [0.05460016216938583, -7.492863211461962e-17]}, {'': [0.09075663224931932, 0.0916548285806678], 'false': [0.04516026197029338, 0.08864296647433517], 'true': [0.09075663224931932, nan], 'false,false': [0.07473386567045776, 0.15864296625924484], 'false,false,false': [0.15864296625924484, nan], 'false,false,true': [0.0557061393799812, 0.06864490454518281], 'false,true': [0.06367205850744592, 0.0006779384850973561]}, {'': [0.03846087944021045, 0.08930881498897235], 'false': [0.07469820684894798, 0.16613898027742022], 'false,false': [0.18660721890093027, 0.16442759285111794], 'false,false,true': [0.16, 0.22222222222222224], 'false,false,false': [0.16442759285111794, nan], 'false,true': [0.08818479741032789, 0.00037091758032798777], 'false,true,true': [0.04781463977913638, 0.10809981533582545], 'true': [0.029993366058137984, 0.05113762742657204]}, {'': [0.015369166485486842, 0.0750563294025541], 'false': [0.059178690997241885, 0.1516260848127427], 'false,false': [0.1516260848127427, nan], 'false,false,true': [0.20918047919110486, 0.00013587018946704173], 'true': [0.0007258823891638283, 0.17398842258749017], 'true,true': [0.0005435415971441807, 0.0008210918030229636], 'true,true,false': [nan, 0.0008210918030229358]}, {'': [0.082424202445589, 0.05716560680929106], 'true': [0.057355353422585506, 0.07945168469293565], 'true,true': [0.05300413567670919, 0.09557422505129783], 'true,true,false': [0.09557422505129783, nan], 'false': [0.0005646159772693046, 0.05758074410399082], 'false,false': [0.05484214205920343, 0.11273253687644094], 'false,false,false': [0.11273253687644094, nan], 'false,true': [0.0005646159772693046, nan]}, {'': [0.02189849821989611, 0.06699781334272409], 'false': [0.05459318904693418, 0.13029818728836082], 'false,false': [0.1308173699720536, 0.11980202182059203], 'false,false,true': [0.11169623206478067, 0.13032800616423412], 'false,false,false': [0.11980202182059203, nan], 'true': [2.514060318511727e-09, 0.04114316030521051], 'true,true': [-5.551115123125783e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.021977001140937334, 0.06982741933591498], 'false': [0.08675544015533423, 0.06873133651459756], 'false,true': [0.11409294260635336, 0.0014976092325227183], 'false,true,true': [0.017125677287884, 0.2557062517834885], 'false,false': [0.05661458653879878, 0.13891596667830616], 'false,false,false': [0.13811473371970553, 0.14334987908728206], 'true': [0.00023392647179057424, 0.05361767748656137], 'true,true': [0.0002017996338717909, 0.00034800847346263544]}, {'': [0.0576535806707133, 0.06866591949462607], 'false': [0.009099777457705691, 0.06929594745820111], 'true': [0.08469219404612574, 0.001370494673627925], 'false,true': [0.012071423228476557, 0.001665949593486075], 'false,true,true': [nan, 0.012071423228476557], 'false,true,false': [0.0015215034267163988, 0.0017296443511062576], 'true,false': [0.001370494673627925, nan], 'true,false,true': [0.0008126206373580321, 0.001009648354725931]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return 0.8181489350995119;  // std dev = 0.196, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.6476226193100377;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return 0.8061258137122278;  // std dev = 2.921, 173.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=164 */
%   | | else return -0.14185106490048718;  // std dev = 2.89e-07, 453.000 (wgt'ed) examples reached here.  /* #neg=453 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1658412427918186;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7280583846080275;  // std dev = 0.001, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.4774753536316645;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.6608086869649978;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.6464850645421575;  // std dev = 4.054, 204.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=186 */
%   | | | else return 0.4571251944412953;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return -0.12544463852839233;  // std dev = 0.000, 487.000 (wgt'ed) examples reached here.  /* #neg=487 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( location(A, K) )
%   | | | then return 0.4415242845513698;  // std dev = 3.819, 63.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=39 */
%   | | | else return 0.8183686802799848;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16900203385277826;  // std dev = 0.117, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5852228104335875;  // std dev = 0.220, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( location(A, G) )
%   | | | then return 0.3204639212885462;  // std dev = 5.389, 173.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=103 */
%   | | | else return 0.648684984272829;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1245248396474668;  // std dev = 0.442, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5930886729579291;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2719473243360472;  // std dev = 3.869, 116.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=65 */
%   | | | else return 0.38398581890927774;  // std dev = 2.742, 68.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=49 */
%   | | else return -0.11231637819360651;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then return 0.253943465443875;  // std dev = 0.385, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | else return 0.4328471785518831;  // std dev = 0.116, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.5198222290137136;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.47118441391440513;  // std dev = 0.125, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.4763579063981108;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10963411039479672;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then return 0.015459934921267732;  // std dev = 0.276, 300.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=66 */
%   | | else if ( location(A, M) )
%   | | | then return 0.07135175870167568;  // std dev = 7.073, 461.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=142 */
%   | | | else return 0.010331374743864653;  // std dev = 1.840, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then return 0.3401829784350772;  // std dev = 0.085, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.04390007289910055;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.376939253307164;  // std dev = 0.050, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.2702495033007049;  // std dev = 2.748, 40.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=30 */
%   | | | else return 0.4232441547164927;  // std dev = 3.195, 175.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=164 */
%   | | else return -0.11924409012451659;  // std dev = 0.531, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3938532111345619;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.010872148922628897;  // std dev = 2.678, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.10853907082052232;  // std dev = 3.432, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.241693730779247;  // std dev = 0.202, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return 0.32108423781565465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4235714216368547;  // std dev = 0.288, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.04247646032581218;  // std dev = 2.329, 162.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=23 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.010350922572835985;  // std dev = 5.405, 440.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=121 */
%   | | | else return 0.050710044443727995;  // std dev = 2.700, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( location(A, M) )
%   | | | then return 0.174050638334323;  // std dev = 4.064, 74.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | | | else return -0.06679175171550018;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.14815965557222427;  // std dev = 0.117, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.39320114443372767;  // std dev = 2.187, 137.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=135 */
%   | | | else return -0.19698551203921666;  // std dev = 1.203, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.1173886358108647;  // std dev = 0.070, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.32424331221479624;  // std dev = 0.535, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.0703012370995607;  // std dev = 0.209, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.23325151225107993;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.015690752656023942;  // std dev = 0.248, 332.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=95 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11027791267142485;  // std dev = 1.459, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.039095108709751664;  // std dev = 1.873, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.16570129313687698;  // std dev = 0.021, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.10540083323696371;  // std dev = 0.270, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09585960097151143;  // std dev = 0.086, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2969719539721197;  // std dev = 2.745, 152.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=132 */
%   | | | else return -0.12804554848470473;  // std dev = 1.394, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( complex(A, I), complex(G, J) )
%   | | | then return -0.09113287241078831;  // std dev = 0.817, 33.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=2 */
%   | | | else return -0.027991178603298875;  // std dev = 1.776, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.04396407654294024;  // std dev = 1.599, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.017177514512253488;  // std dev = 4.237, 258.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=80 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.12443417476488143;  // std dev = 0.162, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.12775482911380984;  // std dev = 0.227, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.12310325392194545;  // std dev = 0.114, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.20538925421433887;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.10419937751954982;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( phenotype(H, I), phenotype(A, I) )
%   | | | then return -0.08500949716115398;  // std dev = 1.737, 70.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=10 */
%   | | | else return 0.012652856955823293;  // std dev = 1.452, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.002178506455098268;  // std dev = 4.715, 456.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=123 */
%   | | | else return 0.02415833825173421;  // std dev = 4.056, 217.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=67 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.10940338010165546;  // std dev = 0.190, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.1684492777754172;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08656782854938137;  // std dev = 0.870, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( function(A, H), interaction(D, I) )
%   | | | then return 0.16824382129727286;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08639318321526297;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K), enzyme(A, L) )
%   | | | then return 0.0774601754465835;  // std dev = 1.021, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.031008225407628286;  // std dev = 2.835, 168.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=32 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.0024014655024141756;  // std dev = 2.521, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
%   | | | else return 0.03285533351597385;  // std dev = 4.886, 415.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=138 */


Results
   AUC ROC   = 0.987591
   AUC PR    = 0.281957
   CLL	      = -0.170797
   Precision = 0.133956 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.23594


Total learning time: 175.281 seconds
Total inference time: 172.732 seconds
AUC ROC: 0.987591


Results scoring model
   AUC ROC   = 0.989623
   AUC PR    = 0.327815
   CLL	      = -0.16094
   Precision = 0.15936 at threshold = 0.5
   Recall    = 0.953901
   F1        = 0.273096


Total scoring time: 762.987 seconds
Refined model CLL: -0.16094


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.987591
   AUC PR    = 0.281957
   CLL	      = -0.170797
   Precision = 0.133956 at threshold = 0.5
   Recall    = 0.988506
   F1        = 0.23594


Total learning time: 1177.84 seconds
Total inference time: 172.732 seconds
AUC ROC: 0.987591
Total revision time: 1177.84
Best scored revision CLL: -0.16094


Dataset: 8_twitter_yeast, Fold: 1, Type: Transfer (trRDN-B), Time: 05:25:55
{'AUC ROC': 0.987591, 'AUC PR': 0.281957, 'CLL': -0.170797, 'Precision': [0.133956, 0.5], 'Recall': 0.988506, 'F1': 0.23594, 'Learning time': 1177.84, 'Inference time': 172.732, 'parameter_1.0': {'AUC ROC': 0.974658, 'AUC PR': 0.158215, 'CLL': -0.180276, 'Precision': [0.10533, 0.5], 'Recall': 0.954023, 'F1': 0.189714, 'Learning time': 48.039, 'Inference time': 29.152}}


Starting fold 2

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos	 examples: 104
Target test neg examples: 16320

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2110901115701006;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.3934300456286232;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6782213723121568;  // std dev = 0.962, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.48215864416939497;  // std dev = 2.797, 35.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | else return -0.17322491007809612;  // std dev = 0.036, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5746017855685343;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.573985230933409;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2923766927421346;  // std dev = 3.441, 58.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=32 */
%   | else return -0.13439003172340816;  // std dev = 0.138, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5775619780398877;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4206002528058156;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.4503530265021547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.5172726836949582;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4791841648557102;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.01719774675487324;  // std dev = 2.029, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.15368007502634123;  // std dev = 3.282, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.31589066015913597;  // std dev = 0.000122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33716310114708686;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.42339794270194;  // std dev = 0.225, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4446866947896379;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.11455878713053277;  // std dev = 0.242, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4133928592507514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.07884196452078635;  // std dev = 3.425, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2518603208556556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.2519765139835962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26662161692870473;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.02941437795050617;  // std dev = 1.688, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20967508199233256;  // std dev = 3.136, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return -0.16246513359998233;  // std dev = 0.034, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2241733097163395;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( function(A, F) )
%   | | | then return 0.19656688755602802;  // std dev = 0.621, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012061705451195894;  // std dev = 3.191, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return 0.053367286725023534;  // std dev = 1.074, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.04991756197322757;  // std dev = 1.277, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1729662985181295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16787229019714278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.19872096608073864;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G) )
%   | then return -8.26155971918075E-4;  // std dev = 1.709, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.01847417138597729;  // std dev = 0.936, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.044311099892931236;  // std dev = 2.804, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | else if ( function(A, J) )
%   | | | then return 0.009991673829516337;  // std dev = 1.397, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15466076860890546;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16183421088953467;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24719191230395898;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2502858234999714;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then return -0.009336210476812159;  // std dev = 1.662, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.009417316496558163;  // std dev = 3.052, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return -0.09881484918685624;  // std dev = 1.537, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1355152223561414;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.12732687142499233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.145805909499537;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2125086647083086;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19180071473446558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.010040381420775799;  // std dev = 3.674, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */


Results
   AUC ROC   = 0.957349
   AUC PR    = 0.119828
   CLL	      = -0.213746
   Precision = 0.126106 at threshold = 0.5
   Recall    = 0.548077
   F1        = 0.205036


Total learning time: 10.911 seconds
Total inference time: 45.275 seconds
AUC ROC: 0.957349


Results scoring model
   AUC ROC   = 0.971396
   AUC PR    = 0.328028
   CLL	      = -0.19084
   Precision = 0.322917 at threshold = 0.5
   Recall    = 0.584906
   F1        = 0.416107


Total scoring time: 28.093 seconds
Parameter learned model CLL: -0.19084


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 4], 'false,true,true,true': [0.943, 1, 8], 'false,true,true,false': [0.0, 0, 13], 'false,true,false': [5.37e-08, 52, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [3.413, 33, 18], 'false,false,false,false': [1.491, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.826, 1, 2], 'false,true,true,false': [0.962, 1, 19], 'false,true,false': [0.0, 51, 0], 'false,false,true,true': [2.797, 12, 23], 'false,false,true,false': [0.036, 36, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [0.115, 0, 10], 'true,true,false,true': [0.026, 0, 2], 'true,true,false,false': [3.441, 26, 32], 'true,false': [0.138, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.04, 0, 9], 'false,false,true,false': [0.0, 25, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.066, 0, 9], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.035, 0, 2], 'false,false,true,true': [0.072, 0, 3], 'false,false,true,false': [2.029, 57, 16], 'false,false,false,true': [3.282, 33, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.000122, 0, 6], 'true,false': [0.052, 0, 3], 'false,true,true,true': [0.225, 0, 9], 'false,true,true,false': [0.097, 0, 12], 'false,true,false': [0.242, 50, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.425, 40, 22], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.046, 0, 3], 'true,false': [0.0, 0, 0], 'false,true': [1.688, 49, 21], 'false,false,true,true': [3.136, 16, 23], 'false,false,true,false': [0.034, 39, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true,true': [0.105, 0, 9], 'true,true,false,true': [0.621, 1, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.191, 72, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [1.074, 18, 10], 'false,false,false,true': [1.277, 9, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.064, 0, 4], 'false,true': [1.709, 63, 21], 'false,false,true,true': [0.936, 1, 2], 'false,false,true,false': [2.804, 37, 17], 'false,false,false,true': [1.397, 8, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.023, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.06, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.024, 0, 2], 'false,false,true': [1.662, 67, 19], 'false,false,false,true': [3.052, 47, 18], 'false,false,false,false': [1.537, 20, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.02, 0, 5], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.051, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.012, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false': [3.674, 104, 41]}]]
[{'': [-2.9605947323337506e-16, 0.2196982167352544], 'false': [0.20325054784514265, 0.23488309594195214], 'false,false': [0.0, 0.23222222222222316], 'false,false,false': [0.2283737024221448, 0.2469135802469134], 'false,true': [0.04338842975206614, 5.551115123125783e-17], 'false,true,true': [0.09876543209876527, -2.7328566760003855e-16], 'true': [0.0, 0.0], 'true,true': [0.0, 0.0]}, {'': [0.0, 0.1836327006039718], 'false': [0.15044175020854536, 0.21752539630751563], 'false,false': [0.21752539630751563, nan], 'false,false,true': [0.22344079434325895, 3.535557074170933e-05], 'false,true': [0.07909558763164766, -3.2653618371328135e-17], 'false,true,true': [0.22718848728668503, 0.04630259619371806], 'true': [7.401486830834377e-17, 0.0]}, {'': [0.154208133765805, 0.09268176657995449], 'true': [0.18066164642979174, 0.0003231298439846544], 'true,true': [0.0013322391686002798, 0.19991550218956763], 'true,true,false': [0.0003466594969824266, 0.20415374079427243], 'false': [nan, 0.09268176657995449], 'false,false': [0.09268176657995449, nan], 'false,false,true': [0.00018101054430102396, 0.0]}, {'': [0.000479063752916447, 0.12275849805816827], 'false': [0.0013939910196027288, 0.1217764829033167], 'false,false': [0.062315532723557214, 0.1958289396575941], 'false,false,false': [0.1958289396575941, nan], 'false,false,true': [0.001713700694887151, 0.05638109329329841], 'false,true': [0.0, 0.0005982396898032705], 'true': [0.000479063752916447, nan]}, {'': [0.00040286897992980464, 0.12297663902181452], 'false': [0.06473481414947901, 0.18792760192089114], 'false,false': [0.0, 0.18918211606549168], 'false,false,false': [0.18918211606549168, nan], 'false,true': [0.002956459380125316, 0.0011702823374662309], 'false,true,true': [0.005602298577311969, 0.0007778467113275603], 'true': [2.466044794295167e-09, 0.000906924177309217], 'false,false,true': [nan, 0.0]}, {'': [0.00028263047675987824, 0.10396187409210485], 'false': [0.04068444754518072, 0.1607333457264706], 'false,false': [0.1607333457264706, nan], 'false,false,true': [0.2521920834152313, 3.043800716311783e-05], 'true': [0.00028263047675987824, nan], 'true,true': [0.0, 0.0005674683218893362], 'true,true,false': [0.0, 0.000703004669117611]}, {'': [0.09848325161447677, 0.06790595605525179], 'true': [0.03324655502948253, 0.10179974696431088], 'false': [nan, 0.06790595605525176], 'false,false': [0.041182490796239556, 0.12545606168120263], 'false,false,false': [0.12545606168120263, nan], 'true,true': [0.0012220136627117714, 0.1287485932214248], 'true,true,false': [0.1287485932214248, nan]}, {'': [0.0006390488843920165, 0.08939608888466904], 'false': [0.0347516009936607, 0.15512513702907305], 'false,false': [0.15335419155911528, 0.16263972131433088], 'false,false,false': [0.16263972131433088, nan], 'false,false,true': [0.2922913311973337, 0.14560032753317886], 'true': [4.1518273238894125e-06, 0.001034437619927872], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.00046320328236149375, 0.08327506933709197], 'false': [0.00018762672392444446, 0.08346264026718492], 'false,false': [0.03213512033948976, 0.1327724969250611], 'false,false,false': [0.14331548634563535, 0.09838177257779603], 'true': [0.0001023075928795053, 0.0008857349641286927], 'false,true': [0.0, 0.0002782493237237227], 'true,true': [0.0001023075928795053, nan], 'false,true,true': [nan, 0.0]}, {'': [0.0003711904094758973, 0.09195280799524118], 'false': [0.00014238246402042964, 0.09307707896787885], 'true': [8.24971266170621e-05, 0.000714190668535411], 'true,false': [0.000714190668535411, nan], 'true,false,true': [0.0, 0.0008668855126737623], 'false,true': [7.063396532425853e-05, 0.0], 'false,true,true': [nan, 7.063396532425853e-05], 'false,true,false': [nan, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
3;false,false;interaction(A, G).;true;true
3;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.24276431971489695;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.7194734122109543;  // std dev = 4.21e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.7149782929422785;  // std dev = 0.912, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.34567312763894303;  // std dev = 2.678, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.15609690701633722;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.17404366681621208;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5674824214538925;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3274142493497101;  // std dev = 3.254, 55.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=32 */
%   | else if ( interaction(A, H) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.15270072773295582;  // std dev = 0.126, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.17164472234766154;  // std dev = 0.135, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | then if ( enzyme(A, M) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22152502927633905;  // std dev = 0.668, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.41457000308411546;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.435282851295064;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.4743253747528727;  // std dev = 0.000793, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.45568447619784136;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.008144103750996882;  // std dev = 2.025, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.33658085001352306;  // std dev = 1.342, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.032722456584292355;  // std dev = 3.106, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.31765949659448506;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3351823451704972;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4078185728960458;  // std dev = 0.227, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.37701685488448666;  // std dev = 0.837, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.12728324782223882;  // std dev = 0.228, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.11457964072020195;  // std dev = 0.138, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3601145842268224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.19203944689069044;  // std dev = 2.109, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.09135860407650516;  // std dev = 2.272, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2571171976515502;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2994213028217129;  // std dev = 0.466, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.10331147325897116;  // std dev = 0.119, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.27580762587344193;  // std dev = 0.477, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.013350362570687743;  // std dev = 0.605, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.346824646440411;  // std dev = 1.710, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.057427427152451985;  // std dev = 2.421, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.18913449228765125;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.14181242182062317;  // std dev = 0.071, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.2408271403115127;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E) )
%   | | then return -0.026608613393705405;  // std dev = 0.150, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | | else if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.38538643253195626;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.005702320348867278;  // std dev = 2.706, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4235008484302098;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.14632373324562878;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.133260048228605;  // std dev = 0.877, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.1623523399548938;  // std dev = 0.370, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.059198402316146446;  // std dev = 0.569, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18356689937815596;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.3634332861996717;  // std dev = 0.688, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.2082736782231431;  // std dev = 0.278, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.08709267366129494;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.16643600521666588;  // std dev = 0.206, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.049816328898663796;  // std dev = 1.782, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.06754999932304753;  // std dev = 0.462, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.005038292465997058;  // std dev = 1.048, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.0833223009590881;  // std dev = 1.949, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15367288019600273;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.02835697680607905;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.2036584856025051;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16830016111307344;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(G, A), interaction(A, H) )
%   | | | then return -0.09409399474606395;  // std dev = 0.421, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.01154331254299331;  // std dev = 0.967, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04652077152431822;  // std dev = 2.922, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.2542594827901021;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1347556622549466;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.1494291439460671;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17245342999029;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.15773553152560177;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1492177320660496;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.002891379786023733;  // std dev = 0.775, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2260176525245884;  // std dev = 0.888, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.06090205509653003;  // std dev = 1.287, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.015046862966078331;  // std dev = 2.372, 87.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */


Results
   AUC ROC   = 0.957166
   AUC PR    = 0.175899
   CLL	      = -0.223413
   Precision = 0.077803 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.139059


Total learning time: 37.941 seconds
Total inference time: 81.202 seconds
AUC ROC: 0.957166


Results scoring model
   AUC ROC   = 0.983102
   AUC PR    = 0.344466
   CLL	      = -0.189031
   Precision = 0.159259 at threshold = 0.5
   Recall    = 0.811321
   F1        = 0.266254


Total scoring time: 67.36 seconds
Refined model CLL: -0.189031


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.957166
   AUC PR    = 0.175899
   CLL	      = -0.223413
   Precision = 0.077803 at threshold = 0.5
   Recall    = 0.653846
   F1        = 0.139059


Total learning time: 144.305 seconds
Total inference time: 81.202 seconds
AUC ROC: 0.957166
Total revision time: 144.305
Best scored revision CLL: -0.189031


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 05:30:27
{'AUC ROC': 0.957166, 'AUC PR': 0.175899, 'CLL': -0.223413, 'Precision': [0.077803, 0.5], 'Recall': 0.653846, 'F1': 0.139059, 'Learning time': 144.305, 'Inference time': 81.202, 'parameter_0.2': {'AUC ROC': 0.957349, 'AUC PR': 0.119828, 'CLL': -0.213746, 'Precision': [0.126106, 0.5], 'Recall': 0.548077, 'F1': 0.205036, 'Learning time': 10.911, 'Inference time': 45.275}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16370449065506648;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.2285193054698827;  // std dev = 2.509, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7244257564780527;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.624870115323505;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109548;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.477969990650594;  // std dev = 4.075, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | | else return -0.16504043254919012;  // std dev = 0.026, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5732397444058706;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6148392262939976;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3439348094917655;  // std dev = 4.550, 111.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=66 */
%   | else return -0.13011012467103394;  // std dev = 0.173, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5927293663653481;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.391043633222456;  // std dev = 0.976, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.47032632116274425;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3508629918599927;  // std dev = 0.876, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2825266725033723;  // std dev = 0.715, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.010589002194235496;  // std dev = 2.862, 147.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=33 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.09633099970660643;  // std dev = 4.753, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.32775709773166795;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.36854030015139344;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3743299428797446;  // std dev = 0.958, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.4285243393742048;  // std dev = 0.110, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.10868812497315544;  // std dev = 0.201, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2853831400651765;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.09366323286882469;  // std dev = 4.613, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.17016219480691464;  // std dev = 0.940, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.28225049463845253;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2970791588744447;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then return 0.007746591187465408;  // std dev = 2.402, 159.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=40 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2785456915557516;  // std dev = 4.029, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | | else return -0.1504894929201926;  // std dev = 0.026, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.19335237576485378;  // std dev = 0.937, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( function(A, F) )
%   | | | then return 0.1730485575686528;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0303168680916422;  // std dev = 4.154, 205.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=56 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.2427893177601299;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.031072031346624954;  // std dev = 1.457, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.04633580142810477;  // std dev = 2.065, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19183513651266104;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16716838180287108;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.21077769374402724;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G) )
%   | then return 0.016990787081313196;  // std dev = 2.300, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.23361418571063544;  // std dev = 0.500, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05639697092178772;  // std dev = 3.830, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | else if ( function(A, J) )
%   | | | then return 0.12494406477632333;  // std dev = 1.793, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1699085637726097;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07277951797605522;  // std dev = 0.953, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2376654883900914;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.10360098802406863;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return -0.007811683927669173;  // std dev = 2.329, 165.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=38 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.01328986914795484;  // std dev = 3.905, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return 0.11153976564473664;  // std dev = 1.796, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.14729395508146637;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.15544921861256944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.049196623656251805;  // std dev = 0.974, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22294872508069397;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.20702929637969703;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.28492446734286697;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.002311903884993224;  // std dev = 5.032, 299.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=81 */


Results
   AUC ROC   = 0.957595
   AUC PR    = 0.125708
   CLL	      = -0.218615
   Precision = 0.08525 at threshold = 0.5
   Recall    = 0.605769
   F1        = 0.149466


Total learning time: 18.654 seconds
Total inference time: 49.071 seconds
AUC ROC: 0.957595


Results scoring model
   AUC ROC   = 0.972645
   AUC PR    = 0.270793
   CLL	      = -0.197469
   Precision = 0.148 at threshold = 0.5
   Recall    = 0.698113
   F1        = 0.244224


Total scoring time: 58.024 seconds
Parameter learned model CLL: -0.197469


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false': [0.957, 1, 11], 'false,true,true,true': [0.0, 0, 16], 'false,true,true,false': [1.03e-07, 0, 24], 'false,true,false': [0.0, 135, 0], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [4.787, 75, 33], 'false,false,false,false': [2.509, 17, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.024, 0, 10], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.894, 1, 4], 'false,true,true,false': [0.0, 0, 36], 'false,true,false': [7.74e-08, 101, 0], 'false,false,true,true': [4.075, 26, 48], 'false,false,true,false': [0.026, 48, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [0.086, 0, 15], 'true,true,false,true': [0.082, 0, 4], 'true,true,false,false': [4.55, 45, 66], 'true,false': [0.173, 124, 0], 'false,true': [0.021, 0, 4], 'false,false,true,true': [0.0, 0, 17], 'false,false,true,false': [0.0, 33, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.976, 1, 18], 'true,false': [0.0, 0, 0], 'false,true,true': [0.082, 0, 3], 'false,true,false': [0.876, 1, 4], 'false,false,true,true': [0.715, 2, 5], 'false,false,true,false': [2.862, 114, 33], 'false,false,false,true': [4.753, 95, 43], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.032, 0, 8], 'true,false': [0.107, 0, 10], 'false,true,true,true': [0.958, 1, 17], 'false,true,true,false': [0.11, 0, 23], 'false,true,false': [0.201, 94, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.884, 1, 5], 'false,false,false,true': [4.613, 93, 43], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.94, 1, 10], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.083, 0, 7], 'true,false': [0.0, 0, 0], 'false,true': [2.402, 119, 40], 'false,false,true,true': [4.029, 26, 48], 'false,false,true,false': [0.026, 68, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [0.937, 1, 14], 'true,true,false,true': [0.739, 1, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.154, 149, 56], 'false,true,true': [0.049, 0, 6], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.457, 41, 18], 'false,false,false,true': [2.065, 22, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [5.27e-09, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.08, 0, 11], 'false,true': [2.3, 99, 40], 'false,false,true,true': [0.5, 1, 2], 'false,false,true,false': [3.83, 67, 36], 'false,false,false,true': [1.793, 15, 10], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.04, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.953, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.027, 0, 3], 'false,true,false': [0.889, 1, 4], 'false,false,true': [2.329, 127, 38], 'false,false,false,true': [3.905, 81, 33], 'false,false,false,false': [1.796, 13, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.035, 0, 9], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.974, 1, 8], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.064, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.052, 0, 3], 'false,false': [5.032, 218, 81]}]]
[{'': [0.04986149584487499, 0.20092933824707687], 'false': [0.1763265306122461, 0.22453598913535608], 'false,false': [0.1388888888888887, 0.2170644718792878], 'false,false,false': [0.21219135802469272, 0.2331961591220851], 'false,true': [1.5099033134902129e-15, -5.921189464667501e-17], 'true': [-2.5376526277146434e-16, 0.07638888888888877], 'false,true,true': [-2.220446049250313e-16, 4.440892098500626e-16], 'true,true': [-1.4802973661668753e-16, 0.0]}, {'': [0.04928471265104182, 0.18976928291571074], 'false': [0.1451364115189924, 0.23478822444844455], 'false,false': [0.23478822444844455, nan], 'false,false,true': [0.22440020118416326, 1.442216046177817e-05], 'false,true': [0.023795359904817716, 5.93584587423351e-17], 'true': [5.722666539327292e-05, 0.09876543209876543], 'false,true,true': [0.15999999999999998, -6.908054375445419e-16]}, {'': [0.15002853526238694, 0.10830875327758299], 'true': [0.16650096779618545, 0.00024255698212334093], 'true,true': [0.0004883397558370343, 0.18257615386533327], 'true,true,false': [0.0016623166483218932, 0.18654290349077401], 'false': [0.00010922027260823475, 0.10003759660254269], 'false,false': [0.10003759660254269, nan], 'false,false,true': [-2.612289469706251e-16, -1.1775092685418327e-17]}, {'': [0.050185454832506644, 0.11289848357203659], 'false': [0.10014630766234028, 0.11020077864674495], 'false,false': [0.05972960217432523, 0.1636837571266672], 'false,false,false': [0.1636837571266672, nan], 'false,true': [0.0022580176750297922, 0.15352747401169003], 'false,false,true': [0.07299720735911741, 0.05573644342700555], 'true': [0.050185454832506644, nan]}, {'': [0.001109288927860182, 0.1119376034931941], 'false': [0.0631475116704668, 0.156873642567869], 'false,false': [0.13029217433047394, 0.15649326188854595], 'false,false,false': [0.15649326188854595, nan], 'false,false,true': [nan, 0.13029217433047394], 'false,true': [0.023393212324923918, 0.0004308889012251127], 'false,true,true': [0.05096891729098547, 0.0005227968783993815], 'true': [0.00012797995778476845, 0.001155105170761228]}, {'': [0.05072869776678016, 0.0958280761471516], 'false': [0.03629488356944772, 0.1602328732744748], 'false,false': [0.1602328732744748, nan], 'false,false,true': [0.21931830663253682, 9.596619272284383e-06], 'true': [0.05072869776678016, nan], 'true,true': [0.08039184648859739, 0.0008866397456866459], 'true,true,false': [0.0, 0.000985816406121054]}, {'': [0.08564469179675288, 0.06837608583235107], 'true': [0.07916446451264954, 0.08415631048247373], 'true,true': [0.058537189121077124, 0.18195730394272466], 'true,true,false': [0.18195730394272466, nan], 'false': [0.0003990071872242799, 0.07022426156765293], 'false,false': [0.035959050965755475, 0.13324968891216604], 'false,false,false': [0.13324968891216604, nan], 'false,true': [0.0003990071872242799, nan]}, {'': [0.0005000581427139155, 0.08818282800389132], 'false': [0.038045729517854024, 0.13973563353119367], 'false,false': [0.14160066812728536, 0.12856191108883586], 'false,false,true': [0.08342832878715493, 0.1424061607151173], 'false,false,false': [0.12856191108883586, nan], 'true': [7.450393321383118e-05, 0.000574578289037569], 'true,true': [4.625929269271485e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.050201158742825575, 0.08122338268925708], 'false': [0.10307286014171627, 0.08010476080281247], 'false,true': [0.00024597838268191247, 0.15802900535024017], 'false,false': [0.03288312105849358, 0.1362052818735305], 'false,false,false': [0.13377618722877804, 0.14021268384558883], 'true': [0.00017472860278942384, 0.0907561846143243], 'false,true,true': [nan, 0.00024597838268191247], 'true,true': [0.00017472860278942384, nan]}, {'': [0.052441243240750765, 0.08413038713941909], 'false': [0.002194544319246729, 0.08470171798690347], 'true': [0.00013929557162374132, 0.09588866612670786], 'true,false': [0.09588866612670786, nan], 'true,false,true': [0.0, 0.10541400096951362], 'false,true': [0.002018819289343929, 0.0019934831817269294], 'false,true,true': [nan, 0.002018819289343929], 'false,true,false': [0.0, 0.0008954089057922979]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(A, E), interaction(C, E).;true;true
5;true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;function(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.7470378239884012;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.09148226843284571;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.17447546571175584;  // std dev = 4.604, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7194734122109544;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7378763227558865;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7056956623790198;  // std dev = 0.978, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.12544463852839105;  // std dev = 7.45e-09, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( function(G, H), recursion_proteinclass(G, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.3604545057528174;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | else return 0.6010147238237734;  // std dev = 1.928, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.16167230135645783;  // std dev = 0.033, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5611559487602432;  // std dev = 0.009, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6642671926018371;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.31952828485354384;  // std dev = 4.639, 115.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=66 */
%   | else if ( interaction(A, H) )
%   | | then return -0.1178023611532705;  // std dev = 0.040, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.14997034433276307;  // std dev = 0.038, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.17570452098457182;  // std dev = 1.996, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.34163015308443195;  // std dev = 0.786, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.11231637819360646;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F) )
%   | | then return 0.41439014723124995;  // std dev = 0.007, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4364504282967974;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4558563758060794;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.5521153344845585;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4429814177337449;  // std dev = 0.833, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I), location(I, J) )
%   | | | then return -0.12163248397778473;  // std dev = 0.112, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.04853833368905439;  // std dev = 0.914, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07955497581947318;  // std dev = 5.480, 239.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=73 */
%   | | | else return 0.26211605896132345;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3259156173851183;  // std dev = 0.019, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(D, G) )
%   | | | then return 0.44192074379624874;  // std dev = 0.200, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.490120616472392;  // std dev = 0.139, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.10360988938706345;  // std dev = 0.098, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return -0.12332996669765287;  // std dev = 0.187, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), enzyme(K, L) )
%   | | | then return 0.2102206918655864;  // std dev = 2.974, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return -0.007495279687595014;  // std dev = 2.718, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.06604935779569648;  // std dev = 2.194, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.09438333680098432;  // std dev = 0.845, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2588173628934727;  // std dev = 0.017, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( complex(A, F), location(E, G) )
%   | | | then return -0.10128392989307754;  // std dev = 0.100, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 6.49817424065626E-5;  // std dev = 0.735, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.025166982805007856;  // std dev = 1.116, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.06210600092612981;  // std dev = 2.127, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.2141668024040751;  // std dev = 3.667, 68.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=38 */
%   | | | else return 0.4488159480280387;  // std dev = 1.352, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return -0.11263083493949581;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.1490102897356607;  // std dev = 0.086, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.4563946524863244;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.13174932294812572;  // std dev = 0.067, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.26866731428841717;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return -0.05992919261281513;  // std dev = 1.348, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.02074415229891011;  // std dev = 3.654, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.2201126361719672;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then return 0.009671766787415572;  // std dev = 0.215, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.058880911047506146;  // std dev = 1.936, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.18650304355473454;  // std dev = 0.712, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.04135418959621433;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.1942810987650997;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( enzyme(A, I), interaction(E, G) )
%   | | | then return 0.12280788702787904;  // std dev = 1.525, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.011800088172822501;  // std dev = 3.412, 134.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=38 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.012740693230445927;  // std dev = 1.599, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.08510220554623026;  // std dev = 2.309, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return 0.029226424281551366;  // std dev = 0.215, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.10069902746706909;  // std dev = 0.890, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.23321299947652646;  // std dev = 0.514, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.16559161800521552;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.08359775071095576;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16256076907782419;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.2795682100674446;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3713627420798329;  // std dev = 0.252, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.28802957396232703;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04268747798905766;  // std dev = 1.717, 97.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=16 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.007955664659328128;  // std dev = 2.814, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.06452845993206564;  // std dev = 3.250, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15444402757947318;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1416870696917663;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.13762733268016875;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( function(A, G), interaction(H, E) )
%   | | | then return 0.2794625784818958;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.34290640607985584;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.0862681006298424;  // std dev = 0.834, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.08941233292842456;  // std dev = 1.226, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return -0.02718540550545357;  // std dev = 1.135, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.027316040283021335;  // std dev = 4.385, 188.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=60 */


Results
   AUC ROC   = 0.964983
   AUC PR    = 0.146475
   CLL	      = -0.215988
   Precision = 0.108896 at threshold = 0.5
   Recall    = 0.682692
   F1        = 0.187831


Total learning time: 83.486 seconds
Total inference time: 72.623 seconds
AUC ROC: 0.964983


Results scoring model
   AUC ROC   = 0.985292
   AUC PR    = 0.3109
   CLL	      = -0.195376
   Precision = 0.343612 at threshold = 0.5
   Recall    = 0.735849
   F1        = 0.468468


Total scoring time: 131.657 seconds
Refined model CLL: -0.195376


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.964983
   AUC PR    = 0.146475
   CLL	      = -0.215988
   Precision = 0.108896 at threshold = 0.5
   Recall    = 0.682692
   F1        = 0.187831


Total learning time: 291.821 seconds
Total inference time: 72.623 seconds
AUC ROC: 0.964983
Total revision time: 291.821
Best scored revision CLL: -0.195376


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 05:37:21
{'AUC ROC': 0.964983, 'AUC PR': 0.146475, 'CLL': -0.215988, 'Precision': [0.108896, 0.5], 'Recall': 0.682692, 'F1': 0.187831, 'Learning time': 291.821, 'Inference time': 72.623, 'parameter_0.4': {'AUC ROC': 0.957595, 'AUC PR': 0.125708, 'CLL': -0.218615, 'Precision': [0.08525, 0.5], 'Recall': 0.605769, 'F1': 0.149466, 'Learning time': 18.654, 'Inference time': 49.071}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15692942290439063;  // std dev = 5.862, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | | | else return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7194734122109543;  // std dev = 4.21e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7002426429801853;  // std dev = 0.990, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | else return -0.12544463852839136;  // std dev = 3.65e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.822349225348041;  // std dev = 0.177, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.16219940253458837;  // std dev = 0.003, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19479318417444835;  // std dev = 4.681, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.17007188396566275;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5557052613654174;  // std dev = 0.005, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5568909177763601;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6360957745841328;  // std dev = 0.404, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.12287208069650188;  // std dev = 0.141, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4965429073345199;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5591397109138995;  // std dev = 0.013, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.11231637819360617;  // std dev = 9.77e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13789345310615428;  // std dev = 5.377, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.30937389121826286;  // std dev = 1.100, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.43188481825417974;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2890276753970369;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.49164052162919264;  // std dev = 0.303, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3652112434732238;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.41721343466860356;  // std dev = 0.005, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.01102287561328863;  // std dev = 3.235, 214.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=48 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04740191519312803;  // std dev = 2.653, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.11327297666635415;  // std dev = 5.196, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2650947635043424;  // std dev = 0.970, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.3561349536430084;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3100834534772002;  // std dev = 1.351, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return 0.41559192846845466;  // std dev = 0.038, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.10259607719333488;  // std dev = 0.044, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3062056855116235;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.48534116913903075;  // std dev = 0.303, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.06191608867728418;  // std dev = 2.570, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.09647704620875214;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.28194754031729424;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.28720821311317646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2731022258774357;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2794719823454603;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, G) )
%   | then return 0.004785050617839924;  // std dev = 2.938, 249.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=64 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47257083284079676;  // std dev = 0.527, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.13964824326834224;  // std dev = 0.002, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07059542541003191;  // std dev = 5.318, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.16275521786505917;  // std dev = 1.366, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2852070443141811;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.44995010355542286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.009716218869590648;  // std dev = 5.572, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.2254823442189499;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23168878246154245;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return -1.0876983838089956E-4;  // std dev = 2.004, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.10015481311055194;  // std dev = 0.687, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07331013242895368;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2054621126537235;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19236837406941598;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12329851888455126;  // std dev = 1.224, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, G) )
%   | then return 0.006493208824771041;  // std dev = 2.813, 243.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=64 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.25571313984771216;  // std dev = 0.226, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04273500124127695;  // std dev = 5.070, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.120055792026314;  // std dev = 0.627, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.047053625342960474;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17846270107549997;  // std dev = 0.041, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18354883161715507;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.1590671038023284;  // std dev = 0.076, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.259716974135695;  // std dev = 0.286, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2800899108359346;  // std dev = 0.210, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.00814424505723243;  // std dev = 2.754, 229.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=61 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04361327207101992;  // std dev = 4.919, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   | | | else return 0.06934103259170524;  // std dev = 2.455, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1537960744004585;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.15898592744457118;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14647415140807232;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08622352914355765;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.18722363828677424;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20015064467920335;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return -0.041990719376264765;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2814495595057175;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.02274443415799599;  // std dev = 6.138, 408.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=122 */


Results
   AUC ROC   = 0.916734
   AUC PR    = 0.183205
   CLL	      = -0.233179
   Precision = 0.142857 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.233216


Total learning time: 4.62 seconds
Total inference time: 9.679 seconds
AUC ROC: 0.916734


Results scoring model
   AUC ROC   = 0.957999
   AUC PR    = 0.364151
   CLL	      = -0.193574
   Precision = 0.391447 at threshold = 0.5
   Recall    = 0.748428
   F1        = 0.514039


Total scoring time: 9.93 seconds
Parameter learned model CLL: -0.193574


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 21], 'false,true,true,true': [1.69e-07, 0, 28], 'false,true,true,false': [2.53e-07, 0, 36], 'false,true,false': [0.0, 172, 0], 'false,false,true': [0.943, 1, 8], 'false,false,false,true': [5.862, 115, 49], 'false,false,false,false': [2.882, 27, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 16], 'true,false': [2.98e-08, 0, 10], 'false,true,true,true': [4.21e-08, 0, 13], 'false,true,true,false': [0.99, 1, 51], 'false,true,false': [3.65e-08, 158, 0], 'false,false,true,true': [0.177, 0, 25], 'false,false,true,false': [0.003, 64, 0], 'false,false,false,true': [4.681, 62, 35], 'false,false,false,false': [2.449, 18, 9]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.005, 0, 14], 'true,true,false,true': [0.002, 0, 4], 'true,true,false,false': [0.404, 0, 37], 'true,false': [0.141, 102, 0], 'false,true': [0.97, 1, 16], 'false,false,true,true': [0.013, 0, 44], 'false,false,true,false': [9.77e-08, 132, 0], 'false,false,false,true': [5.377, 89, 44], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [1.1, 2, 13], 'true,false,true': [1.49e-08, 0, 7], 'true,false,false': [0.926, 1, 6], 'false,true,true': [0.303, 0, 7], 'false,true,false': [0.815, 1, 4], 'false,false,true,true': [0.005, 0, 13], 'false,false,true,false': [3.235, 166, 48], 'false,false,false,true': [2.653, 60, 21], 'false,false,false,false': [5.196, 83, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.97, 1, 13], 'true,false': [0.028, 0, 13], 'false,true,true,true': [1.351, 2, 33], 'false,true,true,false': [0.038, 0, 31], 'false,true,false': [0.044, 149, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.303, 0, 6], 'false,false,false,true': [2.57, 51, 21], 'false,false,false,false': [5.185, 82, 40]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.022, 0, 9], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.01, 0, 3], 'true,false': [0.019, 0, 13], 'false,true': [2.938, 185, 64], 'false,false,true,true': [0.527, 0, 25], 'false,false,true,false': [0.002, 44, 0], 'false,false,false,true': [5.318, 90, 44], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.366, 4, 28], 'true,true,false,true': [0.234, 0, 4], 'true,true,false,false': [0.0, 0, 1], 'true,false': [5.572, 228, 83], 'false,true,true': [0.009, 0, 4], 'false,true,false': [0.0, 0, 3], 'false,false,true': [2.004, 70, 24], 'false,false,false,true': [0.687, 4, 3], 'false,false,false,false': [2.449, 18, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [1.224, 2, 21], 'false,true': [2.813, 179, 64], 'false,false,true,true': [0.226, 0, 5], 'false,false,true,false': [5.07, 104, 52], 'false,false,false,true': [0.627, 3, 3], 'false,false,false,false': [2.471, 19, 9]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.041, 0, 15], 'true,true,false': [0.0, 0, 0], 'true,false': [0.054, 0, 11], 'false,true,true,true': [0.076, 0, 2], 'false,true,true,false': [0.286, 0, 5], 'false,true,false': [0.21, 0, 4], 'false,false,true': [2.754, 168, 61], 'false,false,false,true': [4.919, 103, 49], 'false,false,false,false': [2.455, 23, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.036, 0, 15], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.007, 0, 4], 'true,false,false': [1.231, 2, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.003, 0, 2], 'false,true,false,true': [0.475, 1, 3], 'false,true,false,false': [0.216, 0, 5], 'false,false': [6.138, 286, 122]}]]
[{'': [8.198570028001156e-16, 0.2087402343750003], 'false': [0.1976443550703825, 0.21953987184051277], 'false,false': [0.09876543209876527, 0.21019680166953855], 'false,false,false': [0.209510707911958, 0.21301775147928945], 'false,true': [-8.881784197001252e-16, -1.8073398075293246e-16], 'true': [0.0, -3.383536836952858e-16], 'true,true': [0.0, 0.0], 'false,true,true': [1.0150610510858574e-15, 1.7763568394002505e-15]}, {'': [-2.049642507000289e-16, 0.18013784370512884], 'false': [0.14652658165223043, 0.214437571513677], 'false,false': [0.19615198539460013, 0.22520834630572256], 'false,false,false': [0.22590646409273063, 0.22222222222222243], 'false,false,true': [0.0012500482795472579, 1.611347821943443e-07], 'false,true': [0.015147928994083114, 8.432073604748025e-18], 'false,true,true': [1.3664283380001927e-16, 0.018860946745561706], 'true': [1.1102230246251565e-16, 8.881784197001253e-17]}, {'': [0.12386332712009315, 0.14690519063131785], 'false': [0.05536332179930776, 0.1433646951139064], 'false,false': [0.08453590519906909, 0.21735109774916883], 'false,false,false': [0.21735109774916883, nan], 'true': [0.004386963355559072, 0.00019580826257273364], 'false,false,true': [3.661096614558026e-06, 7.233271221042686e-17], 'true,true': [1.4924275927466875e-06, 0.0045404559704908054], 'true,true,false': [7.746808036723785e-07, 0.004419192390333393]}, {'': [0.07438907336336696, 0.11178834578784132], 'false': [0.0668496186533637, 0.10913482302234666], 'false,false': [0.05500286273726916, 0.16789973271130498], 'false,false,false': [0.08690902828627371, 0.21951223770901096], 'true': [0.08065439951401615, 0.06632653061224482], 'false,true': [0.013109398363153993, 0.13276171567421777], 'true,false': [3.172065784643304e-17, 0.12244897959183676], 'false,false,true': [2.1228254638572253e-06, 0.04889521854855507]}, {'': [0.03696424336675212, 0.11224960903476026], 'false': [0.05481622303928936, 0.17161561192007602], 'false,false': [0.01750594225113128, 0.17292579415976966], 'false,false,false': [0.09174232148879297, 0.2203940471390028], 'false,true': [0.03046498961707836, 1.3219851417249339e-05], 'true': [0.06723980176481785, 6.21504134841018e-05], 'false,true,true': [0.05217811539862489, 4.6816545022777507e-05], 'false,false,true': [0.0, 0.015318875961235415]}, {'': [4.4503823571394e-05, 0.09672582583802607], 'false': [0.034677675815924715, 0.17015446693760067], 'false,false': [0.09062245383725405, 0.21106197952832986], 'false,false,false': [0.21106197952832986, nan], 'false,false,true': [0.01110716723944087, 7.324242797863095e-08], 'true': [6.155559028333876e-05, 2.7100097449507852e-05], 'true,true': [5.332054082680177e-05, 6.0499190874488407e-05], 'true,true,false': [0.0, 3.092086885891909e-05]}, {'': [0.09797914669770375, 0.08097613369580521], 'true': [0.05530994458293856, 0.09983510163278154], 'false': [2.2055956427743544e-05, 0.083175472481694], 'false,false': [0.04271662100909999, 0.19045535549849488], 'false,false,false': [0.06735374195701997, 0.22222222222222207], 'true,true': [0.05830599823548477, 0.01524932339214331], 'true,true,false': [0.013633599126546492, 0.0], 'false,true': [2.2089405608917423e-05, 0.0]}, {'': [0.054417407550819696, 0.09277506213316582], 'false': [0.03256620692971125, 0.16669593094153787], 'false,false': [0.16134082448924042, 0.19196139110720095], 'false,false,false': [0.06553522466602672, 0.21811224489795888], 'false,false,true': [0.010181890638710788, 0.16477697616469644], 'true': [2.743135841826727e-05, 0.06511142568061057], 'true,true': [0.0, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.000180404029812466, 0.0905858379353327], 'false': [0.013821110529260746, 0.09133950670679605], 'false,false': [0.03311105317719079, 0.1617526710711663], 'false,false,false': [0.15921543747995448, 0.17223348476679756], 'false,true': [0.014559286980070332, 0.01099327196406362], 'false,true,true': [0.002870053790967674, 0.016340581284818946], 'true': [0.00011072282624849569, 0.0002604995890734414], 'true,true': [0.00011072282624849569, nan]}, {'': [0.06580706609325458, 0.09138557609432998], 'false': [0.04270459325996242, 0.09233829577745901], 'true': [8.782947772499513e-05, 0.12965430589721333], 'true,false': [3.462136313284181e-05, 0.1893900484152437], 'false,true': [4.075194074817934e-05, 0.056080712339742225], 'false,true,false': [0.056406521564353766, 0.009325125403051004], 'false,true,true': [0.0, 5.425413032299209e-06], 'true,false,true': [0.0, 1.196779599855341e-05]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;true;complex(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,true;interaction(H, I), recursion_proteinclass(I, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;complex(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), complex(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995126;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | | else return -0.14185106490048827;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.11550187627598149;  // std dev = 5.098, 136.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then return 0.40685858799906804;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7040887968263387;  // std dev = 0.123, 65.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7773940383476288;  // std dev = 0.296, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.14592423736811785;  // std dev = 0.172, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1140712061086825;  // std dev = 3.234, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.17841176510813025;  // std dev = 3.982, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5620992054984816;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5984021155076529;  // std dev = 0.071, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.11641179527629346;  // std dev = 0.108, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, A), location(A, H) )
%   | | then return 0.3545983740285299;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.5661939492686527;  // std dev = 0.102, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5591621219443421;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.11231637819360618;  // std dev = 8.56e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.22952533122213678;  // std dev = 3.003, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.16579250263057274;  // std dev = 3.803, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.24248527510638568;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4303399202056504;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4291779871782436;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.41780352522705894;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6107743038028204;  // std dev = 0.216, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.38287608691136843;  // std dev = 0.502, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.016603509060342643;  // std dev = 3.161, 211.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=48 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.18472855857841416;  // std dev = 2.264, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.09527256699268567;  // std dev = 4.790, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3355177288226222;  // std dev = 0.089, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3412291206581601;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3419440534572449;  // std dev = 0.972, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return 0.4147618835539238;  // std dev = 0.019, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.10300232937770143;  // std dev = 0.002, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3298438307581125;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4458463011140219;  // std dev = 0.232, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.10743046055660403;  // std dev = 2.341, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.030020464229057263;  // std dev = 4.987, 184.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26756262195149716;  // std dev = 0.032, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return -0.06769956463660715;  // std dev = 0.641, 41.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=3 */
%   | | | else return 0.05138137991845551;  // std dev = 0.665, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.0015561512348074165;  // std dev = 1.569, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.0460420080451142;  // std dev = 1.976, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4196968250169642;  // std dev = 0.552, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.13289569992476583;  // std dev = 0.174, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09090584712317602;  // std dev = 4.300, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.021465471993920016;  // std dev = 2.370, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.21102783391587152;  // std dev = 0.179, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.09281882734629113;  // std dev = 0.052, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.06914139090958883;  // std dev = 1.821, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.02018908612343387;  // std dev = 4.685, 222.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=64 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( complex(A, I) )
%   | | then return 0.037452241377764525;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.19824095128248542;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.012890910338614864;  // std dev = 0.198, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.023486971793723534;  // std dev = 2.519, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.10615458164113689;  // std dev = 0.957, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19519943075028484;  // std dev = 0.030, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(D, D), interaction(E, A) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return -0.0074332514491814074;  // std dev = 0.376, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.07323391899394066;  // std dev = 0.313, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.18956601872205794;  // std dev = 0.324, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -1.8084831526550308E-4;  // std dev = 2.104, 149.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.42115007216339945;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.02780552100595633;  // std dev = 1.763, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.033232337509452745;  // std dev = 4.801, 204.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=64 */
%   | | | else return 0.17290119117568642;  // std dev = 0.847, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16649450589219522;  // std dev = 0.027, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( enzyme(D, G) )
%   | | | then return -0.018211277851692624;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.10091299241842565;  // std dev = 0.772, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.06868267050607643;  // std dev = 0.361, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.02338625582326718;  // std dev = 0.639, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.29263265202309197;  // std dev = 2.155, 72.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=60 */
%   | | | else return -0.14474561384397278;  // std dev = 0.794, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, K) )
%   | | | then return 0.037056223577396144;  // std dev = 4.205, 177.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=55 */
%   | | | else return 0.239285874778971;  // std dev = 0.705, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.1356532737863079;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.3471605715416958;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.08123115515793328;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then if ( interaction(G, F), complex(A, H) )
%   | | | then return -0.3020013385107393;  // std dev = 0.692, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.16158227624192772;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.12879607032243806;  // std dev = 0.266, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.01685005322939957;  // std dev = 0.174, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | | else if ( location(A, J) )
%   | | | then return 0.010162496386958831;  // std dev = 5.240, 322.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=97 */
%   | | | else return 0.13814914735608835;  // std dev = 0.841, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */


Results
   AUC ROC   = 0.965863
   AUC PR    = 0.183539
   CLL	      = -0.209031
   Precision = 0.15894 at threshold = 0.5
   Recall    = 0.692308
   F1        = 0.258528


Total learning time: 10.468 seconds
Total inference time: 9.562 seconds
AUC ROC: 0.965863


Results scoring model
   AUC ROC   = 0.988042
   AUC PR    = 0.457127
   CLL	      = -0.169645
   Precision = 0.409836 at threshold = 0.5
   Recall    = 0.786164
   F1        = 0.538793


Total scoring time: 11.361 seconds
Refined model CLL: -0.169645


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.965863
   AUC PR    = 0.183539
   CLL	      = -0.209031
   Precision = 0.15894 at threshold = 0.5
   Recall    = 0.692308
   F1        = 0.258528


Total learning time: 36.379000000000005 seconds
Total inference time: 9.562 seconds
AUC ROC: 0.965863
Total revision time: 36.379000000000005
Best scored revision CLL: -0.169645


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 05:38:17
{'AUC ROC': 0.965863, 'AUC PR': 0.183539, 'CLL': -0.209031, 'Precision': [0.15894, 0.5], 'Recall': 0.692308, 'F1': 0.258528, 'Learning time': 36.379000000000005, 'Inference time': 9.562, 'parameter_0.6': {'AUC ROC': 0.916734, 'AUC PR': 0.183205, 'CLL': -0.233179, 'Precision': [0.142857, 0.5], 'Recall': 0.634615, 'F1': 0.233216, 'Learning time': 4.62, 'Inference time': 9.679}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8093684472946338;  // std dev = 1.379, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return 0.8581489350995121;  // std dev = 2.06e-07, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.1418510649004885;  // std dev = 0.000, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17814893509951368;  // std dev = 6.597, 200.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=64 */
%   | | | else return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.6425503352878774;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.726348166733207;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.7232844174352462;  // std dev = 0.039, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | | else return -0.12544463852839186;  // std dev = 0.000, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.476350050875923;  // std dev = 5.527, 136.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=88 */
%   | | | else return -0.16433454015449114;  // std dev = 0.016, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17235165359458668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5588050732944877;  // std dev = 0.038, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5116426618391894;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.2925675034494394;  // std dev = 6.620, 223.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=121 */
%   | else return -0.12837018363177607;  // std dev = 0.246, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5648190011038219;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5602284718558829;  // std dev = 0.034, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.11231637819360614;  // std dev = 2.79e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.3143595625051828;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then return 0.432662665946715;  // std dev = 0.173, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.4152165665067469;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.4259341441857057;  // std dev = 0.570, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.5462367574385807;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3970555178621755;  // std dev = 0.511, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.007301827088388763;  // std dev = 4.105, 304.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=64 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.11330079321981475;  // std dev = 6.458, 241.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=79 */
%   | | | else return 0.7621006154396499;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.2714032748702338;  // std dev = 0.961, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.29820371406034124;  // std dev = 0.834, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.38650083980551014;  // std dev = 1.095, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | | else return 0.43380726472281794;  // std dev = 0.207, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.1093429251964253;  // std dev = 0.248, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.07470619909170566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11525657264769022;  // std dev = 1.464, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.08379594750870573;  // std dev = 6.446, 254.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=79 */
%   | | | else return 0.09919934196788738;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2604077211510003;  // std dev = 0.014, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.2856903799532913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20790748206487197;  // std dev = 0.926, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.28433859652969545;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G) )
%   | then return 0.020478956501369543;  // std dev = 3.390, 309.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=86 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.329299854301349;  // std dev = 5.195, 127.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=88 */
%   | | | else return -0.15152557977681785;  // std dev = 0.017, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.5751588185572065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2247824619690075;  // std dev = 0.406, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | else if ( location(A, F) )
%   | | | then return 0.18312292056411245;  // std dev = 1.048, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004456246442499516;  // std dev = 6.112, 423.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=106 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H) )
%   | | then return 0.1311611423839137;  // std dev = 0.962, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.022318739291869047;  // std dev = 2.059, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.03345196197231985;  // std dev = 2.736, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.2343064648427197;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.17862611277536894;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18242794824726472;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16571994191074166;  // std dev = 0.978, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, G) )
%   | then return -0.001856948331922508;  // std dev = 3.438, 354.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3829015693488987;  // std dev = 0.279, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.010194630193522977;  // std dev = 5.585, 242.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=68 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08165796817840207;  // std dev = 2.460, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return -0.3666221095123578;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12227595933223649;  // std dev = 0.838, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return -0.4760868622366378;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.12306471702055176;  // std dev = 0.992, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( location(E, G), interaction(F, A) )
%   | | | then return 0.20255812156722824;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13965360962068102;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.2823243779533733;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then return 0.007224346319220189;  // std dev = 3.437, 303.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.02907945042059205;  // std dev = 5.478, 205.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=64 */
%   | | | else return 0.010306757765167153;  // std dev = 2.720, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.047211803819809633;  // std dev = 1.483, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( location(A, E), location(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.15243033378139503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17832378668964022;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.2568187100685715;  // std dev = 0.637, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), location(A, I) )
%   | | | then return 0.16774418529574886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.3908500888003213;  // std dev = 1.116, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( location(A, J), interaction(K, G) )
%   | | | then return 0.10492702025550864;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23494233143768825;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.014238277590278027;  // std dev = 7.005, 558.000 (wgt'ed) examples reached here.  /* #neg=395 #pos=163 */


Results
   AUC ROC   = 0.947604
   AUC PR    = 0.144128
   CLL	      = -0.235531
   Precision = 0.058997 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.107047


Total learning time: 34.893 seconds
Total inference time: 40.141 seconds
AUC ROC: 0.947604


Results scoring model
   AUC ROC   = 0.973183
   AUC PR    = 0.321136
   CLL	      = -0.191906
   Precision = 0.295806 at threshold = 0.5
   Recall    = 0.632075
   F1        = 0.403008


Total scoring time: 132.033 seconds
Parameter learned model CLL: -0.191906


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 16], 'true,true,false': [0.0, 0, 2], 'true,false': [0.0, 0, 19], 'false,true,true,true': [1.379, 2, 39], 'false,true,true,false': [2.06e-07, 0, 47], 'false,true,false': [0.0, 227, 0], 'false,false,true': [0.949, 1, 9], 'false,false,false,true': [6.597, 136, 64], 'false,false,false,false': [3.368, 39, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'location(A, G)', 'false,false,true': 'location(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [4.21e-08, 0, 25], 'true,false': [0.961, 1, 12], 'false,true,true,true': [0.018, 0, 17], 'false,true,true,false': [0.039, 0, 69], 'false,true,false': [0.0, 244, 0], 'false,false,true,true': [5.527, 48, 88], 'false,false,true,false': [0.016, 129, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), location(A, D)', 'true': 'location(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.038, 0, 41], 'true,true,false,true': [0.931, 1, 8], 'true,true,false,false': [6.62, 102, 121], 'true,false': [0.246, 256, 0], 'false,true': [0.027, 0, 8], 'false,false,true,true': [0.034, 0, 33], 'false,false,true,false': [2.79e-08, 77, 0], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true': [0.173, 0, 35], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.57, 1, 8], 'false,true,false': [0.075, 0, 4], 'false,false,true,true': [0.511, 1, 19], 'false,false,true,false': [4.105, 240, 64], 'false,false,false,true': [6.458, 162, 79], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), location(A, L)'}, {'true,true': [0.961, 1, 20], 'true,false': [0.834, 1, 17], 'false,true,true,true': [1.095, 1, 43], 'false,true,true,false': [0.207, 0, 43], 'false,true,false': [0.248, 212, 0], 'false,false,true,true': [0.816, 1, 2], 'false,false,true,false': [1.464, 3, 7], 'false,false,false,true': [6.446, 175, 79], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'location(A, H)', 'false,false,true': 'location(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.014, 0, 22], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.926, 1, 11], 'true,false': [0.052, 0, 3], 'false,true': [3.39, 223, 86], 'false,false,true,true': [5.195, 39, 88], 'false,false,true,false': [0.017, 138, 0], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'location(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'location(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.406, 1, 42], 'true,true,false,true': [1.048, 2, 5], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.112, 317, 106], 'false,true,true': [0.962, 1, 9], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.059, 85, 34], 'false,false,false,true': [2.736, 32, 15], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), location(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J)'}, {'true,true,true': [0.0, 0, 16], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [0.978, 1, 19], 'false,true': [3.438, 268, 86], 'false,false,true,true': [0.279, 0, 5], 'false,false,true,false': [5.585, 174, 68], 'false,false,false,true': [2.46, 28, 15], 'false,false,false,false': [0.926, 6, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'location(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.838, 1, 23], 'true,true,false': [0.806, 2, 1], 'true,false': [0.992, 1, 13], 'false,true,true,true': [0.007, 0, 2], 'false,true,true,false': [0.908, 1, 6], 'false,true,false': [0.091, 0, 4], 'false,false,true': [3.437, 220, 83], 'false,false,false,true': [5.478, 141, 64], 'false,false,false,false': [2.72, 40, 16]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'location(A, E), location(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), location(A, I)', 'false,true,false': 'location(A, J), interaction(K, G)'}, {'true,true': [1.483, 3, 24], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.113, 0, 11], 'true,false,false': [0.637, 1, 1], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.116, 3, 2], 'false,true,false,true': [0.903, 1, 6], 'false,true,false,false': [0.076, 0, 3], 'false,false': [7.005, 395, 163]}]]
[{'': [1.8243664837083652e-15, 0.21068668252080938], 'false': [0.19847820609725442, 0.22305446778212992], 'false,false': [0.08999999999999977, 0.2153018069973092], 'false,false,false': [0.21760000000000024, 0.20628099173553668], 'false,true': [0.022210743801652878, -2.2302277499078035e-16], 'false,true,true': [0.04640095181439758, 9.070758328852342e-16], 'true': [-2.9605947323337506e-16, -2.8047739569477637e-16], 'true,true': [-2.220446049250313e-16, 0.0]}, {'': [0.025623268698060267, 0.1755126475690238], 'false': [0.1390071868424943, 0.21786186678775704], 'false,false': [0.21781180882931936, 0.22222222222222224], 'false,false,false': [nan, 0.22222222222222224], 'false,false,true': [0.22459377759151736, 2.0626922875618207e-06], 'false,true': [2.3507979530576937e-05, -7.462154755677281e-17], 'true': [7.105427357601002e-17, 0.0710059171597634], 'false,true,true': [1.969260405901122e-05, 2.2592516830690183e-05]}, {'': [0.14448019919348304, 0.10590574000148127], 'true': [0.1736845149722008, 0.0002355114335382269], 'true,true': [3.459278211809924e-05, 0.19439607514297177], 'true,true,false': [0.09622644976482, 0.19649624466259888], 'false': [8.935097293338856e-05, 0.09865231151458308], 'false,false': [0.09499722060643616, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [3.579929178967794e-05, 1.0092936587501423e-17]}, {'': [0.0008270752797040212, 0.11300797393284057], 'false': [0.028478096038194376, 0.11143906450585872], 'false,false': [0.06161381433402949, 0.1740481764664359], 'false,false,false': [0.17303094158526872, 0.0], 'false,false,true': [0.013038613333119332, 0.05543251794125641], 'false,true': [0.03606117477657748, 0.0013965943538138959], 'true': [0.000857884487195396, 0.0], 'true,false': [0.0, nan]}, {'': [0.04170169937560884, 0.11112127810097619], 'false': [0.06014526827442262, 0.16679799780962556], 'false,false': [0.2165368349566305, 0.1642488443321151], 'false,false,true': [0.2222222222222222, 0.21445175736259992], 'false,false,false': [0.16357178475259246, 0.25], 'false,true': [0.014848366751688049, 0.00029014651939065995], 'true': [0.04401226861589474, 0.038619277970751625], 'false,true,true': [0.027275393416141804, 0.0010005290660727538]}, {'': [0.023366757597393834, 0.0948424165269976], 'false': [0.037188948243356466, 0.1598621667580371], 'false,false': [0.1595396114523905, 0.0], 'false,false,true': [0.21250049245728408, 2.0482378096721816e-06], 'true': [0.02515943569424663, 0.0008880957875881298], 'true,true': [8.925888288794068e-06, 0.06636171793246651], 'true,true,false': [0.0, 0.07142646269320384], 'false,false,false': [0.0, nan]}, {'': [0.0860319500763564, 0.07618342018424483], 'true': [0.025465188301547502, 0.08832775652798558], 'false': [0.09248871361874096, 0.07453891965117942], 'false,true': [0.09248871361874096, nan], 'false,false': [0.03563752991057044, 0.16710709727896803], 'false,false,false': [0.15928743607263454, 0.2222222222222222], 'true,true': [0.00384201610030136, 0.15680070115374548], 'true,true,false': [0.15680070115374548, nan]}, {'': [0.025192458290445297, 0.07981538895275983], 'false': [0.033389675103854356, 0.1349380893755129], 'false,false': [0.12937775143456806, 0.16240504079240511], 'false,false,false': [0.1407758119439467, 0.12244897959183676], 'false,false,true': [0.015602291683609914, 0.12891653139197437], 'true': [1.4275509091437538e-06, 0.04778023524609865], 'true,true': [-2.0816681711721685e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.08132686371030382, 0.08764386121408026], 'false': [0.06803095936565197, 0.0873840385445224], 'false,false': [0.03898397156873483, 0.14340188330515174], 'false,false,false': [0.1463978809997142, 0.13215759148472414], 'true': [0.08548186956587801, 0.07033328204684854], 'true,true': [0.029284073970959123, 0.21680817544890518], 'false,true': [0.09225634279746317, 0.0020581043558324102], 'false,true,true': [2.121306497655795e-05, 0.11772990864602657]}, {'': [0.07270316485194597, 0.09090099247075209], 'false': [0.19335030718443436, 0.08792737728198599], 'false,true': [0.2507839466573545, 0.08573378503038268], 'false,true,true': [0.0, 0.24893614214667278], 'false,true,false': [0.1165770103325833, 0.0019334725259885406], 'true': [0.0814561249699372, 0.052857521802662004], 'true,false': [0.0011102414311481474, 0.2026476969675618], 'true,false,true': [0.0, 0.0011552998950508048]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), location(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;location(A, G).;true;true
1;false,false,true;location(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), location(A, D).;true;true
2;true;location(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;location(A, D).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
3;false,false;interaction(A, H).;true;true
3;false,false,false;location(A, J), interaction(K, A).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;location(A, D), location(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;location(A, H).;true;true
5;false,false,true;location(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), location(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;location(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;location(A, E), location(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), location(A, I).;true;true
9;false,true,false;location(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8093684472946338;  // std dev = 1.379, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | | else return 0.8373156017661788;  // std dev = 0.990, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | else return -0.1418510649004884;  // std dev = 0.000, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2635543405049178;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.14199172985933908;  // std dev = 6.823, 229.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=65 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7269727907936563;  // std dev = 0.028, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.22240285696982237;  // std dev = 0.994, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.727579205592396;  // std dev = 0.010, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6841520512301775;  // std dev = 1.696, 72.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=69 */
%   | | else return -0.12544463852839177;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4745294708941837;  // std dev = 5.543, 136.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=88 */
%   | | | else return -0.16318195554455964;  // std dev = 0.077, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return 0.33997045580354723;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5739375455134236;  // std dev = 0.149, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.5283075197655065;  // std dev = 0.658, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.11231637819360629;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.3544051318142646;  // std dev = 6.367, 205.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=129 */
%   | else return -0.13071676495565615;  // std dev = 0.240, 259.000 (wgt'ed) examples reached here.  /* #neg=259 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5544401286050374;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5428813606313906;  // std dev = 0.982, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.11231637819360614;  // std dev = 2.98e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else return 0.7888550647203374;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A) )
%   | | then return 0.43926922110318206;  // std dev = 0.174, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.08379788777847963;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4168273937763117;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.415915911769808;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.512506190753801;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10054836430410342;  // std dev = 0.005, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.04955771695390934;  // std dev = 4.421, 291.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=83 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.10436027139179588;  // std dev = 6.430, 244.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=79 */
%   | | | else return 0.12929248112843916;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(G, D) )
%   | | then return 0.14390671528517912;  // std dev = 0.801, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.32978505950603926;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3406086348884773;  // std dev = 0.176, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.42733040353374413;  // std dev = 0.112, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else return -0.10903913477964977;  // std dev = 0.288, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(K, L), enzyme(K, M) )
%   | | | then return -0.004800968801995406;  // std dev = 2.669, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.08891602660850467;  // std dev = 5.390, 181.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=62 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.32658468292236853;  // std dev = 1.060, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12722386747965514;  // std dev = 2.376, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.2416420399595702;  // std dev = 0.172, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0.2631984587666187;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.0683970866075861;  // std dev = 1.163, 57.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=5 */
%   | | | else return 0.018398450679117186;  // std dev = 1.202, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.03771263593669743;  // std dev = 2.297, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.009096634286342522;  // std dev = 2.338, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2828827804508139;  // std dev = 5.417, 135.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=88 */
%   | | | else return -0.15031322712256254;  // std dev = 0.107, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else return 0.06774738505373012;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), enzyme(C, E) )
%   | then return 0.059248965040503546;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.22883495247956365;  // std dev = 0.110, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.31960121339232794;  // std dev = 0.056, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.010249792723214801;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.08665885276348015;  // std dev = 0.062, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return 0.009766494025031448;  // std dev = 6.127, 365.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=100 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22763628185442672;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.007647851344645695;  // std dev = 2.032, 122.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=30 */
%   | | | else return 0.09903912257778295;  // std dev = 2.602, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.18275559609853725;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.12986668056821407;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return -0.139712717651426;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2055166928784198;  // std dev = 0.107, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, G), location(A, H) )
%   | then return -0.005204343116367427;  // std dev = 0.203, 317.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=79 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23101800127857838;  // std dev = 5.229, 130.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | | | else return -0.13420814014304955;  // std dev = 0.105, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2487874106271482;  // std dev = 0.452, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10133923061334205;  // std dev = 0.636, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17142678980621728;  // std dev = 0.124, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else return 0.016324141147508527;  // std dev = 0.356, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( location(E, G), interaction(F, A) )
%   | | | then return 0.2060688687665333;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.039880796529714574;  // std dev = 0.979, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.23931628011296016;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return -0.08360948735768693;  // std dev = 1.254, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return -0.00815490573499922;  // std dev = 2.703, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.040603144749948694;  // std dev = 3.998, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   | | | else return 0.00438173220046021;  // std dev = 4.661, 277.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=79 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10335125586845717;  // std dev = 0.177, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.17023596397134974;  // std dev = 0.017, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.19312208606859171;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, G), interaction(H, E) )
%   | | | then return 0.07468674744037297;  // std dev = 0.907, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1959057380570857;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.07417582615230577;  // std dev = 1.405, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return -0.002004268345607803;  // std dev = 5.215, 310.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=87 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.005342737070287941;  // std dev = 1.485, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.043997009892817074;  // std dev = 3.678, 172.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=57 */


Results
   AUC ROC   = 0.946643
   AUC PR    = 0.16253
   CLL	      = -0.22397
   Precision = 0.051084 at threshold = 0.5
   Recall    = 0.634615
   F1        = 0.094556


Total learning time: 65.873 seconds
Total inference time: 62.395 seconds
AUC ROC: 0.946643


Results scoring model
   AUC ROC   = 0.973333
   AUC PR    = 0.291227
   CLL	      = -0.193
   Precision = 0.111903 at threshold = 0.5
   Recall    = 0.740566
   F1        = 0.194427


Total scoring time: 150.611 seconds
Refined model CLL: -0.193


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.947604
   AUC PR    = 0.144128
   CLL	      = -0.235531
   Precision = 0.058997 at threshold = 0.5
   Recall    = 0.576923
   F1        = 0.107047


Total learning time: 383.40999999999997 seconds
Total inference time: 40.141 seconds
AUC ROC: 0.947604
Total revision time: 383.40999999999997
Best scored revision CLL: -0.191906


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 05:46:24
{'AUC ROC': 0.947604, 'AUC PR': 0.144128, 'CLL': -0.235531, 'Precision': [0.058997, 0.5], 'Recall': 0.576923, 'F1': 0.107047, 'Learning time': 383.40999999999997, 'Inference time': 40.141, 'parameter_0.8': {'AUC ROC': 0.947604, 'AUC PR': 0.144128, 'CLL': -0.235531, 'Precision': [0.058997, 0.5], 'Recall': 0.576923, 'F1': 0.107047, 'Learning time': 34.893, 'Inference time': 40.141}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7581489350995123;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7066337835843611;  // std dev = 2.913, 66.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=56 */
%   | | | else return 0.8276145839544722;  // std dev = 1.969, 131.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=127 */
%   | | else return -0.14185106490048738;  // std dev = 2.92e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.138522766875212;  // std dev = 4.646, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | | else return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6879877551003595;  // std dev = 0.967, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6045581056848072;  // std dev = 1.330, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6243309988469683;  // std dev = 1.617, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.6900619449935759;  // std dev = 2.565, 168.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=161 */
%   | | else return -0.12544463852839227;  // std dev = 0.000, 420.000 (wgt'ed) examples reached here.  /* #neg=420 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46232923868990644;  // std dev = 3.935, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | | | else return -0.15843013564200673;  // std dev = 0.021, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5708703948610303;  // std dev = 0.709, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6268544763647499;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31875636928506085;  // std dev = 5.161, 157.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=92 */
%   | else return -0.1212699164671125;  // std dev = 0.419, 213.000 (wgt'ed) examples reached here.  /* #neg=213 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6021429807397777;  // std dev = 0.030, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4785542590631405;  // std dev = 3.259, 119.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=107 */
%   | | | else return -0.11231637819360679;  // std dev = 0.000, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.41933064668929987;  // std dev = 0.994, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.41126141319945986;  // std dev = 0.568, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.3313559824506208;  // std dev = 1.296, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3690940863009542;  // std dev = 1.400, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.02762357170307486;  // std dev = 6.425, 607.000 (wgt'ed) examples reached here.  /* #neg=457 #pos=150 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.11584915842894263;  // std dev = 4.352, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.33492089985505286;  // std dev = 0.141, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.29901469139729786;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3393629606408696;  // std dev = 2.565, 74.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=66 */
%   | | | else return 0.44254367280685675;  // std dev = 1.068, 118.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=117 */
%   | | else return -0.10892578934180586;  // std dev = 0.320, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.44392174594569034;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5405961416613443;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.06611398687162662;  // std dev = 4.456, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.14830955723583536;  // std dev = 1.592, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2980104089268327;  // std dev = 0.111, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.27555372035673864;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.01174625850394198;  // std dev = 5.871, 655.000 (wgt'ed) examples reached here.  /* #neg=472 #pos=183 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.40105988858551583;  // std dev = 3.090, 55.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=42 */
%   | | | else return -0.14581093671765666;  // std dev = 0.017, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.24760287067803208;  // std dev = 0.881, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else if ( function(A, F) )
%   | | | then return 0.194573278664335;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.027084082383326206;  // std dev = 5.071, 299.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=67 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.1677007819621885;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03593420895441745;  // std dev = 4.470, 396.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=125 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.10473203157611247;  // std dev = 1.563, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18737297983700651;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1706587584405732;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.04630053401925646;  // std dev = 1.786, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   else if ( interaction(G, A) )
%   | then return 0.013332585645891884;  // std dev = 5.609, 633.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=183 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.21740985041825794;  // std dev = 0.485, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03793664023478393;  // std dev = 3.653, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else if ( function(A, J) )
%   | | | then return -0.0034031366547819333;  // std dev = 1.810, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16539086445873166;  // std dev = 0.062, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.2145774039626599;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14869349703121099;  // std dev = 0.996, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.20608069488710049;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.08459480563441162;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0921389465736659;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0020986647782722805;  // std dev = 5.614, 643.000 (wgt'ed) examples reached here.  /* #neg=470 #pos=173 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.03688680318452214;  // std dev = 3.693, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | | else return 0.01984981777042996;  // std dev = 1.594, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.10875818075523647;  // std dev = 0.972, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.24526121632700953;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.11380756260726761;  // std dev = 0.900, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10961756301044732;  // std dev = 1.041, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.17610956532184982;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2614077933523582;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0073136261916726605;  // std dev = 7.024, 737.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=209 */


Results
   AUC ROC   = 0.970836
   AUC PR    = 0.135478
   CLL	      = -0.195761
   Precision = 0.080929 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.149408


Total learning time: 42.607 seconds
Total inference time: 54.32 seconds
AUC ROC: 0.970836


Results scoring model
   AUC ROC   = 0.983073
   AUC PR    = 0.281831
   CLL	      = -0.165719
   Precision = 0.178156 at threshold = 0.5
   Recall    = 0.867925
   F1        = 0.29563


Total scoring time: 140.934 seconds
Parameter learned model CLL: -0.165719


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false': [0.0, 0, 2], 'true,false': [1.342, 2, 18], 'false,true,true,true': [2.913, 10, 56], 'false,true,true,false': [1.969, 4, 127], 'false,true,false': [2.92e-07, 391, 0], 'false,false,true': [1.414, 3, 6], 'false,false,false,true': [4.646, 77, 30], 'false,false,false,false': [2.148, 20, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.967, 1, 27], 'true,false': [1.33, 2, 13], 'false,true,true,true': [1.617, 3, 22], 'false,true,true,false': [2.565, 7, 161], 'false,true,false': [0.0, 420, 0], 'false,false,true,true': [3.935, 25, 42], 'false,false,true,false': [0.021, 75, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.709, 1, 48], 'true,true,false,true': [0.153, 0, 7], 'true,true,false,false': [5.161, 65, 92], 'true,false': [0.419, 213, 0], 'false,true': [0.03, 0, 11], 'false,false,true,true': [3.259, 12, 107], 'false,false,true,false': [0.0, 228, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.994, 1, 40], 'true,false': [0.0, 0, 0], 'false,true,true': [0.568, 1, 8], 'false,true,false': [1.296, 2, 8], 'false,false,true,true': [1.4, 3, 23], 'false,false,true,false': [6.425, 457, 150], 'false,false,false,true': [4.352, 77, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.141, 0, 24], 'true,false': [0.976, 1, 16], 'false,true,true,true': [2.565, 8, 66], 'false,true,true,false': [1.068, 1, 117], 'false,true,false': [0.32, 412, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [1.05e-08, 0, 3], 'false,false,false,true': [4.456, 89, 36], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [1.592, 3, 23], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.111, 0, 16], 'true,false': [0.0, 0, 1], 'false,true': [5.871, 472, 183], 'false,false,true,true': [3.09, 13, 42], 'false,false,true,false': [0.017, 51, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.881, 1, 49], 'true,true,false,true': [0.742, 1, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.071, 232, 67], 'false,true,true': [0.967, 1, 13], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.47, 271, 125], 'false,false,false,true': [1.563, 11, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.0, 0, 20], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.786, 4, 18], 'false,true': [5.609, 450, 183], 'false,false,true,true': [0.485, 1, 4], 'false,false,true,false': [3.653, 72, 31], 'false,false,false,true': [1.81, 14, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.062, 0, 23], 'true,true,false': [0.023, 0, 2], 'true,false': [0.996, 1, 15], 'false,true,true,true': [0.062, 0, 6], 'false,true,true,false': [0.4, 1, 2], 'false,true,false': [1.26, 2, 8], 'false,false,true': [5.614, 470, 173], 'false,false,false,true': [3.693, 63, 30], 'false,false,false,false': [1.594, 17, 6]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.972, 1, 25], 'true,false,true,true': [0.006, 0, 2], 'true,false,true,false': [0.9, 1, 13], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.041, 2, 10], 'false,true,false,true': [0.049, 0, 3], 'false,true,false,false': [0.056, 0, 3], 'false,false': [7.024, 528, 209]}]]
[{'': [0.045351473922903854, 0.21322011634453242], 'false': [0.21436380674719147, 0.20829200555445468], 'false,true': [0.06601561493468633, 2.1806938181895658e-16], 'false,false': [0.22222222222222218, 0.19741082028379353], 'false,false,false': [0.20176434623111314, 0.17751479289940844], 'false,true,true': [0.12855831037649187, 0.02960200454519397], 'true': [1.6148698540002277e-16, 0.08999999999999968], 'true,true': [-8.881784197001253e-17, 0.0]}, {'': [0.0644418516390617, 0.16493766144839836], 'false': [0.15563151886218313, 0.20508376020462926], 'false,false': [0.20508376020462926, nan], 'false,false,true': [0.23112246206965958, 6.129343674083169e-06], 'false,true': [0.0481136273913761, -1.2899734190882772e-16], 'true': [0.03339684230875317, 0.1178601129491693], 'false,true,true': [0.10456358461645998, 0.0391536784587148]}, {'': [0.13526667565492456, 0.11372677654928587], 'true': [0.14060178698337006, 0.0008235370887571822], 'true,true': [0.01025543628416159, 0.16641023518654086], 'true,true,false': [0.003345855000472702, 0.16962896848436912], 'false': [7.981321470109457e-05, 0.10928017249541716], 'false,false': [0.10928017249541716, nan], 'false,false,true': [0.08925901267127512, -6.038055046206992e-17]}, {'': [0.02410831328707346, 0.09085180514562796], 'false': [0.1069316359363596, 0.08795719840480723], 'false,true': [0.03578732402416526, 0.1679371008274178], 'false,false': [0.07291091846865744, 0.16757132822388052], 'false,false,false': [0.16757132822388052, nan], 'false,false,true': [0.07536926449832446, 0.06801627437200203], 'true': [0.02410831328707346, nan]}, {'': [0.024054801045664, 0.08655660358991553], 'false': [0.07052374748675083, 0.15964296776356657], 'false,false': [0.0023364846967467803, 0.15887614348580528], 'false,false,false': [0.15887614348580528, nan], 'false,true': [0.04271769338232525, 0.00024837314049995924], 'false,true,true': [0.08888566664239936, 0.00966165079592209], 'true': [0.0008279731325014361, 0.0560909305977167], 'false,false,true': [0.0, 3.700743415417188e-17]}, {'': [0.0644793191449193, 0.0701581734009851], 'false': [0.05262934014454893, 0.16476584669424246], 'false,false': [0.16476584669424246, nan], 'false,false,true': [0.17365263242945936, 5.42158808063104e-06], 'true': [0.06589988559319677, 0.0], 'true,true': [0.09744269289580869, 0.0007697530140176323], 'true,true,false': [nan, 0.0007697530140175907]}, {'': [0.0859687642279012, 0.0552980404372126], 'true': [0.02435682294111397, 0.08598702606383596], 'false': [0.06682451350976011, 0.05436581866288687], 'false,true': [0.06682451350976011, nan], 'false,false': [0.05046316943477418, 0.1356967499968141], 'false,false,false': [0.1356967499968141, nan], 'true,true': [0.015517705834590476, 0.11019150525258596], 'true,true,false': [0.11019150525258596, nan]}, {'': [0.07736628380346851, 0.06375089160358823], 'true': [2.3088032800736265e-05, 0.14497196369638923], 'false': [0.04969691680426696, 0.1322012364181549], 'false,false': [0.12716714877323362, 0.15602711279341927], 'false,false,false': [0.15602711279341927, nan], 'false,false,true': [0.0471096040430969, 0.12956220433507198], 'true,true': [-5.551115123125783e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.024513784317180806, 0.06409623723163071], 'false': [0.09505672084425386, 0.06296935729681752], 'false,true': [0.021512546487660322, 0.15869124451967048], 'false,false': [0.04901278963845715, 0.13949624426457766], 'false,false,false': [0.14661980769554567, 0.11045956284760278], 'true': [0.00035406427394911954, 0.062003778948815216], 'false,true,true': [0.0006311905914149115, 0.05343604408847344], 'true,true': [0.00016904738508556917, 0.0002559880809782089]}, {'': [0.0426061038074871, 0.06731273246979326], 'false': [0.06375150319906278, 0.06694116642874094], 'false,true': [0.09028476310489099, 0.0027437945387205807], 'false,true,true': [nan, 0.09028476310489099], 'true': [0.03636447046253735, 0.0524631064140636], 'true,false': [0.0524631064140636, nan], 'true,false,true': [1.7408878931250704e-05, 0.0577953410345488], 'false,true,false': [0.0008088919812147544, 0.001040803243654076]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;function(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8581489350995121;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.7581489350995123;  // std dev = 0.300, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(A, H) )
%   | | | then return 0.7002541982574062;  // std dev = 2.248, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | | else return 0.8138451376311567;  // std dev = 2.586, 158.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=151 */
%   | | else return -0.1418510649004873;  // std dev = 2.98e-07, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( location(A, K) )
%   | | | then return 0.22481560176617835;  // std dev = 3.733, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(F, D) )
%   | | then return 0.7293402122862327;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.07254034569484417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.727513027087107;  // std dev = 0.050, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.6372710732479837;  // std dev = 3.433, 137.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=124 */
%   | | | else return 0.7320370392881603;  // std dev = 0.063, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else return -0.12544463852839227;  // std dev = 0.000, 425.000 (wgt'ed) examples reached here.  /* #neg=425 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( location(A, M) )
%   | | | then return 0.4552968133984124;  // std dev = 3.456, 60.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=39 */
%   | | | else return 0.1420744691189684;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.16017149288796032;  // std dev = 0.158, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5634199645283939;  // std dev = 0.115, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360632;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.36694079307675054;  // std dev = 4.756, 160.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=106 */
%   | else return -0.12374176761818807;  // std dev = 0.398, 217.000 (wgt'ed) examples reached here.  /* #neg=217 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.07783233247625354;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5941823053333586;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.31632500870307045;  // std dev = 3.195, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | | | else return 0.2636606001925245;  // std dev = 3.500, 99.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=55 */
%   | | else return -0.11231637819360617;  // std dev = 9.54e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.36489250211113944;  // std dev = 0.288, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else return 0.01011198960048586;  // std dev = 0.289, 161.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=38 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.364837540981043;  // std dev = 0.278, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else if ( recursion_proteinclass(F, B), interaction(H, F) )
%   | | | then return 0.4697031713987827;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.05750223750998039;  // std dev = 6.310, 465.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=137 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.22616327281652182;  // std dev = 1.296, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08757153763194739;  // std dev = 2.465, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.31798005773958804;  // std dev = 1.108, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.12366247816226227;  // std dev = 1.588, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.31868985211166456;  // std dev = 0.144, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.06437641290003944;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3826428703114795;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.3561563217004231;  // std dev = 2.096, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return 0.4385741094549573;  // std dev = 2.375, 152.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=146 */
%   | | else return -0.11910079185463923;  // std dev = 0.459, 433.000 (wgt'ed) examples reached here.  /* #neg=433 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.49490460485762355;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.010741463627247936;  // std dev = 2.215, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.08014733149339823;  // std dev = 3.402, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.24524981467191123;  // std dev = 0.204, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | else return 0.26360309962475537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09317916232170476;  // std dev = 0.014, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.028632418669486858;  // std dev = 5.289, 498.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=150 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.03268316448643908;  // std dev = 0.577, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08458862131095864;  // std dev = 2.288, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.17290897878371253;  // std dev = 3.629, 70.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=39 */
%   | | | else return 0.6798395944009155;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14710048138347703;  // std dev = 0.207, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.21772250655842554;  // std dev = 0.000497, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.3961726534972973;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.23941690672542626;  // std dev = 0.167, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08595333685892738;  // std dev = 0.012, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(E, G), interaction(E, H) )
%   | | | then return 0.018930229249444215;  // std dev = 3.591, 206.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=58 */
%   | | | else return -0.010960549812836977;  // std dev = 3.986, 170.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=46 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.043043946270429304;  // std dev = 0.234, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.21197770588422946;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05817457912321393;  // std dev = 3.178, 169.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=61 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.1814682610249805;  // std dev = 0.006, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.0410900438142891;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.195534291597041;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.25093164909008037;  // std dev = 0.059, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, A) )
%   | then return -0.08825241520650177;  // std dev = 0.060, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, H), location(A, H) )
%   | | | then return 0.03075748878981994;  // std dev = 1.846, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return -0.04101493724789608;  // std dev = 1.735, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.05906293833486223;  // std dev = 2.872, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
%   | | | else return 0.030404098102652287;  // std dev = 5.662, 487.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=159 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.17371527546737042;  // std dev = 0.037, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.14994298505433712;  // std dev = 0.215, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.09879192869411012;  // std dev = 0.773, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2490642896808501;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.1341061602202059;  // std dev = 0.325, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.29150631813729;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.07389273588764697;  // std dev = 0.027, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.02098923088770164;  // std dev = 3.127, 129.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=32 */
%   | | | else return 0.01648426029610233;  // std dev = 6.185, 582.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=177 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.14800151058438368;  // std dev = 0.145, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.09190298062463545;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.2236097977946161;  // std dev = 0.051, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.18610090517811803;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.060715231864312186;  // std dev = 1.266, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.21991696192024113;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.030577154263206674;  // std dev = 0.163, 112.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=19 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -9.345702236587758E-4;  // std dev = 3.817, 254.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=70 */
%   | | | else return 0.03289320394602585;  // std dev = 5.313, 364.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=120 */


Results
   AUC ROC   = 0.97102
   AUC PR    = 0.17541
   CLL	      = -0.199418
   Precision = 0.084437 at threshold = 0.5
   Recall    = 0.980769
   F1        = 0.155488


Total learning time: 128.22899999999998 seconds
Total inference time: 59.873 seconds
AUC ROC: 0.97102


Results scoring model
   AUC ROC   = 0.985618
   AUC PR    = 0.266387
   CLL	      = -0.174685
   Precision = 0.190738 at threshold = 0.5
   Recall    = 0.916981
   F1        = 0.315789


Total scoring time: 246.818 seconds
Refined model CLL: -0.174685


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.970836
   AUC PR    = 0.135478
   CLL	      = -0.195761
   Precision = 0.080929 at threshold = 0.5
   Recall    = 0.971154
   F1        = 0.149408


Total learning time: 558.588 seconds
Total inference time: 54.32 seconds
AUC ROC: 0.970836
Total revision time: 558.588
Best scored revision CLL: -0.165719


Dataset: 8_twitter_yeast, Fold: 2, Type: Transfer (trRDN-B), Time: 05:57:38
{'AUC ROC': 0.970836, 'AUC PR': 0.135478, 'CLL': -0.195761, 'Precision': [0.080929, 0.5], 'Recall': 0.971154, 'F1': 0.149408, 'Learning time': 558.588, 'Inference time': 54.32, 'parameter_1.0': {'AUC ROC': 0.970836, 'AUC PR': 0.135478, 'CLL': -0.195761, 'Precision': [0.080929, 0.5], 'Recall': 0.971154, 'F1': 0.149408, 'Learning time': 42.607, 'Inference time': 54.32}}


Starting fold 3

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos	 examples: 92
Target test neg examples: 12594

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.8181489350995119;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7291098928136795;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6330193346218546;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.5884220699872204;  // std dev = 0.925, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6205666605906236;  // std dev = 1.891, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.37943714349622204;  // std dev = 1.423, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.13487591597187418;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.58931745518853;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.11589821046875443;  // std dev = 0.737, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1837273362246467;  // std dev = 2.401, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | else return -0.12348003448861389;  // std dev = 0.302, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6188356681499098;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.551525001918201;  // std dev = 0.982, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.1123163781936063;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4208060157166224;  // std dev = 0.743, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.2030480667279842;  // std dev = 0.664, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5442730136157993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4545072124896194;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.027193145375083775;  // std dev = 2.841, 138.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=31 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.17449779155878994;  // std dev = 1.395, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.39103898787044916;  // std dev = 0.203, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.36479941655692194;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3255698130215157;  // std dev = 1.381, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.2446759532001807;  // std dev = 2.231, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | else return -0.11090740970725405;  // std dev = 0.237, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.560568017904539;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.05435621634545221;  // std dev = 1.506, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2891383428138714;  // std dev = 0.162, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3201896377071765;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.6131330295993739;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(G, A) )
%   | then return 0.006981650021350604;  // std dev = 2.948, 152.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=39 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.37487036685875746;  // std dev = 1.083, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.13147042986008625;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2574745626465999;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( function(A, F) )
%   | | | then return 0.49996199812139186;  // std dev = 0.235, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04532972077558979;  // std dev = 1.542, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.25345228774591694;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.041374405911379405;  // std dev = 2.244, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.5683107124458888;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.14994478343452922;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21481663743708596;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then return -7.378019740572028E-4;  // std dev = 3.012, 147.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=39 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.39034200601274693;  // std dev = 0.223, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.15881346658211026;  // std dev = 0.485, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( function(A, I) )
%   | | | then return -0.003687235106491167;  // std dev = 0.944, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return -0.1607120609196987;  // std dev = 1.040, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.1607016590031599;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.18989531431885864;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.22086821455264827;  // std dev = 0.071, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.16431208254240104;  // std dev = 0.689, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then return 0.013715394417879086;  // std dev = 2.895, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.1380141530304592;  // std dev = 0.706, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.020177246561668166;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15275325369021792;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.17727763610647554;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1330838074561721;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29490454981934733;  // std dev = 0.092, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.14146890503722642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 7.51642138194593E-4;  // std dev = 3.096, 159.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=41 */


Results
   AUC ROC   = 0.990879
   AUC PR    = 0.426189
   CLL	      = -0.125396
   Precision = 0.401099 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.532847


Total learning time: 12.892 seconds
Total inference time: 15.008 seconds
AUC ROC: 0.990879


Results scoring model
   AUC ROC   = 0.976011
   AUC PR    = 0.165366
   CLL	      = -0.171421
   Precision = 0.106589 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.192644


Total scoring time: 48.665 seconds
Parameter learned model CLL: -0.171421


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [1.265, 2, 8], 'false,true,true,true': [0.968, 1, 15], 'false,true,true,false': [0.98, 1, 24], 'false,true,false': [7.88e-08, 86, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [0.957, 11, 1], 'false,false,false,false': [1.225, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.033, 0, 4], 'true,false': [0.935, 1, 7], 'false,true,true,true': [0.925, 1, 6], 'false,true,true,false': [1.891, 4, 33], 'false,true,false': [0.0, 95, 0], 'false,false,true,true': [1.423, 4, 5], 'false,false,true,false': [0.0, 7, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [0.078, 0, 11], 'true,true,false,true': [0.737, 1, 1], 'true,true,false,false': [2.401, 20, 15], 'true,false': [0.302, 40, 0], 'false,true': [0.02, 0, 4], 'false,false,true,true': [0.982, 1, 24], 'false,false,true,false': [3.65e-08, 54, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.743, 1, 11], 'true,false': [0.0, 0, 0], 'false,true,true': [0.664, 2, 2], 'false,true,false': [0.0, 0, 1], 'false,false,true,true': [0.012, 0, 6], 'false,false,true,false': [2.841, 107, 31], 'false,false,false,true': [1.395, 7, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.203, 0, 7], 'true,false': [0.019, 0, 4], 'false,true,true,true': [1.381, 2, 15], 'false,true,true,false': [2.231, 6, 24], 'false,true,false': [0.237, 86, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.506, 11, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.162, 0, 8], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.074, 0, 3], 'true,false': [0.0, 1, 0], 'false,true': [2.948, 113, 39], 'false,false,true,true': [1.083, 2, 5], 'false,false,true,false': [0.0, 5, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [0.156, 0, 10], 'true,true,false,true': [0.235, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [1.542, 37, 7], 'false,true,true': [0.104, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.244, 58, 26], 'false,false,false,true': [0.0, 0, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false': [0.0, 0, 0], 'true,false': [0.102, 0, 8], 'false,true': [3.012, 108, 39], 'false,false,true,true': [0.223, 0, 2], 'false,false,true,false': [0.485, 11, 0], 'false,false,false,true': [0.944, 5, 3], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [1.04, 2, 4], 'true,true,false': [0.0, 0, 1], 'true,false': [0.078, 0, 6], 'false,true,true,true': [0.071, 0, 2], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.689, 1, 1], 'false,false,true': [2.895, 90, 37], 'false,false,false,true': [0.706, 14, 1], 'false,false,false,false': [1.127, 3, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.021, 0, 5], 'true,false,true,true': [0.047, 0, 4], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.092, 0, 2], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false': [3.096, 118, 41]}]]
[{'': [0.13017751479289916, 0.21054606868080428], 'false': [0.21278442556885246, 0.19390581717451505], 'false,true': [0.04640095181439758, 7.229359230117299e-17], 'false,false': [0.0, 0.17283950617283936], 'false,false,false': [0.07638888888888894, 0.24999999999999992], 'true': [1.4802973661668753e-16, 0.15999999999999986], 'false,true,true': [0.05859374999999978, 0.0384000000000006], 'true,true': [1.4802973661668753e-16, nan]}, {'': [0.0750613940636548, 0.15510546449076076], 'false': [0.15069525216496926, 0.1915755779142617], 'false,false': [0.1915755779142617, nan], 'false,false,true': [0.22485221380740741, -3.96508223080413e-18], 'false,true': [0.10089274135271237, -1.402386978473882e-17], 'false,true,true': [0.12227025499633612, 0.09668396226742604], 'true': [0.0002785852752200668, 0.109375]}, {'': [0.1281814326022021, 0.1148114663503328], 'true': [0.16134018056589997, 0.002279890135142568], 'true,true': [0.0005573498796193167, 0.17075714335840309], 'true,true,false': [0.27155842573983935, 0.1647483787118527], 'false': [9.736389660802702e-05, 0.10753448166369745], 'false,false': [0.10753448166369745, nan], 'false,false,true': [0.038580982193581054, 2.4671622769447922e-17]}, {'': [0.04596654516731343, 0.07499837491397864], 'false': [0.10692409669685687, 0.07249555939538671], 'false,true': [0.11036822799535267, 0.0], 'false,false': [0.0633244413097618, 0.17697375494356057], 'false,false,false': [0.17697375494356057, nan], 'false,false,true': [2.5401325115341027e-05, 0.058468352151592365], 'true': [0.04596654516731343, nan]}, {'': [0.003948227345357733, 0.0944570336092524], 'false': [0.08655977924822343, 0.15679189352159884], 'false,false': [0.0, 0.15122903717068273], 'false,false,false': [0.15122903717068273, nan], 'false,true': [0.1479805217938961, 0.0006551203088290101], 'false,true,true': [0.11215042711870365, 0.16591732973823212], 'true': [0.005901590601455294, 9.16956727303464e-05], 'false,false,true': [0.0, nan]}, {'': [0.06619075793578898, 0.06639322585445608], 'false': [0.057194634774255036, 0.16008849839798775], 'false,false': [0.16008849839798775, nan], 'false,false,true': [0.1676120081493412, -2.7755575615628915e-18], 'true': [0.0030875013244749043, 0.0], 'true,true': [0.0032966922328787895, 0.0018284349642092395], 'true,true,false': [nan, 0.0018284349642092395]}, {'': [0.06548528551432063, 0.06485552968835777], 'true': [0.014815411531396039, 0.05406165995907772], 'false': [0.001553375334917197, 0.06714879289984046], 'false,false': [0.05997241679399924, 0.0], 'true,true': [0.0024428598987823237, 0.02767803939184668], 'true,true,false': [0.02767803939184668, nan], 'false,true': [0.001553375334917197, nan], 'false,false,false': [0.0, nan]}, {'': [0.0017799302496501292, 0.06442918499532062], 'false': [0.06172118122679149, 0.08147861283322386], 'false,false': [0.06117050540105003, 0.1113901661415173], 'false,false,false': [0.1113901661415173, nan], 'false,false,true': [0.02478375175382455, 0.02139062754824221], 'true': [0.0, 0.0012996702455246728], 'true,true': [0.0, nan]}, {'': [0.11358940884642822, 0.07297138656794035], 'true': [0.16723133174220745, 0.0010181815509080622], 'true,true': [0.18034510902953016, 0.0], 'false': [0.15710955700808468, 0.07067157643643662], 'false,true': [0.0025396208130873676, 0.23749756256796675], 'false,false': [0.06599208146572984, 0.08701055131072348], 'false,false,false': [0.03318863996860233, 0.21164708929021603], 'false,true,true': [0.0025396208130873676, nan]}, {'': [0.0004987367379264671, 0.0603730450040601], 'false': [0.008052057999437784, 0.06026666420222972], 'false,true': [0.004230587969254962, 0.0], 'false,true,true': [nan, 0.004230587969254962], 'true': [8.962755267193368e-05, 0.0007960679094107942], 'true,false': [0.0007960679094107942, nan], 'true,false,true': [0.0005430703671920611, 0.0], 'false,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
3;false,false;interaction(G, A).;true;true
3;false,false,true;interaction(H, G), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,false;interaction(I, A).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7551723247302798;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.4721256925471002;  // std dev = 1.712, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.6572210891668748;  // std dev = 1.664, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.20390207525724788;  // std dev = 1.080, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1863700935709174;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.634411556781348;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.13961436633669072;  // std dev = 0.204, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.3286463960493377;  // std dev = 2.001, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.12424705795185736;  // std dev = 0.300, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.1810654696780968;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.5731817655794493;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | then if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.3800082725912423;  // std dev = 1.714, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return 0.2194531626191822;  // std dev = 1.524, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4293790655199532;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.48086752226284324;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.5592826477081599;  // std dev = 0.059, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.5929980403239701;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41632366421439587;  // std dev = 0.559, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.021369998260770486;  // std dev = 3.390, 135.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.17846051283513764;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1630704724581334;  // std dev = 1.168, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3440530571287574;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3700117394323957;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3282826365328653;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.3430373755925085;  // std dev = 1.989, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.5239357016034739;  // std dev = 0.048, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.11036065541212797;  // std dev = 0.177, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.462575113187335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.0026885223284919407;  // std dev = 0.834, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3128495438921932;  // std dev = 0.590, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.276619872935663;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.07084230187892433;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26318460268535865;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.05814112287324944;  // std dev = 0.216, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else return 0.045838648742386454;  // std dev = 0.277, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.08328073227890824;  // std dev = 0.631, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.47938785303342;  // std dev = 0.320, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.12326191502827712;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.13072201477206677;  // std dev = 0.311, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.4529075812312825;  // std dev = 0.285, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.0604056001526429;  // std dev = 0.208, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), location(G, H) )
%   | | then return -0.09199873801837637;  // std dev = 0.750, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.253600619312364;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.023069699958611536;  // std dev = 1.402, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.08445966243949464;  // std dev = 2.009, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0523842064570898;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.033606784372808944;  // std dev = 0.528, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20859005849718287;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( enzyme(H, E), phenotype(H, F) )
%   | | | then return -0.03446738893867114;  // std dev = 0.735, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.29711758381442166;  // std dev = 0.449, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(D, I), complex(A, J) )
%   | | | then return 0.13790390727838012;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.10005371318607892;  // std dev = 1.119, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(A, K), enzyme(A, L) )
%   | | then if ( interaction(K, M), phenotype(M, N) )
%   | | | then return 0.2550171509560355;  // std dev = 0.775, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.01594826155098635;  // std dev = 0.513, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, P), location(P, Q) )
%   | | | then return -0.038889100760601134;  // std dev = 1.278, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.06296750307316243;  // std dev = 1.904, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17642367844968973;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.26761080008914756;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.40272433652625345;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(I, E), interaction(I, J) )
%   | | | then return -0.15076886455735206;  // std dev = 0.751, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.4183938384907204;  // std dev = 0.388, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(L, L), complex(L, M) )
%   | | | then return 0.31696977449595537;  // std dev = 0.475, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.059268769115594526;  // std dev = 0.911, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return -0.1113682553525652;  // std dev = 0.708, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05708902571679196;  // std dev = 1.832, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.15310552787301687;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1685323863292341;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.20431713723527933;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.29339024963927934;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.14509864073999235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.24372300815460818;  // std dev = 0.992, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.20121445733505086;  // std dev = 0.741, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( location(A, K) )
%   | | | then return 0.02467001006439956;  // std dev = 2.361, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return -0.12348864306057487;  // std dev = 0.662, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */


Results
   AUC ROC   = 0.993314
   AUC PR    = 0.475773
   CLL	      = -0.13674
   Precision = 0.453416 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.577075


Total learning time: 33.067 seconds
Total inference time: 27.326 seconds
AUC ROC: 0.993314


Results scoring model
   AUC ROC   = 0.987993
   AUC PR    = 0.280307
   CLL	      = -0.169405
   Precision = 0.135468 at threshold = 0.5
   Recall    = 1.0
   F1        = 0.238612


Total scoring time: 68.44800000000001 seconds
Refined model CLL: -0.169405


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.993314
   AUC PR    = 0.475773
   CLL	      = -0.13674
   Precision = 0.453416 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.577075


Total learning time: 163.072 seconds
Total inference time: 27.326 seconds
AUC ROC: 0.993314
Total revision time: 163.072
Best scored revision CLL: -0.169405


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:01:04
{'AUC ROC': 0.993314, 'AUC PR': 0.475773, 'CLL': -0.13674, 'Precision': [0.453416, 0.5], 'Recall': 0.793478, 'F1': 0.577075, 'Learning time': 163.072, 'Inference time': 27.326, 'parameter_0.2': {'AUC ROC': 0.990879, 'AUC PR': 0.426189, 'CLL': -0.125396, 'Precision': [0.401099, 0.5], 'Recall': 0.793478, 'F1': 0.532847, 'Learning time': 12.892, 'Inference time': 15.008}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7470378239884004;  // std dev = 1.886, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.7688632208137981;  // std dev = 2.134, 56.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=51 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.6900811861728676;  // std dev = 0.978, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.6659528746875127;  // std dev = 2.151, 69.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=64 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3820866574120924;  // std dev = 1.898, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.14948251547975522;  // std dev = 0.059, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5269402857849412;  // std dev = 1.178, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6159802848048535;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2335868093492345;  // std dev = 2.926, 53.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=26 */
%   | else return -0.11464008751663943;  // std dev = 0.059, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5717113770349593;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.52944092103423;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.11231637819360613;  // std dev = 6.14e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.44980041517360164;  // std dev = 0.175, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.25909980907104935;  // std dev = 1.025, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.2315033177461712;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.35856221657400933;  // std dev = 1.218, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.019159087076212764;  // std dev = 4.214, 248.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=59 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.06987818095411198;  // std dev = 1.902, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.27362391160769445;  // std dev = 0.906, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.09814095471166455;  // std dev = 1.187, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.361884239186617;  // std dev = 1.611, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return 0.32532836121234227;  // std dev = 2.468, 53.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | else return -0.10800038527084127;  // std dev = 0.180, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.42181777323976233;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5236509070476986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.023022848302422263;  // std dev = 1.960, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.28454052927954093;  // std dev = 0.113, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1355573138907736;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.004331305421969618;  // std dev = 4.360, 295.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=83 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38310456188469394;  // std dev = 1.379, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.12939092436090277;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.1922682567590509;  // std dev = 1.368, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | else if ( function(A, F) )
%   | | | then return 0.45709652145217455;  // std dev = 0.299, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.054556085491622996;  // std dev = 2.159, 123.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=15 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.06242883391949914;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.028275064688086063;  // std dev = 3.230, 176.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=51 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.20608216855564473;  // std dev = 1.043, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18171134438674996;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17608321232679383;  // std dev = 0.952, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(F, A) )
%   | then return 0.0024738718274615883;  // std dev = 4.320, 292.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=83 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3658223608105041;  // std dev = 0.275, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.031763364845593944;  // std dev = 1.118, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( function(A, I) )
%   | | | then return 0.1573537232265501;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16398497658618189;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2126179717398904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.11737091565809729;  // std dev = 0.973, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.24850308642017782;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30706777031848176;  // std dev = 0.101, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return -0.007599506903470339;  // std dev = 4.335, 287.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=78 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.05697566675496785;  // std dev = 1.205, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.5145370734904271;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14606778820528368;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.209556625298632;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.24705032038766264;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24736425415027044;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.1535177395277697;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.2822697208507168;  // std dev = 0.661, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.004137890227077263;  // std dev = 4.317, 305.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=84 */


Results
   AUC ROC   = 0.990703
   AUC PR    = 0.395408
   CLL	      = -0.134251
   Precision = 0.394595 at threshold = 0.5
   Recall    = 0.793478
   F1        = 0.527076


Total learning time: 24.517 seconds
Total inference time: 14.035 seconds
AUC ROC: 0.990703


Results scoring model
   AUC ROC   = 0.977032
   AUC PR    = 0.186982
   CLL	      = -0.17427
   Precision = 0.103349 at threshold = 0.5
   Recall    = 0.981818
   F1        = 0.187013


Total scoring time: 89.997 seconds
Parameter learned model CLL: -0.17427


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 11], 'false,true,true,true': [1.886, 4, 32], 'false,true,true,false': [2.134, 5, 51], 'false,true,false': [0.0, 183, 0], 'false,false,true': [2.11e-08, 0, 3], 'false,false,false,true': [1.597, 17, 3], 'false,false,false,false': [1.309, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [4.21e-08, 0, 10], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.978, 1, 19], 'false,true,true,false': [2.151, 5, 64], 'false,true,false': [0.0, 189, 0], 'false,false,true,true': [1.898, 7, 9], 'false,false,true,false': [0.059, 17, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.178, 2, 30], 'true,true,false,true': [0.041, 0, 4], 'true,true,false,false': [2.926, 27, 26], 'true,false': [0.059, 77, 0], 'false,true': [0.03, 0, 5], 'false,false,true,true': [1.677, 3, 45], 'false,false,true,false': [6.14e-08, 107, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.175, 0, 18], 'true,false': [0.0, 0, 0], 'false,true,true': [1.025, 2, 6], 'false,true,false': [0.798, 1, 2], 'false,false,true,true': [1.218, 3, 19], 'false,false,true,false': [4.214, 189, 59], 'false,false,false,true': [1.902, 18, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.906, 1, 12], 'true,false': [1.187, 2, 6], 'false,true,true,true': [1.611, 3, 37], 'false,true,true,false': [2.468, 7, 46], 'false,true,false': [0.18, 189, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.96, 22, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.113, 0, 14], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.922, 1, 4], 'true,false': [0.0, 0, 0], 'false,true': [4.36, 212, 83], 'false,false,true,true': [1.379, 3, 9], 'false,false,true,false': [0.052, 16, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.368, 4, 30], 'true,true,false,true': [0.299, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.159, 108, 15], 'false,true,true': [1.268, 2, 8], 'false,true,false': [0.0, 0, 0], 'false,false,true': [3.23, 125, 51], 'false,false,false,true': [1.043, 3, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [5.27e-09, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.952, 1, 11], 'false,true': [4.32, 209, 83], 'false,false,true,true': [0.275, 0, 2], 'false,false,true,false': [1.118, 8, 3], 'false,false,false,true': [0.95, 4, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.048, 0, 10], 'true,true,false': [0.0, 0, 1], 'true,false': [0.973, 1, 7], 'false,true,true,true': [0.149, 0, 6], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.101, 0, 2], 'false,false,true': [4.335, 209, 78], 'false,false,false,true': [1.205, 6, 3], 'false,false,false,false': [1.05e-08, 0, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.056, 0, 11], 'true,false,true,true': [0.041, 0, 4], 'true,false,true,false': [0.071, 0, 3], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.086, 0, 5], 'false,true,false,true': [0.075, 0, 2], 'false,true,false,false': [0.661, 1, 1], 'false,false': [4.317, 221, 84]}]]
[{'': [-2.9605947323337506e-16, 0.21065305025530828], 'false': [0.21072396694214937, 0.21000000000000008], 'false,true': [0.08825614366729717, -2.0627094446587609e-16], 'false,false': [1.4802973661668753e-16, 0.1728395061728397], 'false,false,false': [0.12749999999999986, 0.24489795918367335], 'false,true,true': [0.09876543209876695, 0.08131377551020424], 'true': [-2.5376526277146434e-16, -1.6148698540002277e-16], 'true,true': [-2.5376526277146434e-16, nan]}, {'': [0.04986149584487564, 0.16063405130859423], 'false': [0.1583014755195254, 0.17987470479451392], 'false,false': [0.17987470479451392, nan], 'false,false,true': [0.22520899974720093, 0.00020554007122358664], 'false,true': [0.06281452395248753, -2.5846461948945442e-17], 'false,true,true': [0.047798213047729375, 0.0670362519019397], 'true': [1.7763568394002506e-16, 0.09876543209876562]}, {'': [0.127136641739072, 0.11000426190701687], 'true': [0.13423805471087216, 4.5957861263173126e-05], 'true,true': [0.04334290951868497, 0.15972720636984772], 'true,true,false': [0.000416884195045486, 0.16148923953793684], 'false': [0.00017810471536026107, 0.10618746633597144], 'false,false': [0.10618746633597144, nan], 'false,false,true': [0.05858599361954745, 3.5278114801173196e-17]}, {'': [0.001700944911214518, 0.08958253525805779], 'false': [0.15345401384520166, 0.08570836678173828], 'false,true': [0.13126451518927756, 0.21207214383667602], 'false,false': [0.07988101179726124, 0.15077758557593446], 'false,false,false': [0.15077758557593446, nan], 'false,false,true': [0.06746273293758974, 0.07159641606869621], 'true': [0.001700944911214518, nan]}, {'': [0.11343711326325578, 0.08208342488047843], 'true': [0.06313282581455329, 0.1761184619820326], 'false': [0.0755980249574504, 0.14052508399543953], 'false,false': [0.0023044415869211132, 0.137212183289085], 'false,false,false': [0.137212183289085, nan], 'false,true': [0.09373691895628958, 0.00017178807514445669], 'false,true,true': [0.0648712853321056, 0.11494753627973994], 'false,false,true': [0.0, 0.0]}, {'': [0.0496986157111689, 0.07092010283096149], 'false': [0.06444792186405629, 0.13236705810051938], 'false,false': [0.13236705810051938, nan], 'false,false,true': [0.15854369735268883, 0.00016959719477341317], 'true': [0.0496986157111689, nan], 'true,true': [0.0009083824879112047, 0.16995632249702403], 'true,true,false': [nan, 0.16995632249702403]}, {'': [0.05445893014609221, 0.06917205257205605], 'false': [0.1607338747402889, 0.0641299098535931], 'false,true': [0.1607338747402889, nan], 'false,false': [0.05929271040561374, 0.1553448893068732], 'false,false,false': [0.1553448893068732, nan], 'true': [0.05812291760871786, 0.03789938552064859], 'true,true': [0.0550234837361217, 0.04457561753916803], 'true,true,false': [0.04457561753916803, nan]}, {'': [0.04768396565390148, 0.06818160512630357], 'false': [0.06391395640865419, 0.11644882693495533], 'false,false': [0.11651868653670822, 0.11292735796160233], 'false,false,true': [0.037888254130975046, 0.11364660374843702], 'false,false,false': [0.11292735796160233, nan], 'true': [3.96508223080413e-18, 0.07548794222779724], 'true,true': [3.96508223080413e-18, nan]}, {'': [0.05065086176108556, 0.07056727880088802], 'false': [0.0046925886660672406, 0.07051966229958195], 'false,false': [0.06547991973510113, 0.1603102771799492], 'false,false,false': [0.16140642600649913, 3.700743415417188e-17], 'true': [0.0004086727595564973, 0.11822594766296643], 'false,true': [0.0037091089041041228, 0.005070661301875598], 'false,true,true': [0.0037091089041041228, nan], 'true,true': [0.00023452474300116876, 0.0]}, {'': [0.0021856554434126606, 0.0623916658408973], 'false': [0.09507924523077305, 0.06111306345181622], 'false,true': [0.0014938930531742222, 0.15807094643316824], 'false,true,false': [0.0028106761915673295, 0.21837586136320372], 'true': [0.0002807562092096604, 0.0013110982415222333], 'false,true,true': [nan, 0.0014938930531742222], 'true,false': [0.0013110982415222333, nan], 'true,false,true': [0.0004224281850769285, 0.0016926904092992856]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,false;interaction(H, A).;true;true
8;false,false,false;interaction(A, I), interaction(I, J).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.5367203636709408;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.7348612638666361;  // std dev = 2.809, 73.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=64 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7373269569258906;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.4158959867358479;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.5504662178704568;  // std dev = 2.382, 34.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return 0.6823924959255112;  // std dev = 1.927, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.15619471171805724;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.8010274528484981;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.15364961194808696;  // std dev = 0.123, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5838237390751736;  // std dev = 1.049, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.2578775425980556;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.6106205537283453;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19334956850642224;  // std dev = 2.885, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else return -0.12214357911039812;  // std dev = 0.374, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3872288027304566;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.0552414108065831;  // std dev = 1.974, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.3410528187377849;  // std dev = 2.779, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   | | else return -0.11231637819360614;  // std dev = 3.16e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.10316583383329694;  // std dev = 1.043, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.4239876404666275;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5047758257170784;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5550023563170414;  // std dev = 0.173, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.11929265339330591;  // std dev = 0.413, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.18436441845460896;  // std dev = 0.397, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1128464567748181;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.1895515570350396;  // std dev = 1.735, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.08923557467529246;  // std dev = 4.295, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then return 0.21434176764851848;  // std dev = 0.351, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.38099850069646957;  // std dev = 0.065, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.5123938931300619;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3241925333353126;  // std dev = 3.171, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | else return -0.1156235923495548;  // std dev = 0.288, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(J, K) )
%   | | | then return 0.13554838666168256;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5993494527954619;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.3882332617141628;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.07095340811548118;  // std dev = 1.187, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.28937055135856243;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.15516087377686488;  // std dev = 0.847, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.09695193530980438;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3633871014417277;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.027186251473731472;  // std dev = 1.695, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.029378538016341337;  // std dev = 3.840, 225.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=65 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4238631530365411;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09819270425071204;  // std dev = 1.365, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else return -0.12182721603095427;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( complex(A, E), interaction(F, A) )
%   | then return -0.07825621138708294;  // std dev = 0.225, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( enzyme(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.3995155993338292;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.13404249945325822;  // std dev = 0.085, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.2827835147425105;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.23383701724566067;  // std dev = 0.845, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return -0.007378797685785139;  // std dev = 3.478, 190.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=47 */
%   | else if ( interaction(A, L), interaction(L, M) )
%   | | then if ( complex(A, N) )
%   | | | then return -0.04354012387350591;  // std dev = 0.671, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.4165712779814962;  // std dev = 0.518, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.14610164478675006;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.1801286598888632;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.34211510306366;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.2381490836894818;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( location(A, H), location(G, H) )
%   | | then return -0.024700731652484535;  // std dev = 0.174, 77.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=16 */
%   | | else return 0.13102434934654533;  // std dev = 0.425, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(A, K), enzyme(I, L) )
%   | | | then return -0.021860218504849555;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1560044640738181;  // std dev = 1.121, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.009883532833988035;  // std dev = 2.504, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | | | else return 0.049979516769004244;  // std dev = 2.388, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.15318656930299304;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2008045148050359;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1885715604333672;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, F) )
%   | | then return 0.26316829078106296;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07877540943151858;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2816492802633252;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.03183857883666977;  // std dev = 1.734, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return -0.0014862171046481217;  // std dev = 3.858, 227.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=64 */
%   | | else return -0.01787397027777281;  // std dev = 0.247, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.14110567909483177;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2003433278256648;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2651482155177018;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.21733600308066675;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.01496874443375279;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(H, I), complex(A, J) )
%   | | | then return -0.02319865280888484;  // std dev = 1.955, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | | else return 0.03844376890259127;  // std dev = 3.235, 179.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=59 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.012804030676415992;  // std dev = 0.737, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.19380803450381479;  // std dev = 1.315, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */


Results
   AUC ROC   = 0.991046
   AUC PR    = 0.505876
   CLL	      = -0.1463
   Precision = 0.517986 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.623377


Total learning time: 71.815 seconds
Total inference time: 35.392 seconds
AUC ROC: 0.991046


Results scoring model
   AUC ROC   = 0.988615
   AUC PR    = 0.304132
   CLL	      = -0.167991
   Precision = 0.135236 at threshold = 0.5
   Recall    = 0.990909
   F1        = 0.237991


Total scoring time: 170.44 seconds
Refined model CLL: -0.167991


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.991046
   AUC PR    = 0.505876
   CLL	      = -0.1463
   Precision = 0.517986 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.623377


Total learning time: 356.769 seconds
Total inference time: 35.392 seconds
AUC ROC: 0.991046
Total revision time: 356.769
Best scored revision CLL: -0.167991


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:07:51
{'AUC ROC': 0.991046, 'AUC PR': 0.505876, 'CLL': -0.1463, 'Precision': [0.517986, 0.5], 'Recall': 0.782609, 'F1': 0.623377, 'Learning time': 356.769, 'Inference time': 35.392, 'parameter_0.4': {'AUC ROC': 0.990703, 'AUC PR': 0.395408, 'CLL': -0.134251, 'Precision': [0.394595, 0.5], 'Recall': 0.793478, 'F1': 0.527076, 'Learning time': 24.517, 'Inference time': 14.035}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8010060779566543;  // std dev = 1.373, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.1418510649004882;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14691898857544886;  // std dev = 6.197, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
%   | | | else return 0.15360348055405781;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6671727952763632;  // std dev = 0.963, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.5883340483892836;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6517477808153634;  // std dev = 1.356, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | | | else return 0.6759212622741289;  // std dev = 1.378, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5022613624876617;  // std dev = 4.870, 109.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=73 */
%   | | | else return -0.1608098200771191;  // std dev = 0.003, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5441370104284925;  // std dev = 1.188, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5956363944782519;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.30668723870399167;  // std dev = 5.863, 171.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=94 */
%   | else return -0.12777742558201302;  // std dev = 0.372, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3978414066245992;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5736208256928468;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3973088723763639;  // std dev = 1.329, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.44567436024416757;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.0331767966377956;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.341421677297711;  // std dev = 1.531, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return -0.016794483590023744;  // std dev = 3.191, 205.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=34 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.0944925086066414;  // std dev = 6.038, 216.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.35106152153290615;  // std dev = 0.095, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.09361405056422058;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3663615374472775;  // std dev = 1.325, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return 0.3638735583534529;  // std dev = 1.406, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.1090860512838187;  // std dev = 0.307, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.35395004290716975;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41093695358846166;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.06706015490683577;  // std dev = 6.077, 224.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=67 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2864351416244074;  // std dev = 0.164, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2571803292286136;  // std dev = 0.783, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return -0.5951434388272606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, G) )
%   | then return 0.012952870796960354;  // std dev = 3.296, 226.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=64 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3346919549006647;  // std dev = 4.728, 105.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=73 */
%   | | | else return -0.1465265394827722;  // std dev = 0.248, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.16598050149198978;  // std dev = 2.007, 49.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=44 */
%   | | else if ( function(A, F) )
%   | | | then return 0.1639169324571726;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.003160822458803152;  // std dev = 5.624, 381.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=85 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.322540966583306;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.033276460569401096;  // std dev = 1.708, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.09374054839764016;  // std dev = 2.329, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.11635383858689861;  // std dev = 0.952, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19004433420812972;  // std dev = 0.984, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, F) )
%   | then return 0.014526031840209515;  // std dev = 3.152, 216.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=64 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1319516208798393;  // std dev = 0.724, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05856351714084704;  // std dev = 4.915, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   | | else if ( function(A, I) )
%   | | | then return 0.04756240985135254;  // std dev = 2.418, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17906094242057233;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.18998913128198303;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16346649045411704;  // std dev = 0.650, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.05769456361778431;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.21427735174806015;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33152274860981334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0057088652102342055;  // std dev = 3.062, 224.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=60 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0061727104202455585;  // std dev = 5.097, 199.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=54 */
%   | | | else return 0.04162724163434333;  // std dev = 2.375, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.10264265595354596;  // std dev = 0.974, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.1712190410373404;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06924139697214977;  // std dev = 0.919, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0.2112805863254742;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03236110936133686;  // std dev = 0.499, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return -0.003507350642233509;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.292732200331132;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.011253836895487831;  // std dev = 6.461, 444.000 (wgt'ed) examples reached here.  /* #neg=317 #pos=127 */


Results
   AUC ROC   = 0.978608
   AUC PR    = 0.382873
   CLL	      = -0.175712
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.513761


Total learning time: 38.769 seconds
Total inference time: 13.358 seconds
AUC ROC: 0.978608


Results scoring model
   AUC ROC   = 0.965453
   AUC PR    = 0.201123
   CLL	      = -0.202244
   Precision = 0.196429 at threshold = 0.5
   Recall    = 0.596386
   F1        = 0.295522


Total scoring time: 158.8 seconds
Parameter learned model CLL: -0.202244


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.97, 1, 16], 'false,true,true,true': [1.373, 2, 33], 'false,true,true,false': [2.06e-07, 0, 31], 'false,true,false': [0.0, 166, 0], 'false,false,true': [0.0, 0, 6], 'false,false,false,true': [6.197, 133, 54], 'false,false,false,false': [3.026, 31, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.963, 1, 17], 'true,false': [1.309, 2, 12], 'false,true,true,true': [1.356, 2, 24], 'false,true,true,false': [1.378, 2, 40], 'false,true,false': [0.0, 182, 0], 'false,false,true,true': [4.87, 36, 73], 'false,false,true,false': [0.003, 116, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.188, 2, 45], 'true,true,false,true': [0.053, 0, 10], 'true,true,false,false': [5.863, 77, 94], 'true,false': [0.372, 227, 0], 'false,true': [0.89, 1, 4], 'false,false,true,true': [0.025, 0, 13], 'false,false,true,false': [0.0, 25, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.329, 2, 29], 'true,false': [0.0, 0, 0], 'false,true,true': [0.054, 0, 9], 'false,true,false': [0.707, 1, 1], 'false,false,true,true': [1.531, 4, 26], 'false,false,true,false': [3.191, 171, 34], 'false,false,false,true': [6.038, 149, 67], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.095, 0, 21], 'true,false': [1.498, 4, 8], 'false,true,true,true': [1.325, 2, 41], 'false,true,true,false': [1.406, 2, 23], 'false,true,false': [0.307, 161, 0], 'false,false,true,true': [0.0, 0, 3], 'false,false,true,false': [0.14, 0, 3], 'false,false,false,true': [6.077, 157, 67], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.164, 0, 21], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.783, 1, 8], 'true,false': [0.0, 1, 0], 'false,true': [3.296, 162, 64], 'false,false,true,true': [4.728, 32, 73], 'false,false,true,false': [0.248, 116, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [2.007, 5, 44], 'true,true,false,true': [0.721, 1, 4], 'true,true,false,false': [0.0, 0, 0], 'true,false': [5.624, 296, 85], 'false,true,true': [0.031, 0, 5], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.708, 27, 15], 'false,false,false,true': [2.329, 21, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.952, 1, 13], 'true,true,false': [0.0, 0, 0], 'true,false': [0.984, 1, 16], 'false,true': [3.152, 152, 64], 'false,false,true,true': [0.724, 1, 4], 'false,false,true,false': [4.915, 112, 56], 'false,false,false,true': [2.418, 23, 13], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.073, 0, 16], 'true,true,false': [0.028, 0, 2], 'true,false': [0.65, 1, 11], 'false,true,true,true': [0.9, 1, 6], 'false,true,true,false': [0.041, 0, 3], 'false,true,false': [0.0, 0, 1], 'false,false,true': [3.062, 164, 60], 'false,false,false,true': [5.097, 145, 54], 'false,false,false,false': [2.375, 24, 13]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [0.974, 1, 18], 'true,false,true,true': [0.029, 0, 5], 'true,false,true,false': [0.919, 1, 6], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.499, 2, 3], 'false,true,false,true': [0.914, 1, 5], 'false,true,false,false': [0.728, 2, 1], 'false,false': [6.461, 317, 127]}]]
[{'': [0.03222222222222335, 0.2067821113742894], 'false': [0.19976218787158187, 0.21314248072780376], 'false,false': [-1.4802973661668753e-16, 0.2059181799441543], 'false,false,false': [0.20538190969144163, 0.20816115702479288], 'false,true': [0.02938475665748315, -1.6318940843887844e-16], 'true': [-2.7328566760003855e-16, 0.055363321799307655], 'false,true,true': [0.0538775510204098, 1.375244004696968e-15], 'true,true': [-2.7328566760003855e-16, nan]}, {'': [0.08410149209236067, 0.17646489487763456], 'false': [0.13923415175529774, 0.2152239941542365], 'false,false': [0.2152239941542365, nan], 'false,false,true': [0.2175987099624869, 9.192592580246188e-08], 'false,true': [0.05510010883778564, -1.708035422500241e-17], 'true': [0.0515563662269655, 0.12244897959183668], 'false,true,true': [0.0706891555846719, 0.04522631586955228]}, {'': [0.14625089102910513, 0.11983173850764606], 'true': [0.16847350910375605, 0.000609348766861999], 'true,true': [0.03003969892478531, 0.19430800375938653], 'true,true,false': [0.00028444620913083976, 0.20104161424567848], 'false': [0.15853496671052014, 0.10591391469878164], 'false,false': [0.10591391469878164, nan], 'false,false,true': [4.856747061198464e-05, -1.1102230246251566e-17]}, {'': [0.05694623495625878, 0.11826711905329024], 'false': [0.07103399940316764, 0.11712600202145328], 'false,false': [0.06759929535267459, 0.16876981754078402], 'false,false,false': [0.16876981754078402, nan], 'false,true': [0.00032664250628094353, 0.25], 'false,false,true': [0.07812851838635869, 0.049677307753244644], 'true': [0.05694623495625878, nan]}, {'': [0.0835785216742833, 0.11403338391541776], 'false': [0.063722896646706, 0.16318261653627936], 'false,false': [0.004059384986246954, 0.1648500636939217], 'false,false,false': [0.1648500636939217, nan], 'true': [0.0004268757891104131, 0.18691622904995345], 'false,true': [0.05489284981523171, 0.0005862457802672539], 'false,true,true': [0.04080534558680482, 0.07911944279814406], 'false,false,true': [-1.850371707708594e-17, 0.00649501597799514]}, {'': [0.04460753005634746, 0.1041878695221946], 'false': [0.04805693376427705, 0.1591708648008213], 'false,false': [0.1591708648008213, nan], 'false,false,true': [0.21287998137564657, 0.0005323195816209406], 'true': [0.021520784180196612, 0.0], 'true,true': [0.0012792736230405836, 0.06815188464640821], 'true,true,false': [nan, 0.06815188464640821]}, {'': [0.08627143259023995, 0.10781301628130187], 'false': [0.00019488877000255477, 0.110648922164724], 'false,false': [0.06945613268315638, 0.15951376364143807], 'false,false,false': [0.15951376364143807, nan], 'true': [0.08420164709840322, 0.08302137158503935], 'true,true': [0.08217729481328462, 0.10403643546403019], 'true,true,false': [0.10403643546403019, nan], 'false,true': [0.00019488877000255477, nan]}, {'': [0.06179675512531275, 0.09576159437681489], 'false': [0.04598680021109053, 0.14622408868126532], 'false,false': [0.14283988033795877, 0.1623445587125642], 'false,false,false': [0.1623445587125642, nan], 'false,false,true': [0.10494078409602955, 0.1438121702733472], 'true': [0.06470781826753634, 0.05694702036210239], 'true,true': [0.06470781826753634, nan]}, {'': [0.014354008421806145, 0.08937405973181585], 'false': [0.08272950380623306, 0.0892160109436669], 'false,false': [0.041843701827908565, 0.13416189703763207], 'false,false,false': [0.13057193600697078, 0.1524101178032354], 'false,true': [0.08632405039143051, 0.0], 'false,true,true': [0.11571987971029599, 0.0005710633036887791], 'true': [0.00035181250168503375, 0.035187782961930945], 'true,true': [0.0003318868701581712, 0.00040506172119719047]}, {'': [0.05887821406986717, 0.09515122788847334], 'false': [0.12685427689394044, 0.09401003044533317], 'false,true': [0.045894740798494864, 0.17031717059516469], 'false,true,false': [0.1393011637508216, 0.17658184183214032], 'true': [0.049979259952149815, 0.0729175881223502], 'true,false': [0.0729175881223502, nan], 'true,false,true': [0.00017308864574688276, 0.12054484493756645], 'false,true,true': [0.0, 0.04973832575200709]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(F, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(F, E).;true;true
8;false,true,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), function(A, I).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8133728156965276;  // std dev = 0.207, 67.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=64 */
%   | | else return -0.1418510649004883;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1281489350995129;  // std dev = 6.279, 200.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=54 */
%   | | | else return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(F, A), complex(F, E) )
%   | | then return 0.7465686645279817;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3978578579130931;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7253323017286905;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.4506434358047011;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.6906853645258751;  // std dev = 1.387, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.39491653804021276;  // std dev = 5.537, 126.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=71 */
%   | | | else return 0.22525171983272513;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.16112702437916174;  // std dev = 0.087, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.5669586733817311;  // std dev = 0.085, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.48200139035455347;  // std dev = 1.751, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | else if ( interaction(H, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5272175535398594;  // std dev = 0.872, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.31275137125013763;  // std dev = 5.913, 174.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=94 */
%   | else return -0.13258785460334852;  // std dev = 0.432, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3684039569678054;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2534257768411081;  // std dev = 1.325, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.5734501624964832;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1123163781936063;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then return -0.03761017104656805;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.4406161245813401;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4577854513532304;  // std dev = 0.164, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.4885252333244011;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.013861882218721075;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.6381899206731952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then return -0.0025683986691218013;  // std dev = 0.256, 104.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=21 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.050425709977186095;  // std dev = 5.931, 273.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=70 */
%   | | | else return 0.14081548948950526;  // std dev = 3.671, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.030578610859526695;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.34349336666503777;  // std dev = 0.161, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then return 0.01780237052690033;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3706767939860585;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, I) )
%   | then return 0.042727492278568535;  // std dev = 0.272, 227.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=64 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.16577224472943705;  // std dev = 0.907, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44447343927521255;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.1425407215826587;  // std dev = 2.623, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.08484236853005477;  // std dev = 5.439, 173.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then return 0.2936842414153171;  // std dev = 0.049, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.5462480408817394;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, F), phenotype(A, H) )
%   | | | then return 0.0940832107110129;  // std dev = 1.232, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.03359382027669304;  // std dev = 2.396, 89.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04391321782765436;  // std dev = 2.676, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.1694427404390977;  // std dev = 1.342, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.20036224808916647;  // std dev = 5.145, 116.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=60 */
%   | | | else return 0.4175606674540613;  // std dev = 1.719, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else return -0.14437233110356615;  // std dev = 0.092, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then return 0.06300915269301706;  // std dev = 0.314, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | else return 0.002860855713346546;  // std dev = 0.288, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24117906738169156;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.025283613697409845;  // std dev = 2.488, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.07947563893232629;  // std dev = 4.572, 175.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=60 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.23077427104366213;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return -0.12233013162476954;  // std dev = 0.260, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.17771527799860995;  // std dev = 1.448, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.0035647317895959635;  // std dev = 2.507, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), location(A, E) )
%   | then return 0.31015592839075035;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17956434456839337;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.28780277724134556;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H), phenotype(G, I) )
%   | | then return -0.20911398852373964;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.22644063766348638;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.0016661180513663767;  // std dev = 5.306, 267.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=65 */
%   | | | else return -0.10597318895610947;  // std dev = 1.654, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return 0.09585064629461414;  // std dev = 2.478, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.008073463279082272;  // std dev = 3.852, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13416778293633094;  // std dev = 0.173, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return 0.20080835869450578;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.11915552398447081;  // std dev = 0.809, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.23291285160970046;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2633699883683269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12905731855915478;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.024613545116638335;  // std dev = 6.696, 395.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=112 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.003909213532117255;  // std dev = 0.998, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1422296841310031;  // std dev = 1.466, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.15544566015197978;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.17081943211656092;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, E), function(A, G) )
%   | | | then return 0.2246722424685378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08417759493523681;  // std dev = 0.461, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.209099705108675;  // std dev = 0.115, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.13405299606431223;  // std dev = 3.579, 77.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | | | else return -0.14675403372888207;  // std dev = 0.705, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return -0.016527169333472036;  // std dev = 1.664, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.04956797414350486;  // std dev = 5.422, 227.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=77 */


Results
   AUC ROC   = 0.977171
   AUC PR    = 0.343095
   CLL	      = -0.215946
   Precision = 0.186186 at threshold = 0.5
   Recall    = 0.673913
   F1        = 0.291765


Total learning time: 123.313 seconds
Total inference time: 35.177 seconds
AUC ROC: 0.977171


Results scoring model
   AUC ROC   = 0.969306
   AUC PR    = 0.198723
   CLL	      = -0.21999
   Precision = 0.152758 at threshold = 0.5
   Recall    = 0.650602
   F1        = 0.247423


Total scoring time: 299.807 seconds
Refined model CLL: -0.21999


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.978608
   AUC PR    = 0.382873
   CLL	      = -0.175712
   Precision = 0.444444 at threshold = 0.5
   Recall    = 0.608696
   F1        = 0.513761


Total learning time: 620.6890000000001 seconds
Total inference time: 13.358 seconds
AUC ROC: 0.978608
Total revision time: 620.6890000000001
Best scored revision CLL: -0.202244


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:19:01
{'AUC ROC': 0.978608, 'AUC PR': 0.382873, 'CLL': -0.175712, 'Precision': [0.444444, 0.5], 'Recall': 0.608696, 'F1': 0.513761, 'Learning time': 620.6890000000001, 'Inference time': 13.358, 'parameter_0.6': {'AUC ROC': 0.978608, 'AUC PR': 0.382873, 'CLL': -0.175712, 'Precision': [0.444444, 0.5], 'Recall': 0.608696, 'F1': 0.513761, 'Learning time': 38.769, 'Inference time': 13.358}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7470378239884012;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7536713231592141;  // std dev = 2.504, 67.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | | | else return 0.7384908154413911;  // std dev = 3.511, 117.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=103 */
%   | | else return -0.1418510649004875;  // std dev = 2.46e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.17064893509951234;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7234497577115008;  // std dev = 0.040, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.5984861696068178;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.540578455357182;  // std dev = 2.531, 40.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return 0.6332446260932656;  // std dev = 3.780, 147.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=131 */
%   | | else return -0.12544463852839224;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5335072230117419;  // std dev = 2.654, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | | else return -0.16683092559860194;  // std dev = 0.009, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.49138808564139785;  // std dev = 2.405, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.5282695085745671;  // std dev = 0.700, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2677696364032269;  // std dev = 4.547, 116.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=62 */
%   | else return -0.12296301251617034;  // std dev = 0.492, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4905710782423014;  // std dev = 0.933, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46233183816619344;  // std dev = 3.570, 105.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=90 */
%   | | | else return -0.11231637819360661;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4397047690793983;  // std dev = 0.941, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.5044414072447244;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5893019177173271;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3445346188317103;  // std dev = 2.251, 41.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=34 */
%   | | | else return 0.030787245730815656;  // std dev = 6.159, 481.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=119 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.19706791079267327;  // std dev = 2.914, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3537816200209086;  // std dev = 0.216, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return 0.27990593125996616;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.377055711522167;  // std dev = 2.360, 77.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=70 */
%   | | | else return 0.38272500711003327;  // std dev = 3.032, 103.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=93 */
%   | | else return -0.10960938698525;  // std dev = 0.322, 417.000 (wgt'ed) examples reached here.  /* #neg=417 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.45120686668706933;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4949610996823426;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.1351221730671672;  // std dev = 2.999, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.21247382236344325;  // std dev = 1.368, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18864719949775596;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A) )
%   | then return 0.020847606704475042;  // std dev = 6.053, 542.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=163 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.246972085895237;  // std dev = 2.823, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | | else return -0.17275286650340138;  // std dev = 0.008, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.20741972225783176;  // std dev = 1.939, 61.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | else if ( function(A, F) )
%   | | | then return 0.1322534863000758;  // std dev = 0.947, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03289025238672473;  // std dev = 3.835, 248.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=45 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.00978157056613836;  // std dev = 1.703, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.0321756167818262;  // std dev = 4.470, 345.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=101 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.08158433908414349;  // std dev = 1.454, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.1844676904172617;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12361363987636005;  // std dev = 1.549, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(F, A) )
%   | then return 0.001741502666299814;  // std dev = 6.182, 564.000 (wgt'ed) examples reached here.  /* #neg=401 #pos=163 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.43597071220777117;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.004681011810733346;  // std dev = 2.628, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | else if ( function(A, I) )
%   | | | then return 0.07094200791138774;  // std dev = 1.382, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16925134241939718;  // std dev = 0.110, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1742661738865356;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.26804557261455225;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.045784328286663664;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.06434471993234252;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.14915276308204034;  // std dev = 1.388, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then return 0.010077942919622876;  // std dev = 5.682, 559.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=153 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0839824277909064;  // std dev = 2.325, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.028260128185530538;  // std dev = 1.569, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.12163739428395492;  // std dev = 0.962, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.07939077032544448;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.19522026235184314;  // std dev = 1.264, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1198231539527232;  // std dev = 1.050, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.23491951301596253;  // std dev = 0.076, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.33873052814712656;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.005723041082775259;  // std dev = 6.532, 616.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=173 */


Results
   AUC ROC   = 0.990923
   AUC PR    = 0.434777
   CLL	      = -0.153329
   Precision = 0.464516 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.582996


Total learning time: 44.961 seconds
Total inference time: 14.691 seconds
AUC ROC: 0.990923


Results scoring model
   AUC ROC   = 0.974151
   AUC PR    = 0.219123
   CLL	      = -0.179392
   Precision = 0.106562 at threshold = 0.5
   Recall    = 0.918552
   F1        = 0.190969


Total scoring time: 200.929 seconds
Parameter learned model CLL: -0.179392


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [1.333, 2, 16], 'false,true,true,true': [2.504, 7, 60], 'false,true,true,false': [3.511, 14, 103], 'false,true,false': [2.46e-07, 362, 0], 'false,false,true': [1.309, 3, 4], 'false,false,false,true': [3.144, 29, 15], 'false,false,false,false': [1.854, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.04, 0, 22], 'true,false': [1.309, 2, 12], 'false,true,true,true': [2.531, 8, 32], 'false,true,true,false': [3.78, 16, 131], 'false,true,false': [0.0, 388, 0], 'false,false,true,true': [2.654, 10, 24], 'false,false,true,false': [0.009, 27, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [2.405, 7, 55], 'true,true,false,true': [0.7, 1, 6], 'true,true,false,false': [4.547, 54, 62], 'true,false': [0.492, 183, 0], 'false,true': [0.933, 1, 8], 'false,false,true,true': [3.57, 15, 90], 'false,false,true,false': [0.0, 195, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [0.941, 1, 34], 'true,false': [0.0, 0, 0], 'false,true,true': [0.122, 0, 10], 'false,true,false': [0.099, 0, 4], 'false,false,true,true': [2.251, 7, 34], 'false,false,true,false': [6.159, 362, 119], 'false,false,false,true': [2.914, 28, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.216, 0, 25], 'true,false': [0.948, 1, 9], 'false,true,true,true': [2.36, 7, 70], 'false,true,true,false': [3.032, 10, 93], 'false,true,false': [0.322, 417, 0], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [2.999, 30, 20], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [1.368, 2, 28], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.94, 1, 6], 'true,false': [0.0, 0, 0], 'false,true': [6.053, 379, 163], 'false,false,true,true': [2.823, 12, 24], 'false,false,true,false': [0.008, 22, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.939, 6, 55], 'true,true,false,true': [0.947, 2, 3], 'true,true,false,false': [0.0, 0, 0], 'true,false': [3.835, 203, 45], 'false,true,true': [1.703, 4, 11], 'false,true,false': [0.0, 0, 0], 'false,false,true': [4.47, 244, 101], 'false,false,false,true': [1.454, 9, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), interaction(G, H)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 18], 'true,true,false': [0.0, 0, 0], 'true,false': [1.549, 3, 16], 'false,true': [6.182, 401, 163], 'false,false,true,true': [0.211, 0, 3], 'false,false,true,false': [2.628, 34, 15], 'false,false,false,true': [1.382, 10, 6], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.11, 0, 21], 'true,true,false': [1.087, 2, 3], 'true,false': [0.068, 0, 10], 'false,true,true,true': [1.259, 2, 8], 'false,true,true,false': [0.801, 1, 2], 'false,true,false': [1.388, 3, 4], 'false,false,true': [5.682, 406, 153], 'false,false,false,true': [2.325, 25, 15], 'false,false,false,false': [1.569, 11, 5]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [0.962, 1, 24], 'true,false,true,true': [0.908, 1, 6], 'true,false,true,false': [1.264, 3, 4], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.05, 3, 10], 'false,true,false,true': [0.076, 0, 2], 'false,true,false,false': [0.03, 0, 2], 'false,false': [6.532, 443, 173]}]]
[{'': [0.05246913580247073, 0.21199726427672586], 'false': [0.20941177259858856, 0.22989529962129762], 'false,false': [0.24489795918367332, 0.2222222222222218], 'false,false,false': [0.2246900826446276, 0.2148437499999998], 'false,true': [0.10110467863894758, 1.668401451370401e-16], 'false,true,true': [0.09356204054355023, 0.10534005405800538], 'true': [-2.9605947323337506e-16, 0.09876543209876518], 'true,true': [-2.9605947323337506e-16, nan]}, {'': [0.05137371447823735, 0.16498370954285596], 'false': [0.15626764870629112, 0.2364660787476057], 'false,false': [0.2364660787476057, nan], 'false,false,true': [0.2071507707294733, 2.967191659926423e-06], 'false,true': [0.11212118606741943, -1.2590158011213115e-16], 'false,true,true': [0.16020489179229647, 0.09720038895906408], 'true': [7.115095592896188e-05, 0.12244897959183668]}, {'': [0.1365181919945795, 0.12157545872213568], 'true': [0.1577989644021528, 0.0013251113781320711], 'true,true': [0.09330083376759084, 0.17570012750367772], 'true,true,false': [0.07008280913356016, 0.1782116247138561], 'false': [0.0967394338724775, 0.11761923177211822], 'false,false': [0.11761923177211822, nan], 'false,false,true': [0.1214115757527595, -2.2773805633336544e-17]}, {'': [0.02527454243382132, 0.10109484631509759], 'false': [0.0032296130941285345, 0.0983965836099988], 'false,false': [0.0894915345173054, 0.1768671290708861], 'false,false,false': [0.1768671290708861, nan], 'false,false,true': [0.12355326407051535, 0.07885646955880397], 'true': [0.02527454243382132, nan], 'false,true': [0.0014931618971251836, 0.0024269509168725056]}, {'': [0.028120985963318062, 0.08479307288994362], 'false': [0.07545324800208311, 0.17438845618469426], 'false,false': [0.00047860822625117594, 0.17984063771781983], 'false,false,false': [0.17984063771781983, nan], 'false,true': [0.08203156682465423, 0.0002485543332426394], 'false,true,true': [0.07235100506670306, 0.08925474246588713], 'true': [0.001864198200740237, 0.08986465723411723], 'false,false,true': [0.0, 0.0]}, {'': [0.07451602141412712, 0.07875131071829751], 'false': [0.0676050947300028, 0.17886557783921542], 'false,false': [0.17886557783921542, nan], 'false,false,true': [0.22134760120349795, 3.2416071428685957e-06], 'true': [0.07451602141412712, nan], 'true,true': [0.06234146220217642, 0.12623240000199082], 'true,true,false': [nan, 0.12623240000199082]}, {'': [0.07089013417466238, 0.06676641791904434], 'true': [0.0709343637870688, 0.05930850825300364], 'true,true': [0.06161506492310883, 0.17940787440144915], 'true,true,false': [0.17940787440144915, nan], 'false': [0.19331178826283832, 0.061469776689153204], 'false,true': [0.19331178826283832, nan], 'false,false': [0.05791060435096229, 0.14099123620464432], 'false,false,false': [0.14099123620464432, nan]}, {'': [0.06574086020575705, 0.07549337289304381], 'false': [0.06775428713473057, 0.13883504872206115], 'false,false': [0.14422715536407826, 0.1193835509277908], 'false,false,true': [0.014818618696508135, 0.1409477841959897], 'false,false,false': [0.1193835509277908, nan], 'true': [-3.700743415417188e-17, 0.12622011085616955], 'true,true': [-3.700743415417188e-17, nan]}, {'': [0.051981273311400344, 0.0704719280497037], 'false': [0.2155160618597319, 0.06566707216732574], 'false,true': [0.17336457855607576, 0.27511772417912633], 'false,true,true': [0.15846526886467976, 0.21369940014665925], 'false,false': [0.0577581022782829, 0.1430247231182167], 'false,false,false': [0.13509271617215932, 0.15385588950327173], 'true': [0.06424550385173261, 0.00046624775550567764], 'true,true': [0.0005782573556784339, 0.2363367866663551]}, {'': [0.10002884298494144, 0.06992760175033212], 'true': [0.03703711626438499, 0.19184806216569483], 'true,false': [0.19184806216569483, nan], 'true,false,true': [0.1177777907590898, 0.22821272393825673], 'false': [0.07092014477926575, 0.0692682848328777], 'false,true': [0.08483754679977899, 0.004361229098030717], 'false,true,true': [nan, 0.08483754679977899], 'false,true,false': [0.0028817170441878676, 0.0004523777205922286]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.8055173561521439;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7956489350995123;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.6937653734556772;  // std dev = 3.167, 73.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=61 */
%   | | | else return 0.802593379543956;  // std dev = 2.380, 108.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=102 */
%   | | else return -0.14185106490048732;  // std dev = 3.01e-07, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.30814893509951236;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7303252860585947;  // std dev = 0.004, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( complex(A, E), enzyme(A, F) )
%   | | then return 0.3985798560464797;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7420424195649866;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.49584704309115585;  // std dev = 2.877, 45.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | | | else return 0.6727442236059846;  // std dev = 2.904, 138.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=129 */
%   | | else return -0.12544463852839222;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.4199233883919265;  // std dev = 2.433, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.7017631890468323;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.16963889003253993;  // std dev = 0.054, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5490136695969418;  // std dev = 0.167, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.2148242270476262;  // std dev = 3.892, 93.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=46 */
%   | | | else return 0.38798670850614975;  // std dev = 3.258, 63.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | else return -0.12346983080747637;  // std dev = 0.496, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.6068089482677185;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.24693764667883897;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | then if ( location(A, N) )
%   | | | then return 0.2474590097534924;  // std dev = 4.833, 156.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=86 */
%   | | | else return 0.05581410274408179;  // std dev = 1.375, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.11231637819360615;  // std dev = 1.01e-07, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.449268092669051;  // std dev = 0.230, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.27674473022427715;  // std dev = 0.412, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.12881626049302272;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4558320606656149;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.46472709939178425;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.21590284605216145;  // std dev = 3.885, 95.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=52 */
%   | | | else return -0.11798220754922169;  // std dev = 0.620, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.09528424132071316;  // std dev = 4.459, 200.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=65 */
%   | | | else return 0.044312236500137984;  // std dev = 4.532, 208.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.3366093783872073;  // std dev = 0.142, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.004405133821466222;  // std dev = 0.498, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else return 0.39264269490383386;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.3701279684205507;  // std dev = 3.739, 121.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=104 */
%   | | | else return 0.4752065904363022;  // std dev = 1.022, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | else return -0.11619309728089995;  // std dev = 0.485, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3325960847285473;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.02555197460332194;  // std dev = 2.627, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.24808190533014074;  // std dev = 1.533, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return 0.31119210185069474;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22715221183097786;  // std dev = 0.248, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14362758652994098;  // std dev = 0.601, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.0062814843708159625;  // std dev = 5.950, 453.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=128 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10695679078718995;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07524779171298317;  // std dev = 2.315, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | else if ( function(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.1338969051542433;  // std dev = 2.094, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.4528630225648085;  // std dev = 1.231, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return -0.14574961659646304;  // std dev = 0.082, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return -0.08111527566790985;  // std dev = 0.245, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | else if ( complex(C, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), interaction(H, C) )
%   | | | then return -0.0284840132731985;  // std dev = 0.636, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1890843459870114;  // std dev = 1.334, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return -0.11822581587022336;  // std dev = 1.088, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.02511147720583253;  // std dev = 2.748, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   else if ( interaction(A, K), complex(A, L) )
%   | then return 0.010449064562537002;  // std dev = 0.261, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | else if ( interaction(M, A), location(M, N) )
%   | | then return 0.049859157833230625;  // std dev = 0.264, 372.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=131 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.06373507300486918;  // std dev = 1.386, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.2511642841897231;  // std dev = 0.690, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.21114711428007935;  // std dev = 0.014, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2124787003417745;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.303559436654932;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.1126094970390978;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2645475073020261;  // std dev = 0.170, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.11497287110366795;  // std dev = 0.417, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.20020148386435627;  // std dev = 0.357, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.025596002562871315;  // std dev = 5.748, 508.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=153 */
%   | | | else return -0.03264904776724244;  // std dev = 3.150, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1438764841178963;  // std dev = 0.205, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.20692964402269512;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.25676358521914167;  // std dev = 1.077, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.21996752129729757;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08419970012932969;  // std dev = 0.791, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10503747845606821;  // std dev = 0.122, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.22593299304522121;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.050024209048683495;  // std dev = 2.967, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
%   | | | else return -4.2174852683680297E-4;  // std dev = 6.051, 492.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=139 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.18408229760151684;  // std dev = 0.060, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( complex(A, F) )
%   | | then return 0.21595221385668079;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.019534180045743987;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.15291289945568873;  // std dev = 0.172, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.14657811128091008;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.40176052104768606;  // std dev = 0.720, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.1967257910344783;  // std dev = 1.637, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.01704064065126227;  // std dev = 5.013, 442.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=123 */
%   | | | else return 0.15561332768123975;  // std dev = 1.817, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */


Results
   AUC ROC   = 0.992208
   AUC PR    = 0.453387
   CLL	      = -0.175631
   Precision = 0.186047 at threshold = 0.5
   Recall    = 0.956522
   F1        = 0.311504


Total learning time: 116.936 seconds
Total inference time: 30.468 seconds
AUC ROC: 0.992208


Results scoring model
   AUC ROC   = 0.982192
   AUC PR    = 0.200607
   CLL	      = -0.18336
   Precision = 0.110996 at threshold = 0.5
   Recall    = 0.972851
   F1        = 0.199259


Total scoring time: 267.915 seconds
Refined model CLL: -0.18336


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.990923
   AUC PR    = 0.434777
   CLL	      = -0.153329
   Precision = 0.464516 at threshold = 0.5
   Recall    = 0.782609
   F1        = 0.582996


Total learning time: 630.741 seconds
Total inference time: 14.691 seconds
AUC ROC: 0.990923
Total revision time: 630.741
Best scored revision CLL: -0.179392


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:30:18
{'AUC ROC': 0.990923, 'AUC PR': 0.434777, 'CLL': -0.153329, 'Precision': [0.464516, 0.5], 'Recall': 0.782609, 'F1': 0.582996, 'Learning time': 630.741, 'Inference time': 14.691, 'parameter_0.8': {'AUC ROC': 0.990923, 'AUC PR': 0.434777, 'CLL': -0.153329, 'Precision': [0.464516, 0.5], 'Recall': 0.782609, 'F1': 0.582996, 'Learning time': 44.961, 'Inference time': 14.691}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.7748156017661788;  // std dev = 1.658, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7719420385477883;  // std dev = 2.138, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | | else return 0.8036034805540578;  // std dev = 1.684, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | else return -0.14185106490048796;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.16752393509951005;  // std dev = 8.269, 320.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=99 */
%   | | | else return 0.19148226843284563;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.6943712927833084;  // std dev = 0.977, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6771576970228514;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6585051663310286;  // std dev = 1.662, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.7182744003850462;  // std dev = 0.989, 70.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=69 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8166356890247957;  // std dev = 0.261, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.16568193538024797;  // std dev = 0.116, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15508807642643158;  // std dev = 7.227, 243.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=78 */
%   | | | else return 0.1332054912315489;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5528901458543004;  // std dev = 0.978, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.46064666612159777;  // std dev = 0.977, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.6506140476670802;  // std dev = 0.394, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.13493477542321808;  // std dev = 0.757, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5834778493762497;  // std dev = 0.009, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5232440741341436;  // std dev = 1.943, 75.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=71 */
%   | | | else return -0.1123163781936065;  // std dev = 0.000, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.13776492252161554;  // std dev = 7.872, 285.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=93 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.345237126168687;  // std dev = 1.349, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.2616947644521776;  // std dev = 1.566, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.4414076464023551;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.3006239222906956;  // std dev = 1.517, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.5617199999697879;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3396646349655356;  // std dev = 1.813, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return -0.006012997272943686;  // std dev = 3.782, 336.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=60 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06576578385931656;  // std dev = 3.082, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | | else return 0.10778380681799055;  // std dev = 7.762, 279.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=88 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.36096766086301557;  // std dev = 0.091, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return 0.3534536016483766;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3237555456851714;  // std dev = 2.313, 78.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=72 */
%   | | | else return 0.40424962784050406;  // std dev = 0.987, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.10113943984589764;  // std dev = 0.089, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.44217258753972805;  // std dev = 0.263, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.29943987727095134;  // std dev = 0.890, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.08282288853365191;  // std dev = 2.952, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | | else return 0.1086913778957502;  // std dev = 7.652, 263.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=88 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2737514858248367;  // std dev = 0.036, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0.306013189367481;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.291626552271621;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.21374425405003597;  // std dev = 1.152, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else if ( interaction(A, G) )
%   | then return 0.008358107476522606;  // std dev = 3.964, 416.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=105 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46183128847717264;  // std dev = 0.561, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.1441783267624471;  // std dev = 0.009, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07155044577045223;  // std dev = 7.881, 286.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=93 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2282101015501963;  // std dev = 1.660, 71.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=67 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2621176626271907;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.05346280344941383;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else return 0.02143020249977873;  // std dev = 7.949, 571.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=151 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H) )
%   | | then return 0.2291218828701181;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23464718110953528;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I) )
%   | | then return 0.020801491103666022;  // std dev = 1.938, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.041889171490005817;  // std dev = 0.840, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.11568303944344657;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1019539631374225;  // std dev = 0.823, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1533635788458083;  // std dev = 1.368, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, F) )
%   | then return -0.0012854729866440273;  // std dev = 3.833, 425.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=105 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.25505418090167153;  // std dev = 0.847, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.017960426800573276;  // std dev = 7.562, 349.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=101 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.011147739810157377;  // std dev = 0.861, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.03700235074762308;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1795747937853388;  // std dev = 0.073, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.0843511438760931;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.05922732170143263;  // std dev = 1.199, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( complex(E, G), interaction(F, A) )
%   | | | then return 0.07440399036050428;  // std dev = 1.019, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.21662236335042206;  // std dev = 0.634, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.30251367005988294;  // std dev = 0.214, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H) )
%   | | then return 0.0024047345600479017;  // std dev = 3.794, 378.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=99 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05228665029486994;  // std dev = 7.328, 303.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=99 */
%   | | | else return 0.04744849241665283;  // std dev = 3.252, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.13338187456484668;  // std dev = 0.918, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.17711921081221363;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1599612374941693;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return -0.17578832600290684;  // std dev = 1.531, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), complex(A, I) )
%   | | | then return 0.2406599084104133;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.261205190404645;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, G) )
%   | | | then return 0.12789918358884855;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1766441145322892;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.020472706941241578;  // std dev = 8.836, 757.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=217 */


Results
   AUC ROC   = 0.968946
   AUC PR    = 0.457238
   CLL	      = -0.179872
   Precision = 0.533835 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.631111


Total learning time: 6.601 seconds
Total inference time: 4.742 seconds
AUC ROC: 0.968946


Results scoring model
   AUC ROC   = 0.937058
   AUC PR    = 0.252528
   CLL	      = -0.209675
   Precision = 0.226347 at threshold = 0.5
   Recall    = 0.68231
   F1        = 0.339928


Total scoring time: 19.888 seconds
Parameter learned model CLL: -0.209675


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [1.658, 3, 33], 'false,true,true,true': [2.138, 5, 53], 'false,true,true,false': [1.684, 3, 52], 'false,true,false': [0.0, 284, 0], 'false,false,true': [0.0, 0, 11], 'false,false,false,true': [8.269, 221, 99], 'false,false,false,false': [3.559, 38, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'complex(A, G)', 'false,false,true': 'complex(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [0.977, 1, 27], 'true,false': [0.97, 1, 16], 'false,true,true,true': [1.662, 3, 36], 'false,true,true,false': [0.989, 1, 69], 'false,true,false': [0.0, 300, 0], 'false,false,true,true': [0.261, 0, 36], 'false,false,true,false': [0.116, 67, 0], 'false,false,false,true': [7.227, 165, 78], 'false,false,false,false': [3.24, 35, 15]}], ['proteinclass(A, B)', {'': 'interaction(C, A), complex(A, D)', 'true': 'complex(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.978, 1, 35], 'true,true,false,true': [0.977, 1, 10], 'true,true,false,false': [0.394, 0, 46], 'true,false': [0.757, 204, 0], 'false,true': [0.009, 0, 22], 'false,false,true,true': [1.943, 4, 71], 'false,false,true,false': [0.0, 184, 0], 'false,false,false,true': [7.872, 192, 93], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true': [1.349, 3, 24], 'true,false,true': [1.566, 3, 14], 'true,false,false': [0.0, 0, 5], 'false,true,true': [1.517, 4, 14], 'false,true,false': [0.233, 0, 3], 'false,false,true,true': [1.813, 8, 39], 'false,false,true,false': [3.782, 276, 60], 'false,false,false,true': [3.082, 74, 30], 'false,false,false,false': [7.762, 191, 88]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), complex(A, L)'}, {'true,true': [0.091, 0, 32], 'true,false': [0.045, 0, 11], 'false,true,true,true': [2.313, 6, 72], 'false,true,true,false': [0.987, 1, 33], 'false,true,false': [0.089, 311, 0], 'false,false,true,true': [0.263, 0, 5], 'false,false,true,false': [0.89, 1, 6], 'false,false,false,true': [2.952, 61, 30], 'false,false,false,false': [7.652, 175, 88]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'complex(A, H)', 'false,false,true': 'complex(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true': [0.036, 0, 17], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.018, 0, 3], 'true,false': [1.152, 2, 22], 'false,true': [3.964, 311, 105], 'false,false,true,true': [0.561, 0, 36], 'false,false,true,false': [0.009, 76, 0], 'false,false,false,true': [7.881, 193, 93], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'complex(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'complex(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [1.66, 4, 67], 'true,true,false,true': [0.234, 0, 5], 'true,true,false,false': [1.236, 6, 4], 'true,false': [7.949, 420, 151], 'false,true,true': [0.005, 0, 4], 'false,true,false': [0.027, 0, 3], 'false,false,true': [1.938, 63, 24], 'false,false,false,true': [0.84, 8, 4], 'false,false,false,false': [3.062, 25, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), complex(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I)'}, {'true,true,true': [0.823, 1, 10], 'true,true,false': [0.0, 0, 0], 'true,false': [1.368, 2, 33], 'false,true': [3.833, 320, 105], 'false,false,true,true': [0.847, 2, 9], 'false,false,true,false': [7.562, 248, 101], 'false,false,false,true': [0.861, 10, 4], 'false,false,false,false': [3.196, 32, 15]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'complex(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.073, 0, 25], 'true,true,false': [1.159, 2, 5], 'true,false': [1.199, 2, 13], 'false,true,true,true': [1.019, 2, 8], 'false,true,true,false': [0.634, 1, 6], 'false,true,false': [0.214, 0, 3], 'false,false,true': [3.794, 279, 99], 'false,false,false,true': [7.328, 204, 99], 'false,false,false,false': [3.252, 37, 19]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'complex(A, E), complex(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), complex(A, I)', 'false,true,false': 'complex(A, J), interaction(K, G)'}, {'true,true': [0.918, 1, 30], 'true,false,true,true': [0.035, 0, 4], 'true,false,true,false': [0.002, 0, 2], 'true,false,false': [1.531, 4, 7], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.05, 0, 5], 'false,true,false,true': [0.06, 0, 5], 'false,true,false,false': [0.911, 1, 6], 'false,false': [8.836, 540, 217]}]]
[{'': [0.06096408317580449, 0.20923201752606801], 'false': [0.19453203814503126, 0.22193511531512655], 'false,false': [-1.6148698540002277e-16, 0.21503000795052626], 'false,false,false': [0.21366210937500157, 0.2222222222222217], 'false,true': [0.06578432140340136, -1.2509555207044018e-17], 'false,true,true': [0.07877526753864438, 0.05157024793388442], 'true': [-8.881784197001253e-17, 0.0763888888888889], 'true,true': [-8.881784197001253e-17, nan]}, {'': [0.04219015565763308, 0.1791538410180286], 'false': [0.14155545574308573, 0.21587386068648134], 'false,false': [0.2201759980344863, 0.21418161603772354], 'false,false,true': [0.0018891522203463079, 0.00020110349398331874], 'false,false,false': [0.214960316263911, 0.20999999999999963], 'false,true': [0.035143391680476865, -8.585724723767877e-17], 'true': [0.03408022339669189, 0.05536332179930802], 'false,true,true': [0.07084064032727237, 0.01397674024481412]}, {'': [0.12337285528861933, 0.16374583662110853], 'false': [4.046630080275807e-06, 0.1615181470175301], 'false,false': [0.09767988852785565, 0.21745622721513458], 'false,false,false': [0.21745622721513458, nan], 'true': [0.026554888385226655, 0.0028068476102234897], 'false,false,true': [0.05035432587732288, -2.172175482962263e-17], 'true,true': [0.026572551970129716, 0.025100343525308096], 'true,true,false': [0.0868600987211997, 0.003367431561252371]}, {'': [0.09018041956431723, 0.12340186228584792], 'false': [0.12044402798131891, 0.121515568085165], 'false,false': [0.05878853246196794, 0.18244456878053628], 'false,false,false': [0.09133767582251033, 0.215926152567548], 'false,true': [0.1277668664236965, 0.018074572944704086], 'true': [0.06743581862367992, 0.11708964740380177], 'true,false': [0.1441876153706919, 0.0], 'false,false,true': [0.06995931554105739, 0.042562317711585675]}, {'': [0.00024964675673220144, 0.11887393196925679], 'false': [0.054633302499097064, 0.18851903010580906], 'false,false': [0.07675320144107894, 0.1901443469744656], 'false,false,false': [0.09574578005576245, 0.22263494846412007], 'false,false,true': [0.013833730352856, 0.11320708638119684], 'false,true': [0.05782661800380738, 2.565368875279407e-05], 'false,true,true': [0.0685840948382057, 0.028635332824131176], 'true': [0.00025683411966001546, 0.0001867205122949376]}, {'': [0.030592840622096024, 0.1078771758936335], 'false': [0.037781366509978695, 0.179465219280686], 'false,false': [0.08291478001971206, 0.21715178952035147], 'false,false,false': [0.21715178952035147, nan], 'false,false,true': [0.008751016740840913, 1.0949686302342305e-06], 'true': [0.0001542590441718466, 0.05530932926917422], 'true,true': [7.469667144427101e-05, 0.00011918031434678122], 'true,true,false': [0.0, 0.00010716325406369871]}, {'': [0.10724529868665138, 0.09798577525956567], 'true': [0.05373849937091031, 0.11065637907142208], 'false': [0.00011264660478220247, 0.10133410407227292], 'false,false': [0.0431874980609921, 0.19482429564939813], 'false,false,false': [0.058799741444163035, 0.2343750000000003], 'true,true': [0.038818724974168675, 0.11522277318415845], 'true,true,false': [0.010988723123744215, 0.15282751479486628], 'false,true': [5.291969848122968e-06, 0.00023834102052217032]}, {'': [0.05590333527995004, 0.09966112803140253], 'false': [0.03456583376354738, 0.1649993995070149], 'false,false': [0.16250502125618244, 0.1796909207404368], 'false,false,false': [0.05294068547340093, 0.2172928927116339], 'false,false,true': [0.06522260838969408, 0.16385359597109744], 'true': [0.06155243658240475, 0.05349589399725041], 'true,true': [0.06155243658240475, nan]}, {'': [0.06823134960837263, 0.10713222746678872], 'false': [0.08210763070856372, 0.10735054650043485], 'false,false': [0.038082354364645056, 0.1790468914773053], 'false,false,false': [0.17722524515808533, 0.1888835428201394], 'false,true': [0.08958490089796416, 0.015301549163204808], 'false,true,true': [0.10376637599615716, 0.05742796510127706], 'true': [0.05402172609854175, 0.09587595551360521], 'true,true': [0.00021307044444006883, 0.19177604272108542]}, {'': [0.08415046745915483, 0.10253652717691134], 'false': [0.049148558230340256, 0.103137314354324], 'true': [0.027206214830163594, 0.16549435546940733], 'true,false': [0.00026920061316101457, 0.2130737596282306], 'false,true': [0.0004682517571172791, 0.07005819661601793], 'false,true,false': [0.0007154325833502506, 0.118598713898354], 'false,true,true': [0.0, 0.0004915506731703045], 'true,false,true': [0.000304947763420535, 1.4422803868083256e-06]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), complex(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;complex(A, G).;true;true
1;false,false,true;complex(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), complex(A, D).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;complex(A, D), complex(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;true,true,false;interaction(C, F), interaction(F, A).;true;true
5;false;interaction(A, G).;true;true
5;false,false;complex(A, H).;true;true
5;false,false,true;complex(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;complex(A, E), complex(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,true;interaction(H, G), complex(A, I).;true;true
9;false,true,false;complex(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.7081489350995123;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8214516873930889;  // std dev = 0.188, 109.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=105 */
%   | | else return -0.14185106490048777;  // std dev = 1.33e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.14527764797079826;  // std dev = 4.547, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.20992759122599314;  // std dev = 7.596, 253.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=89 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7339309758998178;  // std dev = 0.115, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.5986149466793333;  // std dev = 2.088, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | | else return 0.6862795343439223;  // std dev = 1.697, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | else return -0.125444638528392;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8165830532120474;  // std dev = 0.217, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.16679682123075948;  // std dev = 0.035, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16636894024545892;  // std dev = 7.579, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
%   | | | else return 0.10552568085154411;  // std dev = 2.052, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5640286351384145;  // std dev = 0.112, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12319884450104374;  // std dev = 0.055, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.07876684493212804;  // std dev = 4.729, 193.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=54 */
%   | | | else return 0.12470675223332957;  // std dev = 2.438, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.532278318831149;  // std dev = 0.202, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5380571069489658;  // std dev = 1.684, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | | else return -0.11231637819360635;  // std dev = 7.30e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.22007895538144645;  // std dev = 4.092, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return 0.13253930728364244;  // std dev = 6.543, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4686055882089967;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.44333962510570807;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.2470526840753038;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4380672601025203;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10108770390963988;  // std dev = 0.003, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.47166238016953177;  // std dev = 0.900, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return -0.0027992579653507484;  // std dev = 3.486, 226.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=42 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5166104967384781;  // std dev = 0.438, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.08532005339610313;  // std dev = 9.085, 497.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=152 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.20915571969073649;  // std dev = 0.316, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return 0.35237601014338227;  // std dev = 0.125, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.058820634206408484;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3739436872104763;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G) )
%   | then return 0.030772290144919435;  // std dev = 0.253, 396.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=105 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5751621978252867;  // std dev = 2.971, 78.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=67 */
%   | | | else return -0.21713050113304183;  // std dev = 0.401, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09090119796074352;  // std dev = 4.436, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.14625283712130863;  // std dev = 3.980, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.2908907554437115;  // std dev = 0.044, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( complex(A, E) )
%   | | then return -0.12792654177045887;  // std dev = 1.242, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.22666001086016338;  // std dev = 0.220, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09487642207059913;  // std dev = 0.003, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.05132733870372256;  // std dev = 0.271, 327.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=105 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.473530026760624;  // std dev = 1.240, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.16975624212225732;  // std dev = 0.451, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08069170313583779;  // std dev = 6.975, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
%   | | | else return -0.021419441752279014;  // std dev = 2.087, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1855766377798603;  // std dev = 0.256, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return -0.020266611290368632;  // std dev = 3.539, 151.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=31 */
%   | | | else return 0.09766080493267784;  // std dev = 2.101, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.030817798359221053;  // std dev = 3.522, 151.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=46 */
%   | | | else return 0.06770255772352334;  // std dev = 6.193, 274.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=94 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.23091800005382243;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6035967928964926;  // std dev = 0.480, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.20588075347390117;  // std dev = 0.229, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.013865513229393186;  // std dev = 0.278, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, E) )
%   | then return 0.21544727526038934;  // std dev = 0.084, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then return -0.04661281791152923;  // std dev = 0.221, 88.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=14 */
%   | | else if ( phenotype(C, G), interaction(C, C) )
%   | | | then return 0.09119554617476308;  // std dev = 2.733, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
%   | | | else return 0.03712737902459197;  // std dev = 8.096, 556.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=184 */
%   else if ( interaction(A, H), location(A, I) )
%   | then if ( location(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1879399315427004;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04856059373490493;  // std dev = 1.681, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3989126182877081;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11042117547965076;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.18362508294793023;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1157811805750194;  // std dev = 0.250, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return -0.39593444619632395;  // std dev = 0.718, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21495821377010838;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16780796841795528;  // std dev = 0.262, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then return -0.012546231339192375;  // std dev = 0.220, 163.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=36 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( location(A, I) )
%   | | | then return 0.008503181921868616;  // std dev = 7.001, 418.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=126 */
%   | | | else return 0.08864673588376804;  // std dev = 1.853, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.03608448772329968;  // std dev = 1.446, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.06964557743337517;  // std dev = 4.299, 155.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( recursion_proteinclass(F, B), complex(F, E) )
%   | | | then return 0.13913603580496214;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.22383061629871787;  // std dev = 1.346, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.1741312087872122;  // std dev = 0.101, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.1381801255488318;  // std dev = 0.266, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1598270631467333;  // std dev = 0.278, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(A, J), interaction(K, H) )
%   | | | then return 0.043487405570565255;  // std dev = 3.456, 166.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=51 */
%   | | | else return 0.005614204925793289;  // std dev = 6.604, 372.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=105 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.02160689134376419;  // std dev = 2.961, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | | else return -0.04060937646909763;  // std dev = 3.858, 131.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=29 */


Results
   AUC ROC   = 0.983771
   AUC PR    = 0.504707
   CLL	      = -0.193296
   Precision = 0.512605 at threshold = 0.5
   Recall    = 0.663043
   F1        = 0.578199


Total learning time: 25.088 seconds
Total inference time: 4.316 seconds
AUC ROC: 0.983771


Results scoring model
   AUC ROC   = 0.97586
   AUC PR    = 0.249568
   CLL	      = -0.215829
   Precision = 0.246631 at threshold = 0.5
   Recall    = 0.66065
   F1        = 0.359176


Total scoring time: 26.432 seconds
Refined model CLL: -0.215829


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968946
   AUC PR    = 0.457238
   CLL	      = -0.179872
   Precision = 0.533835 at threshold = 0.5
   Recall    = 0.771739
   F1        = 0.631111


Total learning time: 78.009 seconds
Total inference time: 4.742 seconds
AUC ROC: 0.968946
Total revision time: 78.009
Best scored revision CLL: -0.209675


Dataset: 8_twitter_yeast, Fold: 3, Type: Transfer (trRDN-B), Time: 06:31:46
{'AUC ROC': 0.968946, 'AUC PR': 0.457238, 'CLL': -0.179872, 'Precision': [0.533835, 0.5], 'Recall': 0.771739, 'F1': 0.631111, 'Learning time': 78.009, 'Inference time': 4.742, 'parameter_1.0': {'AUC ROC': 0.968946, 'AUC PR': 0.457238, 'CLL': -0.179872, 'Precision': [0.533835, 0.5], 'Recall': 0.771739, 'F1': 0.631111, 'Learning time': 6.601, 'Inference time': 4.742}}


Starting fold 4

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos	 examples: 86
Target test neg examples: 10998

Amount of data: 0.2
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1869160583871827;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7414996535886117;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7358228803001987;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6422711294110875;  // std dev = 0.965, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4799917392664446;  // std dev = 3.137, 44.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=29 */
%   | | | else return -0.1791057288519236;  // std dev = 0.183, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.521398982885383;  // std dev = 0.973, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6134551670689924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3432378546588822;  // std dev = 3.453, 57.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=34 */
%   | else return -0.13348358781639838;  // std dev = 0.215, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.42279257956261734;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4648095818189638;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.46217345384066943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3217995451407788;  // std dev = 0.905, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.03836168178728637;  // std dev = 1.778, 87.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=10 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.079370643058362;  // std dev = 3.841, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3636070436092253;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.31305891039220046;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.40851008241170417;  // std dev = 0.212, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3665779524561442;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.10852663268951385;  // std dev = 0.157, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.35119985092688366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.13209189947068264;  // std dev = 3.592, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2757916638997947;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.2062910213667173;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.6060671220996492;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G) )
%   | then return -0.010901535380415281;  // std dev = 1.780, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.34518363964172266;  // std dev = 2.773, 40.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=29 */
%   | | | else return -0.1615308277585889;  // std dev = 0.149, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2021404663639404;  // std dev = 0.518, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03465449099827301;  // std dev = 3.320, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return 0.10460276412148445;  // std dev = 1.025, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( function(A, H), interaction(I, A) )
%   | | | then return 0.058048297488412726;  // std dev = 0.988, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.19350469080053379;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09081468517975912;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, F) )
%   | then return -0.001258995837372916;  // std dev = 1.600, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09517253799627358;  // std dev = 2.953, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | else if ( function(A, I) )
%   | | | then return -0.009646292899050063;  // std dev = 1.145, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17250363252849424;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.2379152384330313;  // std dev = 0.103, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.2050925937823983;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return -0.2684953534629608;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1915484743687662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.008617805067660753;  // std dev = 1.710, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.009258504714912451;  // std dev = 3.198, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.036099916724314035;  // std dev = 1.104, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.1615756335990486;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.17370290407881933;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, I), interaction(J, G) )
%   | | | then return 0.1636211084719571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014806723473905709;  // std dev = 3.782, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */


Results
   AUC ROC   = 0.97753
   AUC PR    = 0.343186
   CLL	      = -0.198447
   Precision = 0.144737 at threshold = 0.5
   Recall    = 0.767442
   F1        = 0.243542


Total learning time: 12.938 seconds
Total inference time: 15.062 seconds
AUC ROC: 0.97753


Results scoring model
   AUC ROC   = 0.961447
   AUC PR    = 0.190716
   CLL	      = -0.218662
   Precision = 0.114695 at threshold = 0.5
   Recall    = 0.571429
   F1        = 0.191045


Total scoring time: 43.653 seconds
Parameter learned model CLL: -0.218662


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.894, 1, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 6], 'false,true,true,true': [0.935, 1, 7], 'false,true,true,false': [0.0, 0, 10], 'false,true,false': [6.66e-08, 66, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [0.894, 1, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.05, 0, 7], 'true,false': [0.866, 1, 3], 'false,true,true,true': [0.028, 0, 6], 'false,true,true,false': [0.965, 1, 11], 'false,true,false': [0.0, 48, 0], 'false,false,true,true': [3.137, 15, 29], 'false,false,true,false': [0.183, 41, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [0.973, 1, 16], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [3.453, 23, 34], 'true,false': [0.215, 65, 0], 'false,true': [0.0, 0, 0], 'false,false,true,true': [0.897, 1, 5], 'false,false,true,false': [1.39e-08, 16, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [0.108, 0, 10], 'true,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.905, 1, 7], 'false,false,true,false': [1.778, 77, 10], 'false,false,false,true': [3.841, 63, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.076, 0, 8], 'true,false': [0.0, 0, 2], 'false,true,true,true': [0.212, 0, 10], 'false,true,true,false': [0.95, 1, 7], 'false,true,false': [0.157, 55, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.592, 44, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.078, 0, 9], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.707, 1, 1], 'true,false': [0.072, 2, 0], 'false,true': [1.78, 67, 17], 'false,false,true,true': [2.773, 11, 29], 'false,false,true,false': [0.149, 40, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)', 'false,false,false': 'function(A, H), interaction(I, A)'}, {'true,true,true': [0.518, 2, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [3.32, 80, 33], 'false,true': [0.0, 0, 0], 'false,false,true': [1.025, 11, 7], 'false,false,false,true': [0.988, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I)'}, {'true,true,true': [0.0, 0, 4], 'true,true,false': [0.0, 0, 0], 'true,false': [0.88, 1, 6], 'false,true': [1.6, 54, 17], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [2.953, 38, 25], 'false,false,false,true': [1.145, 7, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.019, 0, 6], 'true,true,false': [0.103, 0, 2], 'true,false': [0.021, 0, 2], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [0.0, 0, 1], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.71, 56, 17], 'false,false,false,true': [3.198, 54, 24], 'false,false,false,false': [1.104, 5, 4]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,false': 'function(A, I), interaction(J, G)'}, {'true,true': [0.11, 0, 8], 'true,false,true,true': [0.018, 0, 2], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.0, 0, 0], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false': [3.782, 102, 45]}]]
[{'': [0.0826446280991734, 0.20256690127592333], 'false': [0.16142290249433053, 0.23233456176894865], 'false,false': [0.0, 0.2301117685733084], 'false,false,false': [0.22067930193282148, 0.15999999999999986], 'false,true': [0.05246913580246885, 6.728624391667616e-17], 'true': [0.15999999999999986, -1.4802973661668753e-16], 'true,true': [0.15999999999999986, nan], 'false,true,true': [0.10937499999999978, -8.881784197001253e-17]}, {'': [0.08553693757895374, 0.18937866596208192], 'false': [0.14123095004443514, 0.2246443818947237], 'false,false': [0.2246443818947237, nan], 'false,false,true': [0.22367500226641754, 0.0008139059853599057], 'false,true': [0.05367175752971468, -3.0068540250264654e-17], 'true': [0.0003638664819201054, 0.18750000000000006], 'false,true,true': [0.00013365255340066126, 0.07752349998639858]}, {'': [0.1630463041297881, 0.0933616671154358], 'true': [0.17785251735671198, 0.000710606160423167], 'true,true': [0.05564743259395807, 0.2068478986808358], 'true,true,false': [0.0, 0.20921788856459225], 'false': [nan, 0.0933616671154358], 'false,false': [0.0933616671154358, nan], 'false,false,true': [0.13407767881408716, 1.214306433183765e-17]}, {'': [0.0011608945731120368, 0.10813373503063792], 'false': [0.0, 0.10773804858585409], 'false,false': [0.05191025147827944, 0.16211803346651055], 'false,false,false': [0.16211803346651055, nan], 'false,false,true': [0.10239982609170382, 0.03634407013087408], 'true': [0.0011608945731120368, nan], 'false,true': [0.0, nan]}, {'': [0.0009852872589937388, 0.1221175827143308], 'false': [0.059564699912256734, 0.17738298445962938], 'false,false': [0.0, 0.17918898915319426], 'false,false,false': [0.17918898915319426, nan], 'false,true': [0.053050737874284014, 0.0004465434047984203], 'false,true,true': [0.004510738717991658, 0.11274890152931052], 'true': [0.0007205863193968931, 0.0], 'false,false,true': [nan, 0.0]}, {'': [0.15069017631039314, 0.10029795653621537], 'true': [0.08058099741097484, 0.002566111138536442], 'false': [0.03770401120993118, 0.1606163886777576], 'false,false': [0.1606163886777576, nan], 'false,false,true': [0.19229697752869668, 0.000556024090427032], 'true,true': [0.0006771091810109375, 0.25], 'true,true,false': [nan, 0.25]}, {'': [0.09165170899299012, 0.07287928499953743], 'true': [0.0191872301417203, 0.09753731196294697], 'false': [nan, 0.07287928499953748], 'false,false': [0.05834249700297868, 0.09765222730252847], 'false,false,false': [0.09765222730252847, nan], 'true,true': [0.0191872301417203, nan]}, {'': [0.0728993486756865, 0.08918964962908782], 'false': [0.03607385564151076, 0.1369513324260204], 'false,false': [0.13841667115859982, 0.11920515137283005], 'false,false,true': [nan, 0.13841667115859982], 'false,false,false': [0.11920515137283005, nan], 'true': [0.0, 0.11072148761863655], 'true,true': [0.0, nan]}, {'': [0.0018237516503730345, 0.08948809913050276], 'false': [0.05291008088151691, 0.08992448441604242], 'false,false': [0.04003324365034819, 0.13159263771432786], 'false,false,false': [0.13108530910569824, 0.1353435547466427], 'false,true': [0.05291008088151691, nan], 'false,true,true': [0.0, 0.0], 'true': [0.0021743821812071767, 0.00021034181735053725], 'true,true': [6.121408963689438e-05, 0.005304877815660226]}, {'': [0.0012603509062846685, 0.09679761074335298], 'false': [0.0, 0.09730646464003466], 'true': [0.0015052784913332125, 0.00016298401465885543], 'true,false': [0.00016298401465885543, nan], 'true,false,true': [0.00016298401465885543, nan], 'false,true': [nan, 0.0], 'false,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(A, F), interaction(F, E).;true;true
2;true,true,false;interaction(G, C), recursion_proteinclass(C, B).;true;true
2;false;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;function(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, E), interaction(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.31760839455897183;  // std dev = 3.031, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.1402002171507944;  // std dev = 2.810, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5656272583648005;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( function(G, H), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.7096703889443032;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.3351803864450659;  // std dev = 2.428, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.1850664531609595;  // std dev = 1.83e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.15978887554475502;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5577161600185407;  // std dev = 0.009, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.6471809652769098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28418987682468627;  // std dev = 3.602, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | else if ( interaction(A, H) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.1839037586284109;  // std dev = 0.288, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.14491150993066007;  // std dev = 0.096, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(J, K), recursion_proteinclass(J, B) )
%   | then if ( interaction(A, L), complex(L, M) )
%   | | then return 0.4519063316431873;  // std dev = 0.631, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.06400321863039163;  // std dev = 0.611, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.16694225187670025;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, D) )
%   | | then return 0.4394787886768219;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4169422518767002;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4898738130831384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.08518862272309946;  // std dev = 1.297, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.042690418073768596;  // std dev = 1.165, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.1972627569537136;  // std dev = 1.597, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.10270559869842852;  // std dev = 3.456, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.31706681325937996;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3657152714920266;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.32032453803585204;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.4170340030949469;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.48410294001426235;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.11908186701697625;  // std dev = 0.023, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3704273072842812;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.19626557568621894;  // std dev = 2.350, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.026421375044468436;  // std dev = 2.653, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2717646550077809;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.22653244412758078;  // std dev = 0.676, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return -0.6101549270852514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.06314009983360104;  // std dev = 0.204, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.15912365106973134;  // std dev = 0.627, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -3.375530208506688E-4;  // std dev = 1.016, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.3489098524843832;  // std dev = 1.283, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.105974272073395;  // std dev = 3.189, 45.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=21 */
%   | | else return -0.1624037974229128;  // std dev = 0.023, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), enzyme(E, F) )
%   | then return 0.01806874125947254;  // std dev = 0.179, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else return -0.041720791040131135;  // std dev = 0.215, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( complex(H, I) )
%   | | then if ( interaction(G, H), phenotype(A, J) )
%   | | | then return 0.11961768303227766;  // std dev = 1.847, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.03305609437519178;  // std dev = 2.291, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( location(A, K), location(G, K) )
%   | | | then return 0.4619830534745869;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03583828703008107;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, L) )
%   | | then return -0.1978318582135159;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04204490189335275;  // std dev = 0.555, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.46283084584439793;  // std dev = 0.664, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.23459707998106724;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.07183978469732948;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24031460593972093;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( enzyme(A, H), interaction(F, A) )
%   | | then return -0.3492895373014326;  // std dev = 0.450, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.02248689016052781;  // std dev = 0.203, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.06338795257360959;  // std dev = 0.966, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.30044902575533244;  // std dev = 1.190, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.15794873117300542;  // std dev = 0.617, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.0034689215029438613;  // std dev = 3.101, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1975972552260774;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1903636627119928;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.21727699450029264;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( function(E, F), interaction(G, A) )
%   | | then return 0.2291360010914839;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return -0.027185460726705895;  // std dev = 0.584, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.13501733073112138;  // std dev = 0.790, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.09413283959230512;  // std dev = 1.777, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.006335018330265308;  // std dev = 3.276, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.22310622464310229;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1631569440573809;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12175630285144963;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.19118444687495662;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(H, H), phenotype(A, I) )
%   | | | then return -0.10697621704985924;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07831169262837372;  // std dev = 0.951, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.009142972484121084;  // std dev = 2.548, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return -0.04141995876334797;  // std dev = 2.600, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */


Results
   AUC ROC   = 0.968545
   AUC PR    = 0.227008
   CLL	      = -0.209895
   Precision = 0.108844 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.189911


Total learning time: 48.67 seconds
Total inference time: 28.415 seconds
AUC ROC: 0.968545


Results scoring model
   AUC ROC   = 0.968679
   AUC PR    = 0.213314
   CLL	      = -0.208438
   Precision = 0.089069 at threshold = 0.5
   Recall    = 0.785714
   F1        = 0.16


Total scoring time: 77.878 seconds
Refined model CLL: -0.208438


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.968545
   AUC PR    = 0.227008
   CLL	      = -0.209895
   Precision = 0.108844 at threshold = 0.5
   Recall    = 0.744186
   F1        = 0.189911


Total learning time: 183.139 seconds
Total inference time: 28.415 seconds
AUC ROC: 0.968545
Total revision time: 183.139
Best scored revision CLL: -0.208438


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 06:35:34
{'AUC ROC': 0.968545, 'AUC PR': 0.227008, 'CLL': -0.209895, 'Precision': [0.108844, 0.5], 'Recall': 0.744186, 'F1': 0.189911, 'Learning time': 183.139, 'Inference time': 28.415, 'parameter_0.2': {'AUC ROC': 0.97753, 'AUC PR': 0.343186, 'CLL': -0.198447, 'Precision': [0.144737, 0.5], 'Recall': 0.767442, 'F1': 0.243542, 'Learning time': 12.938, 'Inference time': 15.062}}


Amount of data: 0.4
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.7613747415511255;  // std dev = 2.328, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.14185106490048835;  // std dev = 0.000, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6480448407823829;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.4451819331016109;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.6590019376306463;  // std dev = 2.361, 79.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | else return -0.1254446385283917;  // std dev = 0.000, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8104590754274297;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16679450876845167;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.11891977694583405;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.6014370392809505;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.21485858293970359;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6232398274062323;  // std dev = 0.163, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.13237082287145235;  // std dev = 0.310, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4413422282852532;  // std dev = 1.327, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5282838513305296;  // std dev = 2.163, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | | | else return -0.1123163781936063;  // std dev = 5.16e-08, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.13684182448076337;  // std dev = 2.147, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.428049813762261;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.4631827577613508;  // std dev = 2.58e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.44547652841295227;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then return 0.3993028090798331;  // std dev = 0.544, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.47034940105512707;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2637636022171465;  // std dev = 1.308, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.016102237616637274;  // std dev = 4.360, 287.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=68 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.077784816188476;  // std dev = 1.120, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.09283323725157641;  // std dev = 2.166, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.19971409291320777;  // std dev = 1.208, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.12384748549589727;  // std dev = 1.232, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3313762028412383;  // std dev = 1.523, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.34285883643800774;  // std dev = 2.505, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else return -0.10276263166810812;  // std dev = 0.010, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.3815983847443636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.006277692926498914;  // std dev = 1.239, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1821957726446452;  // std dev = 1.991, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2818315252436264;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3068653202128542;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.3105681903351234;  // std dev = 0.032, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(G, A) )
%   | then return 0.03528750838590478;  // std dev = 3.775, 273.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=83 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47742433493080966;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13900000205907187;  // std dev = 1.29e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08825410223731771;  // std dev = 2.090, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2534166943096218;  // std dev = 0.946, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.4045196648497238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.031412191034166585;  // std dev = 2.744, 115.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=20 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( enzyme(A, H) )
%   | | then return 0.2539363648055111;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.252732023606669;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then return 0.03716932453152075;  // std dev = 3.267, 182.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=59 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.1231837230110702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5683659345578003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.18684490971330736;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1946913511087669;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.20788066676637923;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(G, A) )
%   | then return 0.0080815097960929;  // std dev = 4.051, 282.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.06899719134612588;  // std dev = 0.344, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.019824391765638515;  // std dev = 2.222, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07277413568807345;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17161182745934875;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16009951134716083;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17646466064377195;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return 0.20912556980932162;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26366612791158045;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.22987277488482338;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0020084334659007763;  // std dev = 3.833, 287.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=76 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06305129204325292;  // std dev = 2.156, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.07341417719743944;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.08146202700705849;  // std dev = 0.829, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14767013570417448;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1546044196234044;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), enzyme(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.002074892531450002;  // std dev = 1.192, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( enzyme(A, J), interaction(G, K) )
%   | | | then return 0.17663270976720913;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.010337426320177229;  // std dev = 4.280, 326.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=87 */


Results
   AUC ROC   = 0.982503
   AUC PR    = 0.24947
   CLL	      = -0.179975
   Precision = 0.112994 at threshold = 0.5
   Recall    = 0.930233
   F1        = 0.201511


Total learning time: 5.134 seconds
Total inference time: 5.403 seconds
AUC ROC: 0.982503


Results scoring model
   AUC ROC   = 0.976674
   AUC PR    = 0.170016
   CLL	      = -0.173741
   Precision = 0.117841 at threshold = 0.5
   Recall    = 0.946903
   F1        = 0.209598


Total scoring time: 13.971 seconds
Parameter learned model CLL: -0.173741


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [2.11e-08, 0, 3], 'true,true,false': [0.0, 0, 1], 'true,false': [0.0, 0, 14], 'false,true,true,true': [0.982, 1, 27], 'false,true,true,false': [2.328, 6, 56], 'false,true,false': [0.0, 188, 0], 'false,false,true': [0.0, 0, 1], 'false,false,false,true': [2.582, 20, 10], 'false,false,false,false': [0.816, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'enzyme(A, G)', 'false,false,true': 'enzyme(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true': [0.964, 1, 13], 'true,false': [0.0, 0, 5], 'false,true,true,true': [1.693, 4, 10], 'false,true,true,false': [2.361, 6, 73], 'false,true,false': [0.0, 208, 0], 'false,false,true,true': [0.102, 0, 5], 'false,false,true,false': [0.0, 17, 0], 'false,false,false,true': [2.07, 15, 6], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(A, C), enzyme(A, D)', 'true': 'enzyme(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(A, K)'}, {'true,true,true': [0.088, 0, 7], 'true,true,false,true': [0.836, 1, 2], 'true,true,false,false': [0.163, 0, 12], 'true,false': [0.31, 43, 0], 'false,true': [1.327, 2, 14], 'false,false,true,true': [2.163, 5, 71], 'false,false,true,false': [5.16e-08, 161, 0], 'false,false,false,true': [2.147, 14, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D)', 'true,false': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,true': 'interaction(F, G)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true': [0.019, 0, 5], 'true,false,true': [2.58e-08, 0, 9], 'true,false,false': [0.0, 0, 4], 'false,true,true': [0.544, 1, 6], 'false,true,false': [0.065, 0, 2], 'false,false,true,true': [1.308, 3, 8], 'false,false,true,false': [4.36, 219, 68], 'false,false,false,true': [1.12, 9, 4], 'false,false,false,false': [2.166, 16, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), enzyme(A, L)'}, {'true,true': [1.208, 2, 11], 'true,false': [1.232, 2, 7], 'false,true,true,true': [1.523, 3, 27], 'false,true,true,false': [2.505, 7, 56], 'false,true,false': [0.01, 194, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.239, 12, 4], 'false,false,false,false': [1.991, 10, 7]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'enzyme(A, D), enzyme(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'enzyme(A, H)', 'false,false,true': 'enzyme(I, H), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true,true': [0.0, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 2], 'true,false': [0.032, 0, 13], 'false,true': [3.775, 190, 83], 'false,false,true,true': [0.202, 0, 5], 'false,false,true,false': [1.29e-08, 13, 0], 'false,false,false,true': [2.09, 13, 7], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'enzyme(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'enzyme(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'enzyme(A, J), interaction(A, K)'}, {'true,true,true': [0.946, 1, 25], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.0, 0, 0], 'true,false': [2.744, 95, 20], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.021, 0, 6], 'false,false,true': [3.267, 123, 59], 'false,false,false,true': [0.0, 1, 0], 'false,false,false,false': [0.0, 0, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), enzyme(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'enzyme(A, J)'}, {'true,true,true': [3.73e-09, 0, 3], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [0.041, 0, 14], 'false,true': [4.051, 199, 83], 'false,false,true,true': [0.344, 1, 1], 'false,false,true,false': [2.222, 26, 10], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.707, 1, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'enzyme(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.024, 0, 11], 'true,true,false': [0.0, 0, 1], 'true,false': [0.034, 0, 6], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.1, 0, 5], 'false,true,false': [0.046, 0, 2], 'false,false,true': [3.833, 211, 76], 'false,false,false,true': [2.156, 19, 10], 'false,false,false,false': [0.709, 2, 1]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'enzyme(A, E), enzyme(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), enzyme(A, I)', 'false,true,false': 'enzyme(A, J), interaction(G, K)'}, {'true,true': [0.829, 1, 12], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.007, 0, 2], 'true,false,false': [0.028, 0, 4], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.192, 2, 7], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 0], 'false,false': [4.28, 239, 87]}]]
[{'': [-2.9605947323337506e-16, 0.21177473701512212], 'false': [0.2094223901454382, 0.22837370242214483], 'false,false': [0.0, 0.22222222222222174], 'false,false,false': [0.2222222222222223, 0.22222222222222224], 'false,true': [0.07172839506172855, -2.1732025162875404e-16], 'false,true,true': [0.03443877551020513, 0.08740894901144611], 'true': [0.0, -2.5376526277146434e-16], 'true,true': [1.4802973661668753e-16, 0.0]}, {'': [0.04986149584487555, 0.15631584723602424], 'false': [0.15067765916109316, 0.19487466494422023], 'false,false': [0.1681916198658371, 0.21694214876033044], 'false,false,false': [0.2040816326530611, 0.0], 'false,false,true': [0.002069597727735495, -2.938825653419532e-17], 'false,true': [0.09662815142883287, -4.056584128438072e-17], 'false,true,true': [0.20484670539305877, 0.07056775058523465], 'true': [0.06632653061224492, 0.0]}, {'': [0.12670589956829145, 0.12431308042618341], 'true': [0.05230351547639685, 0.0022334342568110315], 'false': [0.10999607037689244, 0.11826370718106934], 'false,false': [0.10913426518860275, 0.21953902779205994], 'false,false,false': [0.21953902779205994, nan], 'false,false,true': [0.06155294749181139, 1.654990844161724e-17], 'true,true': [0.0011026868836356205, 0.07505660734406211], 'true,true,false': [0.23295672338500792, 0.0022265301674195825]}, {'': [0.0002461042910801107, 0.08466580789882278], 'false': [0.034186804558350214, 0.0821740728475185], 'false,false': [0.07172209979033985, 0.1652463383376983], 'false,false,false': [0.09643464561850432, 0.20405812837949985], 'false,false,true': [0.15561925805324506, 0.06624244313480661], 'false,true': [0.04222991370750541, 0.002109997245292705], 'true': [7.592259587916317e-05, 6.678331407435814e-05], 'true,false': [7.401486830834377e-17, 0.0]}, {'': [0.13665905228639458, 0.08361511019122424], 'true': [0.11221842335575721, 0.16856106261974724], 'false': [0.07274421993655408, 0.17161946942127831], 'false,false': [0.0, 0.17443617877467693], 'false,false,false': [0.09595441022625853, 0.2332966838435842], 'false,true': [0.0924806924640903, 4.776005621067908e-07], 'false,true,true': [0.07735132141123087, 0.09964262233011142], 'false,false,true': [0.0, nan]}, {'': [0.0001779896955430571, 0.06459365137774942], 'false': [0.052206471788210494, 0.15297264047763512], 'false,false': [0.07850533497193243, 0.2185064086720553], 'false,false,false': [0.2185064086720553, nan], 'false,false,true': [0.008189954674823552, 1.2810265668751807e-17], 'true': [0.00018595597129433816, 7.754901070023711e-05], 'true,true': [0.0, 8.887539389908217e-05], 'true,true,false': [nan, 8.887539389908217e-05]}, {'': [0.07248598527397258, 0.059100082798044164], 'true': [0.033971319003691484, 0.06549077774910735], 'false': [6.601548596644826e-05, 0.05967195685333364], 'false,false': [0.05864013483982715, 0.1195602322209055], 'false,false,false': [0.0, 0.0], 'true,true': [0.0344322745773988, 0.0], 'false,true': [0.0, 7.681086157184287e-05], 'true,true,false': [0.0, nan]}, {'': [0.00016041432118208473, 0.06829987663062412], 'false': [0.058198742648627434, 0.1394326365620646], 'false,false': [0.13316027749326845, 0.24999999999999997], 'false,false,false': [nan, 0.24999999999999997], 'false,false,true': [0.0590084342397823, 0.13715256306602208], 'true': [1.1543745482324452e-05, 0.00012209919971677735], 'true,true': [4.625929269271485e-18, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.00011023183498945797, 0.062483127767448784], 'false': [0.0019289644065748485, 0.0625742719964606], 'false,false': [0.05118977456802654, 0.1625845245041573], 'false,false,false': [0.16034526536547877, 0.16735376166063134], 'false,true': [0.002065961375516743, 0.0010602852084185335], 'false,true,true': [0.0, 0.0019833749042691196], 'true': [5.765554235404036e-05, 0.00019286336302898333], 'true,true': [5.185250343974314e-05, 0.0]}, {'': [0.03733571710278677, 0.058831372773921774], 'false': [0.14501806616608434, 0.056186722429414804], 'false,true': [0.15793754391704906, 0.0], 'false,true,true': [nan, 0.15793754391704906], 'true': [0.05291260227441707, 0.0001530975372449154], 'true,false': [2.223898705422389e-05, 0.00020249871451610488], 'true,false,true': [nan, 2.223898705422389e-05], 'false,true,false': [0.0, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), enzyme(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;enzyme(A, G).;true;true
1;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;true;true
1;false,false,false;interaction(A, I), interaction(I, J).;true;true
2;;proteinclass(A, B) :- interaction(A, C), enzyme(A, D).;true;true
2;true;enzyme(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, A).;true;true
2;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;enzyme(A, D).;true;true
3;true,false;interaction(C, E), interaction(E, A).;true;true
3;false;interaction(A, F), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(F, G).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;enzyme(A, D), enzyme(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;enzyme(A, H).;true;true
5;false,false,true;enzyme(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C), interaction(C, D).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(E, A).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
6;false,true;enzyme(A, H).;true;true
6;false,false;interaction(I, A).;true;true
6;false,false,false;enzyme(A, J), interaction(A, K).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), enzyme(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
8;false,true;interaction(E, F).;true;true
8;false,true,true;enzyme(E, G), interaction(A, F).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;enzyme(A, E), enzyme(C, E).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.6721024234716044;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | | else return 0.7812258581764353;  // std dev = 1.922, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | else return -0.14185106490048832;  // std dev = 0.000, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7231348391360134;  // std dev = 0.046, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.2805265877890456;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6657031261088004;  // std dev = 0.268, 90.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=83 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8104590754274297;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1593482296101579;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1876067224390569;  // std dev = 1.979, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.3332054912315484;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6041949211432034;  // std dev = 0.047, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.12388059702542945;  // std dev = 0.303, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.564565077875033;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.44807254145211733;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.5672790019592919;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4863125789272945;  // std dev = 2.819, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | | else return -0.1123163781936062;  // std dev = 7.60e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3775229460256278;  // std dev = 1.311, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.05548119417289815;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.0027197886659998858;  // std dev = 0.499, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4214910349649692;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return 0.4210217998750698;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.23462180565705754;  // std dev = 0.855, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.459277159031603;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(A, J), interaction(H, I) )
%   | | | then return -0.12436807721133698;  // std dev = 0.924, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | | | else return 0.004061641246102123;  // std dev = 2.410, 105.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.04562407527133419;  // std dev = 2.684, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | | else return 0.1175388109480175;  // std dev = 3.496, 103.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33817470280628553;  // std dev = 0.140, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.17046645512439593;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return 0.37693008395742555;  // std dev = 2.276, 79.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=73 */
%   | | else return -0.10578044887392492;  // std dev = 0.090, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.28250289981584786;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.01987002030170874;  // std dev = 0.857, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.12861626511627394;  // std dev = 2.215, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, D) )
%   | then return 0.26916462289105836;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21203179984420734;  // std dev = 0.199, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11422016943190019;  // std dev = 0.108, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.025282012929000904;  // std dev = 3.755, 242.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=72 */
%   | | | else return 0.08792496010314145;  // std dev = 1.160, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4645119946813403;  // std dev = 0.266, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12799961295057735;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4912446839037945;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11841785685893662;  // std dev = 1.499, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.0036476734910848687;  // std dev = 1.341, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.21414939223723686;  // std dev = 1.174, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | else return 0.42643720193197077;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.022587158117563007;  // std dev = 0.235, 112.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=20 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( enzyme(A, I) )
%   | | then return 0.24181194157266328;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.012069096220750392;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.24695685349422403;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A) )
%   | | then return 0.015500366032053278;  // std dev = 0.243, 199.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=59 */
%   | | else return 0.24691576814554575;  // std dev = 0.383, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1993551027239439;  // std dev = 0.028, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(E, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.0923054442601722;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.051814602117679555;  // std dev = 0.371, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(E, I), interaction(I, J) )
%   | | | then return 0.08799826617542104;  // std dev = 1.986, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | | else return -0.008043051614394319;  // std dev = 0.595, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.3166153001905109;  // std dev = 0.479, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.076085864277308;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.0018226072939251494;  // std dev = 3.064, 158.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=43 */
%   | | | else return 0.05613648371777462;  // std dev = 2.390, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.16248811774211427;  // std dev = 0.020, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.18369024466562478;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( enzyme(E, G), interaction(A, F) )
%   | | | then return 0.1528210509841772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14896558762381118;  // std dev = 0.493, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.25973854393982376;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.13357782266891233;  // std dev = 1.454, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.06106626057188805;  // std dev = 3.050, 163.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=23 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -5.1046019688956E-4;  // std dev = 2.333, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return 0.053292834528679035;  // std dev = 2.176, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then return -0.06241569227345134;  // std dev = 0.748, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13767257398864916;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, G), enzyme(C, G) )
%   | | then return 0.13191894229708784;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.0610389993337209;  // std dev = 0.492, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.21812445362476124;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.06710637449738861;  // std dev = 1.315, 54.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=6 */
%   | | | else return 0.03153601352009006;  // std dev = 1.672, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.016938218486480028;  // std dev = 2.664, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.0618123337517982;  // std dev = 2.628, 123.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=48 */


Results
   AUC ROC   = 0.981653
   AUC PR    = 0.258351
   CLL	      = -0.181284
   Precision = 0.175281 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.293785


Total learning time: 9.72 seconds
Total inference time: 4.861 seconds
AUC ROC: 0.981653


Results scoring model
   AUC ROC   = 0.983802
   AUC PR    = 0.270902
   CLL	      = -0.171165
   Precision = 0.131351 at threshold = 0.5
   Recall    = 0.938053
   F1        = 0.230435


Total scoring time: 11.307 seconds
Refined model CLL: -0.171165


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.981653
   AUC PR    = 0.258351
   CLL	      = -0.181284
   Precision = 0.175281 at threshold = 0.5
   Recall    = 0.906977
   F1        = 0.293785


Total learning time: 40.132000000000005 seconds
Total inference time: 4.861 seconds
AUC ROC: 0.981653
Total revision time: 40.132000000000005
Best scored revision CLL: -0.171165


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 06:36:25
{'AUC ROC': 0.981653, 'AUC PR': 0.258351, 'CLL': -0.181284, 'Precision': [0.175281, 0.5], 'Recall': 0.906977, 'F1': 0.293785, 'Learning time': 40.132000000000005, 'Inference time': 4.861, 'parameter_0.4': {'AUC ROC': 0.982503, 'AUC PR': 0.24947, 'CLL': -0.179975, 'Precision': [0.112994, 0.5], 'Recall': 0.930233, 'F1': 0.201511, 'Learning time': 5.134, 'Inference time': 5.403}}


Amount of data: 0.6
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.8287371703936293;  // std dev = 0.985, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else return -0.14185106490048818;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.17447546571175857;  // std dev = 6.511, 196.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=62 */
%   | | | else return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109542;  // std dev = 7.30e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6680834591026266;  // std dev = 0.969, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.6780400413487574;  // std dev = 1.388, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7694201166185564;  // std dev = 1.371, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return -0.16530978664908105;  // std dev = 0.022, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.14261426848517011;  // std dev = 5.159, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | | else return 0.2818796937635626;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.523422782520713;  // std dev = 0.977, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.35687933632616087;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.39021926793174194;  // std dev = 3.341, 61.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=43 */
%   | else return -0.12881354257967406;  // std dev = 0.352, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.497780292462215;  // std dev = 0.948, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5701128696130061;  // std dev = 0.020, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.11231637819360621;  // std dev = 6.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.18799322072824434;  // std dev = 5.468, 130.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3857059219862574;  // std dev = 0.804, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.33432504027471444;  // std dev = 0.923, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.45215975072717085;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.5712690555169061;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.40308564981943734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.34414927756086083;  // std dev = 1.202, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.012456413954506725;  // std dev = 3.112, 226.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=38 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.0975175480110879;  // std dev = 3.444, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.13840353039184536;  // std dev = 5.300, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3060047715157113;  // std dev = 0.953, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.3468637837055925;  // std dev = 0.032, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3180437540721847;  // std dev = 1.634, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | | | else return 0.36208997030773105;  // std dev = 1.349, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return -0.10313106362682208;  // std dev = 0.214, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.3019740518605209;  // std dev = 0.736, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.13824117268893146;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.06357402280692688;  // std dev = 3.433, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
%   | | | else return 0.05262356973037817;  // std dev = 5.537, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2750582277318992;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28701641963600566;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F) )
%   | then return 0.02129744311265261;  // std dev = 2.929, 217.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=60 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.42339855740687105;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | | else return -0.14779418572150252;  // std dev = 0.020, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.14023019604656414;  // std dev = 5.267, 122.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=50 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.1791796775826651;  // std dev = 1.377, 44.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=38 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.18829262382943576;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.41074675942702943;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.033415222577406145;  // std dev = 5.916, 326.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=93 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.2365082077406262;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22380860582983797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.012588198796769324;  // std dev = 1.748, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.032980403524557764;  // std dev = 0.708, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.20891029195698532;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.1904646653270221;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20871188545082292;  // std dev = 0.089, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F) )
%   | then return 0.003683621402345035;  // std dev = 3.065, 219.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=60 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.11198543463427016;  // std dev = 0.710, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.025233134891432654;  // std dev = 5.681, 214.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=65 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.00685342971640987;  // std dev = 0.720, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.019458168541897837;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.168785234128174;  // std dev = 0.033, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.1811946764697194;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0659479440472169;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( phenotype(E, G), interaction(F, A) )
%   | | | then return 0.24923962173361539;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.30513959089242854;  // std dev = 0.231, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, H) )
%   | | then return -0.007750242592642544;  // std dev = 2.990, 247.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=58 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.019109829460068763;  // std dev = 5.720, 196.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=62 */
%   | | | else return 0.012715896109191336;  // std dev = 2.636, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.09953779693784863;  // std dev = 0.945, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.16651331555938353;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.15668706579305702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16910353657193117;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), phenotype(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18639946213660713;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J), interaction(K, G) )
%   | | | then return 0.15875496769967945;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1789374631121325;  // std dev = 0.640, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.020705647211868027;  // std dev = 6.759, 441.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=132 */


Results
   AUC ROC   = 0.981604
   AUC PR    = 0.291221
   CLL	      = -0.176162
   Precision = 0.278195 at threshold = 0.5
   Recall    = 0.860465
   F1        = 0.420455


Total learning time: 7.426 seconds
Total inference time: 5.225 seconds
AUC ROC: 0.981604


Results scoring model
   AUC ROC   = 0.952524
   AUC PR    = 0.209416
   CLL	      = -0.215834
   Precision = 0.143513 at threshold = 0.5
   Recall    = 0.739645
   F1        = 0.240385


Total scoring time: 24.892 seconds
Parameter learned model CLL: -0.215834


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 19], 'false,true,true,true': [1.58e-07, 0, 27], 'false,true,true,false': [0.985, 1, 33], 'false,true,false': [0.0, 162, 0], 'false,false,true': [0.0, 0, 8], 'false,false,false,true': [6.511, 134, 62], 'false,false,false,false': [2.739, 20, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true': [7.3e-08, 0, 19], 'true,false': [0.943, 1, 8], 'false,true,true,true': [0.969, 1, 18], 'false,true,true,false': [1.388, 2, 42], 'false,true,false': [0.0, 180, 0], 'false,false,true,true': [1.371, 2, 32], 'false,false,true,false': [0.022, 76, 0], 'false,false,false,true': [5.159, 88, 40], 'false,false,false,false': [2.335, 12, 10]}], ['proteinclass(A, B)', {'': 'interaction(C, A), phenotype(A, D)', 'true': 'phenotype(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)', 'false,false,false': 'interaction(K, A)'}, {'true,true,true': [0.977, 1, 23], 'true,true,false,true': [0.911, 1, 4], 'true,true,false,false': [3.341, 18, 43], 'true,false': [0.352, 160, 0], 'false,true': [0.948, 1, 14], 'false,false,true,true': [0.02, 0, 35], 'false,false,true,false': [6.83e-08, 87, 0], 'false,false,false,true': [5.468, 80, 50], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D)', 'true,false': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false,true': 'interaction(G, F)', 'false,false': 'interaction(A, H)', 'false,false,true': 'interaction(H, I), recursion_proteinclass(I, B)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true': [0.804, 1, 14], 'true,false,true': [0.923, 1, 9], 'true,false,false': [0.024, 0, 4], 'false,true,true': [0.3, 0, 10], 'false,true,false': [0.0, 1, 0], 'false,false,true,true': [1.202, 3, 20], 'false,false,true,false': [3.112, 188, 38], 'false,false,false,true': [3.444, 65, 30], 'false,false,false,false': [5.3, 78, 44]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), phenotype(A, L)'}, {'true,true': [0.953, 1, 21], 'true,false': [0.032, 0, 6], 'false,true,true,true': [1.634, 3, 35], 'false,true,true,false': [1.349, 2, 25], 'false,true,false': [0.214, 177, 0], 'false,false,true,true': [0.736, 1, 4], 'false,false,true,false': [1.16, 2, 4], 'false,false,false,true': [3.433, 75, 30], 'false,false,false,false': [5.537, 104, 44]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'phenotype(A, D), phenotype(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'false': 'interaction(A, F)', 'false,false': 'phenotype(A, G)', 'false,false,true': 'phenotype(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true': [0.034, 0, 12], 'true,true,false': [0.0, 0, 0], 'true,false': [0.065, 0, 15], 'false,true': [2.929, 157, 60], 'false,false,true,true': [2.08, 5, 32], 'false,false,true,false': [0.02, 73, 0], 'false,false,false,true': [5.267, 72, 50], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'phenotype(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'phenotype(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'phenotype(A, J), interaction(K, A)'}, {'true,true,true': [1.377, 6, 38], 'true,true,false,true': [0.458, 2, 1], 'true,true,false,false': [0.035, 0, 4], 'true,false': [5.916, 233, 93], 'false,true,true': [0.0, 0, 1], 'false,true,false': [0.0, 0, 1], 'false,false,true': [1.748, 53, 19], 'false,false,false,true': [0.708, 5, 2], 'false,false,false,false': [2.176, 9, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), phenotype(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,false': 'interaction(G, A), interaction(H, G)', 'false,false,true': 'recursion_proteinclass(H, B)', 'false,false,false': 'phenotype(A, I)'}, {'true,true,true': [0.0, 0, 8], 'true,true,false': [0.0, 0, 0], 'true,false': [0.089, 0, 19], 'false,true': [3.065, 159, 60], 'false,false,true,true': [0.71, 3, 5], 'false,false,true,false': [5.681, 149, 65], 'false,false,false,true': [0.72, 6, 2], 'false,false,false,false': [2.56, 19, 10]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'phenotype(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.033, 0, 16], 'true,true,false': [0.045, 0, 3], 'true,false': [0.938, 1, 8], 'false,true,true,true': [0.065, 0, 3], 'false,true,true,false': [0.231, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true': [2.99, 189, 58], 'false,false,false,true': [5.72, 134, 62], 'false,false,false,false': [2.636, 21, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'phenotype(A, E), phenotype(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), phenotype(A, I)', 'false,true,false': 'phenotype(A, J), interaction(K, G)'}, {'true,true': [0.945, 1, 19], 'true,false,true,true': [0.0, 0, 2], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.056, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.049, 0, 2], 'false,true,false,true': [0.003, 0, 2], 'false,true,false,false': [0.64, 1, 6], 'false,false': [6.759, 309, 132]}]]
[{'': [9.210739167260557e-16, 0.2136595136723298], 'false': [0.19666592933700713, 0.22673082447572596], 'false,false': [-2.220446049250313e-16, 0.21922129886118816], 'false,false,false': [0.21626405664306567, 0.2343749999999995], 'false,true': [0.016124697661918288, -1.507710280355151e-16], 'false,true,true': [9.210739167260557e-16, 0.028546712802769686], 'true': [-2.220446049250313e-16, -2.8047739569477637e-16], 'true,true': [-2.220446049250313e-16, nan]}, {'': [0.034438775510203926, 0.1754006222121752], 'false': [0.1348462906846215, 0.21130787765081435], 'false,false': [0.20366666620982876, 0.21625355987124417], 'false,false,false': [0.2079639248377067, 0.24793388429752075], 'false,false,true': [0.05524625201144035, 6.365924169751826e-06], 'false,true': [0.045476018781294265, -1.7270135938613546e-17], 'false,true,true': [0.04937716151231199, 0.043761537006356495], 'true': [2.8047739569477637e-16, 0.09876543209876548]}, {'': [0.1239705163070032, 0.16833891393156916], 'false': [0.05996566136034458, 0.16749289000017684], 'false,false': [0.09527905980525969, 0.2299728960691693], 'false,false,false': [0.2299728960691693, nan], 'true': [0.1474826929362741, 0.000772483971419577], 'true,true': [0.03976004974485573, 0.18174191414347665], 'true,true,false': [0.16584978768098751, 0.18296033904799341], 'false,false,true': [1.1137197657364238e-05, 5.3596973602593766e-17]}, {'': [0.053111760637751755, 0.12115625911223807], 'false': [0.0866640019841443, 0.11798670324950426], 'false,false': [0.05535809739673555, 0.18450526436255713], 'false,false,false': [0.12486185796391219, 0.23021706621731636], 'false,true': [0.009024302927006733, 0.0], 'false,false,true': [0.06278968233707012, 0.04285537906029538], 'true': [0.0430962409747746, 0.06368037483389669], 'true,false': [0.08512891313085366, 0.00014115838620837318]}, {'': [0.032769724855439816, 0.11604516091730929], 'false': [0.05681577787434002, 0.16920267606491754], 'false,false': [0.17827868305768868, 0.16780059572395295], 'false,false,true': [0.10836978718296124, 0.2243504345948926], 'false,false,false': [0.11224678359155733, 0.20716400722513265], 'false,true': [0.06956382573773201, 0.00025926713922733456], 'false,true,true': [0.07026456285695522, 0.0674434088446086], 'true': [0.041302661247904, 0.00017057372722906194]}, {'': [0.0002367620179984396, 0.11090781005515422], 'false': [0.03952786264187581, 0.17506428339636176], 'false,false': [0.1121562058778764, 0.22742449629903871], 'false,false,false': [0.22742449629903871, nan], 'false,false,true': [0.11690774951159214, 5.5024898545014055e-06], 'true': [9.858788921034607e-05, 0.0002837464971998216], 'true,true': [9.858788921034607e-05, nan]}, {'': [0.10244207830521157, 0.08937070508255339], 'true': [0.05343142672701333, 0.10736968832596942], 'false': [4.031997217313066e-05, 0.09055972974590044], 'false,false': [0.04243448296461532, 0.207528259543424], 'false,false,false': [0.07150924397736813, 0.24930747922437663], 'true,true': [0.04307958865338785, 0.11795380621113313], 'true,true,false': [0.06977183843379174, 0.0002982037474451027], 'false,true': [0.0, 0.0]}, {'': [0.0003653016476539562, 0.103345997460033], 'false': [0.04290580229272076, 0.15429231569479063], 'false,false': [0.14788861122827276, 0.19119327502504788], 'false,false,false': [0.06476076607691855, 0.22592152199762194], 'false,false,true': [0.06305456069178733, 0.15078877178326416], 'true': [0.0, 0.0004204577440901928], 'true,true': [0.0, nan]}, {'': [0.03393328290447734, 0.10193701559861378], 'false': [0.00639285842021825, 0.1022888510581026], 'false,false': [0.03619468921179153, 0.1732290584636144], 'false,false,false': [0.1669370107800445, 0.21056501730596047], 'true': [0.00018572701186794917, 0.09772581878032494], 'false,true': [0.00639285842021825, nan], 'false,true,true': [0.0014109573950787564, 0.007590516893976829], 'true,true': [6.950381197328923e-05, 0.0006759047017806663]}, {'': [0.03291442595931674, 0.10256690257381715], 'false': [0.03752754508670744, 0.10359756656418644], 'false,true': [0.0011881984401892268, 0.04557700440508548], 'false,true,false': [3.2799829098907607e-06, 0.058507550054357364], 'true': [0.04461875321462591, 0.00041204005718172704], 'false,true,true': [nan, 0.0011881984401892268], 'true,false': [2.1456707660053958e-05, 0.0006334879277184568], 'true,false,true': [0.0, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), phenotype(A, D).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,true,true;interaction(H, F), interaction(A, H).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,false;phenotype(A, G).;true;true
1;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), phenotype(A, D).;true;true
2;true;phenotype(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(A, I).;true;true
2;false,false,true;interaction(J, I), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
3;true;phenotype(A, D).;true;true
3;true,false;interaction(E, C), interaction(A, E).;true;true
3;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
3;false,true;interaction(G, F).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;phenotype(A, D), phenotype(C, D).;true;true
5;false;interaction(A, F).;true;true
5;false,false;phenotype(A, G).;true;true
5;false,false,true;phenotype(H, G), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;true;recursion_proteinclass(D, B).;true;true
6;true,true;interaction(A, E).;true;true
6;true,true,false;phenotype(A, F).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
6;false,true;phenotype(A, H).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), phenotype(A, D).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
8;false;interaction(E, A), recursion_proteinclass(E, B).;true;true
8;false,true;phenotype(E, G), interaction(F, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;phenotype(A, E), phenotype(C, E).;true;true
9;true,false,true;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true
9;false,true,false;phenotype(A, J), interaction(K, G).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, G), interaction(A, I) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.07814893509951236;  // std dev = 2.929, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | | else return 0.20054023944733973;  // std dev = 6.437, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7211775835431251;  // std dev = 0.032, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( complex(A, E) )
%   | | then return 0.7379758438173819;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.06359983064803716;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6602139127445296;  // std dev = 0.242, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | else return -0.12544463852839138;  // std dev = 2.98e-08, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6715864198933543;  // std dev = 2.225, 38.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=32 */
%   | | | else return -0.16367733541771567;  // std dev = 0.063, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1510891491995831;  // std dev = 5.481, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.4130900969881714;  // std dev = 0.306, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.5459207514200631;  // std dev = 2.259, 53.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=46 */
%   | | | else return 0.38331029997701077;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.13607047383737184;  // std dev = 0.632, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5648781759534235;  // std dev = 0.147, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5199050775771628;  // std dev = 1.369, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.11231637819360621;  // std dev = 6.99e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12727337414506842;  // std dev = 5.487, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.45562628575400854;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.42669435902949976;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.05739110285473569;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.42320365127439113;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.27357031400575116;  // std dev = 1.655, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.015721267519600218;  // std dev = 3.060, 227.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=37 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.06854241245701631;  // std dev = 3.519, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.14824840416143703;  // std dev = 5.318, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.31227695427283275;  // std dev = 0.143, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.2275548235801946;  // std dev = 0.226, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.2938767040822141;  // std dev = 1.554, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.4271328254787585;  // std dev = 0.173, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.1012943571098612;  // std dev = 0.135, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), phenotype(J, K) )
%   | | | then return -0.01709616770845406;  // std dev = 2.168, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.24617828380830273;  // std dev = 1.387, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.10325270908983349;  // std dev = 3.017, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | | else return 0.17107235982010519;  // std dev = 4.763, 96.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2755939102532932;  // std dev = 0.028, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(E, F), phenotype(E, G) )
%   | | | then return -0.1813183441757566;  // std dev = 0.734, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.0036374410271845774;  // std dev = 1.741, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0015624162875458494;  // std dev = 1.566, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | | else return 0.05361502004648742;  // std dev = 1.826, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.41379747585266186;  // std dev = 2.081, 37.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=32 */
%   | | | else return -0.14875273941254707;  // std dev = 0.200, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.02860190132665284;  // std dev = 2.594, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.1444521520884489;  // std dev = 4.636, 91.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.20536782655359131;  // std dev = 0.216, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else return 0.00906755338965659;  // std dev = 0.325, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.11313026289619652;  // std dev = 0.104, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return 0.018958368080440366;  // std dev = 3.273, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
%   | | | else return 0.07238286065504265;  // std dev = 4.707, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.21471018010394538;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.0013463096742731136;  // std dev = 0.234, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.19505734195638316;  // std dev = 2.073, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.04314438723907865;  // std dev = 1.543, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.19134696507811955;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.2168649133115983;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.607031508105209;  // std dev = 0.287, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.19119768086526934;  // std dev = 0.038, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016672814456037768;  // std dev = 0.198, 194.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=44 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return 0.04616511812850433;  // std dev = 4.047, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.25436719898670757;  // std dev = 1.740, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.040502478067425796;  // std dev = 1.975, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return -0.013104126014970298;  // std dev = 4.041, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16107520979868423;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.04523969820519136;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1794005060951514;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), interaction(G, A) )
%   | | then return 0.11193795946886213;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2600292487670341;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.08288910815262321;  // std dev = 2.099, 73.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=11 */
%   | | | else return 0.006821507307802837;  // std dev = 2.261, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.047000959161097894;  // std dev = 4.217, 165.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=57 */
%   | | | else return 0.010366229251159391;  // std dev = 4.361, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.1408186499945787;  // std dev = 0.058, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.010596077122160952;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.15472786049427695;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.23653853607090014;  // std dev = 0.085, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2236546642230187;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.06735850883409812;  // std dev = 1.427, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return -0.012880128188974;  // std dev = 1.240, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.010007612773103948;  // std dev = 3.275, 188.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=51 */
%   | | | else return 0.04272677392756321;  // std dev = 5.492, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */


Results
   AUC ROC   = 0.982263
   AUC PR    = 0.377934
   CLL	      = -0.177304
   Precision = 0.281746 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.420118


Total learning time: 15.568 seconds
Total inference time: 6.341 seconds
AUC ROC: 0.982263


Results scoring model
   AUC ROC   = 0.958004
   AUC PR    = 0.274767
   CLL	      = -0.212792
   Precision = 0.153752 at threshold = 0.5
   Recall    = 0.739645
   F1        = 0.254582


Total scoring time: 26.963 seconds
Refined model CLL: -0.212792


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.982263
   AUC PR    = 0.377934
   CLL	      = -0.177304
   Precision = 0.281746 at threshold = 0.5
   Recall    = 0.825581
   F1        = 0.420118


Total learning time: 74.84899999999999 seconds
Total inference time: 6.341 seconds
AUC ROC: 0.982263
Total revision time: 74.84899999999999
Best scored revision CLL: -0.212792


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 06:37:53
{'AUC ROC': 0.982263, 'AUC PR': 0.377934, 'CLL': -0.177304, 'Precision': [0.281746, 0.5], 'Recall': 0.825581, 'F1': 0.420118, 'Learning time': 74.84899999999999, 'Inference time': 6.341, 'parameter_0.6': {'AUC ROC': 0.981604, 'AUC PR': 0.291221, 'CLL': -0.176162, 'Precision': [0.278195, 0.5], 'Recall': 0.860465, 'F1': 0.420455, 'Learning time': 7.426, 'Inference time': 5.225}}


Amount of data: 0.8
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, F), interaction(A, H) )
%   | | | then return 0.749453282925599;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=41 */
%   | | | else return 0.7956489350995121;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | else return -0.14185106490048843;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14628452831985103;  // std dev = 7.779, 295.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=85 */
%   | | | else return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.7221777115954887;  // std dev = 0.025, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.5652465227131463;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F) )
%   | | | then return 0.6426594376806153;  // std dev = 1.644, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | | else return 0.7346959523452294;  // std dev = 0.032, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839183;  // std dev = 0.000, 239.000 (wgt'ed) examples reached here.  /* #neg=239 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46892232500992603;  // std dev = 6.173, 168.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=107 */
%   | | | else return -0.16173141088798348;  // std dev = 0.120, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.5473863321715132;  // std dev = 1.184, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else if ( interaction(G, C), recursion_proteinclass(C, B) )
%   | | | then return 0.5417967743372843;  // std dev = 0.960, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.35734554748761344;  // std dev = 6.636, 218.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=132 */
%   | else return -0.12824637695155067;  // std dev = 0.224, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.24940119328325064;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5726604769402115;  // std dev = 0.027, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.11231637819360615;  // std dev = 3.16e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3642597977892211;  // std dev = 1.621, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.31536795636074066;  // std dev = 1.268, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else return 0.0034775500665198966;  // std dev = 0.671, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3269839204915943;  // std dev = 1.603, 38.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=30 */
%   | | | else return -0.008009449224591169;  // std dev = 3.883, 280.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=53 */
%   | | else if ( function(A, I), interaction(J, A) )
%   | | | then return 0.09464682768767874;  // std dev = 7.200, 316.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.3143316763204736;  // std dev = 0.958, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.38815146412434876;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.26059097684883026;  // std dev = 2.906, 61.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=51 */
%   | | | else return 0.4443466204937727;  // std dev = 0.185, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11059214060775648;  // std dev = 0.327, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.40510563521781007;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4051056352178101;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), function(A, L) )
%   | | | then return 0.08325190024380212;  // std dev = 7.127, 311.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=97 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.2812827649681603;  // std dev = 0.141, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(C, F), interaction(F, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3061136160771758;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.6038913478542747;  // std dev = 0.082, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( interaction(A, G) )
%   | then return 0.02186199362967506;  // std dev = 3.763, 307.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=86 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.36093680162673925;  // std dev = 5.322, 147.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=107 */
%   | | | else return -0.1462339181468693;  // std dev = 0.008, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.23460324157686444;  // std dev = 1.073, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | else if ( function(A, F) )
%   | | | then return 0.002884517890992344;  // std dev = 1.255, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007493162774687894;  // std dev = 6.949, 483.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=128 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.28472758865280695;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, I) )
%   | | then return 0.03329988495692868;  // std dev = 1.822, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | else if ( function(A, J), interaction(K, A) )
%   | | | then return 0.03818990366792006;  // std dev = 2.329, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then if ( interaction(E, C), interaction(A, E) )
%   | | then return 0.17913918955513725;  // std dev = 1.83e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(F, A), interaction(C, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16508890509954066;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.09148839569119932;  // std dev = 1.367, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( interaction(A, G) )
%   | then return -0.0023941664890016535;  // std dev = 3.872, 329.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=86 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1101679729616295;  // std dev = 1.054, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.027386774230896648;  // std dev = 6.223, 296.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=89 */
%   | | else if ( function(A, J) )
%   | | | then return 0.1607695329021362;  // std dev = 1.915, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1666215701056255;  // std dev = 0.096, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.009941143688079945;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.11036783680077086;  // std dev = 0.966, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then if ( function(E, G), interaction(F, A) )
%   | | | then return 0.162329849798021;  // std dev = 0.457, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.16797345646630854;  // std dev = 0.414, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.1296339924584623;  // std dev = 0.758, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then return -3.237345227272533E-4;  // std dev = 3.642, 332.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=83 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.04961024673469599;  // std dev = 6.012, 259.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=85 */
%   | | | else return 0.034042331968253146;  // std dev = 2.179, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.018340200229983804;  // std dev = 1.755, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(F, A), interaction(F, C) )
%   | | | then return 0.20092494494842547;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18526811708504048;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( interaction(H, G), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03763421543978204;  // std dev = 0.915, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( function(A, J), interaction(K, G) )
%   | | | then return 0.19947924231078412;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014733830855156163;  // std dev = 7.426, 625.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=180 */


Results
   AUC ROC   = 0.977766
   AUC PR    = 0.315791
   CLL	      = -0.185986
   Precision = 0.303867 at threshold = 0.5
   Recall    = 0.639535
   F1        = 0.411985


Total learning time: 45.268 seconds
Total inference time: 13.956 seconds
AUC ROC: 0.977766


Results scoring model
   AUC ROC   = 0.96414
   AUC PR    = 0.220945
   CLL	      = -0.206888
   Precision = 0.219015 at threshold = 0.5
   Recall    = 0.570796
   F1        = 0.316564


Total scoring time: 171.939 seconds
Parameter learned model CLL: -0.206888


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'false': 'interaction(A, F)', 'false,true': 'interaction(G, F), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(H, F), interaction(A, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A), interaction(K, J)'}, {'true,true,true': [0.0, 0, 17], 'true,true,false': [0.0, 0, 1], 'true,false': [0.968, 1, 15], 'false,true,true,true': [2.111, 5, 41], 'false,true,true,false': [1.677, 3, 45], 'false,true,false': [0.0, 206, 0], 'false,false,true': [0.0, 0, 10], 'false,false,false,true': [7.779, 210, 85], 'false,false,false,false': [2.882, 27, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(E, F)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.025, 0, 23], 'true,false': [1.291, 2, 10], 'false,true,true,true': [1.644, 3, 28], 'false,true,true,false': [0.032, 0, 58], 'false,true,false': [0.0, 239, 0], 'false,false,true,true': [6.173, 61, 107], 'false,false,true,false': [0.12, 161, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(A, F), interaction(F, E)', 'true,true,false': 'interaction(G, C), recursion_proteinclass(C, B)', 'false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false': 'interaction(A, I)', 'false,false,true': 'interaction(J, I), recursion_proteinclass(J, B)'}, {'true,true,true': [1.184, 3, 56], 'true,true,false,true': [0.96, 1, 14], 'true,true,false,false': [6.636, 86, 132], 'true,false': [0.224, 260, 0], 'false,true': [0.832, 1, 2], 'false,false,true,true': [0.027, 0, 22], 'false,false,true,false': [3.16e-08, 58, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,false': 'interaction(A, G)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(J, A)'}, {'true,true': [1.621, 3, 33], 'true,false': [0.0, 0, 0], 'false,true,true': [1.268, 3, 12], 'false,true,false': [0.671, 1, 1], 'false,false,true,true': [1.603, 8, 30], 'false,false,true,false': [3.883, 227, 53], 'false,false,false,true': [7.2, 219, 97], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'interaction(A, E)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(J, A), interaction(J, I)', 'false,false,false': 'interaction(K, A), function(A, L)'}, {'true,true': [0.958, 1, 26], 'true,false': [0.116, 0, 7], 'false,true,true,true': [2.906, 10, 51], 'false,true,true,false': [0.185, 0, 35], 'false,true,false': [0.327, 243, 0], 'false,false,true,true': [0.0, 0, 4], 'false,false,true,false': [0.0, 0, 6], 'false,false,false,true': [7.127, 214, 97], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(A, E), interaction(C, E)', 'true,true,false': 'interaction(C, F), interaction(F, A)', 'false': 'interaction(A, G)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.141, 0, 26], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.064, 0, 7], 'true,false': [0.082, 2, 0], 'false,true': [3.763, 221, 86], 'false,false,true,true': [5.322, 40, 107], 'false,false,true,false': [0.008, 161, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), interaction(D, C)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(A, E)', 'true,true,false': 'function(A, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(A, I)', 'false,false,false': 'function(A, J), interaction(K, A)'}, {'true,true,true': [1.073, 6, 52], 'true,true,false,true': [1.255, 4, 6], 'true,true,false,false': [0.0, 0, 0], 'true,false': [6.949, 355, 128], 'false,true,true': [0.023, 0, 2], 'false,true,false': [0.0, 0, 0], 'false,false,true': [1.822, 61, 26], 'false,false,false,true': [2.329, 25, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, A), function(A, D)', 'true,true': 'interaction(E, C), interaction(A, E)', 'true,true,false': 'interaction(F, A), interaction(C, F)', 'false': 'interaction(A, G)', 'false,false': 'interaction(H, A), interaction(I, H)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [1.83e-08, 0, 17], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 1], 'true,false': [1.367, 3, 15], 'false,true': [3.872, 243, 86], 'false,false,true,true': [1.054, 2, 6], 'false,false,true,false': [6.223, 207, 89], 'false,false,false,true': [1.915, 14, 12], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(E, A), recursion_proteinclass(E, B)', 'false,true': 'interaction(F, E)', 'false,true,true': 'function(E, G), interaction(F, A)', 'false,false': 'interaction(A, H)', 'false,false,false': 'interaction(I, A), interaction(J, I)'}, {'true,true,true': [0.096, 0, 20], 'true,true,false': [0.914, 1, 4], 'true,false': [0.966, 1, 9], 'false,true,true,true': [0.457, 1, 6], 'false,true,true,false': [0.414, 1, 6], 'false,true,false': [0.758, 1, 1], 'false,false,true': [3.642, 249, 83], 'false,false,false,true': [6.012, 174, 85], 'false,false,false,false': [2.179, 22, 12]}], ['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), interaction(A, D)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(F, A), interaction(F, C)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'interaction(A, H)', 'false,true,true': 'interaction(H, G), function(A, I)', 'false,true,false': 'function(A, J), interaction(K, G)'}, {'true,true': [1.755, 4, 24], 'true,false,true,true': [0.035, 0, 5], 'true,false,true,false': [0.079, 0, 4], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.915, 1, 3], 'false,true,false,true': [0.019, 0, 10], 'false,true,false,false': [0.0, 0, 0], 'false,false': [7.426, 445, 180]}]]
[{'': [0.028546712802769686, 0.20987567995062056], 'false': [0.20448888888888958, 0.21429657923201928], 'false,false': [-8.881784197001253e-17, 0.20607587220768175], 'false,false,false': [0.20511347313990305, 0.21301775147928945], 'false,true': [0.07786328655500274, -2.3713501496848003e-16], 'false,true,true': [0.09688090737240182, 0.05859375000000089], 'true': [-2.9605947323337506e-16, 0.05859374999999978], 'true,true': [-2.0898315757650005e-16, 0.0]}, {'': [0.05318505220324958, 0.18077577113611992], 'false': [0.14433813904969514, 0.21524157338525307], 'false,false': [0.21524157338525307, nan], 'false,false,true': [0.22679843591945556, 8.906345104617866e-05], 'false,true': [0.0322860990931945, -7.246644010105625e-17], 'true': [2.6327646580402647e-05, 0.13888888888888895], 'false,true,true': [0.08713990817595475, 1.7208377158978736e-05]}, {'': [0.15855024892181893, 0.09956826221398912], 'true': [0.16550977960405733, 0.00019241226348113853], 'true,true': [0.023751824580807844, 0.19499170304581998], 'true,true,false': [0.061478785594197186, 0.20198809774521523], 'false': [0.23097958639147417, 0.0935541982661921], 'false,false': [0.0935541982661921, nan], 'false,false,true': [3.194785430003157e-05, 1.7227598657976568e-17]}, {'': [0.0730157123818521, 0.11806825442881459], 'false': [0.13111590572391, 0.1165063490964775], 'false,true': [0.10711939076666037, 0.22525833360471711], 'false,false': [0.06731028428043229, 0.1640466110336165], 'false,false,false': [0.1640466110336165, nan], 'true': [0.0730157123818521, nan], 'false,false,true': [0.06758827877559184, 0.05386255269934613]}, {'': [0.028256553736528415, 0.11424652654474508], 'false': [0.06651652631877564, 0.16138334700502238], 'false,false': [0.0, 0.1633454247443732], 'false,false,false': [0.1633454247443732, nan], 'false,true': [0.09614586339258392, 0.00043959740467220553], 'false,true,true': [0.13844108476790973, 0.0009757687634827253], 'true': [0.033957923087423944, 0.0019381238767866651], 'false,false,true': [0.0, -3.700743415417188e-17]}, {'': [0.04369153782124719, 0.10259023078568688], 'false': [0.046118350118685494, 0.15614795784048258], 'false,false': [0.15614795784048258, nan], 'false,false,true': [0.19270970194337594, 3.840400984414016e-07], 'true': [0.0008295788341312615, 0.0033359691789453527], 'true,true': [0.0007642515121878157, 0.0005864398292405117], 'true,true,false': [nan, 0.0005864398292405117]}, {'': [0.09746392793757379, 0.07036575555007048], 'true': [0.04685387556406068, 0.09999056984822018], 'false': [0.00025495718243837007, 0.07050476069458618], 'false,false': [0.038137557680275526, 0.14659465007545505], 'false,false,false': [0.14659465007545505, nan], 'true,true': [0.019859663202942267, 0.15762285313232197], 'true,true,false': [0.15762285313232197, nan], 'false,true': [0.00025495718243837007, nan]}, {'': [0.053826425864968344, 0.08991518024684159], 'false': [0.04556508996684409, 0.1332377281699283], 'false,false': [0.1312085876005548, 0.14110479357507127], 'false,false,false': [0.14110479357507127, nan], 'false,false,true': [0.13888390189562785, 0.13082081175620575], 'true': [1.0357957980939365e-05, 0.10386927599289614], 'true,true': [1.959217102279688e-17, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.05443266357067489, 0.08707647336571851], 'false': [0.06920259221689079, 0.08725323873840896], 'false,false': [0.039962140920851895, 0.13960866249878423], 'false,false,false': [0.13957350586720038, 0.13966223702234523], 'false,true': [0.027173400580657956, 0.28737067893002327], 'true': [0.038748955504757675, 0.09332869554869037], 'true,true': [0.00046355393164025925, 0.16695104827546897], 'false,true,true': [0.0298359994922192, 0.024494876520983557]}, {'': [0.08913185658269965, 0.0881476206967591], 'true': [0.10999202199294589, 0.0008917454762182247], 'false': [0.06520261431717192, 0.08824129632624511], 'false,true': [0.20941270509441587, 3.4631514024241473e-05], 'false,true,true': [nan, 0.20941270509441587], 'true,false': [0.0008917454762182247, nan], 'true,false,true': [0.00024661473476919604, 0.0015619720926163955], 'false,true,false': [3.4631514024241473e-05, nan]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
0;true;interaction(C, A), function(A, D).;true;true
0;true,true;interaction(E, C), interaction(A, E).;true;true
0;false;interaction(A, F).;true;true
0;false,true;interaction(G, F), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
1;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
1;false;interaction(A, E).;true;true
1;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
1;false,true,true;interaction(E, F).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;false;interaction(A, H), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(J, I), recursion_proteinclass(J, B).;true;true
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(D, A), interaction(D, C).;true;true
4;false;interaction(A, E).;true;true
4;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
4;false,true,true;interaction(G, A), interaction(E, H).;true;true
4;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(J, A), interaction(J, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(A, E), interaction(C, E).;true;true
5;false;interaction(A, G).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(C, A), interaction(D, C).;true;true
6;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
7;true;interaction(C, A), function(A, D).;true;true
7;true,true;interaction(E, C), interaction(A, E).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(D, C), interaction(A, D).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(D, C), interaction(A, D).;true;true
9;true,false;interaction(F, A), interaction(F, C).;true;true
9;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(A, H).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( complex(A, E), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7929315437951638;  // std dev = 0.247, 92.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=86 */
%   | | else return -0.14185106490048846;  // std dev = 0.000, 211.000 (wgt'ed) examples reached here.  /* #neg=211 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.2748156017661787;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
%   | | | else return 0.15316809218763583;  // std dev = 7.368, 261.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=77 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.49725118998873213;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7359044897487794;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, H) )
%   | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6672286583325432;  // std dev = 0.247, 92.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=86 */
%   | | else return -0.12544463852839172;  // std dev = 0.000, 212.000 (wgt'ed) examples reached here.  /* #neg=212 */
%   | else if ( function(J, K), recursion_proteinclass(J, B) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.3931720136927025;  // std dev = 6.541, 174.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=97 */
%   | | else return -0.16400784126648546;  // std dev = 0.069, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5742379717885625;  // std dev = 0.193, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.22940021709093047;  // std dev = 4.098, 126.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=64 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.38615317137392613;  // std dev = 3.840, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | | else return 0.5210922679920319;  // std dev = 3.939, 88.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=67 */
%   | else return -0.1382902514735475;  // std dev = 0.636, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6437962876683295;  // std dev = 0.125, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, J), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.11474132991727284;  // std dev = 1.340, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.4514910387142447;  // std dev = 1.253, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | else return -0.11231637819360621;  // std dev = 2.47e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4430986835882745;  // std dev = 0.207, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else if ( interaction(A, A) )
%   | then if ( enzyme(A, D), complex(A, E) )
%   | | then return -0.2236393704090394;  // std dev = 0.305, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11248490745584394;  // std dev = 0.087, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.4771037206980414;  // std dev = 0.188, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.025822902194370313;  // std dev = 1.097, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.04882353502792876;  // std dev = 4.163, 157.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=41 */
%   | | | else return 0.09987295174759317;  // std dev = 7.495, 424.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=139 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.34080760989689945;  // std dev = 0.039, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.24526092900331098;  // std dev = 0.276, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.4475586984020311;  // std dev = 1.734, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | | else return 0.47815700453619997;  // std dev = 0.207, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.11733149652390501;  // std dev = 0.349, 241.000 (wgt'ed) examples reached here.  /* #neg=241 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.03600809841413836;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21321883515102386;  // std dev = 0.907, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1093257376647061;  // std dev = 4.609, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   | | | else return 0.06021690802726302;  // std dev = 5.282, 175.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=52 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.27550074310949607;  // std dev = 0.042, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24534281125199162;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.07895599615267965;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08761757883529128;  // std dev = 0.087, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return 0.02755877060443465;  // std dev = 0.230, 301.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=86 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3648554678950347;  // std dev = 1.998, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | else return 0.20559687010318042;  // std dev = 5.911, 163.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=91 */
%   | | else return -0.14758846817764887;  // std dev = 0.098, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.1621088095668878;  // std dev = 0.231, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.2091046492061111;  // std dev = 5.935, 237.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=147 */
%   | | | else return -0.13566162553456446;  // std dev = 1.211, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.01763304925229501;  // std dev = 1.061, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.1890452008557428;  // std dev = 0.928, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2704948184505801;  // std dev = 0.107, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.16314435223743415;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.028377047471697472;  // std dev = 2.894, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return -0.06170502702114446;  // std dev = 0.638, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), function(A, D) )
%   | then return 0.12889513667324898;  // std dev = 0.227, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return -0.4813361271642204;  // std dev = 0.383, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.23572529435843;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15379347206399058;  // std dev = 0.227, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.09477094319598367;  // std dev = 0.074, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, H) )
%   | | | then return -0.00551045308073416;  // std dev = 4.934, 286.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=78 */
%   | | | else return 0.03667459647130752;  // std dev = 3.096, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return 0.0026246564567484506;  // std dev = 2.514, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.03410706989462378;  // std dev = 4.179, 180.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=60 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.16846284112896825;  // std dev = 0.026, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return 0.16793096482954784;  // std dev = 0.107, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), phenotype(G, I) )
%   | | | then return 0.31425935801997107;  // std dev = 0.539, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.2571283951203741;  // std dev = 1.102, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24061556680726598;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02754640846319978;  // std dev = 4.804, 271.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=59 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24657035449427925;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.031448188468001015;  // std dev = 2.367, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return 0.04939922644680744;  // std dev = 4.793, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(A, D) )
%   | then return 0.12770008897019886;  // std dev = 0.094, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.17554814967620774;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F) )
%   | | then return 0.10617611828525775;  // std dev = 0.415, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.21763074080360478;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.126880368876554;  // std dev = 1.094, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.08060273395777061;  // std dev = 0.905, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.055551586807383514;  // std dev = 4.127, 163.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=57 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.03598857776528628;  // std dev = 3.279, 176.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=38 */
%   | | | else return 0.009623814883167488;  // std dev = 5.217, 264.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */


Results
   AUC ROC   = 0.98085
   AUC PR    = 0.305716
   CLL	      = -0.190461
   Precision = 0.21223 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.324176


Total learning time: 188.666 seconds
Total inference time: 35.627 seconds
AUC ROC: 0.98085


Results scoring model
   AUC ROC   = 0.973677
   AUC PR    = 0.224185
   CLL	      = -0.205956
   Precision = 0.15258 at threshold = 0.5
   Recall    = 0.615044
   F1        = 0.244503


Total scoring time: 575.848 seconds
Refined model CLL: -0.205956


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.98085
   AUC PR    = 0.305716
   CLL	      = -0.190461
   Precision = 0.21223 at threshold = 0.5
   Recall    = 0.686047
   F1        = 0.324176


Total learning time: 981.721 seconds
Total inference time: 35.627 seconds
AUC ROC: 0.98085
Total revision time: 981.721
Best scored revision CLL: -0.205956


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 06:55:05
{'AUC ROC': 0.98085, 'AUC PR': 0.305716, 'CLL': -0.190461, 'Precision': [0.21223, 0.5], 'Recall': 0.686047, 'F1': 0.324176, 'Learning time': 981.721, 'Inference time': 35.627, 'parameter_0.8': {'AUC ROC': 0.977766, 'AUC PR': 0.315791, 'CLL': -0.185986, 'Precision': [0.303867, 0.5], 'Recall': 0.639535, 'F1': 0.411985, 'Learning time': 45.268, 'Inference time': 13.956}}


Amount of data: 1.0
******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, C), tweets(A, D).;true;false
0;true,true;follows(C, E), follows(E, A).;false;false
0;false;follows(F, A).;true;true
0;false,true;follows(F, G), recursion_accounttype(G, B).;true;false
0;false,true,true;follows(F, H), follows(H, A).;false;false
0;false,false;follows(A, I), recursion_accounttype(I, B).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(D, C), recursion_accounttype(D, B).;false;false
1;false;follows(E, A).;true;true
1;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
1;false,true,true;follows(F, E).;false;false
1;false,false;tweets(A, G).;true;true
1;false,false,true;tweets(H, G), recursion_accounttype(H, B).;false;false
1;false,false,false;follows(A, I), follows(I, J).;false;false
2;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
2;true;tweets(E, D), recursion_accounttype(E, B).;true;false
2;true,true;follows(F, A), follows(E, F).;false;true
2;true,true,false;follows(C, G), recursion_accounttype(C, B).;false;false
2;false;follows(H, A), recursion_accounttype(H, B).;false;true
2;false,false;follows(I, A).;true;true
2;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
2;false,false,false;follows(A, K).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D).;false;true
3;true,false;follows(C, E), follows(E, A).;false;false
3;false;follows(A, F), recursion_accounttype(F, B).;true;true
3;false,true;follows(F, G).;false;false
3;false,false;follows(H, A).;true;true
3;false,false,true;follows(I, H), recursion_accounttype(I, B).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(C, D).;false;false
4;false;follows(E, A).;true;true
4;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
4;false,true,true;follows(A, G), follows(H, E).;false;false
4;false,false;follows(A, I), recursion_accounttype(I, B).;true;true
4;false,false,true;follows(A, J), follows(I, J).;false;false
4;false,false,false;follows(A, K), tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
5;true;tweets(A, D), tweets(C, D).;true;false
5;true,true;follows(E, A), follows(E, C).;false;true
5;true,true,false;follows(F, C), follows(A, F).;false;false
5;false;follows(G, A).;false;true
5;false,false;tweets(A, H).;true;true
5;false,false,true;tweets(I, H), recursion_accounttype(I, B).;false;false
5;false,false,false;follows(A, J).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;recursion_accounttype(D, B).;true;false
6;true,true;follows(E, A).;false;true
6;true,true,false;tweets(A, F).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;true;true
6;false,true;tweets(A, H).;false;false
6;false,false;follows(I, A).;false;true
6;false,false,false;tweets(A, J), follows(A, K).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;follows(A, C), tweets(A, D).;true;false
7;true,true;follows(C, E), follows(E, A).;false;true
7;true,true,false;follows(A, F), follows(F, C).;false;false
7;false;follows(G, A).;false;true
7;false,false;follows(A, H), follows(H, I).;true;true
7;false,false,true;recursion_accounttype(I, B).;false;false
7;false,false,false;tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), follows(D, A).;true;false
8;true,true;recursion_accounttype(D, B).;false;false
8;false;follows(A, E), recursion_accounttype(E, B).;true;true
8;false,true;follows(E, F).;true;false
8;false,true,true;tweets(E, G), follows(A, F).;false;false
8;false,false;follows(H, A).;false;true
8;false,false,false;follows(A, I), follows(I, J).;false;false
9;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
9;true;follows(C, D), follows(D, A).;false;true
9;true,false;tweets(A, E), tweets(C, E).;true;false
9;true,false,true;follows(A, F), follows(C, F).;false;false
9;false;follows(A, G), recursion_accounttype(G, B).;true;false
9;false,true;follows(H, A).;true;true
9;false,true,true;follows(G, H), tweets(A, I).;false;false
9;false,true,false;tweets(A, J), follows(G, K).;false;false


WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.8126943896449667;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, H), interaction(H, A) )
%   | | | then return 0.7317121534903168;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return 0.7882188651694402;  // std dev = 3.050, 143.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=133 */
%   | | else return -0.1418510649004874;  // std dev = 2.15e-07, 471.000 (wgt'ed) examples reached here.  /* #neg=471 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14550525693859195;  // std dev = 4.221, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6874960299645395;  // std dev = 0.976, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return 0.6035554015677007;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.58556597975682;  // std dev = 2.440, 45.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=38 */
%   | | | else return 0.6511886331664598;  // std dev = 3.808, 187.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=171 */
%   | | else return -0.1254446385283923;  // std dev = 0.000, 454.000 (wgt'ed) examples reached here.  /* #neg=454 */
%   | else if ( function(A, G) )
%   | | then if ( function(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.44641417818016965;  // std dev = 3.460, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | | | else return -0.16019812154240698;  // std dev = 0.008, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then return 0.5445083111386979;  // std dev = 1.681, 66.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=62 */
%   | | else if ( interaction(C, G), recursion_proteinclass(C, B) )
%   | | | then return 0.6068720974299705;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2528374131219168;  // std dev = 5.219, 153.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=78 */
%   | else return -0.12391548596281143;  // std dev = 0.646, 238.000 (wgt'ed) examples reached here.  /* #neg=238 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.514613864681374;  // std dev = 0.955, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4977118226484732;  // std dev = 3.429, 136.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=123 */
%   | | | else return -0.11231637819360688;  // std dev = 0.000, 249.000 (wgt'ed) examples reached here.  /* #neg=249 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.409666544909258;  // std dev = 1.343, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.4608499172450694;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.3847857475567255;  // std dev = 0.914, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3833465854710895;  // std dev = 1.816, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return 0.0330399033843469;  // std dev = 6.680, 651.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=159 */
%   | | else if ( function(A, I), interaction(A, J) )
%   | | | then return 0.1371569642780305;  // std dev = 3.838, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.35580331668380055;  // std dev = 0.211, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return 0.29663628086254457;  // std dev = 0.959, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, E) )
%   | | | then return 0.3771369356000446;  // std dev = 2.370, 87.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=81 */
%   | | | else return 0.3678469249559131;  // std dev = 3.491, 141.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=128 */
%   | | else return -0.10805088675714285;  // std dev = 0.281, 479.000 (wgt'ed) examples reached here.  /* #neg=479 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return 0.36070971087397413;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46451319757781606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), function(A, L) )
%   | | | then return 0.10229842707629645;  // std dev = 3.830, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.2429999209084226;  // std dev = 0.999, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( interaction(F, C), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3007033833262875;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.2847323667082571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then return 0.020699475004763275;  // std dev = 6.432, 710.000 (wgt'ed) examples reached here.  /* #neg=501 #pos=209 */
%   | else if ( function(A, H) )
%   | | then if ( function(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3217633109952984;  // std dev = 3.126, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | | | else return -0.15404047450759445;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.21691625866702052;  // std dev = 1.832, 69.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=65 */
%   | | else if ( function(A, F) )
%   | | | then return 0.4095643470991156;  // std dev = 0.265, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.018890291051650927;  // std dev = 4.440, 298.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=56 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( function(A, H) )
%   | | then return 0.18912099807452565;  // std dev = 0.982, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then return 0.03198268477144732;  // std dev = 5.285, 437.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=139 */
%   | | else if ( function(A, J), interaction(A, K) )
%   | | | then return 0.07895261672259686;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.13075583679469785;  // std dev = 0.962, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18033555341017582;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14024744185729074;  // std dev = 1.325, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(G, A) )
%   | then return 0.0026734151306034037;  // std dev = 6.575, 747.000 (wgt'ed) examples reached here.  /* #neg=538 #pos=209 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.05047093789246615;  // std dev = 0.720, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05828315475853773;  // std dev = 3.304, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | else if ( function(A, J) )
%   | | | then return 0.11717002648303167;  // std dev = 1.110, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16628230318126327;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.07679073008091808;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.145684834984081;  // std dev = 0.997, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then if ( function(E, G), interaction(A, F) )
%   | | | then return 0.17256744189667808;  // std dev = 0.486, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23115260051355888;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then return 0.004391178188448265;  // std dev = 6.459, 694.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=197 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.04777076634239436;  // std dev = 3.416, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.1097993552654823;  // std dev = 1.058, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.08075249827474039;  // std dev = 1.262, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | else if ( function(A, E), function(C, E) )
%   | | then if ( interaction(A, F), interaction(C, F) )
%   | | | then return 0.21123278234516565;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.07443655051105873;  // std dev = 0.874, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then if ( interaction(G, H), function(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15051884582907046;  // std dev = 0.953, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( function(A, J), interaction(G, K) )
%   | | | then return 0.16880982788229226;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20493385787813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.01488919380185914;  // std dev = 7.149, 757.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=225 */


Results
   AUC ROC   = 0.985125
   AUC PR    = 0.263209
   CLL	      = -0.163538
   Precision = 0.233645 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.36855


Total learning time: 50.174 seconds
Total inference time: 19.265 seconds
AUC ROC: 0.985125


Results scoring model
   AUC ROC   = 0.976506
   AUC PR    = 0.189717
   CLL	      = -0.178449
   Precision = 0.115263 at threshold = 0.5
   Recall    = 0.904594
   F1        = 0.204473


Total scoring time: 234.972 seconds
Parameter learned model CLL: -0.178449


Structure after Parameter Learning
[['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'false': 'interaction(F, A)', 'false,true': 'interaction(F, G), recursion_proteinclass(G, B)', 'false,true,true': 'interaction(F, H), interaction(H, A)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true,true': [0.0, 0, 19], 'true,true,false': [0.0, 0, 2], 'true,false': [0.977, 1, 21], 'false,true,true,true': [3.1, 11, 76], 'false,true,true,false': [3.05, 10, 133], 'false,true,false': [2.15e-07, 471, 0], 'false,false,true': [0.0, 0, 4], 'false,false,false,true': [4.221, 62, 25], 'false,false,false,false': [1.5, 9, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E)', 'false,false': 'function(A, G)', 'false,false,true': 'function(H, G), recursion_proteinclass(H, B)'}, {'true,true': [0.976, 1, 28], 'true,false': [1.323, 2, 14], 'false,true,true,true': [2.44, 7, 38], 'false,true,true,false': [3.808, 16, 171], 'false,true,false': [0.0, 454, 0], 'false,false,true,true': [3.46, 20, 32], 'false,false,true,false': [0.008, 49, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), function(A, D)', 'true': 'function(E, D), recursion_proteinclass(E, B)', 'true,true': 'interaction(F, A), interaction(E, F)', 'true,true,false': 'interaction(C, G), recursion_proteinclass(C, B)', 'false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)'}, {'true,true,true': [1.681, 4, 62], 'true,true,false,true': [0.036, 0, 7], 'true,true,false,false': [5.219, 75, 78], 'true,false': [0.646, 238, 0], 'false,true': [0.955, 1, 13], 'false,false,true,true': [3.429, 13, 123], 'false,false,true,false': [0.0, 249, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(H, G), recursion_proteinclass(H, B)', 'false,false,false': 'function(A, I), interaction(A, J)'}, {'true,true': [1.343, 2, 42], 'true,false': [0.0, 0, 0], 'false,true,true': [0.042, 0, 10], 'false,true,false': [0.914, 1, 6], 'false,false,true,true': [1.816, 5, 38], 'false,false,true,false': [6.68, 492, 159], 'false,false,false,true': [3.838, 55, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), interaction(H, E)', 'false,false': 'interaction(A, I), recursion_proteinclass(I, B)', 'false,false,true': 'interaction(A, J), interaction(I, J)', 'false,false,false': 'interaction(A, K), function(A, L)'}, {'true,true': [0.211, 0, 26], 'true,false': [0.959, 1, 16], 'false,true,true,true': [2.37, 6, 81], 'false,true,true,false': [3.491, 13, 128], 'false,true,false': [0.281, 479, 0], 'false,false,true,true': [1.05e-08, 0, 3], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.83, 60, 28], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'function(A, D), function(C, D)', 'true,true': 'interaction(E, A), interaction(E, C)', 'true,true,false': 'interaction(F, C), interaction(A, F)', 'false': 'interaction(G, A)', 'false,false': 'function(A, H)', 'false,false,true': 'function(I, H), recursion_proteinclass(I, B)'}, {'true,true,true': [0.999, 1, 29], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.083, 0, 12], 'true,false': [0.0, 0, 1], 'false,true': [6.432, 501, 209], 'false,false,true,true': [3.126, 15, 32], 'false,false,true,false': [0.01, 45, 0], 'false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(A, C), interaction(C, D)', 'true': 'recursion_proteinclass(D, B)', 'true,true': 'interaction(E, A)', 'true,true,false': 'function(A, F)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,true': 'function(A, H)', 'false,false': 'interaction(I, A)', 'false,false,false': 'function(A, J), interaction(A, K)'}, {'true,true,true': [1.832, 4, 65], 'true,true,false,true': [0.265, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [4.44, 242, 56], 'false,true,true': [0.982, 1, 17], 'false,true,false': [0.0, 0, 0], 'false,false,true': [5.285, 298, 139], 'false,false,false,true': [1.224, 6, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), function(A, D)', 'true,true': 'interaction(C, E), interaction(E, A)', 'true,true,false': 'interaction(A, F), interaction(F, C)', 'false': 'interaction(G, A)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'function(A, J)'}, {'true,true,true': [0.962, 1, 19], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 0, 2], 'true,false': [1.325, 2, 21], 'false,true': [6.575, 538, 209], 'false,false,true,true': [0.72, 1, 2], 'false,false,true,false': [3.304, 56, 26], 'false,false,false,true': [1.11, 5, 4], 'false,false,false,false': [0.0, 0, 0]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(E, F)', 'false,true,true': 'function(E, G), interaction(A, F)', 'false,false': 'interaction(H, A)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.041, 0, 22], 'true,true,false': [0.866, 1, 3], 'true,false': [0.997, 1, 17], 'false,true,true,true': [0.486, 1, 10], 'false,true,true,false': [0.0, 0, 0], 'false,true,false': [0.452, 1, 6], 'false,false,true': [6.459, 497, 197], 'false,false,false,true': [3.416, 49, 25], 'false,false,false,false': [1.058, 4, 3]}], ['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'true,false': 'function(A, E), function(C, E)', 'true,false,true': 'interaction(A, F), interaction(C, F)', 'false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,true': 'interaction(H, A)', 'false,true,true': 'interaction(G, H), function(A, I)', 'false,true,false': 'function(A, J), interaction(G, K)'}, {'true,true': [1.262, 2, 25], 'true,false,true,true': [0.071, 0, 7], 'true,false,true,false': [0.874, 1, 10], 'true,false,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.953, 1, 12], 'false,true,false,true': [0.046, 0, 3], 'false,true,false,false': [0.0, 0, 1], 'false,false': [7.149, 532, 225]}]]
[{'': [0.022714981070850387, 0.20990043563278357], 'false': [0.20925476342132215, 0.21415779055519035], 'false,false': [0.0, 0.20283644526068886], 'false,true': [0.0829678638941453, 9.805791470150003e-17], 'false,false,false': [0.20478266613819635, 0.1874999999999999], 'false,true,true': [0.1104505218655038, 0.06503985524965017], 'true': [0.0, 0.04338842975206614], 'true,true': [-2.8047739569477637e-16, 0.0]}, {'': [0.06167764964765981, 0.16709379645920477], 'false': [0.16066125327900455, 0.2104623076270805], 'false,false': [0.2104623076270805, nan], 'false,false,true': [0.2302570072055252, 1.4196159333737014e-06], 'false,true': [0.08886059362320388, -1.3498746907336704e-16], 'false,true,true': [0.13234079570123553, 0.07756216335248964], 'true': [0.03285661535335367, 0.10937500000000028]}, {'': [0.13104030946476905, 0.1195313051819484], 'true': [0.15248604704061733, 0.001751962065348843], 'true,true': [0.04279466818219958, 0.17545832287040025], 'true,true,false': [0.00018444090856003674, 0.17799373996631268], 'false': [0.06518042477300197, 0.11556795776739642], 'false,false': [0.11556795776739642, nan], 'false,false,true': [0.08648015701479682, -8.02570861174812e-17]}, {'': [0.040995529653064494, 0.08966872086829551], 'false': [0.05063153567359099, 0.08765503486155903], 'false,false': [0.07618385170152557, 0.17750444762024392], 'false,false,false': [0.17750444762024392, nan], 'false,false,true': [0.07670609470876918, 0.06854599158202206], 'false,true': [0.00017337051290144956, 0.11931124175418627], 'true': [0.040995529653064494, nan]}, {'': [0.023242460594186512, 0.08606038594581662], 'false': [0.07552680721434105, 0.16290530766977432], 'false,false': [0.0020203432222265227, 0.1667025286224426], 'false,false,false': [0.1667025286224426, nan], 'false,true': [0.07811634190184694, 0.0001650935896061669], 'false,true,true': [0.06456599116326725, 0.08644426470979018], 'true': [0.0017168608816076581, 0.054047240657309946], 'false,false,true': [3.700743415417188e-17, 0.0]}, {'': [0.02402903743405804, 0.07073158356304747], 'false': [0.058271072879913025, 0.1627603756979285], 'false,false': [0.1627603756979285, nan], 'false,false,true': [0.20785871338371234, 2.2936652074238378e-06], 'true': [0.024586335338037484, 0.0], 'true,true': [0.03324043496104218, 0.0005727365840897392], 'true,true,false': [nan, 0.0005727365840897577]}, {'': [0.07195016014320176, 0.06632887347024165], 'true': [0.0493038566273938, 0.06614863571768549], 'false': [0.05356304957176506, 0.0658998373281456], 'false,false': [0.06392754574858937, 0.14993215998165293], 'false,false,false': [0.14993215998165293, nan], 'false,true': [0.05356304957176506, nan], 'true,true': [0.04866645627885328, 0.03522632735089723], 'true,true,false': [0.03522632735089723, nan]}, {'': [0.059714007879990046, 0.06686981978248209], 'false': [0.057873163216928515, 0.13505958980300134], 'false,false': [0.13453405346634809, 0.13685790241700008], 'false,false,false': [0.13685790241700008, nan], 'false,false,true': [0.1725757800757655, 0.1331401289547896], 'true': [0.042292525890036625, 0.07636588826093467], 'true,true': [0.04629831045179746, 0.0], 'true,true,false': [nan, 0.0]}, {'': [0.044303066841108345, 0.07032842269385811], 'false': [0.025302080924306018, 0.07059005193223619], 'false,false': [0.06011813621638973, 0.15818508385419608], 'false,false,false': [0.15769894992882807, 0.1598091720403914], 'true': [0.03662478833224696, 0.055227167496099655], 'true,true': [7.559719720780864e-05, 0.18765076307557352], 'false,true': [0.021486214953152293, 0.029200973463240392], 'false,true,true': [0.021486214953152293, nan]}, {'': [0.054774377170468014, 0.06765053956639293], 'false': [0.053701424739737096, 0.06752055314473698], 'true': [0.058959475209432906, 0.04717794394282061], 'false,true': [0.06981378469526382, 0.0007654087389715389], 'false,true,true': [nan, 0.06981378469526382], 'true,false': [0.04717794394282061, nan], 'true,false,true': [0.0007287578801254492, 0.06945915781913763], 'false,true,false': [0.0006943085995103395, 0.0]}]


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, C), function(A, D).;true;true
0;true,true;interaction(C, E), interaction(E, A).;true;true
0;false;interaction(F, A).;true;true
0;false,true;interaction(F, G), recursion_proteinclass(G, B).;true;true
0;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(E, A).;true;true
1;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
1;false,false;function(H, G), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(A, C), function(A, D).;true;true
2;true;function(E, D), recursion_proteinclass(E, B).;true;true
2;true,true;interaction(F, A), interaction(E, F).;true;true
2;true,true,false;interaction(C, G), recursion_proteinclass(C, B).;true;true
2;false;interaction(H, A), recursion_proteinclass(H, B).;true;true
2;false,false;interaction(I, J), recursion_proteinclass(J, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
3;false,true;interaction(E, F).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(C, D).;true;true
4;false;interaction(E, A).;true;true
4;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
4;false,false;interaction(A, I), recursion_proteinclass(I, B).;true;true
4;false,false,true;interaction(A, J), interaction(I, J).;true;true
5;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
5;true;function(A, D), function(C, D).;true;true
5;true,true;interaction(E, A), interaction(E, C).;true;true
5;false;interaction(G, A).;true;true
5;false,false;function(I, H), recursion_proteinclass(I, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(A, C), function(A, D).;true;true
7;true,true;interaction(C, E), interaction(E, A).;true;true
8;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), interaction(D, A).;true;true
8;true,true;recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D), interaction(D, A).;true;true
9;true,false;interaction(A, F), interaction(C, F).;true;true
9;false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;false,true;interaction(H, A).;true;true
9;false,true,false;function(A, J), interaction(G, K).;true;true


Refining candidate
***************************
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.8081489350995122;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.7788537809144869;  // std dev = 0.270, 227.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=209 */
%   | | else return -0.14185106490048724;  // std dev = 2.76e-07, 456.000 (wgt'ed) examples reached here.  /* #neg=456 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.13592671287729013;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.2110901115701006;  // std dev = 3.413, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7337477426993267;  // std dev = 0.121, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.5874685361806057;  // std dev = 4.707, 176.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=150 */
%   | | | else return 0.7024089236619803;  // std dev = 1.391, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else return -0.1254446385283923;  // std dev = 0.000, 436.000 (wgt'ed) examples reached here.  /* #neg=436 */
%   | else if ( function(H, I), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.3712036693840931;  // std dev = 3.278, 44.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=24 */
%   | | | else return 0.7216452009849947;  // std dev = 0.945, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return -0.16517941607096717;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), function(A, D) )
%   then if ( function(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(E, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5173729728610306;  // std dev = 2.035, 63.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=58 */
%   | | | else return 0.20262392539209007;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(C, H), recursion_proteinclass(C, B) )
%   | | | then return 0.6317883987291087;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24091024943691355;  // std dev = 5.222, 159.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=78 */
%   | else return -0.12565194574228084;  // std dev = 0.550, 227.000 (wgt'ed) examples reached here.  /* #neg=227 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5064354197718252;  // std dev = 0.250, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then if ( location(A, L) )
%   | | | then return 0.29287216093361396;  // std dev = 5.245, 202.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=119 */
%   | | | else return 0.12362357659972577;  // std dev = 1.239, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.1123163781936064;  // std dev = 5.96e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4559641037928398;  // std dev = 0.213, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.25531157789708525;  // std dev = 0.548, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.48843659421950514;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.2993871050096774;  // std dev = 0.494, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5612387772740814;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.10734628244007154;  // std dev = 0.069, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.14450717756556847;  // std dev = 0.331, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.05618149340146426;  // std dev = 7.483, 613.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=176 */
%   | | | else return 0.125329562908773;  // std dev = 4.464, 142.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=49 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.23566910578951092;  // std dev = 0.286, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else return 0.39010719743312083;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.29048363368285907;  // std dev = 0.245, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.22862072327089863;  // std dev = 2.826, 49.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=37 */
%   | | | else return 0.4088356113977667;  // std dev = 4.107, 191.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=172 */
%   | | else return -0.11770257051777673;  // std dev = 0.449, 439.000 (wgt'ed) examples reached here.  /* #neg=439 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.43314495311398915;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11736714067906445;  // std dev = 3.608, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.4180859032028173;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( function(A, D), function(C, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.21990741262634597;  // std dev = 0.244, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return -0.19911925103231917;  // std dev = 1.019, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2917415842173592;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.26022877499515595;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(H, A) )
%   | then if ( interaction(A, I), phenotype(A, J) )
%   | | then return -0.0012905750769524236;  // std dev = 0.249, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | | else return 0.036205441023195076;  // std dev = 0.259, 523.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=160 */
%   | else if ( function(K, L), recursion_proteinclass(K, B) )
%   | | then if ( complex(A, M), enzyme(A, N) )
%   | | | then return 0.04271482674172562;  // std dev = 2.183, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.2811617881590524;  // std dev = 2.749, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   | | else return -0.15967315964915502;  // std dev = 0.058, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.248831839458707;  // std dev = 0.239, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.25515161595698865;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.1777554142012548;  // std dev = 0.910, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.011456774826595574;  // std dev = 3.565, 172.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=50 */
%   else if ( interaction(F, A), location(A, G) )
%   | then return 0.06415550350187833;  // std dev = 0.252, 444.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=166 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.10887789308360168;  // std dev = 1.231, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05700832443134156;  // std dev = 2.084, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1636994499143348;  // std dev = 1.850, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.011648179060515271;  // std dev = 2.636, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), function(A, D) )
%   | then return 0.179430968747866;  // std dev = 0.171, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2490823371199195;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.6595407270492091;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16220414846016576;  // std dev = 0.222, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(H, A) )
%   | then return 0.015116680341584619;  // std dev = 0.251, 726.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=209 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5845546844525651;  // std dev = 0.384, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18537962600232957;  // std dev = 0.328, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.042859324204340105;  // std dev = 2.713, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.18546801096031196;  // std dev = 1.177, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19008373555531827;  // std dev = 0.027, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( phenotype(A, E) )
%   | | | then return -0.06142013894790855;  // std dev = 1.859, 64.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=10 */
%   | | | else return -0.1388796107376128;  // std dev = 1.335, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( location(D, F) )
%   | | | then return 0.024686821497647338;  // std dev = 2.533, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return -0.10662813261923597;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3144475153660968;  // std dev = 0.576, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.019803203155830833;  // std dev = 3.792, 181.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=50 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.011649285163248903;  // std dev = 5.165, 394.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=119 */
%   | | | else return -0.034981581491881374;  // std dev = 2.332, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then return -0.5070617049334141;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.12573967391623614;  // std dev = 0.158, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.12192526420306299;  // std dev = 0.203, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.2722315966868296;  // std dev = 0.066, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( function(A, I), interaction(G, J) )
%   | | | then return -0.20204239271582353;  // std dev = 1.147, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.25832149108127855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(L, M), enzyme(L, N) )
%   | | | then return 0.01108320487444165;  // std dev = 3.451, 173.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=49 */
%   | | | else return -0.04126296939798462;  // std dev = 3.727, 179.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=36 */
%   | | else return 0.016480859360427834;  // std dev = 0.247, 483.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=140 */


Results
   AUC ROC   = 0.98432
   AUC PR    = 0.257126
   CLL	      = -0.178328
   Precision = 0.157058 at threshold = 0.5
   Recall    = 0.918605
   F1        = 0.268251


Total learning time: 159.097 seconds
Total inference time: 36.377 seconds
AUC ROC: 0.98432


Results scoring model
   AUC ROC   = 0.981093
   AUC PR    = 0.205058
   CLL	      = -0.183395
   Precision = 0.121115 at threshold = 0.5
   Recall    = 0.936396
   F1        = 0.214488


Total scoring time: 401.103 seconds
Refined model CLL: -0.183395


******************************************
Best model found
******************************************
Results
   AUC ROC   = 0.985125
   AUC PR    = 0.263209
   CLL	      = -0.163538
   Precision = 0.233645 at threshold = 0.5
   Recall    = 0.872093
   F1        = 0.36855


Total learning time: 845.346 seconds
Total inference time: 19.265 seconds
AUC ROC: 0.985125
Total revision time: 845.346
Best scored revision CLL: -0.178449


Dataset: 8_twitter_yeast, Fold: 4, Type: Transfer (trRDN-B), Time: 07:10:07
{'AUC ROC': 0.985125, 'AUC PR': 0.263209, 'CLL': -0.163538, 'Precision': [0.233645, 0.5], 'Recall': 0.872093, 'F1': 0.36855, 'Learning time': 845.346, 'Inference time': 19.265, 'parameter_1.0': {'AUC ROC': 0.985125, 'AUC PR': 0.263209, 'CLL': -0.163538, 'Precision': [0.233645, 0.5], 'Recall': 0.872093, 'F1': 0.36855, 'Learning time': 50.174, 'Inference time': 19.265}}


